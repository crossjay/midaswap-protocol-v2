{
	"id": "111fb90596edd4c8908f27c8ca06edc0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Midas/Midas_main/src/interfaces/IMidasPairDeployer.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title An interface for a contract that is capable of deploying Midas Pair & LPToken\n/// @notice A contract that constructs a vault must implement this to pass arguments to the pair\n/// @dev This is used to avoid having constructor arguments in the pair contract, which results in the init code hash\n/// of the vault being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\ninterface IMidasPairDeployer {\n    function parameters1()\n        external\n        view\n        returns (\n            address factory,\n            address tokenX,\n            address tokenY,\n            address lpToken,\n            uint128 feeRate\n        );\n\n\n//     function parameters2()\n//         external\n//         view\n//         returns (\n//             address factory,\n//             address tokenX,\n//             address tokenY,\n//             address lpToken,\n//             uint256 id,\n//             uint128 feeRate\n//         );\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Midas/Midas_main/src/interfaces/IMidasPairDeployer.sol": {
				"IMidasPairDeployer": {
					"abi": [
						{
							"inputs": [],
							"name": "parameters1",
							"outputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenY",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "feeRate",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is used to avoid having constructor arguments in the pair contract, which results in the init code hash of the vault being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain",
						"kind": "dev",
						"methods": {},
						"title": "An interface for a contract that is capable of deploying Midas Pair & LPToken",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"parameters1()": "e79129ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"parameters1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenY\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"feeRate\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is used to avoid having constructor arguments in the pair contract, which results in the init code hash of the vault being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain\",\"kind\":\"dev\",\"methods\":{},\"title\":\"An interface for a contract that is capable of deploying Midas Pair & LPToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A contract that constructs a vault must implement this to pass arguments to the pair\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/Midas_main/src/interfaces/IMidasPairDeployer.sol\":\"IMidasPairDeployer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"Midas/Midas_main/src/interfaces/IMidasPairDeployer.sol\":{\"keccak256\":\"0x72dfa6d86db58244673a3fab974f42eb1dc38af5adbd834ecc6f709cdfcefd2a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d001d74ac5adbea3086d48a8aa73d06cdd67742a4c7067209df16b11756930bc\",\"dweb:/ipfs/QmYufHGCNAKGCn8BYfs9oTkYErsjJd6W817Fga8gX4FntE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A contract that constructs a vault must implement this to pass arguments to the pair",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Midas/Midas_main/src/interfaces/IMidasPairDeployer.sol": {
				"ast": {
					"absolutePath": "Midas/Midas_main/src/interfaces/IMidasPairDeployer.sol",
					"exportedSymbols": {
						"IMidasPairDeployer": [
							16
						]
					},
					"id": 17,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMidasPairDeployer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:409:0",
								"text": "@title An interface for a contract that is capable of deploying Midas Pair & LPToken\n @notice A contract that constructs a vault must implement this to pass arguments to the pair\n @dev This is used to avoid having constructor arguments in the pair contract, which results in the init code hash\n of the vault being constant allowing the CREATE2 address of the pool to be cheaply computed on-chain"
							},
							"fullyImplemented": false,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "IMidasPairDeployer",
							"nameLocation": "490:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "e79129ce",
									"id": 15,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parameters1",
									"nameLocation": "524:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "535:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "factory",
												"nameLocation": "606:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "598:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "635:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "627:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "663:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "655:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "lpToken",
												"nameLocation": "691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "feeRate",
												"nameLocation": "720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 12,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:153:0"
									},
									"scope": 16,
									"src": "515:223:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 17,
							"src": "480:547:0",
							"usedErrors": []
						}
					],
					"src": "45:982:0"
				},
				"id": 0
			}
		}
	}
}
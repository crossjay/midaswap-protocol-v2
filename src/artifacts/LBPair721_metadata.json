{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ILBFactory",
						"name": "_factory",
						"type": "address"
					},
					{
						"internalType": "contract IERC721",
						"name": "_nftAddress",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "_ftAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_lpToken",
						"type": "address"
					},
					{
						"internalType": "uint128",
						"name": "_feeRate",
						"type": "uint128"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "BinHelper__IdOverflows",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LBPair__AddressZero",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LBPair__DistributionsOverflow",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "LBPair__InsufficientLiquidityMinted",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "feeRecipient",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "LBPair__OnlyFeeRecipient",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "LBPair__WrongLengths",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "y",
						"type": "int256"
					}
				],
				"name": "Math128x128__PowerUnderflow",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "prod1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					}
				],
				"name": "Math512Bits__MulShiftOverflow",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					}
				],
				"name": "Math512Bits__OffsetOverflows",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardUpgradeable__AlreadyInitialized",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ReentrancyGuardUpgradeable__ReentrantCall",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "SafeCast__Exceeds112Bits",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "x",
						"type": "uint256"
					}
				],
				"name": "SafeCast__Exceeds136Bits",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TokenHelper__CallFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TokenHelper__NonContract",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TokenHelper__TransferFailed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TreeMath__ErrorDepthSearch",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "assetLPMap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "binLPMap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_LPtokenID",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "burn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountX",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountY",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "NFTID",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "buyNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "collectProtocolFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountY",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "contract ILBFactory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeParameters",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "ftAmountMap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "_id",
						"type": "uint24"
					}
				],
				"name": "getBin",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_LPtokenID",
						"type": "uint256"
					}
				],
				"name": "getFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_fee",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getGlobalFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "feesYTotal",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "feesYProtocol",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "_id",
						"type": "uint24"
					}
				],
				"name": "getPriceFromBin",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_NFTID",
						"type": "uint256"
					}
				],
				"name": "getPriceFromNFT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getReservesAndId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "reserveX",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "floorPriceID",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "bestOfferID",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "lpBinParamsMap",
				"outputs": [
					{
						"internalType": "uint24",
						"name": "originBin",
						"type": "uint24"
					},
					{
						"internalType": "uint24",
						"name": "activeBin",
						"type": "uint24"
					},
					{
						"internalType": "uint24",
						"name": "binStep",
						"type": "uint24"
					},
					{
						"internalType": "uint256",
						"name": "binAmount",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lpToken",
				"outputs": [
					{
						"internalType": "contract LPToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "lpTokenAssetsMap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24[]",
						"name": "_ids",
						"type": "uint24[]"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "mintFT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24[]",
						"name": "_ids",
						"type": "uint24[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_NFTIDs",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isLimited",
						"type": "bool"
					}
				],
				"name": "mintNFT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "NFTID",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "sellNFT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "_amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenX",
				"outputs": [
					{
						"internalType": "contract IERC721",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenY",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Trader Joe",
			"kind": "dev",
			"methods": {
				"collectProtocolFees()": {
					"details": "The protocol fees are not set to zero to save gas by not resetting the storage slot.",
					"returns": {
						"amountY": "The amount of token Y collected and sent to the fee recipient"
					}
				},
				"feeParameters()": {
					"returns": {
						"_0": "The fee parameters"
					}
				},
				"getBin(uint24)": {
					"params": {
						"_id": "The bin id"
					},
					"returns": {
						"_0": "reserveX The reserve of tokenX of the bin",
						"_1": "reserveY The reserve of tokenY of the bin"
					}
				},
				"onERC721Received(address,address,uint256,bytes)": {
					"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
				}
			},
			"stateVariables": {
				"_bins": {
					"details": "The reserves of tokens for every bin. This is the amount of tokenY if `id < _pairInformation.activeId`; of tokenX if `id > _pairInformation.activeId` and a mix of both if `id == _pairInformation.activeId`"
				},
				"_pairInformation": {
					"details": "The pair information that is used to track reserves, active ids, fees and oracle parameters"
				},
				"_tree": {
					"details": "The tree that is used to find the first bin with non zero liquidity"
				},
				"_unclaimedFees": {
					"details": "The mapping from account to user's unclaimed fees. "
				}
			},
			"title": "Liquidity Book Pair",
			"version": 1
		},
		"userdoc": {
			"errors": {
				"Math128x128__PowerUnderflow(uint256,int256)": [
					{
						"notice": "Math128x128 errors "
					}
				],
				"ReentrancyGuardUpgradeable__ReentrantCall()": [
					{
						"notice": "ReentrancyGuardUpgradeable errors "
					}
				],
				"TokenHelper__NonContract()": [
					{
						"notice": "TokenHelper errors "
					}
				],
				"TreeMath__ErrorDepthSearch()": [
					{
						"notice": "TreeMath errors "
					}
				]
			},
			"kind": "user",
			"methods": {
				"assetLPMap(uint256)": {
					"notice": "NFT tokenIds -> lpTokenId"
				},
				"binLPMap(uint24,uint256)": {
					"notice": "binIds -> lpTokenIds"
				},
				"collectProtocolFees()": {
					"notice": "Collect the protocol fees and send them to the fee recipient."
				},
				"constructor": {
					"notice": "Constructor *"
				},
				"factory()": {
					"notice": "The factory contract that created this pair"
				},
				"feeParameters()": {
					"notice": "View function to get the fee parameters"
				},
				"ftAmountMap(uint24,uint256)": {
					"notice": "binIds -> ftAmounts"
				},
				"getBin(uint24)": {
					"notice": "View function to get the bin at `id`"
				},
				"getReservesAndId()": {
					"notice": "External View Functions *"
				},
				"lpBinParamsMap(uint256)": {
					"notice": "lpTokenId -> BinParams"
				},
				"lpTokenAssetsMap(uint256,uint256)": {
					"notice": "lpTokenId -> NFT tokenIds"
				},
				"sellNFT(uint256,address)": {
					"notice": "External Functions *"
				},
				"tokenX()": {
					"notice": "The token that is used as the base currency for the pair"
				},
				"tokenY()": {
					"notice": "The token that is used as the quote currency for the pair"
				}
			},
			"notice": "This contract is the implementation of Liquidity Book Pair that also acts as the receipt token for liquidity positions",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Midas/Midas_main/src/LBPair721.sol": "LBPair721"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
			"license": "MIT",
			"urls": [
				"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
				"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
				"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
			]
		},
		"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
				"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
			]
		},
		"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
			"keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
			"license": "MIT",
			"urls": [
				"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
				"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
			"license": "MIT",
			"urls": [
				"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
				"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
				"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
				"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
			]
		},
		"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
			"keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
			"license": "MIT",
			"urls": [
				"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
				"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
			]
		},
		"Midas/Midas_main/src/LBErrors.sol": {
			"keccak256": "0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e",
			"license": "MIT",
			"urls": [
				"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e",
				"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP"
			]
		},
		"Midas/Midas_main/src/LBPair721.sol": {
			"keccak256": "0x4e8844dcd8bade760f045b52be920d5764525a91c1ab491c923b8ec0ab0274f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://7c74b994470b587ec961c4254057347213199a63006c2ae841585e27ba94f2dc",
				"dweb:/ipfs/Qmdm6UdLLy1PiXWysvwPgU2wBogxYU7iF6n7HWB6itdb5w"
			]
		},
		"Midas/Midas_main/src/LBToken.sol": {
			"keccak256": "0x594373dac369b243649ffb1c7106302dcc9958136ec2787eac2515ee0aa2e502",
			"license": "MIT",
			"urls": [
				"bzz-raw://296fc4d6b33e3cd74b09bb2f103b10692ae1b845f2e2abcd7253ae6def5e0085",
				"dweb:/ipfs/QmW9mbk5rA3SjAmxFcH2bVbp8eEpyy8USRVNk2UfiTi1ds"
			]
		},
		"Midas/Midas_main/src/LPToken.sol": {
			"keccak256": "0x78515dfad2711cca4b11955611648d80147af7a94941e7b58503a265bf156997",
			"license": "MIT",
			"urls": [
				"bzz-raw://5f2633b5a37c0a3cbec8ea3596d44c1041fda57eeea6ec5ae72bd380027b30d2",
				"dweb:/ipfs/QmX3agcpfq2srYiB5s8o94njpNKrDfNjZeqckNA3Dsde4t"
			]
		},
		"Midas/Midas_main/src/interfaces/ILBFactory.sol": {
			"keccak256": "0x2a84358d50ab6b88a086f12b72da98612b45a6c50953c0121b9ea1380d9fd8f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://949b9189318bbd8fcbff02d2d060415a373c7c3963033d13ff25d2f6bc7f70d9",
				"dweb:/ipfs/QmRcWDcziTBda2uQYtqiPT6UZWci6LjzpGR6bA1oUBgA5D"
			]
		},
		"Midas/Midas_main/src/interfaces/ILBFlashLoanCallback.sol": {
			"keccak256": "0xc7940e36e24c3af657cee4d683f37a9a6d9b47229442df3d8b3a0db3c590c61c",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a15adbdbff1c0791c079f79797bba7f8d0fc41603c9c8b1d66ef60d0d0a6e06",
				"dweb:/ipfs/QmXFQQKyrUonQPQanGzHqKELnW377SE3D65G5dK9iwzyLx"
			]
		},
		"Midas/Midas_main/src/interfaces/ILBPair.sol": {
			"keccak256": "0x8c6b896a2fcb1adb2d25fea157f3ce9d6115ec35d2fbbb5dc1363185a16874ad",
			"license": "MIT",
			"urls": [
				"bzz-raw://74241eac068312aa35135a4fbefd4176d581eefd8aeec4dd7ecfab8708cba242",
				"dweb:/ipfs/Qmb88EyKF2krs5Yy8gUE7efwvSLw8YATHZaENgk9RB7HmJ"
			]
		},
		"Midas/Midas_main/src/interfaces/ILBToken.sol": {
			"keccak256": "0xde04a8cc8ff40a180aa1cb6fa1a9eb8717ee0b98e14e49aee847a5f6de9df55c",
			"license": "MIT",
			"urls": [
				"bzz-raw://0be14cc501106c758b4e87a64ac512cf4eeafca2bf20c01b7fdec11b284901ed",
				"dweb:/ipfs/QmRYNdM3GXFXsqVm8aHKbvi6Hfm8F4ohv3wxkoFKbN56Zz"
			]
		},
		"Midas/Midas_main/src/interfaces/IPendingOwnable.sol": {
			"keccak256": "0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42",
				"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP"
			]
		},
		"Midas/Midas_main/src/libraries/BinHelper.sol": {
			"keccak256": "0xed30b6a2ca03bb9faee8892071cfff7d342418c6ff81bc7d7a03f7abf1d548e5",
			"license": "MIT",
			"urls": [
				"bzz-raw://974661ebc65abe5f39aa9d308637315526d602a75fd6d1173702a885ed2e592e",
				"dweb:/ipfs/QmTppTvYW5RA6o2ocAc1fUG6Kq21rwTiUqiKZ3a74TqBHg"
			]
		},
		"Midas/Midas_main/src/libraries/BitMath.sol": {
			"keccak256": "0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0",
			"license": "MIT",
			"urls": [
				"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084",
				"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J"
			]
		},
		"Midas/Midas_main/src/libraries/Constants.sol": {
			"keccak256": "0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad",
			"license": "MIT",
			"urls": [
				"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83",
				"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN"
			]
		},
		"Midas/Midas_main/src/libraries/Encoder.sol": {
			"keccak256": "0xf0d8d1fa36901a5c3e5384462fe86225b3ec9451263be8919c8f0e23e4320d11",
			"license": "MIT",
			"urls": [
				"bzz-raw://cbbe0f3c8e627da4bfc7ab940ecbe92c78e41cf283519c44e2db323f94e673f7",
				"dweb:/ipfs/Qmbd7vFVU617bYAtFXhXNQm499qr1Qkoo1FKnjBVerNpZJ"
			]
		},
		"Midas/Midas_main/src/libraries/FeeHelper.sol": {
			"keccak256": "0x0552f0e39d636f29aa75c879f5becfa02feaa99aba19154d184c1575fb3e6c67",
			"license": "MIT",
			"urls": [
				"bzz-raw://e0de227bc564c189e12b84077c4b6ab7ad6c9bde28b88859165f5a75d88e6c5d",
				"dweb:/ipfs/QmcPcqTGh3D5wfyJYmiMnpX5X5u5QHtruvRASFBFpNUrMF"
			]
		},
		"Midas/Midas_main/src/libraries/Math128x128.sol": {
			"keccak256": "0x33202d8738fe0334bff67f2ad4568f2669ef00b86ad252803a217cd9a913921f",
			"license": "MIT",
			"urls": [
				"bzz-raw://0e32450665cc7ae8c0b9907ea0451dbe5ea29aea21f3967ccb764729d54bff30",
				"dweb:/ipfs/QmPh5GkHYYCqf2328usjFpGi3BLKgKakjsFHBKjp7regK1"
			]
		},
		"Midas/Midas_main/src/libraries/Math512Bits.sol": {
			"keccak256": "0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f",
				"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm"
			]
		},
		"Midas/Midas_main/src/libraries/PositionHelper.sol": {
			"keccak256": "0x3263892e939d1cc2038d9f87cfb01615331b9109f4c08ab6c57a18cd921309f3",
			"license": "MIT",
			"urls": [
				"bzz-raw://4b247017ea830bcb1faf177acb89cef2656d259794c2a6c01b284d4fcc80f395",
				"dweb:/ipfs/QmTwwbc1UXe7GUh94noNvCti8fRFWKFQzSVJ6RCUK4TD61"
			]
		},
		"Midas/Midas_main/src/libraries/ReentrancyGuardUpgradeable.sol": {
			"keccak256": "0x97a417fe1716e01447c857ed7415341312fbddd83174a32b5fc9d3259a36b9c3",
			"license": "MIT",
			"urls": [
				"bzz-raw://da56633c46ef626094f9938f8cb1388a94c035fa854c2d3ec48e3614dc5aecca",
				"dweb:/ipfs/QmUsvU5rHvbKK7xEproA2C1TMxvz8Pk2VeUbtE7DrTEdHJ"
			]
		},
		"Midas/Midas_main/src/libraries/SafeCast.sol": {
			"keccak256": "0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6",
				"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq"
			]
		},
		"Midas/Midas_main/src/libraries/SafeMath.sol": {
			"keccak256": "0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46",
			"license": "MIT",
			"urls": [
				"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47",
				"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW"
			]
		},
		"Midas/Midas_main/src/libraries/SwapHelper.sol": {
			"keccak256": "0xd1877f5993b5a38a0bf5cd8cc0c1f097038689a662b3230bb9de3ddfac5502b1",
			"license": "MIT",
			"urls": [
				"bzz-raw://a10e2b530dc5ba5cdfa2ee8d2791750774291175cd8611bdae61b27598320ea9",
				"dweb:/ipfs/QmUvacDzqRQG7o5PimoHLGdLxSPj9xiZYmUaCS4mQHChig"
			]
		},
		"Midas/Midas_main/src/libraries/TokenHelper.sol": {
			"keccak256": "0x1e637d2fb808f03d2eb4d871420bb175aaca4ee3370a0e0c54bb8dd06d06767c",
			"license": "MIT",
			"urls": [
				"bzz-raw://daa21bd5e2f99c4a93aa0b0fc2311bf12080da473089325130285f1dcc99e814",
				"dweb:/ipfs/QmYjoxAVkAAJeQYydLi9xEH7ATDJoBYMZ3WDe8hZ2cbyZM"
			]
		},
		"Midas/Midas_main/src/libraries/TreeMath.sol": {
			"keccak256": "0x7df41b600c07e168f5fc05ac43b673c6d74db8a8fa5c33731c8ed3fa388e4d94",
			"license": "MIT",
			"urls": [
				"bzz-raw://4b1412ea5cbd50a701e8c5ee7c46385a87d11ee11edd0097e8a9bd165405cc30",
				"dweb:/ipfs/QmPU2wkzvoq1CvpY8SBnQUxvcc9DQXv8mut8Un98DEnuKb"
			]
		}
	},
	"version": 1
}
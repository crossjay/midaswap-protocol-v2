{
	"compiler": {
		"version": "0.8.10+commit.fc410830"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "contract IERC20",
								"name": "tokenX",
								"type": "address"
							},
							{
								"internalType": "contract IERC20",
								"name": "tokenY",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "binStep",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountX",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountY",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountXMin",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountYMin",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "activeIdDesired",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "idSlippage",
								"type": "uint256"
							},
							{
								"internalType": "int256[]",
								"name": "deltaIds",
								"type": "int256[]"
							},
							{
								"internalType": "uint256[]",
								"name": "distributionX",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256[]",
								"name": "distributionY",
								"type": "uint256[]"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							}
						],
						"internalType": "struct ILBRouter.LiquidityParameters",
						"name": "liquidityParameters",
						"type": "tuple"
					}
				],
				"name": "addLiquidity",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "depositIds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "liquidityMinted",
						"type": "uint256[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "contract IERC20",
								"name": "tokenX",
								"type": "address"
							},
							{
								"internalType": "contract IERC20",
								"name": "tokenY",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "binStep",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountX",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountY",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountXMin",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountYMin",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "activeIdDesired",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "idSlippage",
								"type": "uint256"
							},
							{
								"internalType": "int256[]",
								"name": "deltaIds",
								"type": "int256[]"
							},
							{
								"internalType": "uint256[]",
								"name": "distributionX",
								"type": "uint256[]"
							},
							{
								"internalType": "uint256[]",
								"name": "distributionY",
								"type": "uint256[]"
							},
							{
								"internalType": "address",
								"name": "to",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							}
						],
						"internalType": "struct ILBRouter.LiquidityParameters",
						"name": "liquidityParameters",
						"type": "tuple"
					}
				],
				"name": "addLiquidityETH",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "depositIds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "liquidityMinted",
						"type": "uint256[]"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "tokenX",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "tokenY",
						"type": "address"
					},
					{
						"internalType": "uint24",
						"name": "activeId",
						"type": "uint24"
					}
				],
				"name": "createLBPair",
				"outputs": [
					{
						"internalType": "contract ILBPair",
						"name": "pair",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "contract ILBFactory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "getIdFromPrice",
				"outputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "id",
						"type": "uint24"
					}
				],
				"name": "getPriceFromId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract ILBPair",
						"name": "LBPair",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "swapForY",
						"type": "bool"
					}
				],
				"name": "getSwapIn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "feesIn",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract ILBPair",
						"name": "LBPair",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "swapForY",
						"type": "bool"
					}
				],
				"name": "getSwapOut",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "feesIn",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "tokenX",
						"type": "address"
					},
					{
						"internalType": "contract IERC20",
						"name": "tokenY",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountXMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountYMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "removeLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountX",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountY",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountTokenMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETHMin",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "removeLiquidityETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountToken",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountETH",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapETHForExactTokens",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amountsIn",
						"type": "uint256[]"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactETHForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMinETH",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactTokensForETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMinETH",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactTokensForTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOutMin",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountInMax",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address payable",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapTokensForExactETH",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amountsIn",
						"type": "uint256[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountInMax",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20[]",
						"name": "tokenPath",
						"type": "address[]"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					}
				],
				"name": "swapTokensForExactTokens",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "amountsIn",
						"type": "uint256[]"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "sweep",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "weth",
				"outputs": [
					{
						"internalType": "contract IWETH",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Trader Joe",
			"kind": "dev",
			"methods": {},
			"title": "Liquidity Book Router Interface",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Required interface of LBRouter contract",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Midas/joe-v2-main/src/interfaces/ILBRouter.sol": "ILBRouter"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
			"license": "MIT",
			"urls": [
				"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
				"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"Midas/joe-v2-main/src/LBErrors.sol": {
			"keccak256": "0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e",
			"license": "MIT",
			"urls": [
				"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e",
				"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP"
			]
		},
		"Midas/joe-v2-main/src/interfaces/IJoeFactory.sol": {
			"keccak256": "0x7ba524c998b232940e31bb23442fbd169b713139a7c3732c230fdc2f1cfca95f",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://36362db6fd6fa7af35472384a837db6f473f74a1240f3bbc678ae397ea040011",
				"dweb:/ipfs/QmQEcRHkvoucYxaZw1sWqGUE9qPtdhiwq8MCeeNCuaBMxz"
			]
		},
		"Midas/joe-v2-main/src/interfaces/ILBFactory.sol": {
			"keccak256": "0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99",
			"license": "MIT",
			"urls": [
				"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e",
				"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD"
			]
		},
		"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol": {
			"keccak256": "0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55",
			"license": "MIT",
			"urls": [
				"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d",
				"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt"
			]
		},
		"Midas/joe-v2-main/src/interfaces/ILBPair.sol": {
			"keccak256": "0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6",
			"license": "MIT",
			"urls": [
				"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31",
				"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk"
			]
		},
		"Midas/joe-v2-main/src/interfaces/ILBRouter.sol": {
			"keccak256": "0x5fb0b5a1fca6140e84e25b262e1706e9275cff0ddde2a9ebb43af8035bd970d3",
			"license": "MIT",
			"urls": [
				"bzz-raw://446386f93f5b799b2da6adaee72d3325cc3e7cec371445c7e3bc406d55f8e126",
				"dweb:/ipfs/QmSVEPqKJYVSdpXuVM1C9Ys826V4FXarnZGsLjnnv7yCug"
			]
		},
		"Midas/joe-v2-main/src/interfaces/ILBToken.sol": {
			"keccak256": "0xde04a8cc8ff40a180aa1cb6fa1a9eb8717ee0b98e14e49aee847a5f6de9df55c",
			"license": "MIT",
			"urls": [
				"bzz-raw://0be14cc501106c758b4e87a64ac512cf4eeafca2bf20c01b7fdec11b284901ed",
				"dweb:/ipfs/QmRYNdM3GXFXsqVm8aHKbvi6Hfm8F4ohv3wxkoFKbN56Zz"
			]
		},
		"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol": {
			"keccak256": "0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd",
			"license": "MIT",
			"urls": [
				"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42",
				"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP"
			]
		},
		"Midas/joe-v2-main/src/interfaces/IWETH.sol": {
			"keccak256": "0x3f8b28b58514c2100c729dae278bc6c033039a4192990f1cf31dfc11eaa29d40",
			"urls": [
				"bzz-raw://b7d3e60339ec0da32d96b60cb95b2f47f0438799bdd61c23c47a28e5c055e372",
				"dweb:/ipfs/QmX2cyM79X3aeoARxt2Y1sv413r82j9WtQ3DEerMHyyLNY"
			]
		},
		"Midas/joe-v2-main/src/libraries/Constants.sol": {
			"keccak256": "0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad",
			"license": "MIT",
			"urls": [
				"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83",
				"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN"
			]
		},
		"Midas/joe-v2-main/src/libraries/FeeHelper.sol": {
			"keccak256": "0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc",
			"license": "MIT",
			"urls": [
				"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a",
				"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79"
			]
		},
		"Midas/joe-v2-main/src/libraries/SafeCast.sol": {
			"keccak256": "0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6",
				"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq"
			]
		},
		"Midas/joe-v2-main/src/libraries/SafeMath.sol": {
			"keccak256": "0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46",
			"license": "MIT",
			"urls": [
				"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47",
				"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW"
			]
		}
	},
	"version": 1
}
{
	"id": "49bf7bc513671b174a6c6b760b1a9e3f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"midas-joe-v2/src/libraries/VToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\nThis is a standard template for an erc20 token\nMore important is the mint method\n */\ncontract VTOKEN is Context, IERC20, IERC20Metadata, Ownable {\n    mapping(address => uint256) private _balances;\n\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n    bool public  _isCreate;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _isCreate = true;\n    }\n\n    \n\n\n    function mint(address account, uint256 amount) public onlyOwner {\n        _mint(account, amount);\n    }\n\n    function burn(address account, uint256 amount) public onlyOwner {\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"midas-joe-v2/src/libraries/VToken.sol": {
				"VTOKEN": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_isCreate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"midas-joe-v2/src/libraries/VToken.sol\":457:11960  contract VTOKEN is Context, IERC20, IERC20Metadata, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1070:1209  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1144:1149  name_ */\n  dup2\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1136:1141  _name */\n  0x04\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1136:1149  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_12\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1169:1176  symbol_ */\n  dup1\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1159:1166  _symbol */\n  0x05\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1159:1176  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_14\n  swap3\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1198:1202  true */\n  0x01\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1186:1195  _isCreate */\n  0x06\n  0x00\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1186:1202  _isCreate = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":1070:1209  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":457:11960  contract VTOKEN is Context, IERC20, IERC20Metadata, Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":457:11960  contract VTOKEN is Context, IERC20, IERC20Metadata, Ownable {... */\ntag_13:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_20)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_20)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_20\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\ntag_20:\n  pop\n  swap1\n  pop\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_27)\ntag_28:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_29:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_30:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_31:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_32:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_33:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_34:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_35:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_36:\n    /* \"#utility.yul\":957:984   */\n  tag_52\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_34\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_54\n  tag_35\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1030:1118   */\ntag_53:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_37:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_56\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_57\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_36\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_38:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_60\n  tag_35\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1434:1490   */\ntag_59:\n    /* \"#utility.yul\":1508:1537   */\n  tag_61\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_34\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_39:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_63:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_66:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_40:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_68\n    /* \"#utility.yul\":2053:2102   */\n  tag_69\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2037:2103   */\n  tag_37\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_71\n  tag_33\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2178:2290   */\ntag_70:\n    /* \"#utility.yul\":2299:2338   */\n  tag_72\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_39\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_41:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_75\n  tag_32\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2447:2569   */\ntag_74:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_76\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_79\n  tag_30\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2849:2968   */\ntag_78:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_81\n  tag_31\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3044:3161   */\ntag_80:\n    /* \"#utility.yul\":3185:3259   */\n  tag_82\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_41\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_84\n  tag_31\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3346:3463   */\ntag_83:\n    /* \"#utility.yul\":3487:3561   */\n  tag_85\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_42:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_19:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_88:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  eq\n    /* \"#utility.yul\":4000:4084   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_90\n  tag_42\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4000:4084   */\ntag_89:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"midas-joe-v2/src/libraries/VToken.sol\":457:11960  contract VTOKEN is Context, IERC20, IERC20Metadata, Ownable {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":457:11960  contract VTOKEN is Context, IERC20, IERC20Metadata, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdb68e9c0\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1499:1597  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3776:3973  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2587:2693  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4535:4821  function transferFrom(... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2436:2527  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5216:5450  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1222:1325  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2751:2876  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1710:1812  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1331:1434  function burn(address account, uint256 amount) public onlyOwner {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5937:6364  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3072:3261  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":738:760  bool public  _isCreate */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3319:3468  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      stop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1499:1597  function name() public view virtual override returns (string memory) {... */\n    tag_24:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1553:1566  string memory */\n      0x60\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1585:1590  _name */\n      0x04\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1578:1590  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1499:1597  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3776:3973  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_30:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3859:3863  bool */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3875:3888  address owner */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3891:3903  _msgSender() */\n      tag_97\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3891:3901  _msgSender */\n      tag_98\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3891:3903  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3875:3903  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3913:3945  _approve(owner, spender, amount) */\n      tag_99\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3922:3927  owner */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3929:3936  spender */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3938:3944  amount */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3913:3921  _approve */\n      tag_100\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3913:3945  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_99:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3962:3966  true */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3955:3966  return true */\n      swap2\n      pop\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3776:3973  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2587:2693  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_34:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2648:2655  uint256 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2674:2686  _totalSupply */\n      sload(0x03)\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2667:2686  return _totalSupply */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2587:2693  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4535:4821  function transferFrom(... */\n    tag_40:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4662:4666  bool */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4678:4693  address spender */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4696:4708  _msgSender() */\n      tag_103\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4696:4706  _msgSender */\n      tag_98\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4696:4708  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4678:4708  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4718:4756  _spendAllowance(from, spender, amount) */\n      tag_104\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4734:4738  from */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4740:4747  spender */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4749:4755  amount */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4718:4733  _spendAllowance */\n      tag_105\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4718:4756  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_104:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4766:4793  _transfer(from, to, amount) */\n      tag_106\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4776:4780  from */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4782:4784  to */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4786:4792  amount */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4766:4775  _transfer */\n      tag_107\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4766:4793  _transfer(from, to, amount) */\n      jump\t// in\n    tag_106:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4810:4814  true */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4803:4814  return true */\n      swap2\n      pop\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":4535:4821  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2436:2527  function decimals() public view virtual override returns (uint8) {... */\n    tag_43:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2494:2499  uint8 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2518:2520  18 */\n      0x12\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2511:2520  return 18 */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2436:2527  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5216:5450  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5304:5308  bool */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5320:5333  address owner */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5336:5348  _msgSender() */\n      tag_110\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5336:5346  _msgSender */\n      tag_98\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5336:5348  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5320:5348  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5358:5422  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_111\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5367:5372  owner */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5374:5381  spender */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5411:5421  addedValue */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5383:5408  allowance(owner, spender) */\n      tag_112\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5393:5398  owner */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5400:5407  spender */\n      dup10\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5383:5392  allowance */\n      tag_84\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5383:5408  allowance(owner, spender) */\n      jump\t// in\n    tag_112:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5383:5421  allowance(owner, spender) + addedValue */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5358:5366  _approve */\n      tag_100\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5358:5422  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_111:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5439:5443  true */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5432:5443  return true */\n      swap2\n      pop\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5216:5450  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1222:1325  function mint(address account, uint256 amount) public onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1296:1318  _mint(account, amount) */\n      tag_119\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1302:1309  account */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1311:1317  amount */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1296:1301  _mint */\n      tag_120\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1296:1318  _mint(account, amount) */\n      jump\t// in\n    tag_119:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1222:1325  function mint(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2751:2876  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_56:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2825:2832  uint256 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2851:2860  _balances */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2851:2869  _balances[account] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2861:2868  account */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2851:2869  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2844:2869  return _balances[account] */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":2751:2876  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1710:1812  function symbol() public view virtual override returns (string memory) {... */\n    tag_65:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1766:1779  string memory */\n      0x60\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1798:1805  _symbol */\n      0x05\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1791:1805  return _symbol */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_91\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_91\n      jump\t// in\n    tag_130:\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1710:1812  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1331:1434  function burn(address account, uint256 amount) public onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1405:1427  _burn(account, amount) */\n      tag_137\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1411:1418  account */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1420:1426  amount */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1405:1410  _burn */\n      tag_138\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1405:1427  _burn(account, amount) */\n      jump\t// in\n    tag_137:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":1331:1434  function burn(address account, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5937:6364  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_72:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6030:6034  bool */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6046:6059  address owner */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6062:6074  _msgSender() */\n      tag_140\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6062:6072  _msgSender */\n      tag_98\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6062:6074  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6046:6074  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6084:6108  uint256 currentAllowance */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6111:6136  allowance(owner, spender) */\n      tag_141\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6121:6126  owner */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6128:6135  spender */\n      dup7\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6111:6120  allowance */\n      tag_84\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6111:6136  allowance(owner, spender) */\n      jump\t// in\n    tag_141:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6084:6136  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6174:6189  subtractedValue */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6154:6170  currentAllowance */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6154:6189  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6146:6231  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6265:6325  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_145\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6274:6279  owner */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6281:6288  spender */\n      dup7\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6309:6324  subtractedValue */\n      dup7\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6290:6306  currentAllowance */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6290:6324  currentAllowance - subtractedValue */\n      sub\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6265:6273  _approve */\n      tag_100\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6265:6325  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_145:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6353:6357  true */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6346:6357  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":5937:6364  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3072:3261  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_76:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3151:3155  bool */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3167:3180  address owner */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3183:3195  _msgSender() */\n      tag_147\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3183:3193  _msgSender */\n      tag_98\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3183:3195  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3167:3195  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3205:3233  _transfer(owner, to, amount) */\n      tag_148\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3215:3220  owner */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3222:3224  to */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3226:3232  amount */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3205:3214  _transfer */\n      tag_107\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3205:3233  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_148:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3250:3254  true */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3243:3254  return true */\n      swap2\n      pop\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3072:3261  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":738:760  bool public  _isCreate */\n    tag_79:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3319:3468  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_84:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3408:3415  uint256 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3434:3445  _allowances */\n      0x02\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3434:3452  _allowances[owner] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3446:3451  owner */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3434:3452  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3434:3461  _allowances[owner][spender] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3453:3460  spender */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3434:3461  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3427:3461  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":3319:3468  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9453:9823  function _approve(... */\n    tag_100:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9601:9602  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9584:9603  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9584:9589  owner */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9584:9603  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9576:9644  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9681:9682  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9662:9683  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9662:9669  spender */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9662:9683  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9654:9722  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9763:9769  amount */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9733:9744  _allowances */\n      0x02\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9733:9751  _allowances[owner] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9745:9750  owner */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9733:9751  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9733:9760  _allowances[owner][spender] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9752:9759  spender */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9733:9760  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9733:9769  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9800:9807  spender */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9784:9816  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9793:9798  owner */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9784:9816  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9809:9815  amount */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9784:9816  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9453:9823  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10104:10545  function _spendAllowance(... */\n    tag_105:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10234:10258  uint256 currentAllowance */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10261:10286  allowance(owner, spender) */\n      tag_167\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10271:10276  owner */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10278:10285  spender */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10261:10270  allowance */\n      tag_84\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10261:10286  allowance(owner, spender) */\n      jump\t// in\n    tag_167:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10234:10286  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10320:10337  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10300:10316  currentAllowance */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10300:10337  currentAllowance != type(uint256).max */\n      eq\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10296:10539  if (currentAllowance != type(uint256).max) {... */\n      tag_168\n      jumpi\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10381:10387  amount */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10361:10377  currentAllowance */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10361:10387  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10353:10421  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10463:10514  _approve(owner, spender, currentAllowance - amount) */\n      tag_172\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10472:10477  owner */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10479:10486  spender */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10507:10513  amount */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10488:10504  currentAllowance */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10488:10513  currentAllowance - amount */\n      sub\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10463:10471  _approve */\n      tag_100\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10463:10514  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_172:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10296:10539  if (currentAllowance != type(uint256).max) {... */\n    tag_168:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10224:10545  {... */\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":10104:10545  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6818:7469  function _transfer(... */\n    tag_107:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6960:6961  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6944:6962  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6944:6948  from */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6944:6962  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6936:7004  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7036:7037  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7022:7038  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7022:7024  to */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7022:7038  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7014:7078  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7089:7127  _beforeTokenTransfer(from, to, amount) */\n      tag_180\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7110:7114  from */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7116:7118  to */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7120:7126  amount */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7089:7109  _beforeTokenTransfer */\n      tag_181\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7089:7127  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_180:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7138:7157  uint256 fromBalance */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7160:7169  _balances */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7160:7175  _balances[from] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7170:7174  from */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7160:7175  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7138:7175  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7208:7214  amount */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7193:7204  fromBalance */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7193:7214  fromBalance >= amount */\n      lt\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7185:7257  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7323:7329  amount */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7309:7320  fromBalance */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7309:7329  fromBalance - amount */\n      sub\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7291:7300  _balances */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7291:7306  _balances[from] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7301:7305  from */\n      dup7\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7291:7306  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7291:7329  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7366:7372  amount */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7349:7358  _balances */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7349:7362  _balances[to] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7359:7361  to */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7349:7362  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7349:7372  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_185:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7403:7405  to */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7388:7414  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7397:7401  from */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7388:7414  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7407:7413  amount */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7388:7414  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7425:7462  _afterTokenTransfer(from, to, amount) */\n      tag_187\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7445:7449  from */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7451:7453  to */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7455:7461  amount */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7425:7444  _afterTokenTransfer */\n      tag_188\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7425:7462  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_187:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6926:7469  {... */\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":6818:7469  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7745:8134  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_120:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7847:7848  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7828:7849  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7828:7835  account */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7828:7849  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7820:7885  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7896:7945  _beforeTokenTransfer(address(0), account, amount) */\n      tag_199\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7925:7926  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7929:7936  account */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7938:7944  amount */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7896:7916  _beforeTokenTransfer */\n      tag_181\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7896:7945  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_199:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7972:7978  amount */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7956:7968  _totalSupply */\n      0x03\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7956:7978  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_200\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8010:8016  amount */\n      dup1\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7988:7997  _balances */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7988:8006  _balances[account] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7998:8005  account */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7988:8006  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7988:8016  _balances[account] += amount */\n      dup3\n      dup3\n      sload\n      tag_201\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_201:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8052:8059  account */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8031:8068  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8048:8049  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8031:8068  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8061:8067  amount */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8031:8068  Transfer(address(0), account, amount) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8079:8127  _afterTokenTransfer(address(0), account, amount) */\n      tag_203\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8107:8108  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8111:8118  account */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8120:8126  amount */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8079:8098  _afterTokenTransfer */\n      tag_188\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8079:8127  _afterTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_203:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":7745:8134  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8454:9030  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_138:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8556:8557  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8537:8558  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8537:8544  account */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8537:8558  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8529:8596  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8607:8656  _beforeTokenTransfer(account, address(0), amount) */\n      tag_209\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8628:8635  account */\n      dup3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8645:8646  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8649:8655  amount */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8607:8627  _beforeTokenTransfer */\n      tag_181\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8607:8656  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_209:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8667:8689  uint256 accountBalance */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8692:8701  _balances */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8692:8710  _balances[account] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8702:8709  account */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8692:8710  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8667:8710  uint256 accountBalance = _balances[account] */\n      swap1\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8746:8752  amount */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8728:8742  accountBalance */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8728:8752  accountBalance >= amount */\n      lt\n      iszero\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8720:8791  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8863:8869  amount */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8846:8860  accountBalance */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8846:8869  accountBalance - amount */\n      sub\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8825:8834  _balances */\n      0x01\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8825:8843  _balances[account] */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8835:8842  account */\n      dup6\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8825:8843  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8825:8869  _balances[account] = accountBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8905:8911  amount */\n      dup2\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8889:8901  _totalSupply */\n      0x03\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8889:8911  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8953:8954  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8927:8964  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8936:8943  account */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8927:8964  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8957:8963  amount */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8927:8964  Transfer(account, address(0), amount) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8975:9023  _afterTokenTransfer(account, address(0), amount) */\n      tag_216\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8995:9002  account */\n      dup4\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9012:9013  0 */\n      0x00\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":9016:9022  amount */\n      dup5\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8975:8994  _afterTokenTransfer */\n      tag_188\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8975:9023  _afterTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_216:\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8519:9030  {... */\n      pop\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":8454:9030  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":11129:11250  function _beforeTokenTransfer(... */\n    tag_181:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"midas-joe-v2/src/libraries/VToken.sol\":11838:11958  function _afterTokenTransfer(... */\n    tag_188:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_219:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_220:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:594   */\n    tag_221:\n        /* \"#utility.yul\":355:356   */\n      0x00\n        /* \"#utility.yul\":365:478   */\n    tag_270:\n        /* \"#utility.yul\":379:385   */\n      dup4\n        /* \"#utility.yul\":376:377   */\n      dup2\n        /* \"#utility.yul\":373:386   */\n      lt\n        /* \"#utility.yul\":365:478   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":464:465   */\n      dup1\n        /* \"#utility.yul\":459:462   */\n      dup3\n        /* \"#utility.yul\":455:466   */\n      add\n        /* \"#utility.yul\":449:467   */\n      mload\n        /* \"#utility.yul\":445:446   */\n      dup2\n        /* \"#utility.yul\":440:443   */\n      dup5\n        /* \"#utility.yul\":436:447   */\n      add\n        /* \"#utility.yul\":429:468   */\n      mstore\n        /* \"#utility.yul\":401:403   */\n      0x20\n        /* \"#utility.yul\":398:399   */\n      dup2\n        /* \"#utility.yul\":394:404   */\n      add\n        /* \"#utility.yul\":389:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:478   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":496:502   */\n      dup4\n        /* \"#utility.yul\":493:494   */\n      dup2\n        /* \"#utility.yul\":490:503   */\n      gt\n        /* \"#utility.yul\":487:588   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":576:577   */\n      0x00\n        /* \"#utility.yul\":567:573   */\n      dup5\n        /* \"#utility.yul\":562:565   */\n      dup5\n        /* \"#utility.yul\":558:574   */\n      add\n        /* \"#utility.yul\":551:578   */\n      mstore\n        /* \"#utility.yul\":487:588   */\n    tag_273:\n        /* \"#utility.yul\":336:594   */\n      pop\n        /* \"#utility.yul\":287:594   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":600:702   */\n    tag_222:\n        /* \"#utility.yul\":641:647   */\n      0x00\n        /* \"#utility.yul\":692:694   */\n      0x1f\n        /* \"#utility.yul\":688:695   */\n      not\n        /* \"#utility.yul\":683:685   */\n      0x1f\n        /* \"#utility.yul\":676:681   */\n      dup4\n        /* \"#utility.yul\":672:686   */\n      add\n        /* \"#utility.yul\":668:696   */\n      and\n        /* \"#utility.yul\":658:696   */\n      swap1\n      pop\n        /* \"#utility.yul\":600:702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:1072   */\n    tag_223:\n        /* \"#utility.yul\":796:799   */\n      0x00\n        /* \"#utility.yul\":824:863   */\n      tag_276\n        /* \"#utility.yul\":857:862   */\n      dup3\n        /* \"#utility.yul\":824:863   */\n      tag_219\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":879:950   */\n      tag_277\n        /* \"#utility.yul\":943:949   */\n      dup2\n        /* \"#utility.yul\":938:941   */\n      dup6\n        /* \"#utility.yul\":879:950   */\n      tag_220\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":872:950   */\n      swap4\n      pop\n        /* \"#utility.yul\":959:1011   */\n      tag_278\n        /* \"#utility.yul\":1004:1010   */\n      dup2\n        /* \"#utility.yul\":999:1002   */\n      dup6\n        /* \"#utility.yul\":992:996   */\n      0x20\n        /* \"#utility.yul\":985:990   */\n      dup7\n        /* \"#utility.yul\":981:997   */\n      add\n        /* \"#utility.yul\":959:1011   */\n      tag_221\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1036:1065   */\n      tag_279\n        /* \"#utility.yul\":1058:1064   */\n      dup2\n        /* \"#utility.yul\":1036:1065   */\n      tag_222\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1031:1034   */\n      dup5\n        /* \"#utility.yul\":1027:1066   */\n      add\n        /* \"#utility.yul\":1020:1066   */\n      swap2\n      pop\n        /* \"#utility.yul\":800:1072   */\n      pop\n        /* \"#utility.yul\":708:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1391   */\n    tag_26:\n        /* \"#utility.yul\":1191:1195   */\n      0x00\n        /* \"#utility.yul\":1229:1231   */\n      0x20\n        /* \"#utility.yul\":1218:1227   */\n      dup3\n        /* \"#utility.yul\":1214:1232   */\n      add\n        /* \"#utility.yul\":1206:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1278:1287   */\n      dup2\n        /* \"#utility.yul\":1272:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1288   */\n      sub\n        /* \"#utility.yul\":1264:1265   */\n      0x00\n        /* \"#utility.yul\":1253:1262   */\n      dup4\n        /* \"#utility.yul\":1249:1266   */\n      add\n        /* \"#utility.yul\":1242:1289   */\n      mstore\n        /* \"#utility.yul\":1306:1384   */\n      tag_281\n        /* \"#utility.yul\":1379:1383   */\n      dup2\n        /* \"#utility.yul\":1370:1376   */\n      dup5\n        /* \"#utility.yul\":1306:1384   */\n      tag_223\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1298:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1078:1391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1478:1595   */\n    tag_225:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1584:1585   */\n      dup1\n        /* \"#utility.yul\":1577:1589   */\n      revert\n        /* \"#utility.yul\":1724:1850   */\n    tag_227:\n        /* \"#utility.yul\":1761:1768   */\n      0x00\n        /* \"#utility.yul\":1801:1843   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1794:1799   */\n      dup3\n        /* \"#utility.yul\":1790:1844   */\n      and\n        /* \"#utility.yul\":1779:1844   */\n      swap1\n      pop\n        /* \"#utility.yul\":1724:1850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1856:1952   */\n    tag_228:\n        /* \"#utility.yul\":1893:1900   */\n      0x00\n        /* \"#utility.yul\":1922:1946   */\n      tag_287\n        /* \"#utility.yul\":1940:1945   */\n      dup3\n        /* \"#utility.yul\":1922:1946   */\n      tag_227\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1911:1946   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2080   */\n    tag_229:\n        /* \"#utility.yul\":2031:2055   */\n      tag_289\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2031:2055   */\n      tag_228\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2024:2029   */\n      dup2\n        /* \"#utility.yul\":2021:2056   */\n      eq\n        /* \"#utility.yul\":2011:2074   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":2070:2071   */\n      0x00\n        /* \"#utility.yul\":2067:2068   */\n      dup1\n        /* \"#utility.yul\":2060:2072   */\n      revert\n        /* \"#utility.yul\":2011:2074   */\n    tag_290:\n        /* \"#utility.yul\":1958:2080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2225   */\n    tag_230:\n        /* \"#utility.yul\":2132:2137   */\n      0x00\n        /* \"#utility.yul\":2170:2176   */\n      dup2\n        /* \"#utility.yul\":2157:2177   */\n      calldataload\n        /* \"#utility.yul\":2148:2177   */\n      swap1\n      pop\n        /* \"#utility.yul\":2186:2219   */\n      tag_292\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2186:2219   */\n      tag_229\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2086:2225   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2308   */\n    tag_231:\n        /* \"#utility.yul\":2268:2275   */\n      0x00\n        /* \"#utility.yul\":2297:2302   */\n      dup2\n        /* \"#utility.yul\":2286:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2436   */\n    tag_232:\n        /* \"#utility.yul\":2387:2411   */\n      tag_295\n        /* \"#utility.yul\":2405:2410   */\n      dup2\n        /* \"#utility.yul\":2387:2411   */\n      tag_231\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2380:2385   */\n      dup2\n        /* \"#utility.yul\":2377:2412   */\n      eq\n        /* \"#utility.yul\":2367:2430   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2426:2427   */\n      0x00\n        /* \"#utility.yul\":2423:2424   */\n      dup1\n        /* \"#utility.yul\":2416:2428   */\n      revert\n        /* \"#utility.yul\":2367:2430   */\n    tag_296:\n        /* \"#utility.yul\":2314:2436   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2581   */\n    tag_233:\n        /* \"#utility.yul\":2488:2493   */\n      0x00\n        /* \"#utility.yul\":2526:2532   */\n      dup2\n        /* \"#utility.yul\":2513:2533   */\n      calldataload\n        /* \"#utility.yul\":2504:2533   */\n      swap1\n      pop\n        /* \"#utility.yul\":2542:2575   */\n      tag_298\n        /* \"#utility.yul\":2569:2574   */\n      dup2\n        /* \"#utility.yul\":2542:2575   */\n      tag_232\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2442:2581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2587:3061   */\n    tag_29:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2712:2714   */\n      0x40\n        /* \"#utility.yul\":2700:2709   */\n      dup4\n        /* \"#utility.yul\":2691:2698   */\n      dup6\n        /* \"#utility.yul\":2687:2710   */\n      sub\n        /* \"#utility.yul\":2683:2715   */\n      slt\n        /* \"#utility.yul\":2680:2799   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2718:2797   */\n      tag_301\n      tag_225\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2680:2799   */\n    tag_300:\n        /* \"#utility.yul\":2838:2839   */\n      0x00\n        /* \"#utility.yul\":2863:2916   */\n      tag_302\n        /* \"#utility.yul\":2908:2915   */\n      dup6\n        /* \"#utility.yul\":2899:2905   */\n      dup3\n        /* \"#utility.yul\":2888:2897   */\n      dup7\n        /* \"#utility.yul\":2884:2906   */\n      add\n        /* \"#utility.yul\":2863:2916   */\n      tag_230\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2853:2916   */\n      swap3\n      pop\n        /* \"#utility.yul\":2809:2926   */\n      pop\n        /* \"#utility.yul\":2965:2967   */\n      0x20\n        /* \"#utility.yul\":2991:3044   */\n      tag_303\n        /* \"#utility.yul\":3036:3043   */\n      dup6\n        /* \"#utility.yul\":3027:3033   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      dup7\n        /* \"#utility.yul\":3012:3034   */\n      add\n        /* \"#utility.yul\":2991:3044   */\n      tag_233\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2981:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:3054   */\n      pop\n        /* \"#utility.yul\":2587:3061   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3067:3157   */\n    tag_234:\n        /* \"#utility.yul\":3101:3108   */\n      0x00\n        /* \"#utility.yul\":3144:3149   */\n      dup2\n        /* \"#utility.yul\":3137:3150   */\n      iszero\n        /* \"#utility.yul\":3130:3151   */\n      iszero\n        /* \"#utility.yul\":3119:3151   */\n      swap1\n      pop\n        /* \"#utility.yul\":3067:3157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3163:3272   */\n    tag_235:\n        /* \"#utility.yul\":3244:3265   */\n      tag_306\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3244:3265   */\n      tag_234\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3239:3242   */\n      dup3\n        /* \"#utility.yul\":3232:3266   */\n      mstore\n        /* \"#utility.yul\":3163:3272   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3488   */\n    tag_32:\n        /* \"#utility.yul\":3365:3369   */\n      0x00\n        /* \"#utility.yul\":3403:3405   */\n      0x20\n        /* \"#utility.yul\":3392:3401   */\n      dup3\n        /* \"#utility.yul\":3388:3406   */\n      add\n        /* \"#utility.yul\":3380:3406   */\n      swap1\n      pop\n        /* \"#utility.yul\":3416:3481   */\n      tag_308\n        /* \"#utility.yul\":3478:3479   */\n      0x00\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3463:3480   */\n      add\n        /* \"#utility.yul\":3454:3460   */\n      dup5\n        /* \"#utility.yul\":3416:3481   */\n      tag_235\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":3278:3488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:3612   */\n    tag_236:\n        /* \"#utility.yul\":3581:3605   */\n      tag_310\n        /* \"#utility.yul\":3599:3604   */\n      dup2\n        /* \"#utility.yul\":3581:3605   */\n      tag_231\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3576:3579   */\n      dup3\n        /* \"#utility.yul\":3569:3606   */\n      mstore\n        /* \"#utility.yul\":3494:3612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3618:3840   */\n    tag_36:\n        /* \"#utility.yul\":3711:3715   */\n      0x00\n        /* \"#utility.yul\":3749:3751   */\n      0x20\n        /* \"#utility.yul\":3738:3747   */\n      dup3\n        /* \"#utility.yul\":3734:3752   */\n      add\n        /* \"#utility.yul\":3726:3752   */\n      swap1\n      pop\n        /* \"#utility.yul\":3762:3833   */\n      tag_312\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3819:3828   */\n      dup4\n        /* \"#utility.yul\":3815:3832   */\n      add\n        /* \"#utility.yul\":3806:3812   */\n      dup5\n        /* \"#utility.yul\":3762:3833   */\n      tag_236\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3618:3840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4465   */\n    tag_39:\n        /* \"#utility.yul\":3923:3929   */\n      0x00\n        /* \"#utility.yul\":3931:3937   */\n      dup1\n        /* \"#utility.yul\":3939:3945   */\n      0x00\n        /* \"#utility.yul\":3988:3990   */\n      0x60\n        /* \"#utility.yul\":3976:3985   */\n      dup5\n        /* \"#utility.yul\":3967:3974   */\n      dup7\n        /* \"#utility.yul\":3963:3986   */\n      sub\n        /* \"#utility.yul\":3959:3991   */\n      slt\n        /* \"#utility.yul\":3956:4075   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":3994:4073   */\n      tag_315\n      tag_225\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3956:4075   */\n    tag_314:\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4139:4192   */\n      tag_316\n        /* \"#utility.yul\":4184:4191   */\n      dup7\n        /* \"#utility.yul\":4175:4181   */\n      dup3\n        /* \"#utility.yul\":4164:4173   */\n      dup8\n        /* \"#utility.yul\":4160:4182   */\n      add\n        /* \"#utility.yul\":4139:4192   */\n      tag_230\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4129:4192   */\n      swap4\n      pop\n        /* \"#utility.yul\":4085:4202   */\n      pop\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4267:4320   */\n      tag_317\n        /* \"#utility.yul\":4312:4319   */\n      dup7\n        /* \"#utility.yul\":4303:4309   */\n      dup3\n        /* \"#utility.yul\":4292:4301   */\n      dup8\n        /* \"#utility.yul\":4288:4310   */\n      add\n        /* \"#utility.yul\":4267:4320   */\n      tag_230\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4257:4320   */\n      swap3\n      pop\n        /* \"#utility.yul\":4212:4330   */\n      pop\n        /* \"#utility.yul\":4369:4371   */\n      0x40\n        /* \"#utility.yul\":4395:4448   */\n      tag_318\n        /* \"#utility.yul\":4440:4447   */\n      dup7\n        /* \"#utility.yul\":4431:4437   */\n      dup3\n        /* \"#utility.yul\":4420:4429   */\n      dup8\n        /* \"#utility.yul\":4416:4438   */\n      add\n        /* \"#utility.yul\":4395:4448   */\n      tag_233\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4385:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4340:4458   */\n      pop\n        /* \"#utility.yul\":3846:4465   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4471:4557   */\n    tag_237:\n        /* \"#utility.yul\":4506:4513   */\n      0x00\n        /* \"#utility.yul\":4546:4550   */\n      0xff\n        /* \"#utility.yul\":4539:4544   */\n      dup3\n        /* \"#utility.yul\":4535:4551   */\n      and\n        /* \"#utility.yul\":4524:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4563:4675   */\n    tag_238:\n        /* \"#utility.yul\":4646:4668   */\n      tag_321\n        /* \"#utility.yul\":4662:4667   */\n      dup2\n        /* \"#utility.yul\":4646:4668   */\n      tag_237\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":4641:4644   */\n      dup3\n        /* \"#utility.yul\":4634:4669   */\n      mstore\n        /* \"#utility.yul\":4563:4675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4681:4895   */\n    tag_45:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4888   */\n      tag_323\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4874:4883   */\n      dup4\n        /* \"#utility.yul\":4870:4887   */\n      add\n        /* \"#utility.yul\":4861:4867   */\n      dup5\n        /* \"#utility.yul\":4821:4888   */\n      tag_238\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4681:4895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4901:5230   */\n    tag_55:\n        /* \"#utility.yul\":4960:4966   */\n      0x00\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":4997:5006   */\n      dup3\n        /* \"#utility.yul\":4988:4995   */\n      dup5\n        /* \"#utility.yul\":4984:5007   */\n      sub\n        /* \"#utility.yul\":4980:5012   */\n      slt\n        /* \"#utility.yul\":4977:5096   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5015:5094   */\n      tag_326\n      tag_225\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4977:5096   */\n    tag_325:\n        /* \"#utility.yul\":5135:5136   */\n      0x00\n        /* \"#utility.yul\":5160:5213   */\n      tag_327\n        /* \"#utility.yul\":5205:5212   */\n      dup5\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5185:5194   */\n      dup6\n        /* \"#utility.yul\":5181:5203   */\n      add\n        /* \"#utility.yul\":5160:5213   */\n      tag_230\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":5150:5213   */\n      swap2\n      pop\n        /* \"#utility.yul\":5106:5223   */\n      pop\n        /* \"#utility.yul\":4901:5230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5236:5354   */\n    tag_239:\n        /* \"#utility.yul\":5323:5347   */\n      tag_329\n        /* \"#utility.yul\":5341:5346   */\n      dup2\n        /* \"#utility.yul\":5323:5347   */\n      tag_228\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5318:5321   */\n      dup3\n        /* \"#utility.yul\":5311:5348   */\n      mstore\n        /* \"#utility.yul\":5236:5354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5360:5582   */\n    tag_63:\n        /* \"#utility.yul\":5453:5457   */\n      0x00\n        /* \"#utility.yul\":5491:5493   */\n      0x20\n        /* \"#utility.yul\":5480:5489   */\n      dup3\n        /* \"#utility.yul\":5476:5494   */\n      add\n        /* \"#utility.yul\":5468:5494   */\n      swap1\n      pop\n        /* \"#utility.yul\":5504:5575   */\n      tag_331\n        /* \"#utility.yul\":5572:5573   */\n      0x00\n        /* \"#utility.yul\":5561:5570   */\n      dup4\n        /* \"#utility.yul\":5557:5574   */\n      add\n        /* \"#utility.yul\":5548:5554   */\n      dup5\n        /* \"#utility.yul\":5504:5575   */\n      tag_239\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5360:5582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5588:6062   */\n    tag_83:\n        /* \"#utility.yul\":5656:5662   */\n      0x00\n        /* \"#utility.yul\":5664:5670   */\n      dup1\n        /* \"#utility.yul\":5713:5715   */\n      0x40\n        /* \"#utility.yul\":5701:5710   */\n      dup4\n        /* \"#utility.yul\":5692:5699   */\n      dup6\n        /* \"#utility.yul\":5688:5711   */\n      sub\n        /* \"#utility.yul\":5684:5716   */\n      slt\n        /* \"#utility.yul\":5681:5800   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":5719:5798   */\n      tag_334\n      tag_225\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5681:5800   */\n    tag_333:\n        /* \"#utility.yul\":5839:5840   */\n      0x00\n        /* \"#utility.yul\":5864:5917   */\n      tag_335\n        /* \"#utility.yul\":5909:5916   */\n      dup6\n        /* \"#utility.yul\":5900:5906   */\n      dup3\n        /* \"#utility.yul\":5889:5898   */\n      dup7\n        /* \"#utility.yul\":5885:5907   */\n      add\n        /* \"#utility.yul\":5864:5917   */\n      tag_230\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5854:5917   */\n      swap3\n      pop\n        /* \"#utility.yul\":5810:5927   */\n      pop\n        /* \"#utility.yul\":5966:5968   */\n      0x20\n        /* \"#utility.yul\":5992:6045   */\n      tag_336\n        /* \"#utility.yul\":6037:6044   */\n      dup6\n        /* \"#utility.yul\":6028:6034   */\n      dup3\n        /* \"#utility.yul\":6017:6026   */\n      dup7\n        /* \"#utility.yul\":6013:6035   */\n      add\n        /* \"#utility.yul\":5992:6045   */\n      tag_230\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5982:6045   */\n      swap2\n      pop\n        /* \"#utility.yul\":5937:6055   */\n      pop\n        /* \"#utility.yul\":5588:6062   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6068:6248   */\n    tag_240:\n        /* \"#utility.yul\":6116:6193   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6113:6114   */\n      0x00\n        /* \"#utility.yul\":6106:6194   */\n      mstore\n        /* \"#utility.yul\":6213:6217   */\n      0x22\n        /* \"#utility.yul\":6210:6211   */\n      0x04\n        /* \"#utility.yul\":6203:6218   */\n      mstore\n        /* \"#utility.yul\":6237:6241   */\n      0x24\n        /* \"#utility.yul\":6234:6235   */\n      0x00\n        /* \"#utility.yul\":6227:6242   */\n      revert\n        /* \"#utility.yul\":6254:6574   */\n    tag_91:\n        /* \"#utility.yul\":6298:6304   */\n      0x00\n        /* \"#utility.yul\":6335:6336   */\n      0x02\n        /* \"#utility.yul\":6329:6333   */\n      dup3\n        /* \"#utility.yul\":6325:6337   */\n      div\n        /* \"#utility.yul\":6315:6337   */\n      swap1\n      pop\n        /* \"#utility.yul\":6382:6383   */\n      0x01\n        /* \"#utility.yul\":6376:6380   */\n      dup3\n        /* \"#utility.yul\":6372:6384   */\n      and\n        /* \"#utility.yul\":6403:6421   */\n      dup1\n        /* \"#utility.yul\":6393:6474   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":6459:6463   */\n      0x7f\n        /* \"#utility.yul\":6451:6457   */\n      dup3\n        /* \"#utility.yul\":6447:6464   */\n      and\n        /* \"#utility.yul\":6437:6464   */\n      swap2\n      pop\n        /* \"#utility.yul\":6393:6474   */\n    tag_339:\n        /* \"#utility.yul\":6521:6523   */\n      0x20\n        /* \"#utility.yul\":6513:6519   */\n      dup3\n        /* \"#utility.yul\":6510:6524   */\n      lt\n        /* \"#utility.yul\":6490:6508   */\n      dup2\n        /* \"#utility.yul\":6487:6525   */\n      eq\n        /* \"#utility.yul\":6484:6568   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":6540:6558   */\n      tag_341\n      tag_240\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6484:6568   */\n    tag_340:\n        /* \"#utility.yul\":6305:6574   */\n      pop\n        /* \"#utility.yul\":6254:6574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6580:6760   */\n    tag_241:\n        /* \"#utility.yul\":6628:6705   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6625:6626   */\n      0x00\n        /* \"#utility.yul\":6618:6706   */\n      mstore\n        /* \"#utility.yul\":6725:6729   */\n      0x11\n        /* \"#utility.yul\":6722:6723   */\n      0x04\n        /* \"#utility.yul\":6715:6730   */\n      mstore\n        /* \"#utility.yul\":6749:6753   */\n      0x24\n        /* \"#utility.yul\":6746:6747   */\n      0x00\n        /* \"#utility.yul\":6739:6754   */\n      revert\n        /* \"#utility.yul\":6766:7071   */\n    tag_114:\n        /* \"#utility.yul\":6806:6809   */\n      0x00\n        /* \"#utility.yul\":6825:6845   */\n      tag_344\n        /* \"#utility.yul\":6843:6844   */\n      dup3\n        /* \"#utility.yul\":6825:6845   */\n      tag_231\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6820:6845   */\n      swap2\n      pop\n        /* \"#utility.yul\":6859:6879   */\n      tag_345\n        /* \"#utility.yul\":6877:6878   */\n      dup4\n        /* \"#utility.yul\":6859:6879   */\n      tag_231\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6854:6879   */\n      swap3\n      pop\n        /* \"#utility.yul\":7013:7014   */\n      dup3\n        /* \"#utility.yul\":6945:7011   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6941:7015   */\n      sub\n        /* \"#utility.yul\":6938:6939   */\n      dup3\n        /* \"#utility.yul\":6935:7016   */\n      gt\n        /* \"#utility.yul\":6932:7039   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":7019:7037   */\n      tag_347\n      tag_241\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6932:7039   */\n    tag_346:\n        /* \"#utility.yul\":7063:7064   */\n      dup3\n        /* \"#utility.yul\":7060:7061   */\n      dup3\n        /* \"#utility.yul\":7056:7065   */\n      add\n        /* \"#utility.yul\":7049:7065   */\n      swap1\n      pop\n        /* \"#utility.yul\":6766:7071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7077:7301   */\n    tag_242:\n        /* \"#utility.yul\":7217:7251   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":7213:7214   */\n      0x00\n        /* \"#utility.yul\":7205:7211   */\n      dup3\n        /* \"#utility.yul\":7201:7215   */\n      add\n        /* \"#utility.yul\":7194:7252   */\n      mstore\n        /* \"#utility.yul\":7286:7293   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7281:7283   */\n      0x20\n        /* \"#utility.yul\":7273:7279   */\n      dup3\n        /* \"#utility.yul\":7269:7284   */\n      add\n        /* \"#utility.yul\":7262:7294   */\n      mstore\n        /* \"#utility.yul\":7077:7301   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7307:7673   */\n    tag_243:\n        /* \"#utility.yul\":7449:7452   */\n      0x00\n        /* \"#utility.yul\":7470:7537   */\n      tag_350\n        /* \"#utility.yul\":7534:7536   */\n      0x25\n        /* \"#utility.yul\":7529:7532   */\n      dup4\n        /* \"#utility.yul\":7470:7537   */\n      tag_220\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":7463:7537   */\n      swap2\n      pop\n        /* \"#utility.yul\":7546:7639   */\n      tag_351\n        /* \"#utility.yul\":7635:7638   */\n      dup3\n        /* \"#utility.yul\":7546:7639   */\n      tag_242\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7664:7666   */\n      0x40\n        /* \"#utility.yul\":7659:7662   */\n      dup3\n        /* \"#utility.yul\":7655:7667   */\n      add\n        /* \"#utility.yul\":7648:7667   */\n      swap1\n      pop\n        /* \"#utility.yul\":7307:7673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7679:8098   */\n    tag_144:\n        /* \"#utility.yul\":7845:7849   */\n      0x00\n        /* \"#utility.yul\":7883:7885   */\n      0x20\n        /* \"#utility.yul\":7872:7881   */\n      dup3\n        /* \"#utility.yul\":7868:7886   */\n      add\n        /* \"#utility.yul\":7860:7886   */\n      swap1\n      pop\n        /* \"#utility.yul\":7932:7941   */\n      dup2\n        /* \"#utility.yul\":7926:7930   */\n      dup2\n        /* \"#utility.yul\":7922:7942   */\n      sub\n        /* \"#utility.yul\":7918:7919   */\n      0x00\n        /* \"#utility.yul\":7907:7916   */\n      dup4\n        /* \"#utility.yul\":7903:7920   */\n      add\n        /* \"#utility.yul\":7896:7943   */\n      mstore\n        /* \"#utility.yul\":7960:8091   */\n      tag_353\n        /* \"#utility.yul\":8086:8090   */\n      dup2\n        /* \"#utility.yul\":7960:8091   */\n      tag_243\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":7952:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7679:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8329   */\n    tag_244:\n        /* \"#utility.yul\":8244:8278   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8240:8241   */\n      0x00\n        /* \"#utility.yul\":8232:8238   */\n      dup3\n        /* \"#utility.yul\":8228:8242   */\n      add\n        /* \"#utility.yul\":8221:8279   */\n      mstore\n        /* \"#utility.yul\":8313:8321   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8308:8310   */\n      0x20\n        /* \"#utility.yul\":8300:8306   */\n      dup3\n        /* \"#utility.yul\":8296:8311   */\n      add\n        /* \"#utility.yul\":8289:8322   */\n      mstore\n        /* \"#utility.yul\":8104:8329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8335:8701   */\n    tag_245:\n        /* \"#utility.yul\":8477:8480   */\n      0x00\n        /* \"#utility.yul\":8498:8565   */\n      tag_356\n        /* \"#utility.yul\":8562:8564   */\n      0x26\n        /* \"#utility.yul\":8557:8560   */\n      dup4\n        /* \"#utility.yul\":8498:8565   */\n      tag_220\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":8491:8565   */\n      swap2\n      pop\n        /* \"#utility.yul\":8574:8667   */\n      tag_357\n        /* \"#utility.yul\":8663:8666   */\n      dup3\n        /* \"#utility.yul\":8574:8667   */\n      tag_244\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8692:8694   */\n      0x40\n        /* \"#utility.yul\":8687:8690   */\n      dup3\n        /* \"#utility.yul\":8683:8695   */\n      add\n        /* \"#utility.yul\":8676:8695   */\n      swap1\n      pop\n        /* \"#utility.yul\":8335:8701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8707:9126   */\n    tag_155:\n        /* \"#utility.yul\":8873:8877   */\n      0x00\n        /* \"#utility.yul\":8911:8913   */\n      0x20\n        /* \"#utility.yul\":8900:8909   */\n      dup3\n        /* \"#utility.yul\":8896:8914   */\n      add\n        /* \"#utility.yul\":8888:8914   */\n      swap1\n      pop\n        /* \"#utility.yul\":8960:8969   */\n      dup2\n        /* \"#utility.yul\":8954:8958   */\n      dup2\n        /* \"#utility.yul\":8950:8970   */\n      sub\n        /* \"#utility.yul\":8946:8947   */\n      0x00\n        /* \"#utility.yul\":8935:8944   */\n      dup4\n        /* \"#utility.yul\":8931:8948   */\n      add\n        /* \"#utility.yul\":8924:8971   */\n      mstore\n        /* \"#utility.yul\":8988:9119   */\n      tag_359\n        /* \"#utility.yul\":9114:9118   */\n      dup2\n        /* \"#utility.yul\":8988:9119   */\n      tag_245\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8980:9119   */\n      swap1\n      pop\n        /* \"#utility.yul\":8707:9126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9132:9355   */\n    tag_246:\n        /* \"#utility.yul\":9272:9306   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9268:9269   */\n      0x00\n        /* \"#utility.yul\":9260:9266   */\n      dup3\n        /* \"#utility.yul\":9256:9270   */\n      add\n        /* \"#utility.yul\":9249:9307   */\n      mstore\n        /* \"#utility.yul\":9341:9347   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9336:9338   */\n      0x20\n        /* \"#utility.yul\":9328:9334   */\n      dup3\n        /* \"#utility.yul\":9324:9339   */\n      add\n        /* \"#utility.yul\":9317:9348   */\n      mstore\n        /* \"#utility.yul\":9132:9355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9361:9727   */\n    tag_247:\n        /* \"#utility.yul\":9503:9506   */\n      0x00\n        /* \"#utility.yul\":9524:9591   */\n      tag_362\n        /* \"#utility.yul\":9588:9590   */\n      0x24\n        /* \"#utility.yul\":9583:9586   */\n      dup4\n        /* \"#utility.yul\":9524:9591   */\n      tag_220\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9517:9591   */\n      swap2\n      pop\n        /* \"#utility.yul\":9600:9693   */\n      tag_363\n        /* \"#utility.yul\":9689:9692   */\n      dup3\n        /* \"#utility.yul\":9600:9693   */\n      tag_246\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":9718:9720   */\n      0x40\n        /* \"#utility.yul\":9713:9716   */\n      dup3\n        /* \"#utility.yul\":9709:9721   */\n      add\n        /* \"#utility.yul\":9702:9721   */\n      swap1\n      pop\n        /* \"#utility.yul\":9361:9727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9733:10152   */\n    tag_161:\n        /* \"#utility.yul\":9899:9903   */\n      0x00\n        /* \"#utility.yul\":9937:9939   */\n      0x20\n        /* \"#utility.yul\":9926:9935   */\n      dup3\n        /* \"#utility.yul\":9922:9940   */\n      add\n        /* \"#utility.yul\":9914:9940   */\n      swap1\n      pop\n        /* \"#utility.yul\":9986:9995   */\n      dup2\n        /* \"#utility.yul\":9980:9984   */\n      dup2\n        /* \"#utility.yul\":9976:9996   */\n      sub\n        /* \"#utility.yul\":9972:9973   */\n      0x00\n        /* \"#utility.yul\":9961:9970   */\n      dup4\n        /* \"#utility.yul\":9957:9974   */\n      add\n        /* \"#utility.yul\":9950:9997   */\n      mstore\n        /* \"#utility.yul\":10014:10145   */\n      tag_365\n        /* \"#utility.yul\":10140:10144   */\n      dup2\n        /* \"#utility.yul\":10014:10145   */\n      tag_247\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10006:10145   */\n      swap1\n      pop\n        /* \"#utility.yul\":9733:10152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10158:10379   */\n    tag_248:\n        /* \"#utility.yul\":10298:10332   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":10294:10295   */\n      0x00\n        /* \"#utility.yul\":10286:10292   */\n      dup3\n        /* \"#utility.yul\":10282:10296   */\n      add\n        /* \"#utility.yul\":10275:10333   */\n      mstore\n        /* \"#utility.yul\":10367:10371   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10362:10364   */\n      0x20\n        /* \"#utility.yul\":10354:10360   */\n      dup3\n        /* \"#utility.yul\":10350:10365   */\n      add\n        /* \"#utility.yul\":10343:10372   */\n      mstore\n        /* \"#utility.yul\":10158:10379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10385:10751   */\n    tag_249:\n        /* \"#utility.yul\":10527:10530   */\n      0x00\n        /* \"#utility.yul\":10548:10615   */\n      tag_368\n        /* \"#utility.yul\":10612:10614   */\n      0x22\n        /* \"#utility.yul\":10607:10610   */\n      dup4\n        /* \"#utility.yul\":10548:10615   */\n      tag_220\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10541:10615   */\n      swap2\n      pop\n        /* \"#utility.yul\":10624:10717   */\n      tag_369\n        /* \"#utility.yul\":10713:10716   */\n      dup3\n        /* \"#utility.yul\":10624:10717   */\n      tag_248\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":10742:10744   */\n      0x40\n        /* \"#utility.yul\":10737:10740   */\n      dup3\n        /* \"#utility.yul\":10733:10745   */\n      add\n        /* \"#utility.yul\":10726:10745   */\n      swap1\n      pop\n        /* \"#utility.yul\":10385:10751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10757:11176   */\n    tag_164:\n        /* \"#utility.yul\":10923:10927   */\n      0x00\n        /* \"#utility.yul\":10961:10963   */\n      0x20\n        /* \"#utility.yul\":10950:10959   */\n      dup3\n        /* \"#utility.yul\":10946:10964   */\n      add\n        /* \"#utility.yul\":10938:10964   */\n      swap1\n      pop\n        /* \"#utility.yul\":11010:11019   */\n      dup2\n        /* \"#utility.yul\":11004:11008   */\n      dup2\n        /* \"#utility.yul\":11000:11020   */\n      sub\n        /* \"#utility.yul\":10996:10997   */\n      0x00\n        /* \"#utility.yul\":10985:10994   */\n      dup4\n        /* \"#utility.yul\":10981:10998   */\n      add\n        /* \"#utility.yul\":10974:11021   */\n      mstore\n        /* \"#utility.yul\":11038:11169   */\n      tag_371\n        /* \"#utility.yul\":11164:11168   */\n      dup2\n        /* \"#utility.yul\":11038:11169   */\n      tag_249\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11030:11169   */\n      swap1\n      pop\n        /* \"#utility.yul\":10757:11176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11182:11361   */\n    tag_250:\n        /* \"#utility.yul\":11322:11353   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":11318:11319   */\n      0x00\n        /* \"#utility.yul\":11310:11316   */\n      dup3\n        /* \"#utility.yul\":11306:11320   */\n      add\n        /* \"#utility.yul\":11299:11354   */\n      mstore\n        /* \"#utility.yul\":11182:11361   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11367:11733   */\n    tag_251:\n        /* \"#utility.yul\":11509:11512   */\n      0x00\n        /* \"#utility.yul\":11530:11597   */\n      tag_374\n        /* \"#utility.yul\":11594:11596   */\n      0x1d\n        /* \"#utility.yul\":11589:11592   */\n      dup4\n        /* \"#utility.yul\":11530:11597   */\n      tag_220\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11523:11597   */\n      swap2\n      pop\n        /* \"#utility.yul\":11606:11699   */\n      tag_375\n        /* \"#utility.yul\":11695:11698   */\n      dup3\n        /* \"#utility.yul\":11606:11699   */\n      tag_250\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11724:11726   */\n      0x20\n        /* \"#utility.yul\":11719:11722   */\n      dup3\n        /* \"#utility.yul\":11715:11727   */\n      add\n        /* \"#utility.yul\":11708:11727   */\n      swap1\n      pop\n        /* \"#utility.yul\":11367:11733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11739:12158   */\n    tag_171:\n        /* \"#utility.yul\":11905:11909   */\n      0x00\n        /* \"#utility.yul\":11943:11945   */\n      0x20\n        /* \"#utility.yul\":11932:11941   */\n      dup3\n        /* \"#utility.yul\":11928:11946   */\n      add\n        /* \"#utility.yul\":11920:11946   */\n      swap1\n      pop\n        /* \"#utility.yul\":11992:12001   */\n      dup2\n        /* \"#utility.yul\":11986:11990   */\n      dup2\n        /* \"#utility.yul\":11982:12002   */\n      sub\n        /* \"#utility.yul\":11978:11979   */\n      0x00\n        /* \"#utility.yul\":11967:11976   */\n      dup4\n        /* \"#utility.yul\":11963:11980   */\n      add\n        /* \"#utility.yul\":11956:12003   */\n      mstore\n        /* \"#utility.yul\":12020:12151   */\n      tag_377\n        /* \"#utility.yul\":12146:12150   */\n      dup2\n        /* \"#utility.yul\":12020:12151   */\n      tag_251\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12012:12151   */\n      swap1\n      pop\n        /* \"#utility.yul\":11739:12158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12164:12388   */\n    tag_252:\n        /* \"#utility.yul\":12304:12338   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":12300:12301   */\n      0x00\n        /* \"#utility.yul\":12292:12298   */\n      dup3\n        /* \"#utility.yul\":12288:12302   */\n      add\n        /* \"#utility.yul\":12281:12339   */\n      mstore\n        /* \"#utility.yul\":12373:12380   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12368:12370   */\n      0x20\n        /* \"#utility.yul\":12360:12366   */\n      dup3\n        /* \"#utility.yul\":12356:12371   */\n      add\n        /* \"#utility.yul\":12349:12381   */\n      mstore\n        /* \"#utility.yul\":12164:12388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12394:12760   */\n    tag_253:\n        /* \"#utility.yul\":12536:12539   */\n      0x00\n        /* \"#utility.yul\":12557:12624   */\n      tag_380\n        /* \"#utility.yul\":12621:12623   */\n      0x25\n        /* \"#utility.yul\":12616:12619   */\n      dup4\n        /* \"#utility.yul\":12557:12624   */\n      tag_220\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12550:12624   */\n      swap2\n      pop\n        /* \"#utility.yul\":12633:12726   */\n      tag_381\n        /* \"#utility.yul\":12722:12725   */\n      dup3\n        /* \"#utility.yul\":12633:12726   */\n      tag_252\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12751:12753   */\n      0x40\n        /* \"#utility.yul\":12746:12749   */\n      dup3\n        /* \"#utility.yul\":12742:12754   */\n      add\n        /* \"#utility.yul\":12735:12754   */\n      swap1\n      pop\n        /* \"#utility.yul\":12394:12760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12766:13185   */\n    tag_176:\n        /* \"#utility.yul\":12932:12936   */\n      0x00\n        /* \"#utility.yul\":12970:12972   */\n      0x20\n        /* \"#utility.yul\":12959:12968   */\n      dup3\n        /* \"#utility.yul\":12955:12973   */\n      add\n        /* \"#utility.yul\":12947:12973   */\n      swap1\n      pop\n        /* \"#utility.yul\":13019:13028   */\n      dup2\n        /* \"#utility.yul\":13013:13017   */\n      dup2\n        /* \"#utility.yul\":13009:13029   */\n      sub\n        /* \"#utility.yul\":13005:13006   */\n      0x00\n        /* \"#utility.yul\":12994:13003   */\n      dup4\n        /* \"#utility.yul\":12990:13007   */\n      add\n        /* \"#utility.yul\":12983:13030   */\n      mstore\n        /* \"#utility.yul\":13047:13178   */\n      tag_383\n        /* \"#utility.yul\":13173:13177   */\n      dup2\n        /* \"#utility.yul\":13047:13178   */\n      tag_253\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13039:13178   */\n      swap1\n      pop\n        /* \"#utility.yul\":12766:13185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13191:13413   */\n    tag_254:\n        /* \"#utility.yul\":13331:13365   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13327:13328   */\n      0x00\n        /* \"#utility.yul\":13319:13325   */\n      dup3\n        /* \"#utility.yul\":13315:13329   */\n      add\n        /* \"#utility.yul\":13308:13366   */\n      mstore\n        /* \"#utility.yul\":13400:13405   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13395:13397   */\n      0x20\n        /* \"#utility.yul\":13387:13393   */\n      dup3\n        /* \"#utility.yul\":13383:13398   */\n      add\n        /* \"#utility.yul\":13376:13406   */\n      mstore\n        /* \"#utility.yul\":13191:13413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13419:13785   */\n    tag_255:\n        /* \"#utility.yul\":13561:13564   */\n      0x00\n        /* \"#utility.yul\":13582:13649   */\n      tag_386\n        /* \"#utility.yul\":13646:13648   */\n      0x23\n        /* \"#utility.yul\":13641:13644   */\n      dup4\n        /* \"#utility.yul\":13582:13649   */\n      tag_220\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13575:13649   */\n      swap2\n      pop\n        /* \"#utility.yul\":13658:13751   */\n      tag_387\n        /* \"#utility.yul\":13747:13750   */\n      dup3\n        /* \"#utility.yul\":13658:13751   */\n      tag_254\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":13776:13778   */\n      0x40\n        /* \"#utility.yul\":13771:13774   */\n      dup3\n        /* \"#utility.yul\":13767:13779   */\n      add\n        /* \"#utility.yul\":13760:13779   */\n      swap1\n      pop\n        /* \"#utility.yul\":13419:13785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13791:14210   */\n    tag_179:\n        /* \"#utility.yul\":13957:13961   */\n      0x00\n        /* \"#utility.yul\":13995:13997   */\n      0x20\n        /* \"#utility.yul\":13984:13993   */\n      dup3\n        /* \"#utility.yul\":13980:13998   */\n      add\n        /* \"#utility.yul\":13972:13998   */\n      swap1\n      pop\n        /* \"#utility.yul\":14044:14053   */\n      dup2\n        /* \"#utility.yul\":14038:14042   */\n      dup2\n        /* \"#utility.yul\":14034:14054   */\n      sub\n        /* \"#utility.yul\":14030:14031   */\n      0x00\n        /* \"#utility.yul\":14019:14028   */\n      dup4\n        /* \"#utility.yul\":14015:14032   */\n      add\n        /* \"#utility.yul\":14008:14055   */\n      mstore\n        /* \"#utility.yul\":14072:14203   */\n      tag_389\n        /* \"#utility.yul\":14198:14202   */\n      dup2\n        /* \"#utility.yul\":14072:14203   */\n      tag_255\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":14064:14203   */\n      swap1\n      pop\n        /* \"#utility.yul\":13791:14210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14216:14441   */\n    tag_256:\n        /* \"#utility.yul\":14356:14390   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":14352:14353   */\n      0x00\n        /* \"#utility.yul\":14344:14350   */\n      dup3\n        /* \"#utility.yul\":14340:14354   */\n      add\n        /* \"#utility.yul\":14333:14391   */\n      mstore\n        /* \"#utility.yul\":14425:14433   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14420:14422   */\n      0x20\n        /* \"#utility.yul\":14412:14418   */\n      dup3\n        /* \"#utility.yul\":14408:14423   */\n      add\n        /* \"#utility.yul\":14401:14434   */\n      mstore\n        /* \"#utility.yul\":14216:14441   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14447:14813   */\n    tag_257:\n        /* \"#utility.yul\":14589:14592   */\n      0x00\n        /* \"#utility.yul\":14610:14677   */\n      tag_392\n        /* \"#utility.yul\":14674:14676   */\n      0x26\n        /* \"#utility.yul\":14669:14672   */\n      dup4\n        /* \"#utility.yul\":14610:14677   */\n      tag_220\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":14603:14677   */\n      swap2\n      pop\n        /* \"#utility.yul\":14686:14779   */\n      tag_393\n        /* \"#utility.yul\":14775:14778   */\n      dup3\n        /* \"#utility.yul\":14686:14779   */\n      tag_256\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":14804:14806   */\n      0x40\n        /* \"#utility.yul\":14799:14802   */\n      dup3\n        /* \"#utility.yul\":14795:14807   */\n      add\n        /* \"#utility.yul\":14788:14807   */\n      swap1\n      pop\n        /* \"#utility.yul\":14447:14813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14819:15238   */\n    tag_184:\n        /* \"#utility.yul\":14985:14989   */\n      0x00\n        /* \"#utility.yul\":15023:15025   */\n      0x20\n        /* \"#utility.yul\":15012:15021   */\n      dup3\n        /* \"#utility.yul\":15008:15026   */\n      add\n        /* \"#utility.yul\":15000:15026   */\n      swap1\n      pop\n        /* \"#utility.yul\":15072:15081   */\n      dup2\n        /* \"#utility.yul\":15066:15070   */\n      dup2\n        /* \"#utility.yul\":15062:15082   */\n      sub\n        /* \"#utility.yul\":15058:15059   */\n      0x00\n        /* \"#utility.yul\":15047:15056   */\n      dup4\n        /* \"#utility.yul\":15043:15060   */\n      add\n        /* \"#utility.yul\":15036:15083   */\n      mstore\n        /* \"#utility.yul\":15100:15231   */\n      tag_395\n        /* \"#utility.yul\":15226:15230   */\n      dup2\n        /* \"#utility.yul\":15100:15231   */\n      tag_257\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":15092:15231   */\n      swap1\n      pop\n        /* \"#utility.yul\":14819:15238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15244:15426   */\n    tag_258:\n        /* \"#utility.yul\":15384:15418   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15380:15381   */\n      0x00\n        /* \"#utility.yul\":15372:15378   */\n      dup3\n        /* \"#utility.yul\":15368:15382   */\n      add\n        /* \"#utility.yul\":15361:15419   */\n      mstore\n        /* \"#utility.yul\":15244:15426   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15432:15798   */\n    tag_259:\n        /* \"#utility.yul\":15574:15577   */\n      0x00\n        /* \"#utility.yul\":15595:15662   */\n      tag_398\n        /* \"#utility.yul\":15659:15661   */\n      0x20\n        /* \"#utility.yul\":15654:15657   */\n      dup4\n        /* \"#utility.yul\":15595:15662   */\n      tag_220\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":15588:15662   */\n      swap2\n      pop\n        /* \"#utility.yul\":15671:15764   */\n      tag_399\n        /* \"#utility.yul\":15760:15763   */\n      dup3\n        /* \"#utility.yul\":15671:15764   */\n      tag_258\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":15789:15791   */\n      0x20\n        /* \"#utility.yul\":15784:15787   */\n      dup3\n        /* \"#utility.yul\":15780:15792   */\n      add\n        /* \"#utility.yul\":15773:15792   */\n      swap1\n      pop\n        /* \"#utility.yul\":15432:15798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15804:16223   */\n    tag_194:\n        /* \"#utility.yul\":15970:15974   */\n      0x00\n        /* \"#utility.yul\":16008:16010   */\n      0x20\n        /* \"#utility.yul\":15997:16006   */\n      dup3\n        /* \"#utility.yul\":15993:16011   */\n      add\n        /* \"#utility.yul\":15985:16011   */\n      swap1\n      pop\n        /* \"#utility.yul\":16057:16066   */\n      dup2\n        /* \"#utility.yul\":16051:16055   */\n      dup2\n        /* \"#utility.yul\":16047:16067   */\n      sub\n        /* \"#utility.yul\":16043:16044   */\n      0x00\n        /* \"#utility.yul\":16032:16041   */\n      dup4\n        /* \"#utility.yul\":16028:16045   */\n      add\n        /* \"#utility.yul\":16021:16068   */\n      mstore\n        /* \"#utility.yul\":16085:16216   */\n      tag_401\n        /* \"#utility.yul\":16211:16215   */\n      dup2\n        /* \"#utility.yul\":16085:16216   */\n      tag_259\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16077:16216   */\n      swap1\n      pop\n        /* \"#utility.yul\":15804:16223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16229:16410   */\n    tag_260:\n        /* \"#utility.yul\":16369:16402   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":16365:16366   */\n      0x00\n        /* \"#utility.yul\":16357:16363   */\n      dup3\n        /* \"#utility.yul\":16353:16367   */\n      add\n        /* \"#utility.yul\":16346:16403   */\n      mstore\n        /* \"#utility.yul\":16229:16410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16416:16782   */\n    tag_261:\n        /* \"#utility.yul\":16558:16561   */\n      0x00\n        /* \"#utility.yul\":16579:16646   */\n      tag_404\n        /* \"#utility.yul\":16643:16645   */\n      0x1f\n        /* \"#utility.yul\":16638:16641   */\n      dup4\n        /* \"#utility.yul\":16579:16646   */\n      tag_220\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":16572:16646   */\n      swap2\n      pop\n        /* \"#utility.yul\":16655:16748   */\n      tag_405\n        /* \"#utility.yul\":16744:16747   */\n      dup3\n        /* \"#utility.yul\":16655:16748   */\n      tag_260\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":16773:16775   */\n      0x20\n        /* \"#utility.yul\":16768:16771   */\n      dup3\n        /* \"#utility.yul\":16764:16776   */\n      add\n        /* \"#utility.yul\":16757:16776   */\n      swap1\n      pop\n        /* \"#utility.yul\":16416:16782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16788:17207   */\n    tag_198:\n        /* \"#utility.yul\":16954:16958   */\n      0x00\n        /* \"#utility.yul\":16992:16994   */\n      0x20\n        /* \"#utility.yul\":16981:16990   */\n      dup3\n        /* \"#utility.yul\":16977:16995   */\n      add\n        /* \"#utility.yul\":16969:16995   */\n      swap1\n      pop\n        /* \"#utility.yul\":17041:17050   */\n      dup2\n        /* \"#utility.yul\":17035:17039   */\n      dup2\n        /* \"#utility.yul\":17031:17051   */\n      sub\n        /* \"#utility.yul\":17027:17028   */\n      0x00\n        /* \"#utility.yul\":17016:17025   */\n      dup4\n        /* \"#utility.yul\":17012:17029   */\n      add\n        /* \"#utility.yul\":17005:17052   */\n      mstore\n        /* \"#utility.yul\":17069:17200   */\n      tag_407\n        /* \"#utility.yul\":17195:17199   */\n      dup2\n        /* \"#utility.yul\":17069:17200   */\n      tag_261\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":17061:17200   */\n      swap1\n      pop\n        /* \"#utility.yul\":16788:17207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17213:17433   */\n    tag_262:\n        /* \"#utility.yul\":17353:17387   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":17349:17350   */\n      0x00\n        /* \"#utility.yul\":17341:17347   */\n      dup3\n        /* \"#utility.yul\":17337:17351   */\n      add\n        /* \"#utility.yul\":17330:17388   */\n      mstore\n        /* \"#utility.yul\":17422:17425   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17417:17419   */\n      0x20\n        /* \"#utility.yul\":17409:17415   */\n      dup3\n        /* \"#utility.yul\":17405:17420   */\n      add\n        /* \"#utility.yul\":17398:17426   */\n      mstore\n        /* \"#utility.yul\":17213:17433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17439:17805   */\n    tag_263:\n        /* \"#utility.yul\":17581:17584   */\n      0x00\n        /* \"#utility.yul\":17602:17669   */\n      tag_410\n        /* \"#utility.yul\":17666:17668   */\n      0x21\n        /* \"#utility.yul\":17661:17664   */\n      dup4\n        /* \"#utility.yul\":17602:17669   */\n      tag_220\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":17595:17669   */\n      swap2\n      pop\n        /* \"#utility.yul\":17678:17771   */\n      tag_411\n        /* \"#utility.yul\":17767:17770   */\n      dup3\n        /* \"#utility.yul\":17678:17771   */\n      tag_262\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":17796:17798   */\n      0x40\n        /* \"#utility.yul\":17791:17794   */\n      dup3\n        /* \"#utility.yul\":17787:17799   */\n      add\n        /* \"#utility.yul\":17780:17799   */\n      swap1\n      pop\n        /* \"#utility.yul\":17439:17805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17811:18230   */\n    tag_208:\n        /* \"#utility.yul\":17977:17981   */\n      0x00\n        /* \"#utility.yul\":18015:18017   */\n      0x20\n        /* \"#utility.yul\":18004:18013   */\n      dup3\n        /* \"#utility.yul\":18000:18018   */\n      add\n        /* \"#utility.yul\":17992:18018   */\n      swap1\n      pop\n        /* \"#utility.yul\":18064:18073   */\n      dup2\n        /* \"#utility.yul\":18058:18062   */\n      dup2\n        /* \"#utility.yul\":18054:18074   */\n      sub\n        /* \"#utility.yul\":18050:18051   */\n      0x00\n        /* \"#utility.yul\":18039:18048   */\n      dup4\n        /* \"#utility.yul\":18035:18052   */\n      add\n        /* \"#utility.yul\":18028:18075   */\n      mstore\n        /* \"#utility.yul\":18092:18223   */\n      tag_413\n        /* \"#utility.yul\":18218:18222   */\n      dup2\n        /* \"#utility.yul\":18092:18223   */\n      tag_263\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":18084:18223   */\n      swap1\n      pop\n        /* \"#utility.yul\":17811:18230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18236:18457   */\n    tag_264:\n        /* \"#utility.yul\":18376:18410   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":18372:18373   */\n      0x00\n        /* \"#utility.yul\":18364:18370   */\n      dup3\n        /* \"#utility.yul\":18360:18374   */\n      add\n        /* \"#utility.yul\":18353:18411   */\n      mstore\n        /* \"#utility.yul\":18445:18449   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18440:18442   */\n      0x20\n        /* \"#utility.yul\":18432:18438   */\n      dup3\n        /* \"#utility.yul\":18428:18443   */\n      add\n        /* \"#utility.yul\":18421:18450   */\n      mstore\n        /* \"#utility.yul\":18236:18457   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18463:18829   */\n    tag_265:\n        /* \"#utility.yul\":18605:18608   */\n      0x00\n        /* \"#utility.yul\":18626:18693   */\n      tag_416\n        /* \"#utility.yul\":18690:18692   */\n      0x22\n        /* \"#utility.yul\":18685:18688   */\n      dup4\n        /* \"#utility.yul\":18626:18693   */\n      tag_220\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":18619:18693   */\n      swap2\n      pop\n        /* \"#utility.yul\":18702:18795   */\n      tag_417\n        /* \"#utility.yul\":18791:18794   */\n      dup3\n        /* \"#utility.yul\":18702:18795   */\n      tag_264\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":18820:18822   */\n      0x40\n        /* \"#utility.yul\":18815:18818   */\n      dup3\n        /* \"#utility.yul\":18811:18823   */\n      add\n        /* \"#utility.yul\":18804:18823   */\n      swap1\n      pop\n        /* \"#utility.yul\":18463:18829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18835:19254   */\n    tag_212:\n        /* \"#utility.yul\":19001:19005   */\n      0x00\n        /* \"#utility.yul\":19039:19041   */\n      0x20\n        /* \"#utility.yul\":19028:19037   */\n      dup3\n        /* \"#utility.yul\":19024:19042   */\n      add\n        /* \"#utility.yul\":19016:19042   */\n      swap1\n      pop\n        /* \"#utility.yul\":19088:19097   */\n      dup2\n        /* \"#utility.yul\":19082:19086   */\n      dup2\n        /* \"#utility.yul\":19078:19098   */\n      sub\n        /* \"#utility.yul\":19074:19075   */\n      0x00\n        /* \"#utility.yul\":19063:19072   */\n      dup4\n        /* \"#utility.yul\":19059:19076   */\n      add\n        /* \"#utility.yul\":19052:19099   */\n      mstore\n        /* \"#utility.yul\":19116:19247   */\n      tag_419\n        /* \"#utility.yul\":19242:19246   */\n      dup2\n        /* \"#utility.yul\":19116:19247   */\n      tag_265\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":19108:19247   */\n      swap1\n      pop\n        /* \"#utility.yul\":18835:19254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19260:19451   */\n    tag_214:\n        /* \"#utility.yul\":19300:19304   */\n      0x00\n        /* \"#utility.yul\":19320:19340   */\n      tag_421\n        /* \"#utility.yul\":19338:19339   */\n      dup3\n        /* \"#utility.yul\":19320:19340   */\n      tag_231\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":19315:19340   */\n      swap2\n      pop\n        /* \"#utility.yul\":19354:19374   */\n      tag_422\n        /* \"#utility.yul\":19372:19373   */\n      dup4\n        /* \"#utility.yul\":19354:19374   */\n      tag_231\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":19349:19374   */\n      swap3\n      pop\n        /* \"#utility.yul\":19393:19394   */\n      dup3\n        /* \"#utility.yul\":19390:19391   */\n      dup3\n        /* \"#utility.yul\":19387:19395   */\n      lt\n        /* \"#utility.yul\":19384:19418   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":19398:19416   */\n      tag_424\n      tag_241\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":19384:19418   */\n    tag_423:\n        /* \"#utility.yul\":19443:19444   */\n      dup3\n        /* \"#utility.yul\":19440:19441   */\n      dup3\n        /* \"#utility.yul\":19436:19445   */\n      sub\n        /* \"#utility.yul\":19428:19445   */\n      swap1\n      pop\n        /* \"#utility.yul\":19260:19451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201043ae7a15aac47f3933f07637c484fc24cde734278ee0af9ffb2e10a7eeb74764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_291": {
									"entryPoint": null,
									"id": 291,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_227": {
									"entryPoint": 172,
									"id": 227,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 180,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:5",
														"type": ""
													}
												],
												"src": "7:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:5",
														"type": ""
													}
												],
												"src": "580:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:5"
															},
															"nodeType": "YulIf",
															"src": "1030:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:5",
														"type": ""
													}
												],
												"src": "874:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:5",
														"type": ""
													}
												],
												"src": "1161:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:5"
															},
															"nodeType": "YulIf",
															"src": "1434:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:5",
														"type": ""
													}
												],
												"src": "1296:308:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:5",
																"statements": []
															},
															"src": "1688:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:5"
															},
															"nodeType": "YulIf",
															"src": "1810:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:5",
														"type": ""
													}
												],
												"src": "1610:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:5"
															},
															"nodeType": "YulIf",
															"src": "2178:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:5",
														"type": ""
													}
												],
												"src": "1923:421:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:5"
															},
															"nodeType": "YulIf",
															"src": "2447:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:5",
														"type": ""
													}
												],
												"src": "2364:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:5"
															},
															"nodeType": "YulIf",
															"src": "2849:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:5",
														"type": ""
													}
												],
												"src": "2725:853:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:5"
															},
															"nodeType": "YulIf",
															"src": "3909:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:5"
															},
															"nodeType": "YulIf",
															"src": "4000:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:5",
														"type": ""
													}
												],
												"src": "3770:320:5"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x208F CODESIZE SUB DUP1 PUSH3 0x208F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x3C5 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6F SWAP3 SWAP2 SWAP1 PUSH3 0x178 JUMP JUMPDEST POP DUP1 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x88 SWAP3 SWAP2 SWAP1 PUSH3 0x178 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x4AF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x186 SWAP1 PUSH3 0x479 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1AA JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1F6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1C5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1F5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x205 SWAP2 SWAP1 PUSH3 0x209 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x224 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x20A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x291 DUP3 PUSH3 0x246 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2B3 JUMPI PUSH3 0x2B2 PUSH3 0x257 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C8 PUSH3 0x228 JUMP JUMPDEST SWAP1 POP PUSH3 0x2D6 DUP3 DUP3 PUSH3 0x286 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x257 JUMP JUMPDEST JUMPDEST PUSH3 0x304 DUP3 PUSH3 0x246 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x331 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x314 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x341 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35E PUSH3 0x358 DUP5 PUSH3 0x2DB JUMP JUMPDEST PUSH3 0x2BC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x37D JUMPI PUSH3 0x37C PUSH3 0x241 JUMP JUMPDEST JUMPDEST PUSH3 0x38A DUP5 DUP3 DUP6 PUSH3 0x311 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3AA JUMPI PUSH3 0x3A9 PUSH3 0x23C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3BC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x347 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3DF JUMPI PUSH3 0x3DE PUSH3 0x232 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x400 JUMPI PUSH3 0x3FF PUSH3 0x237 JUMP JUMPDEST JUMPDEST PUSH3 0x40E DUP6 DUP3 DUP7 ADD PUSH3 0x392 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x432 JUMPI PUSH3 0x431 PUSH3 0x237 JUMP JUMPDEST JUMPDEST PUSH3 0x440 DUP6 DUP3 DUP7 ADD PUSH3 0x392 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x492 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4A9 JUMPI PUSH3 0x4A8 PUSH3 0x44A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD0 DUP1 PUSH3 0x4BF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDB68E9C0 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x28C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x216 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x4FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x381 SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x40F PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x41C DUP2 DUP6 DUP6 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43C PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x449 DUP6 DUP3 DUP6 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x454 DUP6 DUP6 DUP6 PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x474 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x495 DUP2 DUP6 DUP6 PUSH2 0x486 DUP6 DUP10 PUSH2 0x691 JUMP JUMPDEST PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x4B2 DUP3 DUP3 PUSH2 0xCFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x507 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x511 PUSH1 0x0 PUSH2 0xE5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x54B SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x599 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D6 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x5E0 DUP3 DUP3 PUSH2 0xF22 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5EF PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5FD DUP3 DUP7 PUSH2 0x691 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x666 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x673 DUP2 DUP6 DUP6 PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x720 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP2 PUSH2 0xE5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP1 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97B DUP5 DUP5 PUSH2 0x691 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9F5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F4 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA62 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE6 DUP4 DUP4 DUP4 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB64 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC79 DUP5 DUP5 DUP5 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC87 PUSH2 0x79C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCA5 PUSH2 0x513 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD79 PUSH1 0x0 DUP4 DUP4 PUSH2 0x10FB JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE5A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1100 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9E DUP3 PUSH1 0x0 DUP4 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101C SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1B66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10F6 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1100 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1124 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x114E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1170 DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x117A DUP2 DUP6 PUSH2 0x1110 JUMP JUMPDEST SWAP4 POP PUSH2 0x118A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1154 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B8 DUP2 DUP5 PUSH2 0x1165 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F0 DUP3 PUSH2 0x11C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1200 DUP2 PUSH2 0x11E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x120B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121D DUP2 PUSH2 0x11F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1236 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP2 EQ PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1253 DUP2 PUSH2 0x122D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1270 JUMPI PUSH2 0x126F PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x127E DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x128F DUP6 DUP3 DUP7 ADD PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1320 DUP7 DUP3 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1331 DUP7 DUP3 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1342 DUP7 DUP3 DUP8 ADD PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1362 DUP2 PUSH2 0x134C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1398 PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A7 DUP5 DUP3 DUP6 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x11E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1410 DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1461 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0x141A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14B5 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C0 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F4 PUSH2 0x147B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155C PUSH1 0x25 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1567 DUP3 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x158B DUP2 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EE PUSH1 0x26 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F9 DUP3 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161D DUP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1680 PUSH1 0x24 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x168B DUP3 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16AF DUP2 PUSH2 0x1673 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 PUSH1 0x22 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x171D DUP3 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1741 DUP2 PUSH2 0x1705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177E PUSH1 0x1D DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1789 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17AD DUP2 PUSH2 0x1771 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1810 PUSH1 0x25 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x181B DUP3 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A2 PUSH1 0x23 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AD DUP3 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18D1 DUP2 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1934 PUSH1 0x26 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x193F DUP3 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1963 DUP2 PUSH2 0x1927 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A0 PUSH1 0x20 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AB DUP3 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CF DUP2 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0C PUSH1 0x1F DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP3 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A3B DUP2 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9E PUSH1 0x21 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA9 DUP3 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACD DUP2 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B30 PUSH1 0x22 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3B DUP3 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B5F DUP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B8F JUMPI PUSH2 0x1B8E PUSH2 0x147B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT NUMBER 0xAE PUSH27 0x15AAC47F3933F07637C484FC24CDE734278EE0AF9FFB2E10A7EEB7 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "457:11503:4:-:0;;;1070:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1144:5:4;1136;:13;;;;;;;;;;;;:::i;:::-;;1169:7;1159;:17;;;;;;;;;;;;:::i;:::-;;1198:4;1186:9;;:16;;;;;;;;;;;;;;;;;;1070:139;;457:11503;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;457:11503:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;457:11503:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_861": {
									"entryPoint": 4352,
									"id": 861,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_796": {
									"entryPoint": 1956,
									"id": 796,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_850": {
									"entryPoint": 4347,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_751": {
									"entryPoint": 3874,
									"id": 751,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3199,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_isCreate_270": {
									"entryPoint": 1662,
									"id": 270,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_679": {
									"entryPoint": 3325,
									"id": 679,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_227": {
									"entryPoint": 1948,
									"id": 227,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_839": {
									"entryPoint": 2415,
									"id": 839,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3678,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_623": {
									"entryPoint": 2555,
									"id": 623,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_418": {
									"entryPoint": 1681,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_443": {
									"entryPoint": 1028,
									"id": 443,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_375": {
									"entryPoint": 1206,
									"id": 375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_321": {
									"entryPoint": 1486,
									"id": 321,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_351": {
									"entryPoint": 1120,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_546": {
									"entryPoint": 1508,
									"id": 546,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_505": {
									"entryPoint": 1129,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_306": {
									"entryPoint": 1184,
									"id": 306,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_331": {
									"entryPoint": 882,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1299,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1279,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_341": {
									"entryPoint": 1340,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_361": {
									"entryPoint": 1063,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_476": {
									"entryPoint": 1073,
									"id": 476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1816,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_400": {
									"entryPoint": 1627,
									"id": 400,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4544,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 5814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 5960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 6068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19454:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:5",
														"type": ""
													}
												],
												"src": "7:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:5",
														"type": ""
													}
												],
												"src": "112:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "336:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "346:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "350:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "415:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "440:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "445:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "436:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "436:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "464:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "455:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "455:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "449:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "429:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "429:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "429:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "376:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "373:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "387:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "389:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "398:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "401:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "394:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "389:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "369:3:5",
																"statements": []
															},
															"src": "365:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "512:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "496:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "490:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:13:5"
															},
															"nodeType": "YulIf",
															"src": "487:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "318:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "323:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "328:6:5",
														"type": ""
													}
												],
												"src": "287:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "658:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "676:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "683:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "692:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "688:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "658:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "631:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "641:6:5",
														"type": ""
													}
												],
												"src": "600:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "800:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "810:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "857:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "824:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "814:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "872:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "879:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "985:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "992:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "981:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "981:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "999:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "959:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "959:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "959:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1020:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1031:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1058:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1036:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1027:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1020:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "781:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "788:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "796:3:5",
														"type": ""
													}
												],
												"src": "708:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1206:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1218:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1229:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1214:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1214:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1206:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1253:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1264:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1249:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1249:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1272:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1278:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1268:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1242:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1242:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1298:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1370:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1379:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1306:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1298:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1168:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1180:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1191:4:5",
														"type": ""
													}
												],
												"src": "1078:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1437:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1447:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1430:6:5",
														"type": ""
													}
												],
												"src": "1397:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1567:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1584:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1577:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1478:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1690:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1700:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1601:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1769:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1779:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1794:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1790:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1779:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1751:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1761:7:5",
														"type": ""
													}
												],
												"src": "1724:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1901:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1911:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1940:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1922:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1911:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1883:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1893:7:5",
														"type": ""
													}
												],
												"src": "1856:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2058:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2067:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2070:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2060:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2060:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2060:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2024:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2049:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2031:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2031:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2021:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2021:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2014:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:43:5"
															},
															"nodeType": "YulIf",
															"src": "2011:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:5",
														"type": ""
													}
												],
												"src": "1958:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2148:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2170:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2157:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2148:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2186:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2116:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2124:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2132:5:5",
														"type": ""
													}
												],
												"src": "2086:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2286:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2297:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2286:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2268:7:5",
														"type": ""
													}
												],
												"src": "2231:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2357:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2414:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2423:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2426:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2416:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2416:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2416:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2405:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2387:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2377:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2377:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2370:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:43:5"
															},
															"nodeType": "YulIf",
															"src": "2367:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:5",
														"type": ""
													}
												],
												"src": "2314:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2526:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2513:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2504:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2569:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2542:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2472:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2480:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2488:5:5",
														"type": ""
													}
												],
												"src": "2442:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2716:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2718:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2718:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2718:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2700:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2683:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2683:32:5"
															},
															"nodeType": "YulIf",
															"src": "2680:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2809:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2824:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2828:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2853:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2888:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2899:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2884:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2884:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2908:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2863:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2853:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2936:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2951:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2965:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2955:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2981:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3016:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3027:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3012:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3012:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3036:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2991:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2981:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:5",
														"type": ""
													}
												],
												"src": "2587:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3109:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3119:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3144:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3119:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3091:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3101:7:5",
														"type": ""
													}
												],
												"src": "3067:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3222:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3239:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3259:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3244:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3244:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3232:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3210:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3217:3:5",
														"type": ""
													}
												],
												"src": "3163:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3370:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3454:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3478:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3463:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3416:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3342:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3354:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3365:4:5",
														"type": ""
													}
												],
												"src": "3278:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3559:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3599:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3581:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3569:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3569:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3547:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:5",
														"type": ""
													}
												],
												"src": "3494:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3716:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3726:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3734:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3819:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3830:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3815:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3815:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3762:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3700:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3711:4:5",
														"type": ""
													}
												],
												"src": "3618:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3946:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3992:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3994:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3994:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3994:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3967:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3963:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3963:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3959:32:5"
															},
															"nodeType": "YulIf",
															"src": "3956:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4085:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4100:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4104:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4129:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4164:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4160:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4139:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4139:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4129:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4212:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4227:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4231:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4257:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4292:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4303:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4288:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4288:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4312:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4267:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4257:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4340:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4355:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4359:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4385:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4420:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4431:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4416:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4416:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4395:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4385:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3900:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3911:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3923:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3931:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3939:6:5",
														"type": ""
													}
												],
												"src": "3846:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4514:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4524:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4539:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4535:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4524:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4496:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4506:7:5",
														"type": ""
													}
												],
												"src": "4471:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4641:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4662:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4646:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4646:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4612:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4619:3:5",
														"type": ""
													}
												],
												"src": "4563:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4775:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4785:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4874:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4885:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4870:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4821:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4821:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4747:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4759:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4770:4:5",
														"type": ""
													}
												],
												"src": "4681:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4967:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5013:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5015:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5015:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5015:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4988:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4997:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4980:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:32:5"
															},
															"nodeType": "YulIf",
															"src": "4977:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5106:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5121:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5125:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5150:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5185:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5196:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5181:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5181:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5205:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5160:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5150:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4937:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4948:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4960:6:5",
														"type": ""
													}
												],
												"src": "4901:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5301:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5318:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5341:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5323:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5323:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5311:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5311:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5289:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5296:3:5",
														"type": ""
													}
												],
												"src": "5236:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5468:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5480:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5491:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5476:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5476:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5468:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5548:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5561:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5572:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5557:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5504:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5504:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5504:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5430:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5442:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5453:4:5",
														"type": ""
													}
												],
												"src": "5360:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5671:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5717:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5719:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5719:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5719:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5692:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5701:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5688:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5713:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:32:5"
															},
															"nodeType": "YulIf",
															"src": "5681:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5810:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5825:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5829:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5854:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5889:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5900:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5885:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5885:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5909:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5864:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5864:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5854:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5937:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5952:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5966:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5956:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5982:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6017:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6028:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6013:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6013:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6037:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5992:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5992:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5982:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5633:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5644:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5656:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5664:6:5",
														"type": ""
													}
												],
												"src": "5588:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6096:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6113:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6116:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6106:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6106:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6106:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6210:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6213:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6203:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6203:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6203:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6237:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6227:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6068:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6305:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6315:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6329:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6335:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6325:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6346:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6376:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6382:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6372:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6372:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6350:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6423:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6437:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6451:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6459:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6447:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6447:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6437:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6403:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6396:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6396:26:5"
															},
															"nodeType": "YulIf",
															"src": "6393:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6526:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6540:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6540:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6540:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6490:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6513:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6521:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6510:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6510:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6487:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6487:38:5"
															},
															"nodeType": "YulIf",
															"src": "6484:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6289:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6298:6:5",
														"type": ""
													}
												],
												"src": "6254:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6608:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6625:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6628:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6618:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6618:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6618:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6722:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6725:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6715:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6715:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6749:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6739:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6739:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6739:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6580:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6810:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6820:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6843:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6825:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6820:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6854:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6877:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6859:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6859:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6854:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7017:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7019:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7019:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7019:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6938:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6945:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7013:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6941:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6941:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6935:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6935:81:5"
															},
															"nodeType": "YulIf",
															"src": "6932:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7049:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7060:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7063:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6797:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6800:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6806:3:5",
														"type": ""
													}
												],
												"src": "6766:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7183:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7205:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7213:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7201:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7201:14:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7217:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7194:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7194:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7273:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7281:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7269:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7269:15:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7286:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7262:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7262:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7262:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7175:6:5",
														"type": ""
													}
												],
												"src": "7077:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7453:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7463:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7529:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7534:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7470:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7635:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "7546:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7648:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7659:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7664:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7655:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7655:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7648:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7441:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7449:3:5",
														"type": ""
													}
												],
												"src": "7307:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7850:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7860:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7872:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7883:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7860:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7918:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7932:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7922:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7922:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7896:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7952:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8086:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7960:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7960:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7952:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7830:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7845:4:5",
														"type": ""
													}
												],
												"src": "7679:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8210:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8232:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8240:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8228:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8244:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8300:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8308:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8296:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8296:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8313:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8289:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8289:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8202:6:5",
														"type": ""
													}
												],
												"src": "8104:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8481:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8491:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8557:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8562:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8498:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8498:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8491:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8663:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "8574:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8574:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8574:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8676:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8687:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8692:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8683:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8683:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8676:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8469:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8477:3:5",
														"type": ""
													}
												],
												"src": "8335:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8878:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8888:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8900:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8911:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8896:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8896:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8888:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8935:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8946:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8931:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8931:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8954:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8960:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8950:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8950:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8924:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8924:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8980:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9114:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8988:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8988:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8980:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8858:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8873:4:5",
														"type": ""
													}
												],
												"src": "8707:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9238:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9260:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9268:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9256:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9256:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9272:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9249:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9328:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9336:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9324:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9341:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9317:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9317:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9317:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9230:6:5",
														"type": ""
													}
												],
												"src": "9132:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9507:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9517:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9583:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9588:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9524:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9524:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9517:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9689:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "9600:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9600:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9600:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9702:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9713:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9718:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9709:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9709:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9702:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9495:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9503:3:5",
														"type": ""
													}
												],
												"src": "9361:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9904:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9914:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9926:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9937:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9922:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9922:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9914:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9961:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9972:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9957:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9957:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9980:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9986:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9976:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9976:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9950:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9950:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9950:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10006:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10140:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10014:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10014:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10006:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9884:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9899:4:5",
														"type": ""
													}
												],
												"src": "9733:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10264:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10286:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10294:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10282:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10282:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10298:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10275:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10275:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10275:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10354:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10362:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10350:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10350:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10367:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10343:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10256:6:5",
														"type": ""
													}
												],
												"src": "10158:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10531:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10541:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10607:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10612:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10548:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10541:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10713:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "10624:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10624:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10624:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10726:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10737:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10742:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10733:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10726:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10519:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10527:3:5",
														"type": ""
													}
												],
												"src": "10385:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10928:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10938:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10950:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10961:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10946:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10946:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10938:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10985:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10996:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10981:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10981:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11004:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11010:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11000:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11000:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10974:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10974:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10974:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11030:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11164:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11038:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11038:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11030:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10908:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10923:4:5",
														"type": ""
													}
												],
												"src": "10757:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11288:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11310:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11318:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11306:14:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11322:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11299:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11299:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11299:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11280:6:5",
														"type": ""
													}
												],
												"src": "11182:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11513:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11523:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11589:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11594:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11530:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11530:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11523:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11695:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "11606:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11606:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11606:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11708:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11719:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11724:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11715:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11715:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11708:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11501:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11509:3:5",
														"type": ""
													}
												],
												"src": "11367:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11910:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11920:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11932:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11943:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11928:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11920:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11967:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11978:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11963:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11963:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11986:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11992:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11982:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11982:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11956:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11956:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11956:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12012:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12146:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12020:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12020:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12012:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11890:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11905:4:5",
														"type": ""
													}
												],
												"src": "11739:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12270:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12292:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12300:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12288:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12288:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12304:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12281:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12281:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12281:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12360:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12368:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12356:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12356:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12373:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12349:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12349:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12349:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12262:6:5",
														"type": ""
													}
												],
												"src": "12164:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12540:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12550:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12616:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12621:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12557:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12557:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12550:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12722:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "12633:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12633:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12633:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12735:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12746:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12751:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12742:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12742:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12528:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12536:3:5",
														"type": ""
													}
												],
												"src": "12394:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12937:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12947:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12959:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12970:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12955:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12955:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12947:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12994:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13005:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12990:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12990:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13013:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13009:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13009:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12983:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12983:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12983:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13039:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13173:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13047:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13047:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13039:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12917:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12932:4:5",
														"type": ""
													}
												],
												"src": "12766:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13297:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13319:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13327:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13315:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13315:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13331:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13308:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13308:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13308:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13387:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13395:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13383:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13400:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13376:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13376:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13376:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13289:6:5",
														"type": ""
													}
												],
												"src": "13191:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13565:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13575:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13641:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13646:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13582:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13575:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13747:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "13658:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13658:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13658:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13760:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13771:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13776:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13767:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13767:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13760:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13553:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13561:3:5",
														"type": ""
													}
												],
												"src": "13419:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13962:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13972:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13984:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13995:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13980:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13980:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13972:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14019:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14030:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14015:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14015:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14038:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14044:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14034:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14034:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14008:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14008:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14008:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14064:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14198:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14072:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14072:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14064:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13942:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13957:4:5",
														"type": ""
													}
												],
												"src": "13791:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14322:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14344:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14352:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14340:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14340:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14356:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14333:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14333:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14333:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14412:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14408:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14408:15:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14425:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14401:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14401:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14401:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14314:6:5",
														"type": ""
													}
												],
												"src": "14216:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14593:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14603:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14669:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14674:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14610:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14610:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14603:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14775:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "14686:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14686:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14686:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14788:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14799:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14804:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14795:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14795:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14788:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14581:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14589:3:5",
														"type": ""
													}
												],
												"src": "14447:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14990:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15000:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15012:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15023:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15008:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15008:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15000:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15047:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15058:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15043:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15043:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15066:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15072:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15062:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15062:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15036:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15036:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15036:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15092:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15226:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15100:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15100:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15092:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14970:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14985:4:5",
														"type": ""
													}
												],
												"src": "14819:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15350:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15372:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15380:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15368:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15368:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15384:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15361:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15361:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15361:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15342:6:5",
														"type": ""
													}
												],
												"src": "15244:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15578:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15588:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15654:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15659:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15595:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15588:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15760:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "15671:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15671:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15671:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15773:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15784:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15789:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15780:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15780:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15773:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15566:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15574:3:5",
														"type": ""
													}
												],
												"src": "15432:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15975:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15985:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15997:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16008:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15993:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15993:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15985:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16032:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16043:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16028:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16028:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16051:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16057:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16047:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16047:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16021:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16021:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16021:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16077:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16211:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16085:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16085:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16077:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15955:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15970:4:5",
														"type": ""
													}
												],
												"src": "15804:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16335:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16357:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16365:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16353:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16353:14:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16369:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16346:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16346:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16346:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16327:6:5",
														"type": ""
													}
												],
												"src": "16229:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16562:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16572:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16638:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16643:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16579:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16579:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16572:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16744:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																	"nodeType": "YulIdentifier",
																	"src": "16655:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16655:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16655:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16757:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16768:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16773:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16764:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16764:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16757:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16550:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16558:3:5",
														"type": ""
													}
												],
												"src": "16416:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16959:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16969:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16981:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16992:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16977:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16977:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16969:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17016:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17027:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17012:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17012:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17035:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17041:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17031:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17031:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17005:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17005:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17005:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17061:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17195:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17069:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17069:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17061:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16939:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16954:4:5",
														"type": ""
													}
												],
												"src": "16788:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17319:114:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17341:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17349:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17337:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17337:14:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17353:34:5",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17330:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17330:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17330:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17409:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17417:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17405:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17405:15:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17422:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17398:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17398:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17398:28:5"
														}
													]
												},
												"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17311:6:5",
														"type": ""
													}
												],
												"src": "17213:220:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17585:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17595:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17661:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17666:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17602:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17602:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17595:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17767:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																	"nodeType": "YulIdentifier",
																	"src": "17678:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17678:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17678:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17780:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17791:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17796:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17787:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17787:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17780:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17573:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17581:3:5",
														"type": ""
													}
												],
												"src": "17439:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17982:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17992:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18004:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18015:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18000:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18000:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17992:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18039:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18050:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18035:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18035:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18058:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18064:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18054:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18054:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18028:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18028:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18028:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18084:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18218:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18092:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18092:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18084:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17962:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17977:4:5",
														"type": ""
													}
												],
												"src": "17811:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18342:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18364:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18372:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18360:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18360:14:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18376:34:5",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18353:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18353:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18353:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18432:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18440:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18428:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18428:15:5"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18445:4:5",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18421:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18421:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18421:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18334:6:5",
														"type": ""
													}
												],
												"src": "18236:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18609:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18619:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18685:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18690:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18626:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18626:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18619:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18791:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"nodeType": "YulIdentifier",
																	"src": "18702:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18702:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18702:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18804:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18815:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18820:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18811:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18811:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18804:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18597:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18605:3:5",
														"type": ""
													}
												],
												"src": "18463:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19006:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19016:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19028:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19039:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19024:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19024:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19016:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19063:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19074:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19059:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19059:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19082:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19088:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19078:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19078:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19052:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19052:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19052:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19108:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19242:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19116:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19116:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19108:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18986:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19001:4:5",
														"type": ""
													}
												],
												"src": "18835:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19305:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19315:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19338:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19320:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19320:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19315:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19349:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19372:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19354:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19354:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19349:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19396:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19398:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19398:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19398:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19390:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19393:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19387:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19387:8:5"
															},
															"nodeType": "YulIf",
															"src": "19384:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19428:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19440:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19443:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19436:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19436:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19428:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19291:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19294:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19300:4:5",
														"type": ""
													}
												],
												"src": "19260:191:5"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d7146102a8578063a9059cbb146102d8578063db68e9c014610308578063dd62ed3e14610326578063f2fde38b146103565761010b565b8063715018a6146102465780638da5cb5b1461025057806395d89b411461026e5780639dc29fac1461028c5761010b565b8063313ce567116100de578063313ce567146101ac57806339509351146101ca57806340c10f19146101fa57806370a08231146102165761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610372565b604051610125919061119e565b60405180910390f35b61014860048036038101906101439190611259565b610404565b60405161015591906112b4565b60405180910390f35b610166610427565b60405161017391906112de565b60405180910390f35b610196600480360381019061019191906112f9565b610431565b6040516101a391906112b4565b60405180910390f35b6101b4610460565b6040516101c19190611368565b60405180910390f35b6101e460048036038101906101df9190611259565b610469565b6040516101f191906112b4565b60405180910390f35b610214600480360381019061020f9190611259565b6104a0565b005b610230600480360381019061022b9190611383565b6104b6565b60405161023d91906112de565b60405180910390f35b61024e6104ff565b005b610258610513565b60405161026591906113bf565b60405180910390f35b61027661053c565b604051610283919061119e565b60405180910390f35b6102a660048036038101906102a19190611259565b6105ce565b005b6102c260048036038101906102bd9190611259565b6105e4565b6040516102cf91906112b4565b60405180910390f35b6102f260048036038101906102ed9190611259565b61065b565b6040516102ff91906112b4565b60405180910390f35b61031061067e565b60405161031d91906112b4565b60405180910390f35b610340600480360381019061033b91906113da565b610691565b60405161034d91906112de565b60405180910390f35b610370600480360381019061036b9190611383565b610718565b005b60606004805461038190611449565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad90611449565b80156103fa5780601f106103cf576101008083540402835291602001916103fa565b820191906000526020600020905b8154815290600101906020018083116103dd57829003601f168201915b5050505050905090565b60008061040f61079c565b905061041c8185856107a4565b600191505092915050565b6000600354905090565b60008061043c61079c565b905061044985828561096f565b6104548585856109fb565b60019150509392505050565b60006012905090565b60008061047461079c565b90506104958185856104868589610691565b61049091906114aa565b6107a4565b600191505092915050565b6104a8610c7f565b6104b28282610cfd565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610507610c7f565b6105116000610e5e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606005805461054b90611449565b80601f016020809104026020016040519081016040528092919081815260200182805461057790611449565b80156105c45780601f10610599576101008083540402835291602001916105c4565b820191906000526020600020905b8154815290600101906020018083116105a757829003601f168201915b5050505050905090565b6105d6610c7f565b6105e08282610f22565b5050565b6000806105ef61079c565b905060006105fd8286610691565b905083811015610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063990611572565b60405180910390fd5b61064f82868684036107a4565b60019250505092915050565b60008061066661079c565b90506106738185856109fb565b600191505092915050565b600660009054906101000a900460ff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610720610c7f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610790576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078790611604565b60405180910390fd5b61079981610e5e565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080b90611696565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087b90611728565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161096291906112de565b60405180910390a3505050565b600061097b8484610691565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109f557818110156109e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109de90611794565b60405180910390fd5b6109f484848484036107a4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6290611826565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad2906118b8565b60405180910390fd5b610ae68383836110fb565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b649061194a565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c0291906114aa565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c6691906112de565b60405180910390a3610c79848484611100565b50505050565b610c8761079c565b73ffffffffffffffffffffffffffffffffffffffff16610ca5610513565b73ffffffffffffffffffffffffffffffffffffffff1614610cfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf2906119b6565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6490611a22565b60405180910390fd5b610d79600083836110fb565b8060036000828254610d8b91906114aa565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610de191906114aa565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e4691906112de565b60405180910390a3610e5a60008383611100565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610f92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8990611ab4565b60405180910390fd5b610f9e826000836110fb565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101c90611b46565b60405180910390fd5b818103600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816003600082825461107d9190611b66565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110e291906112de565b60405180910390a36110f683600084611100565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561113f578082015181840152602081019050611124565b8381111561114e576000848401525b50505050565b6000601f19601f8301169050919050565b600061117082611105565b61117a8185611110565b935061118a818560208601611121565b61119381611154565b840191505092915050565b600060208201905081810360008301526111b88184611165565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f0826111c5565b9050919050565b611200816111e5565b811461120b57600080fd5b50565b60008135905061121d816111f7565b92915050565b6000819050919050565b61123681611223565b811461124157600080fd5b50565b6000813590506112538161122d565b92915050565b600080604083850312156112705761126f6111c0565b5b600061127e8582860161120e565b925050602061128f85828601611244565b9150509250929050565b60008115159050919050565b6112ae81611299565b82525050565b60006020820190506112c960008301846112a5565b92915050565b6112d881611223565b82525050565b60006020820190506112f360008301846112cf565b92915050565b600080600060608486031215611312576113116111c0565b5b60006113208682870161120e565b93505060206113318682870161120e565b925050604061134286828701611244565b9150509250925092565b600060ff82169050919050565b6113628161134c565b82525050565b600060208201905061137d6000830184611359565b92915050565b600060208284031215611399576113986111c0565b5b60006113a78482850161120e565b91505092915050565b6113b9816111e5565b82525050565b60006020820190506113d460008301846113b0565b92915050565b600080604083850312156113f1576113f06111c0565b5b60006113ff8582860161120e565b92505060206114108582860161120e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061146157607f821691505b602082108114156114755761147461141a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114b582611223565b91506114c083611223565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114f5576114f461147b565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061155c602583611110565b915061156782611500565b604082019050919050565b6000602082019050818103600083015261158b8161154f565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115ee602683611110565b91506115f982611592565b604082019050919050565b6000602082019050818103600083015261161d816115e1565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611680602483611110565b915061168b82611624565b604082019050919050565b600060208201905081810360008301526116af81611673565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611712602283611110565b915061171d826116b6565b604082019050919050565b6000602082019050818103600083015261174181611705565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061177e601d83611110565b915061178982611748565b602082019050919050565b600060208201905081810360008301526117ad81611771565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611810602583611110565b915061181b826117b4565b604082019050919050565b6000602082019050818103600083015261183f81611803565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006118a2602383611110565b91506118ad82611846565b604082019050919050565b600060208201905081810360008301526118d181611895565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611934602683611110565b915061193f826118d8565b604082019050919050565b6000602082019050818103600083015261196381611927565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119a0602083611110565b91506119ab8261196a565b602082019050919050565b600060208201905081810360008301526119cf81611993565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611a0c601f83611110565b9150611a17826119d6565b602082019050919050565b60006020820190508181036000830152611a3b816119ff565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a9e602183611110565b9150611aa982611a42565b604082019050919050565b60006020820190508181036000830152611acd81611a91565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b30602283611110565b9150611b3b82611ad4565b604082019050919050565b60006020820190508181036000830152611b5f81611b23565b9050919050565b6000611b7182611223565b9150611b7c83611223565b925082821015611b8f57611b8e61147b565b5b82820390509291505056fea26469706673582212201043ae7a15aac47f3933f07637c484fc24cde734278ee0af9ffb2e10a7eeb74764736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xDB68E9C0 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x356 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x28C JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x216 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x427 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x4FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1383 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x381 SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x40F PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x41C DUP2 DUP6 DUP6 PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x43C PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x449 DUP6 DUP3 DUP6 PUSH2 0x96F JUMP JUMPDEST PUSH2 0x454 DUP6 DUP6 DUP6 PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x474 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x495 DUP2 DUP6 DUP6 PUSH2 0x486 DUP6 DUP10 PUSH2 0x691 JUMP JUMPDEST PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x4B2 DUP3 DUP3 PUSH2 0xCFD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x507 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x511 PUSH1 0x0 PUSH2 0xE5E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x54B SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x577 SWAP1 PUSH2 0x1449 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x599 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5D6 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x5E0 DUP3 DUP3 PUSH2 0xF22 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5EF PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x5FD DUP3 DUP7 PUSH2 0x691 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x639 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x7A4 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x666 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH2 0x673 DUP2 DUP6 DUP6 PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x720 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x790 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x799 DUP2 PUSH2 0xE5E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87B SWAP1 PUSH2 0x1728 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x962 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97B DUP5 DUP5 PUSH2 0x691 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9F5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DE SWAP1 PUSH2 0x1794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F4 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7A4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA62 SWAP1 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x18B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE6 DUP4 DUP4 DUP4 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB64 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC02 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC79 DUP5 DUP5 DUP5 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC87 PUSH2 0x79C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCA5 PUSH2 0x513 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD64 SWAP1 PUSH2 0x1A22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD79 PUSH1 0x0 DUP4 DUP4 PUSH2 0x10FB JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x14AA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE46 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xE5A PUSH1 0x0 DUP4 DUP4 PUSH2 0x1100 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF89 SWAP1 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF9E DUP3 PUSH1 0x0 DUP4 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1025 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101C SWAP1 PUSH2 0x1B46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1B66 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x10E2 SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x10F6 DUP4 PUSH1 0x0 DUP5 PUSH2 0x1100 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1124 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x114E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1170 DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0x117A DUP2 DUP6 PUSH2 0x1110 JUMP JUMPDEST SWAP4 POP PUSH2 0x118A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1193 DUP2 PUSH2 0x1154 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11B8 DUP2 DUP5 PUSH2 0x1165 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F0 DUP3 PUSH2 0x11C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1200 DUP2 PUSH2 0x11E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x120B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x121D DUP2 PUSH2 0x11F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1236 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP2 EQ PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1253 DUP2 PUSH2 0x122D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1270 JUMPI PUSH2 0x126F PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x127E DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x128F DUP6 DUP3 DUP7 ADD PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1320 DUP7 DUP3 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1331 DUP7 DUP3 DUP8 ADD PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1342 DUP7 DUP3 DUP8 ADD PUSH2 0x1244 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1362 DUP2 PUSH2 0x134C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x137D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1359 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1398 PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13A7 DUP5 DUP3 DUP6 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x11E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x11C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FF DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1410 DUP6 DUP3 DUP7 ADD PUSH2 0x120E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1461 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0x141A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14B5 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C0 DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x14F5 JUMPI PUSH2 0x14F4 PUSH2 0x147B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x155C PUSH1 0x25 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1567 DUP3 PUSH2 0x1500 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x158B DUP2 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EE PUSH1 0x26 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F9 DUP3 PUSH2 0x1592 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x161D DUP2 PUSH2 0x15E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1680 PUSH1 0x24 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x168B DUP3 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16AF DUP2 PUSH2 0x1673 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1712 PUSH1 0x22 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x171D DUP3 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1741 DUP2 PUSH2 0x1705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x177E PUSH1 0x1D DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1789 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17AD DUP2 PUSH2 0x1771 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1810 PUSH1 0x25 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x181B DUP3 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A2 PUSH1 0x23 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x18AD DUP3 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18D1 DUP2 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1934 PUSH1 0x26 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x193F DUP3 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1963 DUP2 PUSH2 0x1927 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A0 PUSH1 0x20 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AB DUP3 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CF DUP2 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0C PUSH1 0x1F DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A17 DUP3 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A3B DUP2 PUSH2 0x19FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9E PUSH1 0x21 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA9 DUP3 PUSH2 0x1A42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACD DUP2 PUSH2 0x1A91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B30 PUSH1 0x22 DUP4 PUSH2 0x1110 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B3B DUP3 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B5F DUP2 PUSH2 0x1B23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP4 PUSH2 0x1223 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1B8F JUMPI PUSH2 0x1B8E PUSH2 0x147B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT NUMBER 0xAE PUSH27 0x15AAC47F3933F07637C484FC24CDE734278EE0AF9FFB2E10A7EEB7 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "457:11503:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3776:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2587:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4535:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2436:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5216:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1222:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2751:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1710:102:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1331:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5937:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3072:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;738:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3319:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1499:98:4;1553:13;1585:5;1578:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1499:98;:::o;3776:197::-;3859:4;3875:13;3891:12;:10;:12::i;:::-;3875:28;;3913:32;3922:5;3929:7;3938:6;3913:8;:32::i;:::-;3962:4;3955:11;;;3776:197;;;;:::o;2587:106::-;2648:7;2674:12;;2667:19;;2587:106;:::o;4535:286::-;4662:4;4678:15;4696:12;:10;:12::i;:::-;4678:30;;4718:38;4734:4;4740:7;4749:6;4718:15;:38::i;:::-;4766:27;4776:4;4782:2;4786:6;4766:9;:27::i;:::-;4810:4;4803:11;;;4535:286;;;;;:::o;2436:91::-;2494:5;2518:2;2511:9;;2436:91;:::o;5216:234::-;5304:4;5320:13;5336:12;:10;:12::i;:::-;5320:28;;5358:64;5367:5;5374:7;5411:10;5383:25;5393:5;5400:7;5383:9;:25::i;:::-;:38;;;;:::i;:::-;5358:8;:64::i;:::-;5439:4;5432:11;;;5216:234;;;;:::o;1222:103::-;1094:13:0;:11;:13::i;:::-;1296:22:4::1;1302:7;1311:6;1296:5;:22::i;:::-;1222:103:::0;;:::o;2751:125::-;2825:7;2851:9;:18;2861:7;2851:18;;;;;;;;;;;;;;;;2844:25;;2751:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1710:102:4:-;1766:13;1798:7;1791:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:102;:::o;1331:103::-;1094:13:0;:11;:13::i;:::-;1405:22:4::1;1411:7;1420:6;1405:5;:22::i;:::-;1331:103:::0;;:::o;5937:427::-;6030:4;6046:13;6062:12;:10;:12::i;:::-;6046:28;;6084:24;6111:25;6121:5;6128:7;6111:9;:25::i;:::-;6084:52;;6174:15;6154:16;:35;;6146:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6265:60;6274:5;6281:7;6309:15;6290:16;:34;6265:8;:60::i;:::-;6353:4;6346:11;;;;5937:427;;;;:::o;3072:189::-;3151:4;3167:13;3183:12;:10;:12::i;:::-;3167:28;;3205;3215:5;3222:2;3226:6;3205:9;:28::i;:::-;3250:4;3243:11;;;3072:189;;;;:::o;738:22::-;;;;;;;;;;;;;:::o;3319:149::-;3408:7;3434:11;:18;3446:5;3434:18;;;;;;;;;;;;;;;:27;3453:7;3434:27;;;;;;;;;;;;;;;;3427:34;;3319:149;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;9453:370:4:-;9601:1;9584:19;;:5;:19;;;;9576:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9681:1;9662:21;;:7;:21;;;;9654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9763:6;9733:11;:18;9745:5;9733:18;;;;;;;;;;;;;;;:27;9752:7;9733:27;;;;;;;;;;;;;;;:36;;;;9800:7;9784:32;;9793:5;9784:32;;;9809:6;9784:32;;;;;;:::i;:::-;;;;;;;;9453:370;;;:::o;10104:441::-;10234:24;10261:25;10271:5;10278:7;10261:9;:25::i;:::-;10234:52;;10320:17;10300:16;:37;10296:243;;10381:6;10361:16;:26;;10353:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10463:51;10472:5;10479:7;10507:6;10488:16;:25;10463:8;:51::i;:::-;10296:243;10224:321;10104:441;;;:::o;6818:651::-;6960:1;6944:18;;:4;:18;;;;6936:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7036:1;7022:16;;:2;:16;;;;7014:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7089:38;7110:4;7116:2;7120:6;7089:20;:38::i;:::-;7138:19;7160:9;:15;7170:4;7160:15;;;;;;;;;;;;;;;;7138:37;;7208:6;7193:11;:21;;7185:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7323:6;7309:11;:20;7291:9;:15;7301:4;7291:15;;;;;;;;;;;;;;;:38;;;;7366:6;7349:9;:13;7359:2;7349:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;7403:2;7388:26;;7397:4;7388:26;;;7407:6;7388:26;;;;;;:::i;:::-;;;;;;;;7425:37;7445:4;7451:2;7455:6;7425:19;:37::i;:::-;6926:543;6818:651;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;7745:389:4:-;7847:1;7828:21;;:7;:21;;;;7820:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7896:49;7925:1;7929:7;7938:6;7896:20;:49::i;:::-;7972:6;7956:12;;:22;;;;;;;:::i;:::-;;;;;;;;8010:6;7988:9;:18;7998:7;7988:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8052:7;8031:37;;8048:1;8031:37;;;8061:6;8031:37;;;;;;:::i;:::-;;;;;;;;8079:48;8107:1;8111:7;8120:6;8079:19;:48::i;:::-;7745:389;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;8454:576:4:-;8556:1;8537:21;;:7;:21;;;;8529:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8607:49;8628:7;8645:1;8649:6;8607:20;:49::i;:::-;8667:22;8692:9;:18;8702:7;8692:18;;;;;;;;;;;;;;;;8667:43;;8746:6;8728:14;:24;;8720:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;8863:6;8846:14;:23;8825:9;:18;8835:7;8825:18;;;;;;;;;;;;;;;:44;;;;8905:6;8889:12;;:22;;;;;;;:::i;:::-;;;;;;;;8953:1;8927:37;;8936:7;8927:37;;;8957:6;8927:37;;;;;;:::i;:::-;;;;;;;;8975:48;8995:7;9012:1;9016:6;8975:19;:48::i;:::-;8519:511;8454:576;;:::o;11129:121::-;;;;:::o;11838:120::-;;;;:::o;7:99:5:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:118::-;5323:24;5341:5;5323:24;:::i;:::-;5318:3;5311:37;5236:118;;:::o;5360:222::-;5453:4;5491:2;5480:9;5476:18;5468:26;;5504:71;5572:1;5561:9;5557:17;5548:6;5504:71;:::i;:::-;5360:222;;;;:::o;5588:474::-;5656:6;5664;5713:2;5701:9;5692:7;5688:23;5684:32;5681:119;;;5719:79;;:::i;:::-;5681:119;5839:1;5864:53;5909:7;5900:6;5889:9;5885:22;5864:53;:::i;:::-;5854:63;;5810:117;5966:2;5992:53;6037:7;6028:6;6017:9;6013:22;5992:53;:::i;:::-;5982:63;;5937:118;5588:474;;;;;:::o;6068:180::-;6116:77;6113:1;6106:88;6213:4;6210:1;6203:15;6237:4;6234:1;6227:15;6254:320;6298:6;6335:1;6329:4;6325:12;6315:22;;6382:1;6376:4;6372:12;6403:18;6393:81;;6459:4;6451:6;6447:17;6437:27;;6393:81;6521:2;6513:6;6510:14;6490:18;6487:38;6484:84;;;6540:18;;:::i;:::-;6484:84;6305:269;6254:320;;;:::o;6580:180::-;6628:77;6625:1;6618:88;6725:4;6722:1;6715:15;6749:4;6746:1;6739:15;6766:305;6806:3;6825:20;6843:1;6825:20;:::i;:::-;6820:25;;6859:20;6877:1;6859:20;:::i;:::-;6854:25;;7013:1;6945:66;6941:74;6938:1;6935:81;6932:107;;;7019:18;;:::i;:::-;6932:107;7063:1;7060;7056:9;7049:16;;6766:305;;;;:::o;7077:224::-;7217:34;7213:1;7205:6;7201:14;7194:58;7286:7;7281:2;7273:6;7269:15;7262:32;7077:224;:::o;7307:366::-;7449:3;7470:67;7534:2;7529:3;7470:67;:::i;:::-;7463:74;;7546:93;7635:3;7546:93;:::i;:::-;7664:2;7659:3;7655:12;7648:19;;7307:366;;;:::o;7679:419::-;7845:4;7883:2;7872:9;7868:18;7860:26;;7932:9;7926:4;7922:20;7918:1;7907:9;7903:17;7896:47;7960:131;8086:4;7960:131;:::i;:::-;7952:139;;7679:419;;;:::o;8104:225::-;8244:34;8240:1;8232:6;8228:14;8221:58;8313:8;8308:2;8300:6;8296:15;8289:33;8104:225;:::o;8335:366::-;8477:3;8498:67;8562:2;8557:3;8498:67;:::i;:::-;8491:74;;8574:93;8663:3;8574:93;:::i;:::-;8692:2;8687:3;8683:12;8676:19;;8335:366;;;:::o;8707:419::-;8873:4;8911:2;8900:9;8896:18;8888:26;;8960:9;8954:4;8950:20;8946:1;8935:9;8931:17;8924:47;8988:131;9114:4;8988:131;:::i;:::-;8980:139;;8707:419;;;:::o;9132:223::-;9272:34;9268:1;9260:6;9256:14;9249:58;9341:6;9336:2;9328:6;9324:15;9317:31;9132:223;:::o;9361:366::-;9503:3;9524:67;9588:2;9583:3;9524:67;:::i;:::-;9517:74;;9600:93;9689:3;9600:93;:::i;:::-;9718:2;9713:3;9709:12;9702:19;;9361:366;;;:::o;9733:419::-;9899:4;9937:2;9926:9;9922:18;9914:26;;9986:9;9980:4;9976:20;9972:1;9961:9;9957:17;9950:47;10014:131;10140:4;10014:131;:::i;:::-;10006:139;;9733:419;;;:::o;10158:221::-;10298:34;10294:1;10286:6;10282:14;10275:58;10367:4;10362:2;10354:6;10350:15;10343:29;10158:221;:::o;10385:366::-;10527:3;10548:67;10612:2;10607:3;10548:67;:::i;:::-;10541:74;;10624:93;10713:3;10624:93;:::i;:::-;10742:2;10737:3;10733:12;10726:19;;10385:366;;;:::o;10757:419::-;10923:4;10961:2;10950:9;10946:18;10938:26;;11010:9;11004:4;11000:20;10996:1;10985:9;10981:17;10974:47;11038:131;11164:4;11038:131;:::i;:::-;11030:139;;10757:419;;;:::o;11182:179::-;11322:31;11318:1;11310:6;11306:14;11299:55;11182:179;:::o;11367:366::-;11509:3;11530:67;11594:2;11589:3;11530:67;:::i;:::-;11523:74;;11606:93;11695:3;11606:93;:::i;:::-;11724:2;11719:3;11715:12;11708:19;;11367:366;;;:::o;11739:419::-;11905:4;11943:2;11932:9;11928:18;11920:26;;11992:9;11986:4;11982:20;11978:1;11967:9;11963:17;11956:47;12020:131;12146:4;12020:131;:::i;:::-;12012:139;;11739:419;;;:::o;12164:224::-;12304:34;12300:1;12292:6;12288:14;12281:58;12373:7;12368:2;12360:6;12356:15;12349:32;12164:224;:::o;12394:366::-;12536:3;12557:67;12621:2;12616:3;12557:67;:::i;:::-;12550:74;;12633:93;12722:3;12633:93;:::i;:::-;12751:2;12746:3;12742:12;12735:19;;12394:366;;;:::o;12766:419::-;12932:4;12970:2;12959:9;12955:18;12947:26;;13019:9;13013:4;13009:20;13005:1;12994:9;12990:17;12983:47;13047:131;13173:4;13047:131;:::i;:::-;13039:139;;12766:419;;;:::o;13191:222::-;13331:34;13327:1;13319:6;13315:14;13308:58;13400:5;13395:2;13387:6;13383:15;13376:30;13191:222;:::o;13419:366::-;13561:3;13582:67;13646:2;13641:3;13582:67;:::i;:::-;13575:74;;13658:93;13747:3;13658:93;:::i;:::-;13776:2;13771:3;13767:12;13760:19;;13419:366;;;:::o;13791:419::-;13957:4;13995:2;13984:9;13980:18;13972:26;;14044:9;14038:4;14034:20;14030:1;14019:9;14015:17;14008:47;14072:131;14198:4;14072:131;:::i;:::-;14064:139;;13791:419;;;:::o;14216:225::-;14356:34;14352:1;14344:6;14340:14;14333:58;14425:8;14420:2;14412:6;14408:15;14401:33;14216:225;:::o;14447:366::-;14589:3;14610:67;14674:2;14669:3;14610:67;:::i;:::-;14603:74;;14686:93;14775:3;14686:93;:::i;:::-;14804:2;14799:3;14795:12;14788:19;;14447:366;;;:::o;14819:419::-;14985:4;15023:2;15012:9;15008:18;15000:26;;15072:9;15066:4;15062:20;15058:1;15047:9;15043:17;15036:47;15100:131;15226:4;15100:131;:::i;:::-;15092:139;;14819:419;;;:::o;15244:182::-;15384:34;15380:1;15372:6;15368:14;15361:58;15244:182;:::o;15432:366::-;15574:3;15595:67;15659:2;15654:3;15595:67;:::i;:::-;15588:74;;15671:93;15760:3;15671:93;:::i;:::-;15789:2;15784:3;15780:12;15773:19;;15432:366;;;:::o;15804:419::-;15970:4;16008:2;15997:9;15993:18;15985:26;;16057:9;16051:4;16047:20;16043:1;16032:9;16028:17;16021:47;16085:131;16211:4;16085:131;:::i;:::-;16077:139;;15804:419;;;:::o;16229:181::-;16369:33;16365:1;16357:6;16353:14;16346:57;16229:181;:::o;16416:366::-;16558:3;16579:67;16643:2;16638:3;16579:67;:::i;:::-;16572:74;;16655:93;16744:3;16655:93;:::i;:::-;16773:2;16768:3;16764:12;16757:19;;16416:366;;;:::o;16788:419::-;16954:4;16992:2;16981:9;16977:18;16969:26;;17041:9;17035:4;17031:20;17027:1;17016:9;17012:17;17005:47;17069:131;17195:4;17069:131;:::i;:::-;17061:139;;16788:419;;;:::o;17213:220::-;17353:34;17349:1;17341:6;17337:14;17330:58;17422:3;17417:2;17409:6;17405:15;17398:28;17213:220;:::o;17439:366::-;17581:3;17602:67;17666:2;17661:3;17602:67;:::i;:::-;17595:74;;17678:93;17767:3;17678:93;:::i;:::-;17796:2;17791:3;17787:12;17780:19;;17439:366;;;:::o;17811:419::-;17977:4;18015:2;18004:9;18000:18;17992:26;;18064:9;18058:4;18054:20;18050:1;18039:9;18035:17;18028:47;18092:131;18218:4;18092:131;:::i;:::-;18084:139;;17811:419;;;:::o;18236:221::-;18376:34;18372:1;18364:6;18360:14;18353:58;18445:4;18440:2;18432:6;18428:15;18421:29;18236:221;:::o;18463:366::-;18605:3;18626:67;18690:2;18685:3;18626:67;:::i;:::-;18619:74;;18702:93;18791:3;18702:93;:::i;:::-;18820:2;18815:3;18811:12;18804:19;;18463:366;;;:::o;18835:419::-;19001:4;19039:2;19028:9;19024:18;19016:26;;19088:9;19082:4;19078:20;19074:1;19063:9;19059:17;19052:47;19116:131;19242:4;19116:131;:::i;:::-;19108:139;;18835:419;;;:::o;19260:191::-;19300:4;19320:20;19338:1;19320:20;:::i;:::-;19315:25;;19354:20;19372:1;19354:20;:::i;:::-;19349:25;;19393:1;19390;19387:8;19384:34;;;19398:18;;:::i;:::-;19384:34;19443:1;19440;19436:9;19428:17;;19260:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1424000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_isCreate()": "2537",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"burn(address,uint256)": "infinite",
								"decimals()": "366",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30421",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30857"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1144,
									"end": 1149,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1141,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1136,
									"end": 1149,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1169,
									"end": 1176,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1166,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1159,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1198,
									"end": 1202,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1186,
									"end": 1195,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1186,
									"end": 1195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1186,
									"end": 1202,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1070,
									"end": 1209,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 5,
									"value": "79"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 5,
									"value": "78"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 5,
									"value": "81"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 5,
									"value": "82"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 5,
									"value": "84"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 5,
									"value": "83"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 5,
									"value": "85"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 5,
									"value": "88"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 5,
									"value": "90"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 5,
									"value": "89"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 11960,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201043ae7a15aac47f3933f07637c484fc24cde734278ee0af9ffb2e10a7eeb74764736f6c634300080a0033",
									".code": [
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "DB68E9C0"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "9DC29FAC"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 457,
											"end": 11960,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1553,
											"end": 1566,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1585,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1578,
											"end": 1590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1597,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3888,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3891,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3891,
											"end": 3903,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3891,
											"end": 3903,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3891,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3875,
											"end": 3903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3922,
											"end": 3927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 3944,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3913,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3955,
											"end": 3966,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3955,
											"end": 3966,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3973,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2686,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2674,
											"end": 2686,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2693,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4662,
											"end": 4666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4696,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4696,
											"end": 4708,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4708,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4696,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4734,
											"end": 4738,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4740,
											"end": 4747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4749,
											"end": 4755,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4718,
											"end": 4756,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4718,
											"end": 4756,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4718,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4766,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4782,
											"end": 4784,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4786,
											"end": 4792,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4766,
											"end": 4793,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 4793,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4766,
											"end": 4793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4810,
											"end": 4814,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4803,
											"end": 4814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4803,
											"end": 4814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4803,
											"end": 4814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4535,
											"end": 4821,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2520,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2436,
											"end": 2527,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5336,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5367,
											"end": 5372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5381,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5411,
											"end": 5421,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5393,
											"end": 5398,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5400,
											"end": 5407,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5383,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5383,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5358,
											"end": 5422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5358,
											"end": 5422,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5358,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5439,
											"end": 5443,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5432,
											"end": 5443,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5432,
											"end": 5443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5432,
											"end": 5443,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5216,
											"end": 5450,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1296,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1296,
											"end": 1318,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1318,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1296,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1325,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2868,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1779,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1405,
											"end": 1427,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1427,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1405,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1331,
											"end": 1434,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6030,
											"end": 6034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6059,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6062,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6062,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 6062,
											"end": 6074,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6062,
											"end": 6074,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6062,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6046,
											"end": 6074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6084,
											"end": 6108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6121,
											"end": 6126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6128,
											"end": 6135,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6111,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6084,
											"end": 6136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6084,
											"end": 6136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6189,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6154,
											"end": 6170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6154,
											"end": 6189,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6154,
											"end": 6189,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6146,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6265,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6274,
											"end": 6279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6281,
											"end": 6288,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6324,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6306,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6290,
											"end": 6324,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6265,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6265,
											"end": 6325,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6265,
											"end": 6325,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6265,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6353,
											"end": 6357,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6346,
											"end": 6357,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6346,
											"end": 6357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 6364,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3167,
											"end": 3195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3205,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3226,
											"end": 3232,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3205,
											"end": 3233,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3205,
											"end": 3233,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3205,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3254,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3261,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 738,
											"end": 760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 738,
											"end": 760,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3445,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3451,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3461,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3461,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3319,
											"end": 3468,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9453,
											"end": 9823,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9453,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9584,
											"end": 9589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9584,
											"end": 9603,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 9576,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9681,
											"end": 9682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9683,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9662,
											"end": 9683,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9683,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9662,
											"end": 9683,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9683,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9662,
											"end": 9683,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9654,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9744,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9750,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9759,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9760,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9769,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9733,
											"end": 9769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9800,
											"end": 9807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9809,
											"end": 9815,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9784,
											"end": 9816,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9823,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9823,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10104,
											"end": 10545,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 10104,
											"end": 10545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10261,
											"end": 10286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10271,
											"end": 10276,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10278,
											"end": 10285,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10261,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 10261,
											"end": 10286,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10261,
											"end": 10286,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10261,
											"end": 10286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10234,
											"end": 10286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10320,
											"end": 10337,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10300,
											"end": 10316,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10296,
											"end": 10539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 10296,
											"end": 10539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10381,
											"end": 10387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10361,
											"end": 10377,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 10353,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10463,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 10472,
											"end": 10477,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10479,
											"end": 10486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10507,
											"end": 10513,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10504,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10488,
											"end": 10513,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10463,
											"end": 10471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10463,
											"end": 10514,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10463,
											"end": 10514,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 10463,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10296,
											"end": 10539,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 10296,
											"end": 10539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10224,
											"end": 10545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10545,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6818,
											"end": 7469,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6818,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6960,
											"end": 6961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6944,
											"end": 6948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 6936,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7036,
											"end": 7037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7038,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7014,
											"end": 7078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7110,
											"end": 7114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7116,
											"end": 7118,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7120,
											"end": 7126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7089,
											"end": 7127,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7089,
											"end": 7127,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7089,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7138,
											"end": 7157,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7169,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7174,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7160,
											"end": 7175,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7138,
											"end": 7175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7138,
											"end": 7175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7208,
											"end": 7214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7193,
											"end": 7204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7193,
											"end": 7214,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7193,
											"end": 7214,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7185,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7309,
											"end": 7320,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7309,
											"end": 7329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7305,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7329,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7366,
											"end": 7372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7358,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7359,
											"end": 7361,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7349,
											"end": 7372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7403,
											"end": 7405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7397,
											"end": 7401,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7407,
											"end": 7413,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7455,
											"end": 7461,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7425,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7425,
											"end": 7462,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7425,
											"end": 7462,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 7425,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6926,
											"end": 7469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 7469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 7469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 7469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6818,
											"end": 7469,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7745,
											"end": 8134,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 7745,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7849,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7820,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7925,
											"end": 7926,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7929,
											"end": 7936,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7938,
											"end": 7944,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7896,
											"end": 7945,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7896,
											"end": 7945,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 7896,
											"end": 7945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7972,
											"end": 7978,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7956,
											"end": 7978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8010,
											"end": 8016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 7997,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8005,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7988,
											"end": 8016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8048,
											"end": 8049,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8061,
											"end": 8067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8068,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8107,
											"end": 8108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8111,
											"end": 8118,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8079,
											"end": 8127,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8079,
											"end": 8127,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8079,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 8134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 8134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 8134,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8454,
											"end": 9030,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 8454,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8556,
											"end": 8557,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8537,
											"end": 8558,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8537,
											"end": 8558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8537,
											"end": 8544,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8537,
											"end": 8558,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8537,
											"end": 8558,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8537,
											"end": 8558,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8537,
											"end": 8558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8529,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8628,
											"end": 8635,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8645,
											"end": 8646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8649,
											"end": 8655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8607,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 8607,
											"end": 8656,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8607,
											"end": 8656,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8607,
											"end": 8656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8701,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8702,
											"end": 8709,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8667,
											"end": 8710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8746,
											"end": 8752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8728,
											"end": 8742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8728,
											"end": 8752,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8728,
											"end": 8752,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 8720,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8863,
											"end": 8869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 8860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8846,
											"end": 8869,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8834,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8835,
											"end": 8842,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8825,
											"end": 8843,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8869,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8825,
											"end": 8869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8905,
											"end": 8911,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8901,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8889,
											"end": 8901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8953,
											"end": 8954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8936,
											"end": 8943,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8957,
											"end": 8963,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8975,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8995,
											"end": 9002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9016,
											"end": 9022,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8975,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8975,
											"end": 9023,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8975,
											"end": 9023,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8975,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8519,
											"end": 9030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8454,
											"end": 9030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8454,
											"end": 9030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8454,
											"end": 9030,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11129,
											"end": 11250,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 11129,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11129,
											"end": 11250,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11838,
											"end": 11958,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 11838,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11838,
											"end": 11958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11838,
											"end": 11958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11838,
											"end": 11958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11838,
											"end": 11958,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 355,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 376,
											"end": 377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 373,
											"end": 386,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 365,
											"end": 478,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 459,
											"end": 462,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 455,
											"end": 466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 449,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 445,
											"end": 446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 440,
											"end": 443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 436,
											"end": 447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 429,
											"end": 468,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 394,
											"end": 404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 389,
											"end": 404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 389,
											"end": 404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 478,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 365,
											"end": 478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 493,
											"end": 494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 490,
											"end": 503,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 487,
											"end": 588,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 487,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 573,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 562,
											"end": 565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 558,
											"end": 574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 551,
											"end": 578,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 487,
											"end": 588,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 487,
											"end": 588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 336,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 287,
											"end": 594,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 694,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 688,
											"end": 695,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 683,
											"end": 685,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 672,
											"end": 686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 668,
											"end": 696,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 658,
											"end": 696,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 658,
											"end": 696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 600,
											"end": 702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 600,
											"end": 702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 702,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 796,
											"end": 799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 824,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 824,
											"end": 863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 879,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 879,
											"end": 950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 872,
											"end": 950,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 872,
											"end": 950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1004,
											"end": 1010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 999,
											"end": 1002,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 992,
											"end": 996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 981,
											"end": 997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 959,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1036,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1027,
											"end": 1066,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 800,
											"end": 1072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 708,
											"end": 1072,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1231,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1262,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1242,
											"end": 1289,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1379,
											"end": 1383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1306,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1384,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1391,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1478,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1844,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1850,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1922,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1911,
											"end": 1946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1952,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 2031,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2056,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2072,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2011,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 2080,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2177,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2186,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2225,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2302,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2308,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2412,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2367,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2436,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2533,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 2569,
											"end": 2574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 2542,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2581,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2715,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2680,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2908,
											"end": 2915,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2905,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2897,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2906,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2863,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2967,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 3036,
											"end": 3043,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3012,
											"end": 3034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2991,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 3054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 3061,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3149,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3137,
											"end": 3150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3151,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3157,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 3244,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3272,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 3416,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3278,
											"end": 3488,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 3599,
											"end": 3604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 3581,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3569,
											"end": 3606,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3494,
											"end": 3612,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3751,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3726,
											"end": 3752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3819,
											"end": 3828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3812,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 3762,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3840,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3974,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3963,
											"end": 3986,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3959,
											"end": 3991,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 3994,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 3956,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4182,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 4139,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4085,
											"end": 4202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 4267,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4320,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4212,
											"end": 4330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4395,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4465,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4550,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4535,
											"end": 4551,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4557,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 4662,
											"end": 4667,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 4646,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4669,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4675,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4870,
											"end": 4887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 4821,
											"end": 4888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4895,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5007,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5012,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 5015,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 4977,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5135,
											"end": 5136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5181,
											"end": 5203,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 5223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 5230,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 5341,
											"end": 5346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 5323,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5311,
											"end": 5348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5354,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5480,
											"end": 5489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5468,
											"end": 5494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 5572,
											"end": 5573,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5557,
											"end": 5574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5554,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 5504,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5582,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5713,
											"end": 5715,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5710,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5692,
											"end": 5699,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5711,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5716,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5719,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "tag",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 5681,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5839,
											"end": 5840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5909,
											"end": 5916,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5898,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5864,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 5917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5966,
											"end": 5968,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5992,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 6037,
											"end": 6044,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6026,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5992,
											"end": 6045,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6045,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 5992,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5937,
											"end": 6055,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5588,
											"end": 6062,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6068,
											"end": 6248,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6068,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6193,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6106,
											"end": 6194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6213,
											"end": 6217,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6203,
											"end": 6218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6237,
											"end": 6241,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6234,
											"end": 6235,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6574,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 6254,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6336,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6329,
											"end": 6333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6337,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6383,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6376,
											"end": 6380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6384,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6403,
											"end": 6421,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6463,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 6451,
											"end": 6457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6523,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6513,
											"end": 6519,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6524,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6490,
											"end": 6508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6525,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6484,
											"end": 6568,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6484,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6484,
											"end": 6568,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6540,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6540,
											"end": 6558,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6540,
											"end": 6558,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6540,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6484,
											"end": 6568,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6484,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6305,
											"end": 6574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6574,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6574,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6580,
											"end": 6760,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6580,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6705,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6625,
											"end": 6626,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6706,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6725,
											"end": 6729,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6722,
											"end": 6723,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6715,
											"end": 6730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6749,
											"end": 6753,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6746,
											"end": 6747,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6754,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 7071,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6766,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6806,
											"end": 6809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6843,
											"end": 6844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6825,
											"end": 6845,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6825,
											"end": 6845,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6825,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6845,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6859,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6877,
											"end": 6878,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6859,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 6859,
											"end": 6879,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6859,
											"end": 6879,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6859,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6854,
											"end": 6879,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6854,
											"end": 6879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6945,
											"end": 7011,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6941,
											"end": 7015,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 6939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6935,
											"end": 7016,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 7039,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 6932,
											"end": 7039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 7039,
											"name": "tag",
											"source": 5,
											"value": "346"
										},
										{
											"begin": 6932,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7063,
											"end": 7064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7049,
											"end": 7065,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7049,
											"end": 7065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 7071,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 7071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 7071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 7071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 7071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7077,
											"end": 7301,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7077,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7217,
											"end": 7251,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7252,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7293,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7281,
											"end": 7283,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7279,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7269,
											"end": 7284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7262,
											"end": 7294,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7077,
											"end": 7301,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7307,
											"end": 7673,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7307,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7449,
											"end": 7452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7470,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7470,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 7470,
											"end": 7537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7470,
											"end": 7537,
											"name": "tag",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 7470,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7546,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7635,
											"end": 7638,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7546,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7546,
											"end": 7639,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7546,
											"end": 7639,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 7546,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7664,
											"end": 7666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7659,
											"end": 7662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7655,
											"end": 7667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7648,
											"end": 7667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7648,
											"end": 7667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7307,
											"end": 7673,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7679,
											"end": 8098,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 7679,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 7885,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7868,
											"end": 7886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7932,
											"end": 7941,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7926,
											"end": 7930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7922,
											"end": 7942,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 7919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7943,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7960,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7960,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 7960,
											"end": 8091,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7960,
											"end": 8091,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 7960,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7952,
											"end": 8091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7952,
											"end": 8091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7679,
											"end": 8098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7679,
											"end": 8098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7679,
											"end": 8098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7679,
											"end": 8098,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8104,
											"end": 8329,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8104,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8244,
											"end": 8278,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8228,
											"end": 8242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8221,
											"end": 8279,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8321,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8308,
											"end": 8310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8300,
											"end": 8306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8329,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8329,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8335,
											"end": 8701,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8335,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8477,
											"end": 8480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8498,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 8562,
											"end": 8564,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 8557,
											"end": 8560,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8498,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8498,
											"end": 8565,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8498,
											"end": 8565,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 8498,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8491,
											"end": 8565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8574,
											"end": 8667,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8574,
											"end": 8667,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 8574,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8692,
											"end": 8694,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8687,
											"end": 8690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8683,
											"end": 8695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8676,
											"end": 8695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8676,
											"end": 8695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8701,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8701,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8701,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8335,
											"end": 8701,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8873,
											"end": 8877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8913,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8896,
											"end": 8914,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8888,
											"end": 8914,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8888,
											"end": 8914,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8954,
											"end": 8958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8950,
											"end": 8970,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8946,
											"end": 8947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8935,
											"end": 8944,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8931,
											"end": 8948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8924,
											"end": 8971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 8988,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 9119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8980,
											"end": 9119,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 9126,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9132,
											"end": 9355,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9132,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9272,
											"end": 9306,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 9268,
											"end": 9269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9249,
											"end": 9307,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9341,
											"end": 9347,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9336,
											"end": 9338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9328,
											"end": 9334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9324,
											"end": 9339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9317,
											"end": 9348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9132,
											"end": 9355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9132,
											"end": 9355,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9361,
											"end": 9727,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 9361,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9503,
											"end": 9506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 9588,
											"end": 9590,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9583,
											"end": 9586,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 9524,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9517,
											"end": 9591,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9517,
											"end": 9591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9600,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 9689,
											"end": 9692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9600,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9600,
											"end": 9693,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9600,
											"end": 9693,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 9600,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9718,
											"end": 9720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9713,
											"end": 9716,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9709,
											"end": 9721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 9721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9702,
											"end": 9721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9361,
											"end": 9727,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9733,
											"end": 10152,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9733,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9899,
											"end": 9903,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9937,
											"end": 9939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9926,
											"end": 9935,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9922,
											"end": 9940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9914,
											"end": 9940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9914,
											"end": 9940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9986,
											"end": 9995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9980,
											"end": 9984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9976,
											"end": 9996,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9957,
											"end": 9974,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9950,
											"end": 9997,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 10140,
											"end": 10144,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10014,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10014,
											"end": 10145,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10014,
											"end": 10145,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 10014,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9733,
											"end": 10152,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9733,
											"end": 10152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9733,
											"end": 10152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9733,
											"end": 10152,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10158,
											"end": 10379,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 10158,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10332,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 10294,
											"end": 10295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10292,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10282,
											"end": 10296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10275,
											"end": 10333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10367,
											"end": 10371,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10362,
											"end": 10364,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10354,
											"end": 10360,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10350,
											"end": 10365,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10343,
											"end": 10372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10158,
											"end": 10379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10158,
											"end": 10379,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10385,
											"end": 10751,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10385,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10527,
											"end": 10530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 10612,
											"end": 10614,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 10607,
											"end": 10610,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 10548,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 10713,
											"end": 10716,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 10624,
											"end": 10717,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10624,
											"end": 10717,
											"name": "tag",
											"source": 5,
											"value": "369"
										},
										{
											"begin": 10624,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10742,
											"end": 10744,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10737,
											"end": 10740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10733,
											"end": 10745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10726,
											"end": 10745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10726,
											"end": 10745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10385,
											"end": 10751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10385,
											"end": 10751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10385,
											"end": 10751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10385,
											"end": 10751,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10757,
											"end": 11176,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10757,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10923,
											"end": 10927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10961,
											"end": 10963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10950,
											"end": 10959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10946,
											"end": 10964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10938,
											"end": 10964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10938,
											"end": 10964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11010,
											"end": 11019,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11004,
											"end": 11008,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11000,
											"end": 11020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 10997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10985,
											"end": 10994,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10981,
											"end": 10998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10974,
											"end": 11021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 11164,
											"end": 11168,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11038,
											"end": 11169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 11038,
											"end": 11169,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11038,
											"end": 11169,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 11038,
											"end": 11169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10757,
											"end": 11176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10757,
											"end": 11176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10757,
											"end": 11176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10757,
											"end": 11176,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11182,
											"end": 11361,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 11182,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11322,
											"end": 11353,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 11318,
											"end": 11319,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11310,
											"end": 11316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11306,
											"end": 11320,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11299,
											"end": 11354,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11182,
											"end": 11361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11182,
											"end": 11361,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11367,
											"end": 11733,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 11367,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11530,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 11594,
											"end": 11596,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 11589,
											"end": 11592,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11530,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 11530,
											"end": 11597,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11530,
											"end": 11597,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 11530,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 11597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11523,
											"end": 11597,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11606,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 11695,
											"end": 11698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11606,
											"end": 11699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 11606,
											"end": 11699,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11606,
											"end": 11699,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 11606,
											"end": 11699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11724,
											"end": 11726,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11719,
											"end": 11722,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11715,
											"end": 11727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11708,
											"end": 11727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11708,
											"end": 11727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 11733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 11733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 11733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11367,
											"end": 11733,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11739,
											"end": 12158,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 11739,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11905,
											"end": 11909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11943,
											"end": 11945,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11932,
											"end": 11941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11928,
											"end": 11946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11920,
											"end": 11946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11920,
											"end": 11946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11992,
											"end": 12001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11982,
											"end": 12002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11978,
											"end": 11979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11967,
											"end": 11976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11963,
											"end": 11980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11956,
											"end": 12003,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12020,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 12146,
											"end": 12150,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12020,
											"end": 12151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 12020,
											"end": 12151,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12020,
											"end": 12151,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 12020,
											"end": 12151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12012,
											"end": 12151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12012,
											"end": 12151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 12158,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 12158,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 12158,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11739,
											"end": 12158,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12164,
											"end": 12388,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 12164,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12304,
											"end": 12338,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 12300,
											"end": 12301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12292,
											"end": 12298,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12288,
											"end": 12302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12281,
											"end": 12339,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12373,
											"end": 12380,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12368,
											"end": 12370,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12356,
											"end": 12371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12349,
											"end": 12381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12164,
											"end": 12388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12164,
											"end": 12388,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12394,
											"end": 12760,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 12394,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12536,
											"end": 12539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 12621,
											"end": 12623,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 12616,
											"end": 12619,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12557,
											"end": 12624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 12557,
											"end": 12624,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12557,
											"end": 12624,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 12557,
											"end": 12624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12550,
											"end": 12624,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12633,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 12722,
											"end": 12725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12633,
											"end": 12726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 12633,
											"end": 12726,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12633,
											"end": 12726,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 12633,
											"end": 12726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12751,
											"end": 12753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12746,
											"end": 12749,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12742,
											"end": 12754,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12735,
											"end": 12754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12735,
											"end": 12754,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12394,
											"end": 12760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12394,
											"end": 12760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12394,
											"end": 12760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12394,
											"end": 12760,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12766,
											"end": 13185,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 12766,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12932,
											"end": 12936,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12970,
											"end": 12972,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12959,
											"end": 12968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12955,
											"end": 12973,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12947,
											"end": 12973,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12947,
											"end": 12973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13019,
											"end": 13028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13013,
											"end": 13017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13009,
											"end": 13029,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12994,
											"end": 13003,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12990,
											"end": 13007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12983,
											"end": 13030,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13047,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 13173,
											"end": 13177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13047,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 13047,
											"end": 13178,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13047,
											"end": 13178,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 13047,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13039,
											"end": 13178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13039,
											"end": 13178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 13185,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 13185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 13185,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12766,
											"end": 13185,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13191,
											"end": 13413,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 13191,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13331,
											"end": 13365,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13327,
											"end": 13328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13319,
											"end": 13325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13315,
											"end": 13329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13308,
											"end": 13366,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13400,
											"end": 13405,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13395,
											"end": 13397,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13387,
											"end": 13393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13383,
											"end": 13398,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13376,
											"end": 13406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13191,
											"end": 13413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13191,
											"end": 13413,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13419,
											"end": 13785,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 13419,
											"end": 13785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13561,
											"end": 13564,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13582,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 13646,
											"end": 13648,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 13641,
											"end": 13644,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13582,
											"end": 13649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 13582,
											"end": 13649,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13582,
											"end": 13649,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 13582,
											"end": 13649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13575,
											"end": 13649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13575,
											"end": 13649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13658,
											"end": 13751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 13747,
											"end": 13750,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13658,
											"end": 13751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 13658,
											"end": 13751,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13658,
											"end": 13751,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 13658,
											"end": 13751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13776,
											"end": 13778,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13767,
											"end": 13779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13760,
											"end": 13779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13760,
											"end": 13779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13419,
											"end": 13785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13419,
											"end": 13785,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13419,
											"end": 13785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13419,
											"end": 13785,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13791,
											"end": 14210,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 13791,
											"end": 14210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13957,
											"end": 13961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 13997,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13984,
											"end": 13993,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13972,
											"end": 13998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13972,
											"end": 13998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14038,
											"end": 14042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14030,
											"end": 14031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14019,
											"end": 14028,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14015,
											"end": 14032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14008,
											"end": 14055,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14072,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 14198,
											"end": 14202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14072,
											"end": 14203,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 14072,
											"end": 14203,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14072,
											"end": 14203,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 14072,
											"end": 14203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14064,
											"end": 14203,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14064,
											"end": 14203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13791,
											"end": 14210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13791,
											"end": 14210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13791,
											"end": 14210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13791,
											"end": 14210,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14216,
											"end": 14441,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 14216,
											"end": 14441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14356,
											"end": 14390,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 14352,
											"end": 14353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14344,
											"end": 14350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14340,
											"end": 14354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14333,
											"end": 14391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14425,
											"end": 14433,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14420,
											"end": 14422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14412,
											"end": 14418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14408,
											"end": 14423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14401,
											"end": 14434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14216,
											"end": 14441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14216,
											"end": 14441,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14447,
											"end": 14813,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 14447,
											"end": 14813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14589,
											"end": 14592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14610,
											"end": 14677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 14674,
											"end": 14676,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 14669,
											"end": 14672,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14610,
											"end": 14677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 14610,
											"end": 14677,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14610,
											"end": 14677,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 14610,
											"end": 14677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14677,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 14775,
											"end": 14778,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14686,
											"end": 14779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 14686,
											"end": 14779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14686,
											"end": 14779,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 14686,
											"end": 14779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14804,
											"end": 14806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14799,
											"end": 14802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14795,
											"end": 14807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14788,
											"end": 14807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14788,
											"end": 14807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14447,
											"end": 14813,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14447,
											"end": 14813,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14447,
											"end": 14813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14447,
											"end": 14813,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14819,
											"end": 15238,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 14819,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14985,
											"end": 14989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15023,
											"end": 15025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15012,
											"end": 15021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15008,
											"end": 15026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15000,
											"end": 15026,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15000,
											"end": 15026,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15072,
											"end": 15081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15062,
											"end": 15082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15058,
											"end": 15059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15047,
											"end": 15056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15043,
											"end": 15060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15036,
											"end": 15083,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15100,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 15226,
											"end": 15230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15100,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 15100,
											"end": 15231,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15100,
											"end": 15231,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 15100,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15231,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15092,
											"end": 15231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14819,
											"end": 15238,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14819,
											"end": 15238,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14819,
											"end": 15238,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14819,
											"end": 15238,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15244,
											"end": 15426,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 15244,
											"end": 15426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15384,
											"end": 15418,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15380,
											"end": 15381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15372,
											"end": 15378,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15368,
											"end": 15382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15361,
											"end": 15419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15244,
											"end": 15426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15244,
											"end": 15426,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15432,
											"end": 15798,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 15432,
											"end": 15798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15574,
											"end": 15577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15595,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 15659,
											"end": 15661,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15654,
											"end": 15657,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15595,
											"end": 15662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 15595,
											"end": 15662,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15595,
											"end": 15662,
											"name": "tag",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 15595,
											"end": 15662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15588,
											"end": 15662,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15588,
											"end": 15662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15671,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 15760,
											"end": 15763,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15671,
											"end": 15764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 15671,
											"end": 15764,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15671,
											"end": 15764,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 15671,
											"end": 15764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15789,
											"end": 15791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15784,
											"end": 15787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15780,
											"end": 15792,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15773,
											"end": 15792,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15773,
											"end": 15792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15432,
											"end": 15798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15432,
											"end": 15798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15432,
											"end": 15798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15432,
											"end": 15798,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15804,
											"end": 16223,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 15804,
											"end": 16223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15970,
											"end": 15974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16008,
											"end": 16010,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15997,
											"end": 16006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15993,
											"end": 16011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15985,
											"end": 16011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15985,
											"end": 16011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16057,
											"end": 16066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16051,
											"end": 16055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16047,
											"end": 16067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16043,
											"end": 16044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16032,
											"end": 16041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16028,
											"end": 16045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16021,
											"end": 16068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16085,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 16211,
											"end": 16215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16085,
											"end": 16216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 16085,
											"end": 16216,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16085,
											"end": 16216,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 16085,
											"end": 16216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16077,
											"end": 16216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16077,
											"end": 16216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15804,
											"end": 16223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15804,
											"end": 16223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15804,
											"end": 16223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15804,
											"end": 16223,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16229,
											"end": 16410,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 16229,
											"end": 16410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16369,
											"end": 16402,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16365,
											"end": 16366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16357,
											"end": 16363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16353,
											"end": 16367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16346,
											"end": 16403,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16229,
											"end": 16410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16229,
											"end": 16410,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16416,
											"end": 16782,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 16416,
											"end": 16782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16558,
											"end": 16561,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16579,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 16643,
											"end": 16645,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 16638,
											"end": 16641,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16579,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 16579,
											"end": 16646,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16579,
											"end": 16646,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 16579,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16572,
											"end": 16646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16572,
											"end": 16646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 16744,
											"end": 16747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 16655,
											"end": 16748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16773,
											"end": 16775,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16768,
											"end": 16771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16764,
											"end": 16776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16757,
											"end": 16776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16757,
											"end": 16776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16416,
											"end": 16782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16416,
											"end": 16782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16416,
											"end": 16782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16416,
											"end": 16782,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16788,
											"end": 17207,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 16788,
											"end": 17207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16954,
											"end": 16958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16992,
											"end": 16994,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16981,
											"end": 16990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16977,
											"end": 16995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16969,
											"end": 16995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16969,
											"end": 16995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17041,
											"end": 17050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17035,
											"end": 17039,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17031,
											"end": 17051,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17027,
											"end": 17028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17016,
											"end": 17025,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17012,
											"end": 17029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17005,
											"end": 17052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17069,
											"end": 17200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 17195,
											"end": 17199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17069,
											"end": 17200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 17069,
											"end": 17200,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17069,
											"end": 17200,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 17069,
											"end": 17200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17061,
											"end": 17200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17061,
											"end": 17200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16788,
											"end": 17207,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16788,
											"end": 17207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16788,
											"end": 17207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16788,
											"end": 17207,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17213,
											"end": 17433,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 17213,
											"end": 17433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17353,
											"end": 17387,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 17349,
											"end": 17350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17341,
											"end": 17347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17337,
											"end": 17351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17330,
											"end": 17388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17422,
											"end": 17425,
											"name": "PUSH",
											"source": 5,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17417,
											"end": 17419,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17409,
											"end": 17415,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17405,
											"end": 17420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17398,
											"end": 17426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17213,
											"end": 17433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17213,
											"end": 17433,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17439,
											"end": 17805,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 17439,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17581,
											"end": 17584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17602,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 17666,
											"end": 17668,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 17661,
											"end": 17664,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17602,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 17602,
											"end": 17669,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17602,
											"end": 17669,
											"name": "tag",
											"source": 5,
											"value": "410"
										},
										{
											"begin": 17602,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17595,
											"end": 17669,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17595,
											"end": 17669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17678,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 17767,
											"end": 17770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17678,
											"end": 17771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 17678,
											"end": 17771,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17678,
											"end": 17771,
											"name": "tag",
											"source": 5,
											"value": "411"
										},
										{
											"begin": 17678,
											"end": 17771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17796,
											"end": 17798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17791,
											"end": 17794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17787,
											"end": 17799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17780,
											"end": 17799,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17780,
											"end": 17799,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17439,
											"end": 17805,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17439,
											"end": 17805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17439,
											"end": 17805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17439,
											"end": 17805,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17811,
											"end": 18230,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 17811,
											"end": 18230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17977,
											"end": 17981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18015,
											"end": 18017,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18004,
											"end": 18013,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18000,
											"end": 18018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17992,
											"end": 18018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17992,
											"end": 18018,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18064,
											"end": 18073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18058,
											"end": 18062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18054,
											"end": 18074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 18050,
											"end": 18051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18039,
											"end": 18048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18035,
											"end": 18052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18028,
											"end": 18075,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18092,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 18218,
											"end": 18222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18092,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 18092,
											"end": 18223,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18092,
											"end": 18223,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 18092,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18084,
											"end": 18223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18084,
											"end": 18223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17811,
											"end": 18230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17811,
											"end": 18230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17811,
											"end": 18230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17811,
											"end": 18230,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18236,
											"end": 18457,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 18236,
											"end": 18457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18376,
											"end": 18410,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 18372,
											"end": 18373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18364,
											"end": 18370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18360,
											"end": 18374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18353,
											"end": 18411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18445,
											"end": 18449,
											"name": "PUSH",
											"source": 5,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18440,
											"end": 18442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18432,
											"end": 18438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18428,
											"end": 18443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18421,
											"end": 18450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18236,
											"end": 18457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18236,
											"end": 18457,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18463,
											"end": 18829,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 18463,
											"end": 18829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18605,
											"end": 18608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 18690,
											"end": 18692,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 18685,
											"end": 18688,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 18626,
											"end": 18693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18619,
											"end": 18693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18619,
											"end": 18693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18702,
											"end": 18795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 18791,
											"end": 18794,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18702,
											"end": 18795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 18702,
											"end": 18795,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18702,
											"end": 18795,
											"name": "tag",
											"source": 5,
											"value": "417"
										},
										{
											"begin": 18702,
											"end": 18795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18820,
											"end": 18822,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 18815,
											"end": 18818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18811,
											"end": 18823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18804,
											"end": 18823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18804,
											"end": 18823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18463,
											"end": 18829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18463,
											"end": 18829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18463,
											"end": 18829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18463,
											"end": 18829,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18835,
											"end": 19254,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 18835,
											"end": 19254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19001,
											"end": 19005,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19039,
											"end": 19041,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19028,
											"end": 19037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19024,
											"end": 19042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19016,
											"end": 19042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19016,
											"end": 19042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19088,
											"end": 19097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19082,
											"end": 19086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19078,
											"end": 19098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 19074,
											"end": 19075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19063,
											"end": 19072,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 19059,
											"end": 19076,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 19052,
											"end": 19099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19116,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 19242,
											"end": 19246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19116,
											"end": 19247,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 19116,
											"end": 19247,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19116,
											"end": 19247,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 19116,
											"end": 19247,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19108,
											"end": 19247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19108,
											"end": 19247,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18835,
											"end": 19254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 18835,
											"end": 19254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18835,
											"end": 19254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18835,
											"end": 19254,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 19260,
											"end": 19451,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 19260,
											"end": 19451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19300,
											"end": 19304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19320,
											"end": 19340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 19338,
											"end": 19339,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19320,
											"end": 19340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 19320,
											"end": 19340,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19320,
											"end": 19340,
											"name": "tag",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 19320,
											"end": 19340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19315,
											"end": 19340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19315,
											"end": 19340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 19372,
											"end": 19373,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "tag",
											"source": 5,
											"value": "422"
										},
										{
											"begin": 19354,
											"end": 19374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19349,
											"end": 19374,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 19349,
											"end": 19374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19393,
											"end": 19394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19390,
											"end": 19391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19387,
											"end": 19395,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 19384,
											"end": 19418,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 19384,
											"end": 19418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 19384,
											"end": 19418,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 19398,
											"end": 19416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 19398,
											"end": 19416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 19398,
											"end": 19416,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 19398,
											"end": 19416,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 19398,
											"end": 19416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19384,
											"end": 19418,
											"name": "tag",
											"source": 5,
											"value": "423"
										},
										{
											"begin": 19384,
											"end": 19418,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 19443,
											"end": 19444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19440,
											"end": 19441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19436,
											"end": 19445,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 19428,
											"end": 19445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19428,
											"end": 19445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19451,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19451,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19451,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 19260,
											"end": 19451,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_isCreate()": "db68e9c0",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_isCreate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is a standard template for an erc20 token More important is the mint method\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"midas-joe-v2/src/libraries/VToken.sol\":\"VTOKEN\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"midas-joe-v2/src/libraries/VToken.sol\":{\"keccak256\":\"0xe5203aa44497d89ed39573f3c549d0229b2193432f509394fbf307e3b47c77de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d5e725940b58326c280231f81d6061c15e02bb2c2a0de180708e4c56fd23ca2\",\"dweb:/ipfs/QmemrAZxymaAa3Y61fhi256Z621zP1HVmT8yHZaAMj2qUR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "midas-joe-v2/src/libraries/VToken.sol:VTOKEN",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 256,
								"contract": "midas-joe-v2/src/libraries/VToken.sol:VTOKEN",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 262,
								"contract": "midas-joe-v2/src/libraries/VToken.sol:VTOKEN",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 264,
								"contract": "midas-joe-v2/src/libraries/VToken.sol:VTOKEN",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "midas-joe-v2/src/libraries/VToken.sol:VTOKEN",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 268,
								"contract": "midas-joe-v2/src/libraries/VToken.sol:VTOKEN",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 270,
								"contract": "midas-joe-v2/src/libraries/VToken.sol:VTOKEN",
								"label": "_isCreate",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This is a standard template for an erc20 token More important is the mint method",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							237
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 238,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								237
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 191,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 195,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "305:6:2"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 194,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 215,
							"linearizedBaseContracts": [
								215,
								190
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 199,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 215,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 215,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 211,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 215,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							237
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 218,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 223,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 222,
												"id": 225,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 237,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 232,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 231,
												"id": 234,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 237,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 238,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"midas-joe-v2/src/libraries/VToken.sol": {
				"ast": {
					"absolutePath": "midas-joe-v2/src/libraries/VToken.sol",
					"exportedSymbols": {
						"Context": [
							237
						],
						"IERC20": [
							190
						],
						"IERC20Metadata": [
							215
						],
						"Ownable": [
							112
						],
						"VTOKEN": [
							862
						]
					},
					"id": 863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 191,
							"src": "129:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 216,
							"src": "186:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 238,
							"src": "262:51:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 113,
							"src": "314:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 245,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "476:7:4"
									},
									"id": 246,
									"nodeType": "InheritanceSpecifier",
									"src": "476:7:4"
								},
								{
									"baseName": {
										"id": 247,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "485:6:4"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "485:6:4"
								},
								{
									"baseName": {
										"id": 249,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 215,
										"src": "493:14:4"
									},
									"id": 250,
									"nodeType": "InheritanceSpecifier",
									"src": "493:14:4"
								},
								{
									"baseName": {
										"id": 251,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "509:7:4"
									},
									"id": 252,
									"nodeType": "InheritanceSpecifier",
									"src": "509:7:4"
								}
							],
							"canonicalName": "VTOKEN",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 244,
								"nodeType": "StructuredDocumentation",
								"src": "368:88:4",
								"text": "This is a standard template for an erc20 token\nMore important is the mint method"
							},
							"fullyImplemented": true,
							"id": 862,
							"linearizedBaseContracts": [
								862,
								112,
								215,
								190,
								237
							],
							"name": "VTOKEN",
							"nameLocation": "466:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 256,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "559:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "523:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 255,
										"keyType": {
											"id": 253,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "531:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "523:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 254,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "542:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 262,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "632:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "576:67:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 261,
										"keyType": {
											"id": 257,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "584:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "576:47:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 260,
											"keyType": {
												"id": 258,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "603:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "595:27:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 259,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "614:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 264,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "666:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "650:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "699:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "684:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 265,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "684:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 268,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "725:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "710:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 267,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "710:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "db68e9c0",
									"id": 270,
									"mutability": "mutable",
									"name": "_isCreate",
									"nameLocation": "751:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 862,
									"src": "738:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 269,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "738:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "1126:83:4",
										"statements": [
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1136:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 279,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "1144:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1136:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1136:13:4"
											},
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 282,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "1159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 283,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "1169:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1159:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "1159:17:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 286,
														"name": "_isCreate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1186:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1198:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1186:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "1186:16:4"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "767:298:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 291,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1096:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1082:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1082:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1117:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "1103:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1103:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:44:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:4"
									},
									"scope": 862,
									"src": "1070:139:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1286:39:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1302:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "1311:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 300,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "1296:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "1296:22:4"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 297,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1276:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1276:9:4"
										}
									],
									"name": "mint",
									"nameLocation": "1231:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1244:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1236:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1261:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1253:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1253:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1235:33:4"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:0:4"
									},
									"scope": 862,
									"src": "1222:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "1395:39:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1411:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "1420:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "1405:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1405:22:4"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 313,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 312,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1385:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1385:9:4"
										}
									],
									"name": "burn",
									"nameLocation": "1340:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1353:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1345:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1370:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1362:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1362:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:33:4"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:0:4"
									},
									"scope": 862,
									"src": "1331:103:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										202
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1568:29:4",
										"statements": [
											{
												"expression": {
													"id": 328,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "1585:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 327,
												"id": 329,
												"nodeType": "Return",
												"src": "1578:12:4"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "1440:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1508:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1535:8:4"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:2:4"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1553:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1553:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1552:15:4"
									},
									"scope": 862,
									"src": "1499:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										208
									],
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1781:31:4",
										"statements": [
											{
												"expression": {
													"id": 338,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 268,
													"src": "1798:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "1791:14:4"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "1603:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1719:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 334,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1748:8:4"
									},
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:2:4"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1766:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1766:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1765:15:4"
									},
									"scope": 862,
									"src": "1710:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										214
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2501:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2518:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 347,
												"id": 349,
												"nodeType": "Return",
												"src": "2511:9:4"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1818:613:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2445:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 344,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2476:8:4"
									},
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2453:2:4"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2494:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 345,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2494:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:7:4"
									},
									"scope": 862,
									"src": "2436:91:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2657:36:4",
										"statements": [
											{
												"expression": {
													"id": 358,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "2674:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 357,
												"id": 359,
												"nodeType": "Return",
												"src": "2667:19:4"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "2533:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2596:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 354,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2630:8:4"
									},
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:2:4"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2648:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:9:4"
									},
									"scope": 862,
									"src": "2587:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2834:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 370,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "2851:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 372,
													"indexExpression": {
														"id": 371,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2861:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2851:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 369,
												"id": 373,
												"nodeType": "Return",
												"src": "2844:25:4"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2699:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2760:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2807:8:4"
									},
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2778:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2770:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:17:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2825:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:9:4"
									},
									"scope": 862,
									"src": "2751:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										157
									],
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "3157:104:4",
										"statements": [
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3175:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3167:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 386,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3167:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 388,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3183:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3183:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3167:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "3215:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "3226:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "3205:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3205:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "3205:28:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3250:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 385,
												"id": 398,
												"nodeType": "Return",
												"src": "3243:11:4"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2882:185:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3081:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 382,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:4"
									},
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3098:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3090:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3090:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3110:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3102:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3089:28:4"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3151:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3151:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:6:4"
									},
									"scope": 862,
									"src": "3072:189:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										167
									],
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3417:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 411,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "3434:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 413,
														"indexExpression": {
															"id": 412,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3446:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3434:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 415,
													"indexExpression": {
														"id": 414,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "3453:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3434:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 410,
												"id": 416,
												"nodeType": "Return",
												"src": "3427:34:4"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "3267:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3328:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 407,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3390:8:4"
									},
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3346:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3338:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3338:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3361:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3353:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3337:32:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3408:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3407:9:4"
									},
									"scope": 862,
									"src": "3319:149:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										177
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "3865:108:4",
										"statements": [
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3883:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 442,
														"src": "3875:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 429,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3875:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 431,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3891:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3875:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 435,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3922:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3929:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3938:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 434,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3913:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3913:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "3913:32:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3962:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 428,
												"id": 441,
												"nodeType": "Return",
												"src": "3955:11:4"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "3474:297:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3785:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 425,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3841:8:4"
									},
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3801:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3793:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3818:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3810:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3810:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:33:4"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "3859:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3859:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3858:6:4"
									},
									"scope": 862,
									"src": "3776:197:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										189
									],
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "4668:153:4",
										"statements": [
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4686:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "4678:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 456,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4678:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "4696:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4696:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4678:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4734:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4740:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4749:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "4718:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "4718:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4776:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4782:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4786:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "4766:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4766:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4766:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4810:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 455,
												"id": 474,
												"nodeType": "Return",
												"src": "4803:11:4"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "3979:551:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4544:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 452,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4644:8:4"
									},
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4574:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4566:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4596:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4588:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4616:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4608:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4608:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4556:72:4"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "4662:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4662:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:6:4"
									},
									"scope": 862,
									"src": "4535:286:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "5310:140:4",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5328:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "5320:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 486,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5320:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 490,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 488,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "5336:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5336:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5320:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 492,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5367:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "5374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 487,
																		"src": "5393:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 496,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "5400:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 494,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "5383:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5383:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 498,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "5411:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5383:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 491,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "5358:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5358:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "5358:64:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5439:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 485,
												"id": 503,
												"nodeType": "Return",
												"src": "5432:11:4"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "4827:384:4",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5225:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5251:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5243:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5268:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5260:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5260:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5242:37:4"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5304:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5304:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5303:6:4"
									},
									"scope": 862,
									"src": "5216:234:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "6036:328:4",
										"statements": [
											{
												"assignments": [
													516
												],
												"declarations": [
													{
														"constant": false,
														"id": 516,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6054:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "6046:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 515,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6046:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 517,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "6062:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6062:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6046:28:4"
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6092:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "6084:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6084:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 526,
												"initialValue": {
													"arguments": [
														{
															"id": 523,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "6121:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6128:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 522,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "6111:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6111:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6084:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "6154:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 529,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "6174:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6154:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6191:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6146:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6146:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "6146:85:4"
											},
											{
												"id": 542,
												"nodeType": "UncheckedBlock",
												"src": "6241:95:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "6274:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 536,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "6281:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 537,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "6290:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 538,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "6309:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6290:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 534,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "6265:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6265:60:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 541,
														"nodeType": "ExpressionStatement",
														"src": "6265:60:4"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6353:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 514,
												"id": 544,
												"nodeType": "Return",
												"src": "6346:11:4"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "5456:476:4",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5946:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5972:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "5964:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5989:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "5981:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5963:42:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6030:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6030:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6029:6:4"
									},
									"scope": 862,
									"src": "5937:427:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "6926:543:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "6944:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6960:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6952:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6952:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6952:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6944:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6964:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6936:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "6936:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "7022:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7036:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7028:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7028:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7028:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7022:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7040:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7014:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7014:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "7014:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 577,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7110:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7116:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 579,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "7089:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7089:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "7089:38:4"
											},
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7146:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "7138:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7138:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 587,
												"initialValue": {
													"baseExpression": {
														"id": 584,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "7160:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 586,
													"indexExpression": {
														"id": 585,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "7170:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7160:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7138:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 589,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "7193:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 590,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "7208:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7193:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7216:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7185:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7185:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "7185:72:4"
											},
											{
												"id": 603,
												"nodeType": "UncheckedBlock",
												"src": "7267:73:4",
												"statements": [
													{
														"expression": {
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 595,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "7291:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 597,
																"indexExpression": {
																	"id": 596,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "7301:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7291:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 598,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "7309:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 599,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "7323:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7309:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7291:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 602,
														"nodeType": "ExpressionStatement",
														"src": "7291:38:4"
													}
												]
											},
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 604,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "7349:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 606,
														"indexExpression": {
															"id": 605,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7359:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7349:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 607,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "7366:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "7349:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 611,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7397:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7407:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 610,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "7388:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7388:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "EmitStatement",
												"src": "7383:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "7445:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7451:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7455:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 616,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "7425:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "7425:37:4"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "6370:443:4",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6827:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6854:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6846:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6846:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6876:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6868:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6868:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6896:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6888:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6836:72:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6926:0:4"
									},
									"scope": 862,
									"src": "6818:651:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "7810:324:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 632,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "7828:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7847:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7839:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 633,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7839:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7839:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7828:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7851:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 631,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7820:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7820:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "7820:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7917:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 642,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7917:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7917:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7929:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "7938:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 641,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "7896:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7896:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "7896:49:4"
											},
											{
												"expression": {
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 650,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "7956:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 651,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "7972:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7956:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "7956:22:4"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 654,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "7988:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 656,
														"indexExpression": {
															"id": 655,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7998:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7988:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 657,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "8010:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7988:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "7988:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8048:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8040:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8040:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8040:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8052:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "8061:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "8031:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8031:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "EmitStatement",
												"src": "8026:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 670,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8111:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "8120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 669,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "8079:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8079:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "8079:48:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "7475:265:4",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7754:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7768:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7760:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7785:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7777:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7759:33:4"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7810:0:4"
									},
									"scope": 862,
									"src": "7745:389:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "8519:511:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 688,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "8537:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8556:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8548:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 689,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8548:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8548:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8537:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8560:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8529:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8529:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "8529:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 698,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "8628:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8645:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8637:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 699,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8637:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8637:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "8649:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 697,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "8607:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8607:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "8607:49:4"
											},
											{
												"assignments": [
													707
												],
												"declarations": [
													{
														"constant": false,
														"id": 707,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "8675:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 750,
														"src": "8667:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 706,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8667:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"baseExpression": {
														"id": 708,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "8692:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 710,
													"indexExpression": {
														"id": 709,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "8702:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8692:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8667:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 713,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "8728:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 714,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "8746:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8728:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8754:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8720:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8720:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "8720:71:4"
											},
											{
												"id": 727,
												"nodeType": "UncheckedBlock",
												"src": "8801:79:4",
												"statements": [
													{
														"expression": {
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 719,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "8825:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"id": 720,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "8835:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8825:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 722,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "8846:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 723,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "8863:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8846:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8825:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 726,
														"nodeType": "ExpressionStatement",
														"src": "8825:44:4"
													}
												]
											},
											{
												"expression": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 728,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "8889:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 729,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "8905:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8889:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "8889:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 733,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "8936:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8953:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8945:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 734,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8945:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8945:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "8957:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 732,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "8927:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8927:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "EmitStatement",
												"src": "8922:42:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "8995:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9012:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9004:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 743,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9004:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9004:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "9016:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "8975:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8975:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "8975:48:4"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "8140:309:4",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8463:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8477:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "8469:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8494:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "8486:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8486:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8468:33:4"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8519:0:4"
									},
									"scope": 862,
									"src": "8454:576:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "9566:257:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 762,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "9584:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9601:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9593:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 763,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9593:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9593:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9584:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9605:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9576:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9576:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "9576:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 772,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "9662:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9681:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9673:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 773,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9673:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9673:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9662:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9685:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9654:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9654:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "9654:68:4"
											},
											{
												"expression": {
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 781,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "9733:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 784,
															"indexExpression": {
																"id": 782,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "9745:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9733:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 785,
														"indexExpression": {
															"id": 783,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "9752:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9733:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 786,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9763:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9733:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "9733:36:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 790,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "9793:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "9800:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "9809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 789,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "9784:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9784:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "EmitStatement",
												"src": "9779:37:4"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "9036:412:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9462:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9488:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9480:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9480:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9511:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9503:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9503:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9536:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "9528:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9470:78:4"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9566:0:4"
									},
									"scope": 862,
									"src": "9453:370:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "10224:321:4",
										"statements": [
											{
												"assignments": [
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10242:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 838,
														"src": "10234:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 806,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10234:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"id": 809,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "10271:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "10278:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 808,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "10261:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10261:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10234:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "10300:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10325:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10325:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 814,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10320:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10320:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10320:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10300:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "10296:243:4",
												"trueBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "10339:200:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 821,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 807,
																			"src": "10361:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 822,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 803,
																			"src": "10381:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10361:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10389:31:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 820,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10353:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10353:68:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "10353:68:4"
														},
														{
															"id": 835,
															"nodeType": "UncheckedBlock",
															"src": "10435:94:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 828,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "10472:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 829,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "10479:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 830,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 807,
																					"src": "10488:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 831,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "10507:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10488:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 827,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 796,
																			"src": "10463:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10463:51:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 834,
																	"nodeType": "ExpressionStatement",
																	"src": "10463:51:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "9829:270:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10113:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10146:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "10138:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10138:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "10161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10161:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10194:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "10186:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10186:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10128:78:4"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10224:0:4"
									},
									"scope": 862,
									"src": "10104:441:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "11248:2:4",
										"statements": []
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "10551:573:4",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11138:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "11168:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11168:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11198:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "11190:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11190:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11218:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "11210:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11158:72:4"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11248:0:4"
									},
									"scope": 862,
									"src": "11129:121:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "11956:2:4",
										"statements": []
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "11256:577:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "11847:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11884:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "11876:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11906:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "11898:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11926:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "11918:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11918:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11866:72:4"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11956:0:4"
									},
									"scope": 862,
									"src": "11838:120:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 863,
							"src": "457:11503:4",
							"usedErrors": []
						}
					],
					"src": "105:11855:4"
				},
				"id": 4
			}
		}
	}
}
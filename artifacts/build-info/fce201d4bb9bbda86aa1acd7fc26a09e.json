{
	"id": "fce201d4bb9bbda86aa1acd7fc26a09e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Midas/joe-v2-main/src/LBFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./LBErrors.sol\";\nimport \"./libraries/BinHelper.sol\";\nimport \"./libraries/Constants.sol\";\nimport \"./libraries/Decoder.sol\";\nimport \"./libraries/PendingOwnable.sol\";\nimport \"./libraries/SafeCast.sol\";\nimport \"./interfaces/ILBFactory.sol\";\n\n/// @title Liquidity Book Factory\n/// @author Trader Joe\n/// @notice Contract used to deploy and register new LBPairs.\n/// Enables setting fee parameters, flashloan fees and LBPair implementation.\n/// Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs.\ncontract LBFactory is PendingOwnable, ILBFactory {\n    using SafeCast for uint256;\n    using Decoder for bytes32;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    uint256 public constant override MAX_FEE = 0.1e18; // 10%\n\n    address public override LBPairImplementation;\n\n    address public override feeRecipient;\n\n    /// @notice Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)\n    bool public override creationUnlocked;\n\n    uint256 public override flashLoanFee;\n\n    ILBPair[] public override allLBPairs;\n\n    /// @dev Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be\n    /// in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens\n    mapping(IERC20 => mapping(IERC20 => LBPairInformation)) private _LBPairsInfo;\n\n    /// @dev Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set\n    /// The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas\n    bytes32 private _availablePresets;\n\n    // The parameters presets\n    mapping(uint256 => bytes32) private _presets;\n\n    EnumerableSet.AddressSet private _quoteAssetWhitelist;\n\n\n    /// @notice Constructor\n    /// @param _feeRecipient The address of the fee recipient\n    constructor(address _feeRecipient) {\n        _setFeeRecipient(_feeRecipient);\n    }\n\n    /// @notice View function to return the number of LBPairs created\n    /// @return The number of LBPair\n    function getNumberOfLBPairs() external view override returns (uint256) {\n        return allLBPairs.length;\n    }\n\n    /// @notice View function to return the number of quote assets whitelisted\n    /// @return The number of quote assets\n    function getNumberOfQuoteAssets() external view override returns (uint256) {\n        return _quoteAssetWhitelist.length();\n    }\n\n    /// @notice View function to return the quote asset whitelisted at index `index`\n    /// @param _index The index\n    /// @return The address of the _quoteAsset at index `index`\n    function getQuoteAsset(uint256 _index) external view override returns (IERC20) {\n        return IERC20(_quoteAssetWhitelist.at(_index));\n    }\n\n    /// @notice View function to return whether a token is a quotedAsset (true) or not (false)\n    /// @param _token The address of the asset\n    /// @return Whether the token is a quote asset or not\n    function isQuoteAsset(IERC20 _token) external view override returns (bool) {\n        return _quoteAssetWhitelist.contains(address(_token));\n    }\n\n    /// @notice Returns the LBPairInformation if it exists,\n    /// if not, then the address 0 is returned. The order doesn't matter\n    /// @param _tokenA The address of the first token of the pair\n    /// @param _tokenB The address of the second token of the pair\n    /// @return The LBPairInformation\n    function getLBPairInformation(\n        IERC20 _tokenA,\n        IERC20 _tokenB\n    ) external view override returns (LBPairInformation memory) {\n        return _getLBPairInformation(_tokenA, _tokenB);\n    }\n\n    /// @notice Set the LBPair implementation address\n    /// @dev Needs to be called by the owner\n    /// @param _LBPairImplementation The address of the implementation\n    function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {\n        if (ILBPair(_LBPairImplementation).factory() != this)\n            revert LBFactory__LBPairSafetyCheckFailed(_LBPairImplementation);\n\n        address _oldLBPairImplementation = LBPairImplementation;\n        if (_oldLBPairImplementation == _LBPairImplementation)\n            revert LBFactory__SameImplementation(_LBPairImplementation);\n\n        LBPairImplementation = _LBPairImplementation;\n\n        emit LBPairImplementationSet(_oldLBPairImplementation, _LBPairImplementation);\n    }\n\n    /// @notice Create a liquidity bin LBPair for _tokenX and _tokenY\n    /// @param _tokenX The address of the first token\n    /// @param _tokenY The address of the second token\n    /// @param _activeId The active id of the pair\n    /// @return _LBPair The address of the newly created LBPair\n    function createLBPair(\n        IERC20 _tokenX,\n        IERC20 _tokenY,\n        uint24 _activeId,\n        bool _vtokenFactional\n    ) external override returns (ILBPair _LBPair) {\n        address _owner = owner();\n        if (!creationUnlocked && msg.sender != _owner) revert LBFactory__FunctionIsLockedForUsers(msg.sender);\n\n        address _LBPairImplementation = LBPairImplementation;\n\n        if (_LBPairImplementation == address(0)) revert LBFactory__ImplementationNotSet();\n\n        if (!_quoteAssetWhitelist.contains(address(_tokenY))) revert LBFactory__QuoteAssetNotWhitelisted(_tokenY);\n\n        if (_tokenX == _tokenY) revert LBFactory__IdenticalAddresses(_tokenX);\n\n        // safety check, making sure that the price can be calculated\n        BinHelper.getPriceFromId(_activeId);\n\n        // We sort token for storage efficiency, only one input needs to be stored because they are sorted\n        (IERC20 _tokenA, IERC20 _tokenB) = _sortTokens(_tokenX, _tokenY);\n        // single check is sufficient\n        if (address(_tokenA) == address(0)) revert LBFactory__AddressZero();\n        if (address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0))\n            revert LBFactory__LBPairAlreadyExists(_tokenX, _tokenY, 1);\n\n        bytes32 _salt = keccak256(abi.encode(_tokenA, _tokenB));\n        _LBPair = ILBPair(Clones.cloneDeterministic(_LBPairImplementation, _salt));\n\n        _LBPair.initialize(_tokenX, _tokenY, _activeId, _vtokenFactional);\n\n        _LBPairsInfo[_tokenA][_tokenB] = LBPairInformation({\n            LBPair: _LBPair,\n            createdByOwner: msg.sender == _owner\n        });\n\n        allLBPairs.push(_LBPair);\n\n        emit LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1);\n\n        // emit FeeParametersSet(\n        //     msg.sender,\n        //     _LBPair,\n        //     _binStep,\n        //     _preset.decode(type(uint16).max, 16),\n        //     _preset.decode(type(uint16).max, 32),\n        //     _preset.decode(type(uint16).max, 48),\n        //     _preset.decode(type(uint16).max, 64),\n        //     _preset.decode(type(uint24).max, 80),\n        //     _preset.decode(type(uint16).max, 104),\n        //     _preset.decode(type(uint24).max, 120)\n        // );\n    }\n\n    /// @notice Function to set the recipient of the fees. This address needs to be able to receive ERC20s\n    /// @param _feeRecipient The address of the recipient\n    function setFeeRecipient(address _feeRecipient) external override onlyOwner {\n        _setFeeRecipient(_feeRecipient);\n    }\n\n\n    /// @notice Function to set the creation restriction of the Factory\n    /// @param _locked If the creation is restricted (true) or not (false)\n    function setFactoryLockedState(bool _locked) external override onlyOwner {\n        if (creationUnlocked != _locked) revert LBFactory__FactoryLockIsAlreadyInTheSameState();\n        creationUnlocked = !_locked;\n        emit FactoryLockedStatusUpdated(_locked);\n    }\n\n    /// @notice Function to add an asset to the whitelist of quote assets\n    /// @param _quoteAsset The quote asset (e.g: AVAX, USDC...)\n    function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {\n        if (!_quoteAssetWhitelist.add(address(_quoteAsset)))\n            revert LBFactory__QuoteAssetAlreadyWhitelisted(_quoteAsset);\n\n        emit QuoteAssetAdded(_quoteAsset);\n    }\n\n    /// @notice Function to remove an asset from the whitelist of quote assets\n    /// @param _quoteAsset The quote asset (e.g: AVAX, USDC...)\n    function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {\n        if (!_quoteAssetWhitelist.remove(address(_quoteAsset))) revert LBFactory__QuoteAssetNotWhitelisted(_quoteAsset);\n\n        emit QuoteAssetRemoved(_quoteAsset);\n    }\n\n    /// @notice Internal function to set the recipient of the fee\n    /// @param _feeRecipient The address of the recipient\n    function _setFeeRecipient(address _feeRecipient) internal {\n        if (_feeRecipient == address(0)) revert LBFactory__AddressZero();\n\n        address _oldFeeRecipient = feeRecipient;\n        if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient);\n\n        feeRecipient = _feeRecipient;\n        emit FeeRecipientSet(_oldFeeRecipient, _feeRecipient);\n    }\n\n    \n\n    /// @notice Returns the LBPairInformation if it exists,\n    /// if not, then the address 0 is returned. The order doesn't matter\n    /// @param _tokenA The address of the first token of the pair\n    /// @param _tokenB The address of the second token of the pair\n    /// @return The LBPairInformation\n    function _getLBPairInformation(\n        IERC20 _tokenA,\n        IERC20 _tokenB\n    ) private view returns (LBPairInformation memory) {\n        (_tokenA, _tokenB) = _sortTokens(_tokenA, _tokenB);\n        return _LBPairsInfo[_tokenA][_tokenB];\n    }\n\n    /// @notice Private view function to sort 2 tokens in ascending order\n    /// @param _tokenA The first token\n    /// @param _tokenB The second token\n    /// @return The sorted first token\n    /// @return The sorted second token\n    function _sortTokens(IERC20 _tokenA, IERC20 _tokenB) private pure returns (IERC20, IERC20) {\n        if (_tokenA > _tokenB) (_tokenA, _tokenB) = (_tokenB, _tokenA);\n        return (_tokenA, _tokenB);\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/interfaces/ILBFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./ILBPair.sol\";\nimport \"./IPendingOwnable.sol\";\n\n/// @title Liquidity Book Factory Interface\n/// @author Trader Joe\n/// @notice Required interface of LBFactory contract\ninterface ILBFactory is IPendingOwnable {\n    /// @dev Structure to store the LBPair information, such as:\n    /// - binStep: The bin step of the LBPair\n    /// - LBPair: The address of the LBPair\n    /// - createdByOwner: Whether the pair was created by the owner of the factory\n    /// - ignoredForRouting: Whether the pair is ignored for routing or not. An ignored pair will not be explored during routes finding\n    struct LBPairInformation {\n        ILBPair LBPair;\n        bool createdByOwner;\n    }\n\n    event LBPairCreated(\n        IERC20 indexed tokenX,\n        IERC20 indexed tokenY,\n        ILBPair LBPair,\n        uint256 pid\n    );\n\n    event FeeRecipientSet(address oldRecipient, address newRecipient);\n\n    event FlashLoanFeeSet(uint256 oldFlashLoanFee, uint256 newFlashLoanFee);\n\n    event FeeParametersSet(\n        address indexed sender,\n        ILBPair indexed LBPair,\n        uint256 baseFactor,\n        uint256 filterPeriod,\n        uint256 decayPeriod,\n        uint256 reductionFactor,\n        uint256 variableFeeControl,\n        uint256 protocolShare,\n        uint256 maxVolatilityAccumulated\n    );\n\n    event FactoryLockedStatusUpdated(bool unlocked);\n\n    event LBPairImplementationSet(address oldLBPairImplementation, address LBPairImplementation);\n\n    event LBPairIgnoredStateChanged(ILBPair indexed LBPair, bool ignored);\n\n    event PresetSet(\n        uint256 baseFactor,\n        uint256 filterPeriod,\n        uint256 decayPeriod,\n        uint256 reductionFactor,\n        uint256 variableFeeControl,\n        uint256 protocolShare,\n        uint256 maxVolatilityAccumulated,\n        uint256 sampleLifetime\n    );\n\n    event PresetRemoved();\n\n    event QuoteAssetAdded(IERC20 indexed quoteAsset);\n\n    event QuoteAssetRemoved(IERC20 indexed quoteAsset);\n\n    function MAX_FEE() external pure returns (uint256);\n\n    // function MIN_BIN_STEP() external pure returns (uint256);\n\n    // function MAX_BIN_STEP() external pure returns (uint256);\n\n    // function MAX_PROTOCOL_SHARE() external pure returns (uint256);\n\n    function LBPairImplementation() external view returns (address);\n\n    function getNumberOfQuoteAssets() external view returns (uint256);\n\n    function getQuoteAsset(uint256 index) external view returns (IERC20);\n\n    function isQuoteAsset(IERC20 token) external view returns (bool);\n\n    function feeRecipient() external view returns (address);\n\n    function flashLoanFee() external view returns (uint256);\n\n    function creationUnlocked() external view returns (bool);\n\n    function allLBPairs(uint256 id) external returns (ILBPair);\n\n    function getNumberOfLBPairs() external view returns (uint256);\n\n    function getLBPairInformation(\n        IERC20 tokenX,\n        IERC20 tokenY\n    ) external view returns (LBPairInformation memory);\n\n    // function getPreset()\n    //     external\n    //     view\n    //     returns (\n    //         uint256 baseFactor,\n    //         uint256 filterPeriod,\n    //         uint256 decayPeriod,\n    //         uint256 reductionFactor,\n    //         uint256 variableFeeControl,\n    //         uint256 protocolShare,\n    //         uint256 maxAccumulator,\n    //         uint256 sampleLifetime\n    //     );\n\n    // function getAllBinSteps() external view;\n\n    // function getAllLBPairs(IERC20 tokenX, IERC20 tokenY)\n    //     external\n    //     view\n    //     returns (LBPairInformation[] memory LBPairsBinStep);\n\n    function setLBPairImplementation(address LBPairImplementation) external;\n\n    function createLBPair(\n        IERC20 tokenX,\n        IERC20 tokenY,\n        uint24 activeId,\n        bool _vtokenFactional\n    ) external returns (ILBPair pair);\n\n    // function setLBPairIgnored(\n    //     IERC20 tokenX,\n    //     IERC20 tokenY,\n\n    //     bool ignored\n    // ) external;\n\n    // function setPreset(\n\n    //     uint16 baseFactor,\n    //     uint16 filterPeriod,\n    //     uint16 decayPeriod,\n    //     uint16 reductionFactor,\n    //     uint24 variableFeeControl,\n    //     uint16 protocolShare,\n    //     uint24 maxVolatilityAccumulated,\n    //     uint16 sampleLifetime\n    // ) external;\n\n    // function removePreset() external;\n\n    // function setFeesParametersOnPair(\n    //     IERC20 tokenX,\n    //     IERC20 tokenY,\n    //     uint16 baseFactor,\n    //     uint16 filterPeriod,\n    //     uint16 decayPeriod,\n    //     uint16 reductionFactor,\n    //     uint24 variableFeeControl,\n    //     uint16 protocolShare,\n    //     uint24 maxVolatilityAccumulated\n    // ) external;\n\n    function setFeeRecipient(address feeRecipient) external;\n\n    // function setFlashLoanFee(uint256 flashLoanFee) external;\n\n    function setFactoryLockedState(bool locked) external;\n\n    function addQuoteAsset(IERC20 quoteAsset) external;\n\n    function removeQuoteAsset(IERC20 quoteAsset) external;\n\n    // function forceDecay(ILBPair LBPair) external;\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\n\n/// @title Liquidity Book Safe Cast Library\n/// @author Trader Joe\n/// @notice Helper contract used for converting uint values safely\nlibrary SafeCast {\n    /// @notice Returns x on uint248 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint248\n    function safe248(uint256 x) internal pure returns (uint248 y) {\n        if ((y = uint248(x)) != x) revert SafeCast__Exceeds248Bits(x);\n    }\n\n    /// @notice Returns x on uint240 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint240\n    function safe240(uint256 x) internal pure returns (uint240 y) {\n        if ((y = uint240(x)) != x) revert SafeCast__Exceeds240Bits(x);\n    }\n\n    /// @notice Returns x on uint232 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint232\n    function safe232(uint256 x) internal pure returns (uint232 y) {\n        if ((y = uint232(x)) != x) revert SafeCast__Exceeds232Bits(x);\n    }\n\n    /// @notice Returns x on uint224 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint224\n    function safe224(uint256 x) internal pure returns (uint224 y) {\n        if ((y = uint224(x)) != x) revert SafeCast__Exceeds224Bits(x);\n    }\n\n    /// @notice Returns x on uint216 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint216\n    function safe216(uint256 x) internal pure returns (uint216 y) {\n        if ((y = uint216(x)) != x) revert SafeCast__Exceeds216Bits(x);\n    }\n\n    /// @notice Returns x on uint208 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint208\n    function safe208(uint256 x) internal pure returns (uint208 y) {\n        if ((y = uint208(x)) != x) revert SafeCast__Exceeds208Bits(x);\n    }\n\n    /// @notice Returns x on uint200 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint200\n    function safe200(uint256 x) internal pure returns (uint200 y) {\n        if ((y = uint200(x)) != x) revert SafeCast__Exceeds200Bits(x);\n    }\n\n    /// @notice Returns x on uint192 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint192\n    function safe192(uint256 x) internal pure returns (uint192 y) {\n        if ((y = uint192(x)) != x) revert SafeCast__Exceeds192Bits(x);\n    }\n\n    /// @notice Returns x on uint184 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint184\n    function safe184(uint256 x) internal pure returns (uint184 y) {\n        if ((y = uint184(x)) != x) revert SafeCast__Exceeds184Bits(x);\n    }\n\n    /// @notice Returns x on uint176 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint176\n    function safe176(uint256 x) internal pure returns (uint176 y) {\n        if ((y = uint176(x)) != x) revert SafeCast__Exceeds176Bits(x);\n    }\n\n    /// @notice Returns x on uint168 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint168\n    function safe168(uint256 x) internal pure returns (uint168 y) {\n        if ((y = uint168(x)) != x) revert SafeCast__Exceeds168Bits(x);\n    }\n\n    /// @notice Returns x on uint160 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint160\n    function safe160(uint256 x) internal pure returns (uint160 y) {\n        if ((y = uint160(x)) != x) revert SafeCast__Exceeds160Bits(x);\n    }\n\n    /// @notice Returns x on uint152 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint152\n    function safe152(uint256 x) internal pure returns (uint152 y) {\n        if ((y = uint152(x)) != x) revert SafeCast__Exceeds152Bits(x);\n    }\n\n    /// @notice Returns x on uint144 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint144\n    function safe144(uint256 x) internal pure returns (uint144 y) {\n        if ((y = uint144(x)) != x) revert SafeCast__Exceeds144Bits(x);\n    }\n\n    /// @notice Returns x on uint136 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint136\n    function safe136(uint256 x) internal pure returns (uint136 y) {\n        if ((y = uint136(x)) != x) revert SafeCast__Exceeds136Bits(x);\n    }\n\n    /// @notice Returns x on uint128 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint128\n    function safe128(uint256 x) internal pure returns (uint128 y) {\n        if ((y = uint128(x)) != x) revert SafeCast__Exceeds128Bits(x);\n    }\n\n    /// @notice Returns x on uint120 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint120\n    function safe120(uint256 x) internal pure returns (uint120 y) {\n        if ((y = uint120(x)) != x) revert SafeCast__Exceeds120Bits(x);\n    }\n\n    /// @notice Returns x on uint112 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint112\n    function safe112(uint256 x) internal pure returns (uint112 y) {\n        if ((y = uint112(x)) != x) revert SafeCast__Exceeds112Bits(x);\n    }\n\n    /// @notice Returns x on uint104 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint104\n    function safe104(uint256 x) internal pure returns (uint104 y) {\n        if ((y = uint104(x)) != x) revert SafeCast__Exceeds104Bits(x);\n    }\n\n    /// @notice Returns x on uint96 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint96\n    function safe96(uint256 x) internal pure returns (uint96 y) {\n        if ((y = uint96(x)) != x) revert SafeCast__Exceeds96Bits(x);\n    }\n\n    /// @notice Returns x on uint88 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint88\n    function safe88(uint256 x) internal pure returns (uint88 y) {\n        if ((y = uint88(x)) != x) revert SafeCast__Exceeds88Bits(x);\n    }\n\n    /// @notice Returns x on uint80 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint80\n    function safe80(uint256 x) internal pure returns (uint80 y) {\n        if ((y = uint80(x)) != x) revert SafeCast__Exceeds80Bits(x);\n    }\n\n    /// @notice Returns x on uint72 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint72\n    function safe72(uint256 x) internal pure returns (uint72 y) {\n        if ((y = uint72(x)) != x) revert SafeCast__Exceeds72Bits(x);\n    }\n\n    /// @notice Returns x on uint64 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint64\n    function safe64(uint256 x) internal pure returns (uint64 y) {\n        if ((y = uint64(x)) != x) revert SafeCast__Exceeds64Bits(x);\n    }\n\n    /// @notice Returns x on uint56 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint56\n    function safe56(uint256 x) internal pure returns (uint56 y) {\n        if ((y = uint56(x)) != x) revert SafeCast__Exceeds56Bits(x);\n    }\n\n    /// @notice Returns x on uint48 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint48\n    function safe48(uint256 x) internal pure returns (uint48 y) {\n        if ((y = uint48(x)) != x) revert SafeCast__Exceeds48Bits(x);\n    }\n\n    /// @notice Returns x on uint40 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint40\n    function safe40(uint256 x) internal pure returns (uint40 y) {\n        if ((y = uint40(x)) != x) revert SafeCast__Exceeds40Bits(x);\n    }\n\n    /// @notice Returns x on uint32 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint32\n    function safe32(uint256 x) internal pure returns (uint32 y) {\n        if ((y = uint32(x)) != x) revert SafeCast__Exceeds32Bits(x);\n    }\n\n    /// @notice Returns x on uint24 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint24\n    function safe24(uint256 x) internal pure returns (uint24 y) {\n        if ((y = uint24(x)) != x) revert SafeCast__Exceeds24Bits(x);\n    }\n\n    /// @notice Returns x on uint16 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint16\n    function safe16(uint256 x) internal pure returns (uint16 y) {\n        if ((y = uint16(x)) != x) revert SafeCast__Exceeds16Bits(x);\n    }\n\n    /// @notice Returns x on uint8 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint8\n    function safe8(uint256 x) internal pure returns (uint8 y) {\n        if ((y = uint8(x)) != x) revert SafeCast__Exceeds8Bits(x);\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/PendingOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"../interfaces/IPendingOwnable.sol\";\n\n/// @title Pending Ownable\n/// @author Trader Joe\n/// @notice Contract module which provides a basic access control mechanism, where\n/// there is an account (an owner) that can be granted exclusive access to\n/// specific functions. The ownership of this contract is transferred using the\n/// push and pull pattern, the current owner set a `pendingOwner` using\n/// {setPendingOwner} and that address can then call {becomeOwner} to become the\n/// owner of that contract. The main logic and comments comes from OpenZeppelin's\n/// Ownable contract.\n///\n/// By default, the owner account will be the one that deploys the contract. This\n/// can later be changed with {setPendingOwner} and {becomeOwner}.\n///\n/// This module is used through inheritance. It will make available the modifier\n/// `onlyOwner`, which can be applied to your functions to restrict their use to\n/// the owner\ncontract PendingOwnable is IPendingOwnable {\n    address private _owner;\n    address private _pendingOwner;\n\n    /// @notice Throws if called by any account other than the owner.\n    modifier onlyOwner() {\n        if (msg.sender != _owner) revert PendingOwnable__NotOwner();\n        _;\n    }\n\n    /// @notice Throws if called by any account other than the pending owner.\n    modifier onlyPendingOwner() {\n        if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner();\n        _;\n    }\n\n    /// @notice Initializes the contract setting the deployer as the initial owner\n    constructor() {\n        _transferOwnership(msg.sender);\n    }\n\n    /// @notice Returns the address of the current owner\n    /// @return The address of the current owner\n    function owner() public view override returns (address) {\n        return _owner;\n    }\n\n    /// @notice Returns the address of the current pending owner\n    /// @return The address of the current pending owner\n    function pendingOwner() public view override returns (address) {\n        return _pendingOwner;\n    }\n\n    /// @notice Sets the pending owner address. This address will be able to become\n    /// the owner of this contract by calling {becomeOwner}\n    function setPendingOwner(address pendingOwner_) public override onlyOwner {\n        if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero();\n        if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet();\n        _setPendingOwner(pendingOwner_);\n    }\n\n    /// @notice Revoke the pending owner address. This address will not be able to\n    /// call {becomeOwner} to become the owner anymore.\n    /// Can only be called by the owner\n    function revokePendingOwner() public override onlyOwner {\n        if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner();\n        _setPendingOwner(address(0));\n    }\n\n    /// @notice Transfers the ownership to the new owner (`pendingOwner).\n    /// Can only be called by the pending owner\n    function becomeOwner() public override onlyPendingOwner {\n        _transferOwnership(msg.sender);\n    }\n\n    /// @notice Leaves the contract without owner. It will not be possible to call\n    /// `onlyOwner` functions anymore. Can only be called by the current owner.\n    ///\n    /// NOTE: Renouncing ownership will leave the contract without an owner,\n    /// thereby removing any functionality that is only available to the owner.\n    function renounceOwnership() public override onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /// @notice Transfers ownership of the contract to a new account (`newOwner`).\n    /// Internal function without access restriction.\n    /// @param _newOwner The address of the new owner\n    function _transferOwnership(address _newOwner) internal virtual {\n        address _oldOwner = _owner;\n        _owner = _newOwner;\n        _pendingOwner = address(0);\n        emit OwnershipTransferred(_oldOwner, _newOwner);\n    }\n\n    /// @notice Push the new owner, it needs to be pulled to be effective.\n    /// Internal function without access restriction.\n    /// @param pendingOwner_ The address of the new pending owner\n    function _setPendingOwner(address pendingOwner_) internal virtual {\n        _pendingOwner = pendingOwner_;\n        emit PendingOwnerSet(pendingOwner_);\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/Decoder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Decoder Library\n/// @author Trader Joe\n/// @notice Helper contract used for decoding bytes32 sample\nlibrary Decoder {\n    /// @notice Internal function to decode a bytes32 sample using a mask and offset\n    /// @dev This function can overflow\n    /// @param _sample The sample as a bytes32\n    /// @param _mask The mask\n    /// @param _offset The offset\n    /// @return value The decoded value\n    function decode(\n        bytes32 _sample,\n        uint256 _mask,\n        uint256 _offset\n    ) internal pure returns (uint256 value) {\n        assembly {\n            value := and(shr(_offset, _sample), _mask)\n        }\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/Constants.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Constants Library\n/// @author Trader Joe\n/// @notice Set of constants for Liquidity Book contracts\nlibrary Constants {\n    uint256 internal constant SCALE_OFFSET = 128;\n    uint256 internal constant SCALE = 1 << SCALE_OFFSET;\n\n    uint256 internal constant PRECISION = 1e18;\n    uint256 internal constant BASIS_POINT_MAX = 10_000;\n\n    /// @dev The expected return after a successful flash loan\n    bytes32 internal constant CALLBACK_SUCCESS = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/BinHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"./Math128x128.sol\";\n\n/// @title Liquidity Book Bin Helper Library\n/// @author Trader Joe\n/// @notice Contract used to convert bin ID to price and back\nlibrary BinHelper {\n    using Math128x128 for uint256;\n\n    int256 private constant REAL_ID_SHIFT = 1 << 23;\n\n    /// @notice Returns the id corresponding to the given price\n    /// @dev The id may be inaccurate due to rounding issues, always trust getPriceFromId rather than\n    /// getIdFromPrice\n    /// @param _price The price of y per x as a 128.128-binary fixed-point number\n    /// @return The id corresponding to this price\n    function getIdFromPrice(uint256 _price) internal pure returns (uint24) {\n        unchecked {\n            uint256 _binStepValue = _getBPValue();\n\n            // can't overflow as `2**23 + log2(price) < 2**23 + 2**128 < max(uint256)`\n            int256 _id = REAL_ID_SHIFT + _price.log2() / _binStepValue.log2();\n\n            if (_id < 0 || uint256(_id) > type(uint24).max) revert BinHelper__IdOverflows();\n            return uint24(uint256(_id));\n        }\n    }\n\n    /// @notice Returns the price corresponding to the given ID, as a 128.128-binary fixed-point number\n    /// @dev This is the trusted function to link id to price, the other way may be inaccurate\n    /// @param _id The id\n    /// @return The price corresponding to this id, as a 128.128-binary fixed-point number\n    function getPriceFromId(uint256 _id) internal pure returns (uint256) {\n        if (_id > uint256(type(uint24).max)) revert BinHelper__IdOverflows();\n        unchecked {\n            int256 _realId = int256(_id) - REAL_ID_SHIFT;\n\n            return _getBPValue().power(_realId);\n        }\n    }\n\n    /// @notice Returns the (1 + bp) value as a 128.128-decimal fixed-point number\n    /// @return The (1+bp) value as a 128.128-decimal fixed-point number\n    function _getBPValue() internal pure returns (uint256) {\n        unchecked {\n            // can't overflow as `max(result) = 2**128 + 10_000 << 128 / 10_000 < max(uint256)`\n            return Constants.SCALE + (1 << Constants.SCALE_OFFSET) / Constants.BASIS_POINT_MAX;\n        }\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/LBErrors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"./interfaces/ILBPair.sol\";\n\n/** LBRouter errors */\n\nerror LBRouter__SenderIsNotWAVAX();\nerror LBRouter__PairNotCreated(address tokenX, address tokenY, uint256 binStep);\nerror LBRouter__WrongAmounts(uint256 amount, uint256 reserve);\nerror LBRouter__SwapOverflows(uint256 id);\nerror LBRouter__BrokenSwapSafetyCheck();\nerror LBRouter__NotFactoryOwner();\nerror LBRouter__TooMuchTokensIn(uint256 excess);\nerror LBRouter__BinReserveOverflows(uint256 id);\nerror LBRouter__IdOverflows(int256 id);\nerror LBRouter__LengthsMismatch();\nerror LBRouter__WrongTokenOrder();\nerror LBRouter__IdSlippageCaught(uint256 activeIdDesired, uint256 idSlippage, uint256 activeId);\nerror LBRouter__AmountSlippageCaught(uint256 amountXMin, uint256 amountX, uint256 amountYMin, uint256 amountY);\nerror LBRouter__IdDesiredOverflows(uint256 idDesired, uint256 idSlippage);\nerror LBRouter__FailedToSendAVAX(address recipient, uint256 amount);\nerror LBRouter__DeadlineExceeded(uint256 deadline, uint256 currentTimestamp);\nerror LBRouter__AmountSlippageBPTooBig(uint256 amountSlippage);\nerror LBRouter__InsufficientAmountOut(uint256 amountOutMin, uint256 amountOut);\nerror LBRouter__MaxAmountInExceeded(uint256 amountInMax, uint256 amountIn);\nerror LBRouter__InvalidTokenPath(address wrongToken);\nerror LBRouter__InvalidVersion(uint256 version);\nerror LBRouter__WrongAvaxLiquidityParameters(\n    address tokenX,\n    address tokenY,\n    uint256 amountX,\n    uint256 amountY,\n    uint256 msgValue\n);\n\n/** LBToken errors */\n\nerror LBToken__SpenderNotApproved(address owner, address spender);\nerror LBToken__TransferFromOrToAddress0();\nerror LBToken__MintToAddress0();\nerror LBToken__BurnFromAddress0();\nerror LBToken__BurnExceedsBalance(address from, uint256 id, uint256 amount);\nerror LBToken__LengthMismatch(uint256 accountsLength, uint256 idsLength);\nerror LBToken__SelfApproval(address owner);\nerror LBToken__TransferExceedsBalance(address from, uint256 id, uint256 amount);\nerror LBToken__TransferToSelf();\n\n/** LBFactory errors */\n\nerror LBFactory__IdenticalAddresses(IERC20 token);\nerror LBFactory__QuoteAssetNotWhitelisted(IERC20 quoteAsset);\nerror LBFactory__QuoteAssetAlreadyWhitelisted(IERC20 quoteAsset);\nerror LBFactory__AddressZero();\nerror LBFactory__LBPairAlreadyExists(IERC20 tokenX, IERC20 tokenY, uint256 _binStep);\nerror LBFactory__LBPairNotCreated(IERC20 tokenX, IERC20 tokenY, uint256 binStep);\nerror LBFactory__DecreasingPeriods(uint16 filterPeriod, uint16 decayPeriod);\nerror LBFactory__ReductionFactorOverflows(uint16 reductionFactor, uint256 max);\nerror LBFactory__VariableFeeControlOverflows(uint16 variableFeeControl, uint256 max);\nerror LBFactory__BaseFeesBelowMin(uint256 baseFees, uint256 minBaseFees);\nerror LBFactory__FeesAboveMax(uint256 fees, uint256 maxFees);\nerror LBFactory__FlashLoanFeeAboveMax(uint256 fees, uint256 maxFees);\nerror LBFactory__BinStepRequirementsBreached(uint256 lowerBound, uint16 binStep, uint256 higherBound);\nerror LBFactory__ProtocolShareOverflows(uint16 protocolShare, uint256 max);\nerror LBFactory__FunctionIsLockedForUsers(address user);\nerror LBFactory__FactoryLockIsAlreadyInTheSameState();\nerror LBFactory__LBPairIgnoredIsAlreadyInTheSameState();\nerror LBFactory__BinStepHasNoPreset(uint256 binStep);\nerror LBFactory__SameFeeRecipient(address feeRecipient);\nerror LBFactory__SameFlashLoanFee(uint256 flashLoanFee);\nerror LBFactory__LBPairSafetyCheckFailed(address LBPairImplementation);\nerror LBFactory__SameImplementation(address LBPairImplementation);\nerror LBFactory__ImplementationNotSet();\n\n/** LBPair errors */\n\nerror LBPair__InsufficientAmounts();\nerror LBPair__AddressZero();\nerror LBPair__AddressZeroOrThis();\nerror LBPair__CompositionFactorFlawed(uint256 id);\nerror LBPair__InsufficientLiquidityMinted(uint256 id);\nerror LBPair__InsufficientLiquidityBurned(uint256 id);\nerror LBPair__WrongLengths();\nerror LBPair__OnlyStrictlyIncreasingId();\nerror LBPair__OnlyFactory();\nerror LBPair__DistributionsOverflow();\nerror LBPair__OnlyFeeRecipient(address feeRecipient, address sender);\nerror LBPair__OracleNotEnoughSample();\nerror LBPair__AlreadyInitialized();\nerror LBPair__OracleNewSizeTooSmall(uint256 newSize, uint256 oracleSize);\nerror LBPair__FlashLoanCallbackFailed();\nerror LBPair__FlashLoanInvalidBalance();\nerror LBPair__FlashLoanInvalidToken();\n\n/** BinHelper errors */\n\nerror BinHelper__BinStepOverflows(uint256 bp);\nerror BinHelper__IdOverflows();\n\n/** Math128x128 errors */\n\nerror Math128x128__PowerUnderflow(uint256 x, int256 y);\nerror Math128x128__LogUnderflow();\n\n/** Math512Bits errors */\n\nerror Math512Bits__MulDivOverflow(uint256 prod1, uint256 denominator);\nerror Math512Bits__ShiftDivOverflow(uint256 prod1, uint256 denominator);\nerror Math512Bits__MulShiftOverflow(uint256 prod1, uint256 offset);\nerror Math512Bits__OffsetOverflows(uint256 offset);\n\n/** Oracle errors */\n\nerror Oracle__AlreadyInitialized(uint256 _index);\nerror Oracle__LookUpTimestampTooOld(uint256 _minTimestamp, uint256 _lookUpTimestamp);\nerror Oracle__NotInitialized();\n\n/** PendingOwnable errors */\n\nerror PendingOwnable__NotOwner();\nerror PendingOwnable__NotPendingOwner();\nerror PendingOwnable__PendingOwnerAlreadySet();\nerror PendingOwnable__NoPendingOwner();\nerror PendingOwnable__AddressZero();\n\n/** ReentrancyGuardUpgradeable errors */\n\nerror ReentrancyGuardUpgradeable__ReentrantCall();\nerror ReentrancyGuardUpgradeable__AlreadyInitialized();\n\n/** SafeCast errors */\n\nerror SafeCast__Exceeds256Bits(uint256 x);\nerror SafeCast__Exceeds248Bits(uint256 x);\nerror SafeCast__Exceeds240Bits(uint256 x);\nerror SafeCast__Exceeds232Bits(uint256 x);\nerror SafeCast__Exceeds224Bits(uint256 x);\nerror SafeCast__Exceeds216Bits(uint256 x);\nerror SafeCast__Exceeds208Bits(uint256 x);\nerror SafeCast__Exceeds200Bits(uint256 x);\nerror SafeCast__Exceeds192Bits(uint256 x);\nerror SafeCast__Exceeds184Bits(uint256 x);\nerror SafeCast__Exceeds176Bits(uint256 x);\nerror SafeCast__Exceeds168Bits(uint256 x);\nerror SafeCast__Exceeds160Bits(uint256 x);\nerror SafeCast__Exceeds152Bits(uint256 x);\nerror SafeCast__Exceeds144Bits(uint256 x);\nerror SafeCast__Exceeds136Bits(uint256 x);\nerror SafeCast__Exceeds128Bits(uint256 x);\nerror SafeCast__Exceeds120Bits(uint256 x);\nerror SafeCast__Exceeds112Bits(uint256 x);\nerror SafeCast__Exceeds104Bits(uint256 x);\nerror SafeCast__Exceeds96Bits(uint256 x);\nerror SafeCast__Exceeds88Bits(uint256 x);\nerror SafeCast__Exceeds80Bits(uint256 x);\nerror SafeCast__Exceeds72Bits(uint256 x);\nerror SafeCast__Exceeds64Bits(uint256 x);\nerror SafeCast__Exceeds56Bits(uint256 x);\nerror SafeCast__Exceeds48Bits(uint256 x);\nerror SafeCast__Exceeds40Bits(uint256 x);\nerror SafeCast__Exceeds32Bits(uint256 x);\nerror SafeCast__Exceeds24Bits(uint256 x);\nerror SafeCast__Exceeds16Bits(uint256 x);\nerror SafeCast__Exceeds8Bits(uint256 x);\n\n/** TreeMath errors */\n\nerror TreeMath__ErrorDepthSearch();\n\n/** JoeLibrary errors */\n\nerror JoeLibrary__IdenticalAddresses();\nerror JoeLibrary__AddressZero();\nerror JoeLibrary__InsufficientAmount();\nerror JoeLibrary__InsufficientLiquidity();\n\n/** TokenHelper errors */\n\nerror TokenHelper__NonContract();\nerror TokenHelper__CallFailed();\nerror TokenHelper__TransferFailed();\n\n/** LBQuoter errors */\n\nerror LBQuoter_InvalidLength();\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Pending Ownable Interface\n/// @author Trader Joe\n/// @notice Required interface of Pending Ownable contract used for LBFactory\ninterface IPendingOwnable {\n    event PendingOwnerSet(address indexed pendingOwner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function owner() external view returns (address);\n\n    function pendingOwner() external view returns (address);\n\n    function setPendingOwner(address pendingOwner) external;\n\n    function revokePendingOwner() external;\n\n    function becomeOwner() external;\n\n    function renounceOwnership() external;\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/Math128x128.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"./BitMath.sol\";\nimport \"./Constants.sol\";\nimport \"./Math512Bits.sol\";\n\n/// @title Liquidity Book Math Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for power and log calculations\nlibrary Math128x128 {\n    using Math512Bits for uint256;\n    using BitMath for uint256;\n\n    uint256 constant LOG_SCALE_OFFSET = 127;\n    uint256 constant LOG_SCALE = 1 << LOG_SCALE_OFFSET;\n    uint256 constant LOG_SCALE_SQUARED = LOG_SCALE * LOG_SCALE;\n\n    /// @notice Calculates the binary logarithm of x.\n    ///\n    /// @dev Based on the iterative approximation algorithm.\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n    ///\n    /// Requirements:\n    /// - x must be greater than zero.\n    ///\n    /// Caveats:\n    /// - The results are not perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation\n    /// Also because x is converted to an unsigned 129.127-binary fixed-point number during the operation to optimize the multiplication\n    ///\n    /// @param x The unsigned 128.128-binary fixed-point number for which to calculate the binary logarithm.\n    /// @return result The binary logarithm as a signed 128.128-binary fixed-point number.\n    function log2(uint256 x) internal pure returns (int256 result) {\n        // Convert x to a unsigned 129.127-binary fixed-point number to optimize the multiplication.\n        // If we use an offset of 128 bits, y would need 129 bits and y**2 would would overflow and we would have to\n        // use mulDiv, by reducing x to 129.127-binary fixed-point number we assert that y will use 128 bits, and we\n        // can use the regular multiplication\n\n        if (x == 1) return -128;\n        if (x == 0) revert Math128x128__LogUnderflow();\n\n        x >>= 1;\n\n        unchecked {\n            // This works because log2(x) = -log2(1/x).\n            int256 sign;\n            if (x >= LOG_SCALE) {\n                sign = 1;\n            } else {\n                sign = -1;\n                // Do the fixed-point inversion inline to save gas\n                x = LOG_SCALE_SQUARED / x;\n            }\n\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\n            uint256 n = (x >> LOG_SCALE_OFFSET).mostSignificantBit();\n\n            // The integer part of the logarithm as a signed 129.127-binary fixed-point number. The operation can't overflow\n            // because n is maximum 255, LOG_SCALE_OFFSET is 127 bits and sign is either 1 or -1.\n            result = int256(n) << LOG_SCALE_OFFSET;\n\n            // This is y = x * 2^(-n).\n            uint256 y = x >> n;\n\n            // If y = 1, the fractional part is zero.\n            if (y != LOG_SCALE) {\n                // Calculate the fractional part via the iterative approximation.\n                // The \"delta >>= 1\" part is equivalent to \"delta /= 2\", but shifting bits is faster.\n                for (int256 delta = int256(1 << (LOG_SCALE_OFFSET - 1)); delta > 0; delta >>= 1) {\n                    y = (y * y) >> LOG_SCALE_OFFSET;\n\n                    // Is y^2 > 2 and so in the range [2,4)?\n                    if (y >= 1 << (LOG_SCALE_OFFSET + 1)) {\n                        // Add the 2^(-m) factor to the logarithm.\n                        result += delta;\n\n                        // Corresponds to z/2 on Wikipedia.\n                        y >>= 1;\n                    }\n                }\n            }\n            // Convert x back to unsigned 128.128-binary fixed-point number\n            result = (result * sign) << 1;\n        }\n    }\n\n    /// @notice Returns the value of x^y. It calculates `1 / x^abs(y)` if x is bigger than 2^128.\n    /// At the end of the operations, we invert the result if needed.\n    /// @param x The unsigned 128.128-binary fixed-point number for which to calculate the power\n    /// @param y A relative number without any decimals, needs to be between ]2^20; 2^20[\n    /// @return result The result of `x^y`\n    function power(uint256 x, int256 y) internal pure returns (uint256 result) {\n        bool invert;\n        uint256 absY;\n\n        if (y == 0) return Constants.SCALE;\n\n        assembly {\n            absY := y\n            if slt(absY, 0) {\n                absY := sub(0, absY)\n                invert := iszero(invert)\n            }\n        }\n\n        if (absY < 0x100000) {\n            result = Constants.SCALE;\n            assembly {\n                let pow := x\n                if gt(x, 0xffffffffffffffffffffffffffffffff) {\n                    pow := div(not(0), pow)\n                    invert := iszero(invert)\n                }\n\n                if and(absY, 0x1) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x2) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x4) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x8) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x10) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x20) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x40) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x80) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x100) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x200) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x400) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x800) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x1000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x2000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x4000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x8000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x10000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x20000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x40000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x80000) {\n                    result := shr(128, mul(result, pow))\n                }\n            }\n        }\n\n        // revert if y is too big or if x^y underflowed\n        if (result == 0) revert Math128x128__PowerUnderflow(x, y);\n\n        return invert ? type(uint256).max / result : result;\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/interfaces/ILBPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"../libraries/FeeHelper.sol\";\nimport \"./ILBFactory.sol\";\nimport \"./ILBFlashLoanCallback.sol\";\n\n/// @title Liquidity Book Pair Interface\n/// @author Trader Joe\n/// @notice Required interface of LBPair contract\ninterface ILBPair {\n    /// @dev Structure to store the reserves of bins:\n    /// - reserveX: The current reserve of tokenX of the bin\n    /// - reserveY: The current reserve of tokenY of the bin\n    struct Bin {\n        uint112 reserveX;\n        uint112 reserveY;\n        uint256 accTokenXPerShare;\n        uint256 accTokenYPerShare;\n    }\n\n    /// @dev Structure to store the information of the pair such as:\n    /// slot0:\n    /// - activeId: The current id used for swaps, this is also linked with the price\n    /// - reserveX: The sum of amounts of tokenX across all bins\n    /// slot1:\n    /// - reserveY: The sum of amounts of tokenY across all bins\n    /// - oracleSampleLifetime: The lifetime of an oracle sample\n    /// - oracleSize: The current size of the oracle, can be increase by users\n    /// - oracleActiveSize: The current active size of the oracle, composed only from non empty data sample\n    /// - oracleLastTimestamp: The current last timestamp at which a sample was added to the circular buffer\n    /// - oracleId: The current id of the oracle\n    /// slot2:\n    /// - feesX: The current amount of fees to distribute in tokenX (total, protocol)\n    /// slot3:\n    /// - feesY: The current amount of fees to distribute in tokenY (total, protocol)\n    struct PairInformation {\n        uint24 activeId;\n        uint136 reserveX;\n        uint136 reserveY;\n        FeeHelper.FeesDistribution feesY;\n    }\n\n    /// @dev Structure to store the debts of users\n    /// - debtX: The tokenX's debt\n    /// - debtY: The tokenY's debt\n    // struct Debts {\n    //     uint256 debtX;\n    //     uint256 debtY;\n    // }\n\n    /// @dev Structure to store fees:\n    /// - tokenX: The amount of fees of token X\n    /// - tokenY: The amount of fees of token Y\n    struct Fees {\n        uint128 tokenX;\n        uint128 tokenY;\n    }\n\n    /// @dev Structure to minting informations:\n    /// - amountXIn: The amount of token X sent\n    /// - amountYIn: The amount of token Y sent\n    /// - amountXAddedToPair: The amount of token X that have been actually added to the pair\n    /// - amountYAddedToPair: The amount of token Y that have been actually added to the pair\n    /// - activeFeeX: Fees X currently generated\n    /// - activeFeeY: Fees Y currently generated\n    /// - totalDistributionX: Total distribution of token X. Should be 1e18 (100%) or 0 (0%)\n    /// - totalDistributionY: Total distribution of token Y. Should be 1e18 (100%) or 0 (0%)\n    /// - id: Id of the current working bin when looping on the distribution array\n    /// - amountX: The amount of token X deposited in the current bin\n    /// - amountY: The amount of token Y deposited in the current bin\n    /// - distributionX: Distribution of token X for the current working bin\n    /// - distributionY: Distribution of token Y for the current working bin\n    struct MintInfo {\n        uint256 amountXIn;\n        uint256 amountYIn;\n        uint256 amountXAddedToPair;\n        uint256 amountYAddedToPair;\n        uint256 id;\n        uint256 amountX;\n        uint256 amountY;\n    }\n\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        bool swapForY,\n        uint256 amountIn,\n        uint256 amountOut,\n        uint256 fees\n    );\n\n\n    event CompositionFee(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        uint256 feesX,\n        uint256 feesY\n    );\n\n    event DepositedToBin(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        uint256 amountX,\n        uint256 amountY\n    );\n\n    event WithdrawnFromBin(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        uint256 amountX,\n        uint256 amountY\n    );\n\n    event FeesCollected(address indexed sender, address indexed recipient, uint256 amountX, uint256 amountY);\n\n    event ProtocolFeesCollected(address indexed sender, address indexed recipient, uint256 amountX, uint256 amountY);\n\n    event OracleSizeIncreased(uint256 previousSize, uint256 newSize);\n\n    function tokenX() external view returns (IERC20);\n\n    function tokenY() external view returns (IERC20);\n\n    function factory() external view returns (ILBFactory);\n\n    function getReservesAndId()\n        external\n        view\n        returns (\n            uint256 reserveX,\n            uint256 reserveY,\n            uint256 activeId\n        );\n\n    function getGlobalFees()\n        external\n        view\n        returns (\n \n            uint128 feesYTotal,\n\n            uint128 feesYProtocol\n        );\n\n\n    function feeParameters() external view returns (FeeHelper.FeeParameters memory);\n\n    function findFirstNonEmptyBinId(uint24 id_, bool sentTokenY) external view returns (uint24 id);\n\n    function getBin(uint24 id) external view returns (uint256 reserveX, uint256 reserveY);\n\n    function pendingFees(address account, uint256[] memory ids)\n        external\n        view\n        returns (uint256 amountY);\n\n    function swap(bool sentTokenY, address to) external returns (uint256 amountXOut, uint256 amountYOut);\n\n\n    function mint(\n        uint256[] calldata ids,\n        uint256[] calldata distributionX,\n        uint256[] calldata distributionY,\n        address to\n    )\n        external\n        returns (\n            uint256 amountXAddedToPair,\n            uint256 amountYAddedToPair,\n            uint256[] memory liquidityMinted\n        );\n\n    function burn(\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        address to\n    ) external returns (uint256 amountX, uint256 amountY);\n\n\n    function collectFees(address account, uint256[] calldata ids) external returns (uint256 amountY);\n\n    function collectProtocolFees() external returns (uint128 amountY);\n    \n    function initialize(\n        IERC20 tokenX,\n        IERC20 tokenY,\n        uint24 activeId,\n        bool _vtokenFactional\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/Math512Bits.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"./BitMath.sol\";\n\n/// @title Liquidity Book Math Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for full precision calculations\nlibrary Math512Bits {\n    using BitMath for uint256;\n\n    /// @notice Calculates floor(x*y÷denominator) with full precision\n    /// The result will be rounded down\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The denominator cannot be zero\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @return result The result as an uint256\n    function mulDivRoundDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        (uint256 prod0, uint256 prod1) = _getMulProds(x, y);\n\n        return _getEndOfDivRoundDown(x, y, denominator, prod0, prod1);\n    }\n\n    /// @notice Calculates x * y >> offset with full precision\n    /// The result will be rounded down\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param offset The offset as an uint256, can't be greater than 256\n    /// @return result The result as an uint256\n    function mulShiftRoundDown(\n        uint256 x,\n        uint256 y,\n        uint256 offset\n    ) internal pure returns (uint256 result) {\n        if (offset > 255) revert Math512Bits__OffsetOverflows(offset);\n\n        (uint256 prod0, uint256 prod1) = _getMulProds(x, y);\n\n        if (prod0 != 0) result = prod0 >> offset;\n        if (prod1 != 0) {\n            // Make sure the result is less than 2^256.\n            if (prod1 >= 1 << offset) revert Math512Bits__MulShiftOverflow(prod1, offset);\n\n            unchecked {\n                result += prod1 << (256 - offset);\n            }\n        }\n    }\n\n    /// @notice Calculates x * y >> offset with full precision\n    /// The result will be rounded up\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param offset The offset as an uint256, can't be greater than 256\n    /// @return result The result as an uint256\n    function mulShiftRoundUp(\n        uint256 x,\n        uint256 y,\n        uint256 offset\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            result = mulShiftRoundDown(x, y, offset);\n            if (mulmod(x, y, 1 << offset) != 0) result += 1;\n        }\n    }\n\n    /// @notice Calculates x << offset / y with full precision\n    /// The result will be rounded down\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param offset The number of bit to shift x as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @return result The result as an uint256\n    function shiftDivRoundDown(\n        uint256 x,\n        uint256 offset,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        if (offset > 255) revert Math512Bits__OffsetOverflows(offset);\n        uint256 prod0;\n        uint256 prod1;\n\n        prod0 = x << offset; // Least significant 256 bits of the product\n        unchecked {\n            prod1 = x >> (256 - offset); // Most significant 256 bits of the product\n        }\n\n        return _getEndOfDivRoundDown(x, 1 << offset, denominator, prod0, prod1);\n    }\n\n    /// @notice Calculates x << offset / y with full precision\n    /// The result will be rounded up\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param offset The number of bit to shift x as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @return result The result as an uint256\n    function shiftDivRoundUp(\n        uint256 x,\n        uint256 offset,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = shiftDivRoundDown(x, offset, denominator);\n        unchecked {\n            if (mulmod(x, 1 << offset, denominator) != 0) result += 1;\n        }\n    }\n\n    /// @notice Helper function to return the result of `x * y` as 2 uint256\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @return prod0 The least significant 256 bits of the product\n    /// @return prod1 The most significant 256 bits of the product\n    function _getMulProds(uint256 x, uint256 y) private pure returns (uint256 prod0, uint256 prod1) {\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2^256 + prod0.\n        assembly {\n            let mm := mulmod(x, y, not(0))\n            prod0 := mul(x, y)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n    }\n\n    /// @notice Helper function to return the result of `x * y / denominator` with full precision\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @param prod0 The least significant 256 bits of the product\n    /// @param prod1 The most significant 256 bits of the product\n    /// @return result The result as an uint256\n    function _getEndOfDivRoundDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        uint256 prod0,\n        uint256 prod1\n    ) private pure returns (uint256 result) {\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            unchecked {\n                result = prod0 / denominator;\n            }\n        } else {\n            // Make sure the result is less than 2^256. Also prevents denominator == 0\n            if (prod1 >= denominator) revert Math512Bits__MulDivOverflow(prod1, denominator);\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1\n            // See https://cs.stackexchange.com/q/138556/92363\n            unchecked {\n                // Does not overflow because the denominator cannot be zero at this stage in the function\n                uint256 lpotdod = denominator & (~denominator + 1);\n                assembly {\n                    // Divide denominator by lpotdod.\n                    denominator := div(denominator, lpotdod)\n\n                    // Divide [prod1 prod0] by lpotdod.\n                    prod0 := div(prod0, lpotdod)\n\n                    // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one\n                    lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\n                }\n\n                // Shift in bits from prod1 into prod0\n                prod0 |= prod1 * lpotdod;\n\n                // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n                // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n                // four bits. That is, denominator * inv = 1 mod 2^4\n                uint256 inverse = (3 * denominator) ^ 2;\n\n                // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n                // in modular arithmetic, doubling the correct bits in each step\n                inverse *= 2 - denominator * inverse; // inverse mod 2^8\n                inverse *= 2 - denominator * inverse; // inverse mod 2^16\n                inverse *= 2 - denominator * inverse; // inverse mod 2^32\n                inverse *= 2 - denominator * inverse; // inverse mod 2^64\n                inverse *= 2 - denominator * inverse; // inverse mod 2^128\n                inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n                // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n                // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n                // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n                // is no longer required.\n                result = prod0 * inverse;\n            }\n        }\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/BitMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Bit Math Library\n/// @author Trader Joe\n/// @notice Helper contract used for bit calculations\nlibrary BitMath {\n    /// @notice Returns the closest non-zero bit of `integer` to the right (of left) of the `bit` bits that is not `bit`\n    /// @param _integer The integer as a uint256\n    /// @param _bit The bit index\n    /// @param _rightSide Whether we're searching in the right side of the tree (true) or the left side (false)\n    /// @return The index of the closest non-zero bit. If there is no closest bit, it returns max(uint256)\n    function closestBit(\n        uint256 _integer,\n        uint8 _bit,\n        bool _rightSide\n    ) internal pure returns (uint256) {\n        return _rightSide ? closestBitRight(_integer, _bit - 1) : closestBitLeft(_integer, _bit + 1);\n    }\n\n    /// @notice Returns the most (or least) significant bit of `_integer`\n    /// @param _integer The integer\n    /// @param _isMostSignificant Whether we want the most (true) or the least (false) significant bit\n    /// @return The index of the most (or least) significant bit\n    function significantBit(uint256 _integer, bool _isMostSignificant) internal pure returns (uint8) {\n        return _isMostSignificant ? mostSignificantBit(_integer) : leastSignificantBit(_integer);\n    }\n\n    /// @notice Returns the index of the closest bit on the right of x that is non null\n    /// @param x The value as a uint256\n    /// @param bit The index of the bit to start searching at\n    /// @return id The index of the closest non null bit on the right of x.\n    /// If there is no closest bit, it returns max(uint256)\n    function closestBitRight(uint256 x, uint8 bit) internal pure returns (uint256 id) {\n        unchecked {\n            uint256 _shift = 255 - bit;\n            x <<= _shift;\n\n            // can't overflow as it's non-zero and we shifted it by `_shift`\n            return (x == 0) ? type(uint256).max : mostSignificantBit(x) - _shift;\n        }\n    }\n\n    /// @notice Returns the index of the closest bit on the left of x that is non null\n    /// @param x The value as a uint256\n    /// @param bit The index of the bit to start searching at\n    /// @return id The index of the closest non null bit on the left of x.\n    /// If there is no closest bit, it returns max(uint256)\n    function closestBitLeft(uint256 x, uint8 bit) internal pure returns (uint256 id) {\n        unchecked {\n            x >>= bit;\n\n            return (x == 0) ? type(uint256).max : leastSignificantBit(x) + bit;\n        }\n    }\n\n    /// @notice Returns the index of the most significant bit of x\n    /// @param x The value as a uint256\n    /// @return msb The index of the most significant bit of x\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 msb) {\n        unchecked {\n            if (x >= 1 << 128) {\n                x >>= 128;\n                msb = 128;\n            }\n            if (x >= 1 << 64) {\n                x >>= 64;\n                msb += 64;\n            }\n            if (x >= 1 << 32) {\n                x >>= 32;\n                msb += 32;\n            }\n            if (x >= 1 << 16) {\n                x >>= 16;\n                msb += 16;\n            }\n            if (x >= 1 << 8) {\n                x >>= 8;\n                msb += 8;\n            }\n            if (x >= 1 << 4) {\n                x >>= 4;\n                msb += 4;\n            }\n            if (x >= 1 << 2) {\n                x >>= 2;\n                msb += 2;\n            }\n            if (x >= 1 << 1) {\n                msb += 1;\n            }\n        }\n    }\n\n    /// @notice Returns the index of the least significant bit of x\n    /// @param x The value as a uint256\n    /// @return lsb The index of the least significant bit of x\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 lsb) {\n        unchecked {\n            if (x << 128 != 0) {\n                x <<= 128;\n                lsb = 128;\n            }\n            if (x << 64 != 0) {\n                x <<= 64;\n                lsb += 64;\n            }\n            if (x << 32 != 0) {\n                x <<= 32;\n                lsb += 32;\n            }\n            if (x << 16 != 0) {\n                x <<= 16;\n                lsb += 16;\n            }\n            if (x << 8 != 0) {\n                x <<= 8;\n                lsb += 8;\n            }\n            if (x << 4 != 0) {\n                x <<= 4;\n                lsb += 4;\n            }\n            if (x << 2 != 0) {\n                x <<= 2;\n                lsb += 2;\n            }\n            if (x << 1 != 0) {\n                lsb += 1;\n            }\n\n            return 255 - lsb;\n        }\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title Liquidity Book Flashloan Callback Interface\n/// @author Trader Joe\n/// @notice Required interface to interact with LB flash loans\ninterface ILBFlashLoanCallback {\n    function LBFlashLoanCallback(\n        address sender,\n        IERC20 token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/FeeHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"./Constants.sol\";\nimport \"./SafeCast.sol\";\nimport \"./SafeMath.sol\";\n\n/// @title Liquidity Book Fee Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for fees calculation\nlibrary FeeHelper {\n    using SafeCast for uint256;\n    using SafeMath for uint256;\n\n    /// @dev Structure to store the protocol fees:\n    /// - binStep: The bin step\n    /// - baseFactor: The base factor\n    /// - filterPeriod: The filter period, where the fees stays constant\n    /// - decayPeriod: The decay period, where the fees are halved\n    /// - reductionFactor: The reduction factor, used to calculate the reduction of the accumulator\n    /// - variableFeeControl: The variable fee control, used to control the variable fee, can be 0 to disable them\n    /// - protocolShare: The share of fees sent to protocol\n    /// - maxVolatilityAccumulated: The max value of volatility accumulated\n    /// - volatilityAccumulated: The value of volatility accumulated\n    /// - volatilityReference: The value of volatility reference\n    /// - indexRef: The index reference\n    /// - time: The last time the accumulator was called\n    struct FeeParameters {\n        uint128 rate;\n        uint128 protocolShare;\n    }\n\n    /// @dev Structure used during swaps to distributes the fees:\n    /// - total: The total amount of fees\n    /// - protocol: The amount of fees reserved for protocol\n    struct FeesDistribution {\n        uint128 total;\n        uint128 protocol;\n    }\n\n    /// @notice Return the amount of fees from an amount\n    /// @dev Rounds amount up, follows `amount = amountWithFees - getFeeAmountFrom(fp, amountWithFees)`\n    /// @param _fp The current fee parameter\n    /// @param _amountWithFees The amount of token sent\n    /// @return The fee amount from the amount sent\n    function getFeeAmountFrom(FeeParameters memory _fp, uint256 _amountWithFees) internal pure returns (uint256) {\n        return (_amountWithFees * getTotalFee(_fp) + Constants.PRECISION - 1) / (Constants.PRECISION);\n    }\n\n    /// @notice Return the fees to add to an amount\n    /// @dev Rounds amount up, follows `amountWithFees = amount + getFeeAmount(fp, amount)`\n    /// @param _fp The current fee parameter\n    /// @param _amount The amount of token sent\n    /// @return The fee amount to add to the amount\n    function getFeeAmount(FeeParameters memory _fp, uint256 _amount) internal pure returns (uint256) {\n        uint256 _fee = getTotalFee(_fp);\n        uint256 _denominator = Constants.PRECISION - _fee;\n        return (_amount * _fee + _denominator - 1) / _denominator;\n    }\n\n\n    /// @notice Return the fees distribution added to an amount\n    /// @param _fp The current fee parameter\n    /// @param _fees The fee amount\n    /// @return fees The fee distribution\n    function getFeeAmountDistribution(FeeParameters memory _fp, uint256 _fees)\n        internal\n        pure\n        returns (FeesDistribution memory fees)\n    {\n        fees.total = _fees.safe128();\n        // unsafe math is fine because total >= protocol\n        unchecked {\n            fees.protocol = uint128((_fees * _fp.protocolShare) / Constants.BASIS_POINT_MAX);\n        }\n    }\n\n    /// @notice Return the total fee, i.e. baseFee + variableFee\n    /// @param _fp The current fee parameter\n    /// @return The total fee, with 18 decimals\n    function getTotalFee(FeeParameters memory _fp) private pure returns (uint256) {\n        unchecked {\n            return _fp.rate;\n        }\n    }\n}\n"
			},
			"Midas/joe-v2-main/src/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Safe Math Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for calculating absolute value safely\nlibrary SafeMath {\n    /// @notice absSub, can't underflow or overflow\n    /// @param x The first value\n    /// @param y The second value\n    /// @return The result of abs(x - y)\n    function absSub(uint256 x, uint256 y) internal pure returns (uint256) {\n        unchecked {\n            return x > y ? x - y : y - x;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":755:4036  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":755:4036  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e2746f98414af85d32d9ee285b57e663bc64a8f9f8b008d05fcd1931daf1b24c64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2746f98414af85d32d9ee285b57e663bc64a8f9f8b008d05fcd1931daf1b24c64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH21 0x6F98414AF85D32D9EE285B57E663BC64A8F9F8B008 0xD0 0x5F 0xCD NOT BALANCE 0xDA CALL 0xB2 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "755:3281:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e2746f98414af85d32d9ee285b57e663bc64a8f9f8b008d05fcd1931daf1b24c64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 PUSH21 0x6F98414AF85D32D9EE285B57E663BC64A8F9F8B008 0xD0 0x5F 0xCD NOT BALANCE 0xDA CALL 0xB2 0x4C PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "755:3281:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e2746f98414af85d32d9ee285b57e663bc64a8f9f8b008d05fcd1931daf1b24c64736f6c634300080a0033",
									".code": [
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1321:12951  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1321:12951  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ef831b793bc079ac9e022eeac2acee3c36db7f09b6291f4113a7375ac32ed85164736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef831b793bc079ac9e022eeac2acee3c36db7f09b6291f4113a7375ac32ed85164736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF DUP4 SHL PUSH26 0x3BC079AC9E022EEAC2ACEE3C36DB7F09B6291F4113A7375AC32E 0xD8 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1321:11630:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef831b793bc079ac9e022eeac2acee3c36db7f09b6291f4113a7375ac32ed85164736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF DUP4 SHL PUSH26 0x3BC079AC9E022EEAC2ACEE3C36DB7F09B6291F4113A7375AC32E 0xD8 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1321:11630:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ef831b793bc079ac9e022eeac2acee3c36db7f09b6291f4113a7375ac32ed85164736f6c634300080a0033",
									".code": [
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/LBFactory.sol": {
				"LBFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "BinHelper__IdOverflows",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LBFactory__AddressZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LBFactory__FactoryLockIsAlreadyInTheSameState",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "LBFactory__FunctionIsLockedForUsers",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "LBFactory__IdenticalAddresses",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LBFactory__ImplementationNotSet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_binStep",
									"type": "uint256"
								}
							],
							"name": "LBFactory__LBPairAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBFactory__LBPairSafetyCheckFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "LBFactory__QuoteAssetAlreadyWhitelisted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "LBFactory__QuoteAssetNotWhitelisted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "feeRecipient",
									"type": "address"
								}
							],
							"name": "LBFactory__SameFeeRecipient",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBFactory__SameImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "Math128x128__PowerUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__AddressZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NoPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__PendingOwnerAlreadySet",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"name": "FactoryLockedStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								}
							],
							"name": "FeeParametersSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFlashLoanFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFlashLoanFee",
									"type": "uint256"
								}
							],
							"name": "FlashLoanFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								}
							],
							"name": "LBPairCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "ignored",
									"type": "bool"
								}
							],
							"name": "LBPairIgnoredStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldLBPairImplementation",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBPairImplementationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresetRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sampleLifetime",
									"type": "uint256"
								}
							],
							"name": "PresetSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LBPairImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_quoteAsset",
									"type": "address"
								}
							],
							"name": "addQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allLBPairs",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_tokenY",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "_activeId",
									"type": "uint24"
								},
								{
									"internalType": "bool",
									"name": "_vtokenFactional",
									"type": "bool"
								}
							],
							"name": "createLBPair",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "_LBPair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creationUnlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashLoanFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_tokenB",
									"type": "address"
								}
							],
							"name": "getLBPairInformation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract ILBPair",
											"name": "LBPair",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "createdByOwner",
											"type": "bool"
										}
									],
									"internalType": "struct ILBFactory.LBPairInformation",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfLBPairs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfQuoteAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getQuoteAsset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "isQuoteAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_quoteAsset",
									"type": "address"
								}
							],
							"name": "removeQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_locked",
									"type": "bool"
								}
							],
							"name": "setFactoryLockedState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LBPairImplementation",
									"type": "address"
								}
							],
							"name": "setLBPairImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner_",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {
							"addQuoteAsset(address)": {
								"params": {
									"_quoteAsset": "The quote asset (e.g: AVAX, USDC...)"
								}
							},
							"constructor": {
								"params": {
									"_feeRecipient": "The address of the fee recipient"
								}
							},
							"createLBPair(address,address,uint24,bool)": {
								"params": {
									"_activeId": "The active id of the pair",
									"_tokenX": "The address of the first token",
									"_tokenY": "The address of the second token"
								},
								"returns": {
									"_LBPair": "The address of the newly created LBPair"
								}
							},
							"getLBPairInformation(address,address)": {
								"params": {
									"_tokenA": "The address of the first token of the pair",
									"_tokenB": "The address of the second token of the pair"
								},
								"returns": {
									"_0": "The LBPairInformation"
								}
							},
							"getNumberOfLBPairs()": {
								"returns": {
									"_0": "The number of LBPair"
								}
							},
							"getNumberOfQuoteAssets()": {
								"returns": {
									"_0": "The number of quote assets"
								}
							},
							"getQuoteAsset(uint256)": {
								"params": {
									"_index": "The index"
								},
								"returns": {
									"_0": "The address of the _quoteAsset at index `index`"
								}
							},
							"isQuoteAsset(address)": {
								"params": {
									"_token": "The address of the asset"
								},
								"returns": {
									"_0": "Whether the token is a quote asset or not"
								}
							},
							"owner()": {
								"returns": {
									"_0": "The address of the current owner"
								}
							},
							"pendingOwner()": {
								"returns": {
									"_0": "The address of the current pending owner"
								}
							},
							"removeQuoteAsset(address)": {
								"params": {
									"_quoteAsset": "The quote asset (e.g: AVAX, USDC...)"
								}
							},
							"setFactoryLockedState(bool)": {
								"params": {
									"_locked": "If the creation is restricted (true) or not (false)"
								}
							},
							"setFeeRecipient(address)": {
								"params": {
									"_feeRecipient": "The address of the recipient"
								}
							},
							"setLBPairImplementation(address)": {
								"details": "Needs to be called by the owner",
								"params": {
									"_LBPairImplementation": "The address of the implementation"
								}
							}
						},
						"stateVariables": {
							"_LBPairsInfo": {
								"details": "Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens"
							},
							"_availablePresets": {
								"details": "Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas"
							}
						},
						"title": "Liquidity Book Factory",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/LBFactory.sol\":712:10210  contract LBFactory is PendingOwnable, ILBFactory {... */\n  mstore(0x40, 0x80)\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":2126:2209  constructor(address _feeRecipient) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  tag_7\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1671:1681  msg.sender */\n  caller\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1670  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":2171:2202  _setFeeRecipient(_feeRecipient) */\n  tag_10\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":2188:2201  _feeRecipient */\n  dup2\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":2171:2187  _setFeeRecipient */\n  shl(0x20, tag_11)\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":2171:2202  _setFeeRecipient(_feeRecipient) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":2126:2209  constructor(address _feeRecipient) {... */\n  pop\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":712:10210  contract LBFactory is PendingOwnable, ILBFactory {... */\n  jump(tag_12)\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\ntag_8:\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n  0x00\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3888  address _oldOwner = _owner */\n  swap1\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3907:3916  _newOwner */\n  dup2\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3904  _owner */\n  0x00\n  dup1\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3950:3951  0 */\n  0x00\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3939  _pendingOwner */\n  0x01\n  0x00\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3999:4008  _newOwner */\n  dup2\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3988:3997  _oldOwner */\n  dup2\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8813:9202  function _setFeeRecipient(address _feeRecipient) internal {... */\ntag_11:\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8910:8911  0 */\n  0x00\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8885:8912  _feeRecipient == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8885:8898  _feeRecipient */\n  dup2\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8885:8912  _feeRecipient == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8881:8945  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\n  iszero\n  tag_15\n  jumpi\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8921:8945  LBFactory__AddressZero() */\n  mload(0x40)\n  0x95cf3ee400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8881:8945  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\ntag_15:\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8956:8980  address _oldFeeRecipient */\n  0x00\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8983:8995  feeRecipient */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8956:8995  address _oldFeeRecipient = feeRecipient */\n  swap1\n  pop\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9029:9042  _feeRecipient */\n  dup2\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9009:9042  _oldFeeRecipient == _feeRecipient */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9009:9025  _oldFeeRecipient */\n  dup2\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9009:9042  _oldFeeRecipient == _feeRecipient */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9005:9093  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\n  iszero\n  tag_16\n  jumpi\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9079:9092  _feeRecipient */\n  dup2\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9051:9093  LBFactory__SameFeeRecipient(_feeRecipient) */\n  mload(0x40)\n  0x4fcea97100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9005:9093  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\ntag_16:\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9119:9132  _feeRecipient */\n  dup2\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9104:9116  feeRecipient */\n  0x03\n  0x00\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9104:9132  feeRecipient = _feeRecipient */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9147:9195  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n  0x15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9163:9179  _oldFeeRecipient */\n  dup2\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9181:9194  _feeRecipient */\n  dup4\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":9147:9195  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n  mload(0x40)\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8871:9202  {... */\n  pop\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":8813:9202  function _setFeeRecipient(address _feeRecipient) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_24:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_25:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_24\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_26:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_25\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_27:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_26\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_43\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":932:1051   */\ntag_42:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_44\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_27\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_28:\n    /* \"#utility.yul\":1289:1313   */\n  tag_46\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_18:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_48\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_28\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1886   */\ntag_20:\n    /* \"#utility.yul\":1675:1679   */\n  0x00\n    /* \"#utility.yul\":1713:1715   */\n  0x40\n    /* \"#utility.yul\":1702:1711   */\n  dup3\n    /* \"#utility.yul\":1698:1716   */\n  add\n    /* \"#utility.yul\":1690:1716   */\n  swap1\n  pop\n    /* \"#utility.yul\":1726:1797   */\n  tag_50\n    /* \"#utility.yul\":1794:1795   */\n  0x00\n    /* \"#utility.yul\":1783:1792   */\n  dup4\n    /* \"#utility.yul\":1779:1796   */\n  add\n    /* \"#utility.yul\":1770:1776   */\n  dup6\n    /* \"#utility.yul\":1726:1797   */\n  tag_28\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1807:1879   */\n  tag_51\n    /* \"#utility.yul\":1875:1877   */\n  0x20\n    /* \"#utility.yul\":1864:1873   */\n  dup4\n    /* \"#utility.yul\":1860:1878   */\n  add\n    /* \"#utility.yul\":1851:1857   */\n  dup5\n    /* \"#utility.yul\":1807:1879   */\n  tag_28\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1554:1886   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"Midas/joe-v2-main/src/LBFactory.sol\":712:10210  contract LBFactory is PendingOwnable, ILBFactory {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":712:10210  contract LBFactory is PendingOwnable, ILBFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72e47b8c\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xddbfd941\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xddbfd941\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xeaec42a4\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf89a4cd5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf9dca989\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x72e47b8c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80c5061e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb0384781\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc42069ec\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x509ceb90\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x509ceb90\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x52e2cf8e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5a440923\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c779d6d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x67ab8a4e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x22f3fe14\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x27721842\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4847cdc8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e937c3a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7622:7886  function setFactoryLockedState(bool _locked) external override onlyOwner {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3225:3370  function isQuoteAsset(IERC20 _token) external view override returns (bool) {... */\n    tag_4:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":999:1035  address public override feeRecipient */\n    tag_5:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":1208:1244  uint256 public override flashLoanFee */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2322:2434  function getNumberOfLBPairs() external view override returns (uint256) {... */\n    tag_7:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":948:992  address public override LBPairImplementation */\n    tag_8:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4945:7173  function createLBPair(... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8030:8286  function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":1164:1201  bool public override creationUnlocked */\n    tag_11:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_12:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_13:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":1251:1287  ILBPair[] public override allLBPairs */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2562:2690  function getNumberOfQuoteAssets() external view override returns (uint256) {... */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n    tag_16:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4061:4645  function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":885:934  uint256 public constant override MAX_FEE = 0.1e18 */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8435:8683  function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n    tag_21:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7344:7468  function setFeeRecipient(address _feeRecipient) external override onlyOwner {... */\n    tag_22:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3680:3885  function getLBPairInformation(... */\n    tag_23:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2877:3019  function getQuoteAsset(uint256 _index) external view override returns (IERC20) {... */\n    tag_24:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_25:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      stop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7622:7886  function setFactoryLockedState(bool _locked) external override onlyOwner {... */\n    tag_32:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_113\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_113:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7729:7736  _locked */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7709:7736  creationUnlocked != _locked */\n      iszero\n      iszero\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7709:7725  creationUnlocked */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7709:7736  creationUnlocked != _locked */\n      iszero\n      iszero\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7705:7792  if (creationUnlocked != _locked) revert LBFactory__FactoryLockIsAlreadyInTheSameState() */\n      tag_115\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7745:7792  LBFactory__FactoryLockIsAlreadyInTheSameState() */\n      mload(0x40)\n      0x0b6ef29400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7705:7792  if (creationUnlocked != _locked) revert LBFactory__FactoryLockIsAlreadyInTheSameState() */\n    tag_115:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7822:7829  _locked */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7821:7829  !_locked */\n      iszero\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7802:7818  creationUnlocked */\n      0x03\n      0x14\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7802:7829  creationUnlocked = !_locked */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7844:7879  FactoryLockedStatusUpdated(_locked) */\n      0xcdee7bf87b7a743b4cbe1d2d534c5248621b76f58460337e7fda92d5d23f4124\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7871:7878  _locked */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7844:7879  FactoryLockedStatusUpdated(_locked) */\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7622:7886  function setFactoryLockedState(bool _locked) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3225:3370  function isQuoteAsset(IERC20 _token) external view override returns (bool) {... */\n    tag_36:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3294:3298  bool */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3317:3363  _quoteAssetWhitelist.contains(address(_token)) */\n      tag_118\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3355:3361  _token */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3317:3337  _quoteAssetWhitelist */\n      0x09\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3317:3346  _quoteAssetWhitelist.contains */\n      tag_119\n      swap1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3317:3363  _quoteAssetWhitelist.contains(address(_token)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3310:3363  return _quoteAssetWhitelist.contains(address(_token)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3225:3370  function isQuoteAsset(IERC20 _token) external view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":999:1035  address public override feeRecipient */\n    tag_40:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":1208:1244  uint256 public override flashLoanFee */\n    tag_44:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2322:2434  function getNumberOfLBPairs() external view override returns (uint256) {... */\n    tag_48:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2384:2391  uint256 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2410:2420  allLBPairs */\n      0x05\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2410:2427  allLBPairs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2403:2427  return allLBPairs.length */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2322:2434  function getNumberOfLBPairs() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":948:992  address public override LBPairImplementation */\n    tag_51:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4945:7173  function createLBPair(... */\n    tag_56:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5105:5120  ILBPair _LBPair */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5132:5146  address _owner */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5149:5156  owner() */\n      tag_122\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5149:5154  owner */\n      tag_78\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5149:5156  owner() */\n      jump\t// in\n    tag_122:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5132:5156  address _owner = owner() */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5171:5187  creationUnlocked */\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5170:5187  !creationUnlocked */\n      iszero\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5170:5211  !creationUnlocked && msg.sender != _owner */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5205:5211  _owner */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5191:5211  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5191:5201  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5191:5211  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5170:5211  !creationUnlocked && msg.sender != _owner */\n    tag_123:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5166:5267  if (!creationUnlocked && msg.sender != _owner) revert LBFactory__FunctionIsLockedForUsers(msg.sender) */\n      iszero\n      tag_124\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5256:5266  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5220:5267  LBFactory__FunctionIsLockedForUsers(msg.sender) */\n      mload(0x40)\n      0x3a43e98000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5166:5267  if (!creationUnlocked && msg.sender != _owner) revert LBFactory__FunctionIsLockedForUsers(msg.sender) */\n    tag_124:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5278:5307  address _LBPairImplementation */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5310:5330  LBPairImplementation */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5278:5330  address _LBPairImplementation = LBPairImplementation */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5378:5379  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5345:5380  _LBPairImplementation == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5345:5366  _LBPairImplementation */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5345:5380  _LBPairImplementation == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5341:5422  if (_LBPairImplementation == address(0)) revert LBFactory__ImplementationNotSet() */\n      iszero\n      tag_126\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5389:5422  LBFactory__ImplementationNotSet() */\n      mload(0x40)\n      0xa2d3f3e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5341:5422  if (_LBPairImplementation == address(0)) revert LBFactory__ImplementationNotSet() */\n    tag_126:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5438:5485  _quoteAssetWhitelist.contains(address(_tokenY)) */\n      tag_127\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5476:5483  _tokenY */\n      dup7\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5438:5458  _quoteAssetWhitelist */\n      0x09\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5438:5467  _quoteAssetWhitelist.contains */\n      tag_119\n      swap1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5438:5485  _quoteAssetWhitelist.contains(address(_tokenY)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5433:5538  if (!_quoteAssetWhitelist.contains(address(_tokenY))) revert LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n      tag_128\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5530:5537  _tokenY */\n      dup6\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5494:5538  LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n      mload(0x40)\n      0x8e888ef300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5433:5538  if (!_quoteAssetWhitelist.contains(address(_tokenY))) revert LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n    tag_128:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5564:5571  _tokenY */\n      dup6\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5553:5571  _tokenX == _tokenY */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5553:5560  _tokenX */\n      dup8\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5553:5571  _tokenX == _tokenY */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5549:5618  if (_tokenX == _tokenY) revert LBFactory__IdenticalAddresses(_tokenX) */\n      iszero\n      tag_130\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5610:5617  _tokenX */\n      dup7\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5580:5618  LBFactory__IdenticalAddresses(_tokenX) */\n      mload(0x40)\n      0x2f9b185300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5549:5618  if (_tokenX == _tokenY) revert LBFactory__IdenticalAddresses(_tokenX) */\n    tag_130:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5699:5734  BinHelper.getPriceFromId(_activeId) */\n      tag_132\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5724:5733  _activeId */\n      dup6\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5699:5734  BinHelper.getPriceFromId(_activeId) */\n      0xffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5699:5723  BinHelper.getPriceFromId */\n      tag_133\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5699:5734  BinHelper.getPriceFromId(_activeId) */\n      jump\t// in\n    tag_132:\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5853:5867  IERC20 _tokenA */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5869:5883  IERC20 _tokenB */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5887:5916  _sortTokens(_tokenX, _tokenY) */\n      tag_134\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5899:5906  _tokenX */\n      dup10\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5908:5915  _tokenY */\n      dup10\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5887:5898  _sortTokens */\n      tag_135\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5887:5916  _sortTokens(_tokenX, _tokenY) */\n      jump\t// in\n    tag_134:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5852:5916  (IERC20 _tokenA, IERC20 _tokenB) = _sortTokens(_tokenX, _tokenY) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5996:5997  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5968:5998  address(_tokenA) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5976:5983  _tokenA */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5968:5998  address(_tokenA) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5964:6031  if (address(_tokenA) == address(0)) revert LBFactory__AddressZero() */\n      iszero\n      tag_136\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6007:6031  LBFactory__AddressZero() */\n      mload(0x40)\n      0x95cf3ee400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5964:6031  if (address(_tokenA) == address(0)) revert LBFactory__AddressZero() */\n    tag_136:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6103:6104  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6045:6105  address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6053:6065  _LBPairsInfo */\n      0x06\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6053:6074  _LBPairsInfo[_tokenA] */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6066:6073  _tokenA */\n      dup5\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6053:6074  _LBPairsInfo[_tokenA] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6053:6083  _LBPairsInfo[_tokenA][_tokenB] */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6075:6082  _tokenB */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6053:6083  _LBPairsInfo[_tokenA][_tokenB] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6053:6090  _LBPairsInfo[_tokenA][_tokenB].LBPair */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6045:6105  address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6041:6177  if (address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0))... */\n      tag_137\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6157:6164  _tokenX */\n      dup9\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6166:6173  _tokenY */\n      dup9\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6175:6176  1 */\n      0x01\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6126:6177  LBFactory__LBPairAlreadyExists(_tokenX, _tokenY, 1) */\n      mload(0x40)\n      0xcb27a43500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6041:6177  if (address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0))... */\n    tag_137:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6188:6201  bytes32 _salt */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6225:6232  _tokenA */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6234:6241  _tokenB */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6214:6242  abi.encode(_tokenA, _tokenB) */\n      add(0x20, mload(0x40))\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6204:6243  keccak256(abi.encode(_tokenA, _tokenB)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6188:6243  bytes32 _salt = keccak256(abi.encode(_tokenA, _tokenB)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6271:6326  Clones.cloneDeterministic(_LBPairImplementation, _salt) */\n      tag_142\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6297:6318  _LBPairImplementation */\n      dup5\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6320:6325  _salt */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6271:6296  Clones.cloneDeterministic */\n      tag_143\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6271:6326  Clones.cloneDeterministic(_LBPairImplementation, _salt) */\n      jump\t// in\n    tag_142:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6253:6327  _LBPair = ILBPair(Clones.cloneDeterministic(_LBPairImplementation, _salt)) */\n      swap6\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6338:6345  _LBPair */\n      dup6\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6338:6356  _LBPair.initialize */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c6abc0f\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6357:6364  _tokenX */\n      dup12\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6366:6373  _tokenY */\n      dup12\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6375:6384  _activeId */\n      dup12\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6386:6402  _vtokenFactional */\n      dup12\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6338:6403  _LBPair.initialize(_tokenX, _tokenY, _activeId, _vtokenFactional) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6447:6555  LBPairInformation({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6487:6494  _LBPair */\n      dup8\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6447:6555  LBPairInformation({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6538:6544  _owner */\n      dup7\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6524:6544  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6524:6534  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6524:6544  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6447:6555  LBPairInformation({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6414:6426  _LBPairsInfo */\n      0x06\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6414:6435  _LBPairsInfo[_tokenA] */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6427:6434  _tokenA */\n      dup6\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6414:6435  _LBPairsInfo[_tokenA] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6414:6444  _LBPairsInfo[_tokenA][_tokenB] */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6436:6443  _tokenB */\n      dup5\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6414:6444  _LBPairsInfo[_tokenA][_tokenB] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6414:6555  _LBPairsInfo[_tokenA][_tokenB] = LBPairInformation({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6566:6576  allLBPairs */\n      0x05\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6582:6589  _LBPair */\n      dup7\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6566:6590  allLBPairs.push(_LBPair) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6629:6636  _tokenY */\n      dup9\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6606:6669  LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6620:6627  _tokenX */\n      dup11\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6606:6669  LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x612fdd9b533d1ca33088dcbca9ad3186eeadc9893e63715b8a783040d729cd6a\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6638:6645  _LBPair */\n      dup9\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6667:6668  1 */\n      0x01\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6647:6657  allLBPairs */\n      0x05\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6647:6664  allLBPairs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6647:6668  allLBPairs.length - 1 */\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":6606:6669  LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1) */\n      mload(0x40)\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":5122:7173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4945:7173  function createLBPair(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8030:8286  function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_61:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_155\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_155:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8116:8162  _quoteAssetWhitelist.add(address(_quoteAsset)) */\n      tag_157\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8149:8160  _quoteAsset */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8116:8136  _quoteAssetWhitelist */\n      0x09\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8116:8140  _quoteAssetWhitelist.add */\n      tag_158\n      swap1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8116:8162  _quoteAssetWhitelist.add(address(_quoteAsset)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8111:8235  if (!_quoteAssetWhitelist.add(address(_quoteAsset)))... */\n      tag_159\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8223:8234  _quoteAsset */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8183:8235  LBFactory__QuoteAssetAlreadyWhitelisted(_quoteAsset) */\n      mload(0x40)\n      0x03ce0ad900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8111:8235  if (!_quoteAssetWhitelist.add(address(_quoteAsset)))... */\n    tag_159:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8267:8278  _quoteAsset */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8251:8279  QuoteAssetAdded(_quoteAsset) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8030:8286  function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":1164:1201  bool public override creationUnlocked */\n    tag_63:\n      0x03\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_66:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_162\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_162:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2836:2837  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2838  _pendingOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2824  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2838  _pendingOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n      iszero\n      tag_164\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2847:2879  PendingOwnable__NoPendingOwner() */\n      mload(0x40)\n      0xecfad6bf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n    tag_164:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      tag_165\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2914:2915  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2905  _setPendingOwner */\n      tag_166\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      jump\t// in\n    tag_165:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_68:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_168\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_168:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      tag_170\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3581:3582  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3572  _transferOwnership */\n      tag_171\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_170:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":1251:1287  ILBPair[] public override allLBPairs */\n    tag_72:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2562:2690  function getNumberOfQuoteAssets() external view override returns (uint256) {... */\n    tag_75:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2628:2635  uint256 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2654:2683  _quoteAssetWhitelist.length() */\n      tag_175\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2654:2674  _quoteAssetWhitelist */\n      0x09\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2654:2681  _quoteAssetWhitelist.length */\n      tag_176\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2654:2683  _quoteAssetWhitelist.length() */\n      jump\t// in\n    tag_175:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2647:2683  return _quoteAssetWhitelist.length() */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2562:2690  function getNumberOfQuoteAssets() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n    tag_78:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1848:1855  address */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1874:1880  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1867:1880  return _owner */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4061:4645  function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {... */\n    tag_83:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_179\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_179:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4211:4215  this */\n      address\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4167:4215  ILBPair(_LBPairImplementation).factory() != this */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4175:4196  _LBPairImplementation */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4167:4205  ILBPair(_LBPairImplementation).factory */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc45a0155\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4167:4207  ILBPair(_LBPairImplementation).factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4167:4215  ILBPair(_LBPairImplementation).factory() != this */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4163:4293  if (ILBPair(_LBPairImplementation).factory() != this)... */\n      tag_185\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4271:4292  _LBPairImplementation */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4236:4293  LBFactory__LBPairSafetyCheckFailed(_LBPairImplementation) */\n      mload(0x40)\n      0x147ce15e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4163:4293  if (ILBPair(_LBPairImplementation).factory() != this)... */\n    tag_185:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4304:4336  address _oldLBPairImplementation */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4339:4359  LBPairImplementation */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4304:4359  address _oldLBPairImplementation = LBPairImplementation */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4401:4422  _LBPairImplementation */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4373:4422  _oldLBPairImplementation == _LBPairImplementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4373:4397  _oldLBPairImplementation */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4373:4422  _oldLBPairImplementation == _LBPairImplementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4369:4495  if (_oldLBPairImplementation == _LBPairImplementation)... */\n      iszero\n      tag_187\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4473:4494  _LBPairImplementation */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4443:4495  LBFactory__SameImplementation(_LBPairImplementation) */\n      mload(0x40)\n      0x6f69dca800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4369:4495  if (_oldLBPairImplementation == _LBPairImplementation)... */\n    tag_187:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4529:4550  _LBPairImplementation */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4506:4526  LBPairImplementation */\n      0x02\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4506:4550  LBPairImplementation = _LBPairImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4566:4638  LBPairImplementationSet(_oldLBPairImplementation, _LBPairImplementation) */\n      0x900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4590:4614  _oldLBPairImplementation */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4616:4637  _LBPairImplementation */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4566:4638  LBPairImplementationSet(_oldLBPairImplementation, _LBPairImplementation) */\n      mload(0x40)\n      tag_189\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4153:4645  {... */\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":4061:4645  function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":885:934  uint256 public constant override MAX_FEE = 0.1e18 */\n    tag_85:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":928:934  0.1e18 */\n      0x016345785d8a0000\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":885:934  uint256 public constant override MAX_FEE = 0.1e18 */\n      dup2\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_89:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_192\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_192:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2378:2379  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2380  pendingOwner_ == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2366  pendingOwner_ */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2380  pendingOwner_ == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n      iszero\n      tag_194\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2389:2418  PendingOwnable__AddressZero() */\n      mload(0x40)\n      0x91f3851500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n    tag_194:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2457:2458  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2459  _pendingOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2445  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2459  _pendingOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n      tag_195\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2468:2508  PendingOwnable__PendingOwnerAlreadySet() */\n      mload(0x40)\n      0x716b1fbf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n    tag_195:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      tag_196\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2535:2548  pendingOwner_ */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2534  _setPendingOwner */\n      tag_166\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      jump\t// in\n    tag_196:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8435:8683  function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_92:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_198\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_198:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8524:8573  _quoteAssetWhitelist.remove(address(_quoteAsset)) */\n      tag_200\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8560:8571  _quoteAsset */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8524:8544  _quoteAssetWhitelist */\n      0x09\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8524:8551  _quoteAssetWhitelist.remove */\n      tag_201\n      swap1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8524:8573  _quoteAssetWhitelist.remove(address(_quoteAsset)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8519:8630  if (!_quoteAssetWhitelist.remove(address(_quoteAsset))) revert LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n      tag_202\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8618:8629  _quoteAsset */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8582:8630  LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n      mload(0x40)\n      0x8e888ef300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8519:8630  if (!_quoteAssetWhitelist.remove(address(_quoteAsset))) revert LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n    tag_202:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8664:8675  _quoteAsset */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8646:8676  QuoteAssetRemoved(_quoteAsset) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8435:8683  function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n    tag_94:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2069:2076  address */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2095:2108  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2088:2108  return _pendingOwner */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7344:7468  function setFeeRecipient(address _feeRecipient) external override onlyOwner {... */\n    tag_98:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_206\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_206:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7430:7461  _setFeeRecipient(_feeRecipient) */\n      tag_208\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7447:7460  _feeRecipient */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7430:7446  _setFeeRecipient */\n      tag_209\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7430:7461  _setFeeRecipient(_feeRecipient) */\n      jump\t// in\n    tag_208:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":7344:7468  function setFeeRecipient(address _feeRecipient) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3680:3885  function getLBPairInformation(... */\n    tag_102:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3796:3820  LBPairInformation memory */\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3839:3878  _getLBPairInformation(_tokenA, _tokenB) */\n      tag_213\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3861:3868  _tokenA */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3870:3877  _tokenB */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3839:3860  _getLBPairInformation */\n      tag_214\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3839:3878  _getLBPairInformation(_tokenA, _tokenB) */\n      jump\t// in\n    tag_213:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3832:3878  return _getLBPairInformation(_tokenA, _tokenB) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3680:3885  function getLBPairInformation(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2877:3019  function getQuoteAsset(uint256 _index) external view override returns (IERC20) {... */\n    tag_107:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2948:2954  IERC20 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2980:3011  _quoteAssetWhitelist.at(_index) */\n      tag_216\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":3004:3010  _index */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2980:3000  _quoteAssetWhitelist */\n      0x09\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2980:3003  _quoteAssetWhitelist.at */\n      tag_217\n      swap1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2980:3011  _quoteAssetWhitelist.at(_index) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2966:3012  return IERC20(_quoteAssetWhitelist.at(_index)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":2877:3019  function getQuoteAsset(uint256 _index) external view override returns (IERC20) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_111:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1438:1451  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1451  msg.sender != _pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1434  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1451  msg.sender != _pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n      dup1\n      tag_219\n      jumpi\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1477:1478  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1479  msg.sender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1465  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1479  msg.sender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n    tag_219:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n      iszero\n      tag_220\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1488:1521  PendingOwnable__NotPendingOwner() */\n      mload(0x40)\n      0x7304d01200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n    tag_220:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      tag_222\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3137:3147  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3136  _transferOwnership */\n      tag_171\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      jump\t// in\n    tag_222:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8852:9017  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8932:8936  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8955:9010  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8965:8968  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8965:8975  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9001:9006  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8985:9008  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8977:9009  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8955:8964  _contains */\n      tag_225\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8955:9010  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8948:9010  return _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8852:9017  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1462:1754  function getPriceFromId(uint256 _id) internal pure returns (uint256) {... */\n    tag_133:\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1522:1529  uint256 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1559:1575  type(uint24).max */\n      0xffffff\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1551:1576  uint256(type(uint24).max) */\n      dup1\n      and\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1545:1548  _id */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1545:1576  _id > uint256(type(uint24).max) */\n      gt\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1541:1609  if (_id > uint256(type(uint24).max)) revert BinHelper__IdOverflows() */\n      iszero\n      tag_227\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1585:1609  BinHelper__IdOverflows() */\n      mload(0x40)\n      0x58f62eac00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1541:1609  if (_id > uint256(type(uint24).max)) revert BinHelper__IdOverflows() */\n    tag_227:\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1643:1657  int256 _realId */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":343:350  1 << 23 */\n      0x800000\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1667:1670  _id */\n      dup4\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1660:1687  int256(_id) - REAL_ID_SHIFT */\n      sub\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1643:1687  int256 _realId = int256(_id) - REAL_ID_SHIFT */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1709:1737  _getBPValue().power(_realId) */\n      tag_228\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1729:1736  _realId */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1709:1722  _getBPValue() */\n      tag_229\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1709:1720  _getBPValue */\n      tag_230\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1709:1722  _getBPValue() */\n      jump\t// in\n    tag_229:\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1709:1728  _getBPValue().power */\n      tag_231\n      swap1\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1709:1737  _getBPValue().power(_realId) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1702:1737  return _getBPValue().power(_realId) */\n      swap2\n      pop\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1462:1754  function getPriceFromId(uint256 _id) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10003:10208  function _sortTokens(IERC20 _tokenA, IERC20 _tokenB) private pure returns (IERC20, IERC20) {... */\n    tag_135:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10078:10084  IERC20 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10086:10092  IERC20 */\n      dup1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10118:10125  _tokenB */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10108:10125  _tokenA > _tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10108:10115  _tokenA */\n      dup5\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10108:10125  _tokenA > _tokenB */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10104:10166  if (_tokenA > _tokenB) (_tokenA, _tokenB) = (_tokenB, _tokenA) */\n      iszero\n      tag_233\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10149:10156  _tokenB */\n      dup3\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10158:10165  _tokenA */\n      dup5\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10127:10166  (_tokenA, _tokenB) = (_tokenB, _tokenA) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10104:10166  if (_tokenA > _tokenB) (_tokenA, _tokenB) = (_tokenB, _tokenA) */\n    tag_233:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10184:10191  _tokenA */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10193:10200  _tokenB */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10176:10201  return (_tokenA, _tokenB) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":10003:10208  function _sortTokens(IERC20 _tokenA, IERC20 _tokenB) private pure returns (IERC20, IERC20) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2107:2901  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2191:2207  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2523:2571  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2505:2519  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2499:2503  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2495:2520  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2489:2493  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2485:2521  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2482:2572  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2476:2480  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2469:2573  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2730:2762  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2713:2727  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2707:2711  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2703:2728  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2700:2763  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2694:2698  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2687:2764  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2812:2816  salt */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2806:2810  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2800:2804  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2797:2798  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2789:2817  create2(0, 0x09, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2777:2817  instance := create2(0, 0x09, 0x37, salt) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2864:2865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2844:2866  instance != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2844:2852  instance */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2844:2866  instance != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2836:2894  require(instance != address(0), \"ERC1167: create2 failed\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2107:2901  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8297:8447  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8367:8371  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8390:8440  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_239\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8395:8398  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8395:8405  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8431:8436  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8415:8438  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8407:8439  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8390:8394  _add */\n      tag_240\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8390:8440  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8383:8440  return _add(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8297:8447  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n    tag_166:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4309:4322  pendingOwner_ */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4306  _pendingOwner */\n      0x01\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4322  _pendingOwner = pendingOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4353:4366  pendingOwner_ */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4337:4367  PendingOwnerSet(pendingOwner_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n    tag_171:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3888  address _oldOwner = _owner */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3907:3916  _newOwner */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3904  _owner */\n      0x00\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3950:3951  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3939  _pendingOwner */\n      0x01\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3999:4008  _newOwner */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3988:3997  _oldOwner */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9098:9213  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9161:9168  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9187:9206  _length(set._inner) */\n      tag_244\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9195:9198  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9195:9205  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9187:9194  _length */\n      tag_245\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9187:9206  _length(set._inner) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9180:9206  return _length(set._inner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9098:9213  function length(AddressSet storage set) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8615:8771  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8688:8692  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8764  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_247\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8719:8722  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8719:8729  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8755:8760  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8739:8762  uint256(uint160(value)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8731:8763  bytes32(uint256(uint160(value))) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8718  _remove */\n      tag_248\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8764  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8704:8764  return _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8615:8771  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8813:9202  function _setFeeRecipient(address _feeRecipient) internal {... */\n    tag_209:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8910:8911  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8885:8912  _feeRecipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8885:8898  _feeRecipient */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8885:8912  _feeRecipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8881:8945  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\n      iszero\n      tag_250\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8921:8945  LBFactory__AddressZero() */\n      mload(0x40)\n      0x95cf3ee400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8881:8945  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\n    tag_250:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8956:8980  address _oldFeeRecipient */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8983:8995  feeRecipient */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8956:8995  address _oldFeeRecipient = feeRecipient */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9029:9042  _feeRecipient */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9009:9042  _oldFeeRecipient == _feeRecipient */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9009:9025  _oldFeeRecipient */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9009:9042  _oldFeeRecipient == _feeRecipient */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9005:9093  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\n      iszero\n      tag_251\n      jumpi\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9079:9092  _feeRecipient */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9051:9093  LBFactory__SameFeeRecipient(_feeRecipient) */\n      mload(0x40)\n      0x4fcea97100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9005:9093  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\n    tag_251:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9119:9132  _feeRecipient */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9104:9116  feeRecipient */\n      0x03\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9104:9132  feeRecipient = _feeRecipient */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9147:9195  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n      0x15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9163:9179  _oldFeeRecipient */\n      dup2\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9181:9194  _feeRecipient */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9147:9195  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n      mload(0x40)\n      tag_253\n      swap3\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8871:9202  {... */\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":8813:9202  function _setFeeRecipient(address _feeRecipient) internal {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9518:9765  function _getLBPairInformation(... */\n    tag_214:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9625:9649  LBPairInformation memory */\n      tag_254\n      tag_211\n      jump\t// in\n    tag_254:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9682:9711  _sortTokens(_tokenA, _tokenB) */\n      tag_256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9694:9701  _tokenA */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9703:9710  _tokenB */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9682:9693  _sortTokens */\n      tag_135\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9682:9711  _sortTokens(_tokenA, _tokenB) */\n      jump\t// in\n    tag_256:\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9661:9711  (_tokenA, _tokenB) = _sortTokens(_tokenA, _tokenB) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9728:9740  _LBPairsInfo */\n      0x06\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9728:9749  _LBPairsInfo[_tokenA] */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9741:9748  _tokenA */\n      dup5\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9728:9749  _LBPairsInfo[_tokenA] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9728:9758  _LBPairsInfo[_tokenA][_tokenB] */\n      0x00\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9750:9757  _tokenB */\n      dup4\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9728:9758  _LBPairsInfo[_tokenA][_tokenB] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9721:9758  return _LBPairsInfo[_tokenA][_tokenB] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/LBFactory.sol\":9518:9765  function _getLBPairInformation(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9555:9711  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9629:9636  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9679:9701  _at(set._inner, index) */\n      tag_258\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9683:9686  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9683:9693  set._inner */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9695:9700  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9679:9682  _at */\n      tag_259\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9679:9701  _at(set._inner, index) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9671:9702  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9648:9704  return address(uint160(uint256(_at(set._inner, index)))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9555:9711  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4247:4374  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4320:4324  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4366:4367  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4346  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4355  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4356:4361  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4367  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4336:4367  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4247:4374  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1916:2200  function _getBPValue() internal pure returns (uint256) {... */\n    tag_230:\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1962:1969  uint256 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":407:413  10_000 */\n      0x2710\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":248:251  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":2127:2128  1 */\n      0x01\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":2127:2154  1 << Constants.SCALE_OFFSET */\n      swap1\n      shl\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":2126:2183  (1 << Constants.SCALE_OFFSET) / Constants.BASIS_POINT_MAX */\n      dup2\n      tag_262\n      jumpi\n      tag_263\n      tag_264\n      jump\t// in\n    tag_263:\n    tag_262:\n      div\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":248:251  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":291:292  1 */\n      0x01\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":291:308  1 << SCALE_OFFSET */\n      swap1\n      shl\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":2108:2183  Constants.SCALE + (1 << Constants.SCALE_OFFSET) / Constants.BASIS_POINT_MAX */\n      add\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":2101:2183  return Constants.SCALE + (1 << Constants.SCALE_OFFSET) / Constants.BASIS_POINT_MAX */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":1916:2200  function _getBPValue() internal pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4094:8094  function power(uint256 x, int256 y) internal pure returns (uint256 result) {... */\n    tag_231:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4153:4167  uint256 result */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4179:4190  bool invert */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4200:4212  uint256 absY */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4232:4233  0 */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4227:4228  y */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4227:4233  y == 0 */\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4223:4257  if (y == 0) return Constants.SCALE */\n      iszero\n      tag_266\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":248:251  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":291:292  1 */\n      0x01\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":291:308  1 << SCALE_OFFSET */\n      swap1\n      shl\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4235:4257  return Constants.SCALE */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_265)\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4223:4257  if (y == 0) return Constants.SCALE */\n    tag_266:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4299:4300  y */\n      dup4\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4291:4300  absY := y */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4326:4327  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4320:4324  absY */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4316:4328  slt(absY, 0) */\n      slt\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4313:4422  if slt(absY, 0) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4362:4366  absY */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4359:4360  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4355:4367  sub(0, absY) */\n      sub\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4347:4367  absY := sub(0, absY) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4401:4407  invert */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4394:4408  iszero(invert) */\n      iszero\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4384:4408  invert := iszero(invert) */\n      swap2\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4313:4422  if slt(absY, 0) {... */\n    tag_267:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4453:4461  0x100000 */\n      0x100000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4446:4450  absY */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4446:4461  absY < 0x100000 */\n      lt\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4442:7902  if (absY < 0x100000) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":248:251  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":291:292  1 */\n      0x01\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":291:308  1 << SCALE_OFFSET */\n      swap1\n      shl\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4477:4501  result = Constants.SCALE */\n      swap3\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4553:4554  x */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4580:4614  0xffffffffffffffffffffffffffffffff */\n      0xffffffffffffffffffffffffffffffff\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4577:4578  x */\n      dup7\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4574:4615  gt(x, 0xffffffffffffffffffffffffffffffff) */\n      gt\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4571:4724  if gt(x, 0xffffffffffffffffffffffffffffffff) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4657:4660  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4653:4654  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4649:4655  not(0) */\n      not\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4645:4661  div(not(0), pow) */\n      div\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4638:4661  pow := div(not(0), pow) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4699:4705  invert */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4692:4706  iszero(invert) */\n      iszero\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4682:4706  invert := iszero(invert) */\n      swap3\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4571:4724  if gt(x, 0xffffffffffffffffffffffffffffffff) {... */\n    tag_269:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4755:4758  0x1 */\n      0x01\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4749:4753  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4745:4759  and(absY, 0x1) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4742:4836  if and(absY, 0x1) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4813:4816  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4805:4811  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4801:4817  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4796:4799  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4792:4818  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4782:4818  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4742:4836  if and(absY, 0x1) {... */\n    tag_270:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4878:4881  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4873:4876  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4869:4882  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4864:4867  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4860:4883  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4853:4883  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4913:4916  0x2 */\n      0x02\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4907:4911  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4903:4917  and(absY, 0x2) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4900:4994  if and(absY, 0x2) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4971:4974  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4963:4969  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4959:4975  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4954:4957  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4950:4976  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4940:4976  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4900:4994  if and(absY, 0x2) {... */\n    tag_271:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5036:5039  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5031:5034  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5027:5040  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5022:5025  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5018:5041  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5011:5041  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5071:5074  0x4 */\n      0x04\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5065:5069  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5061:5075  and(absY, 0x4) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5058:5152  if and(absY, 0x4) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5129:5132  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5121:5127  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5117:5133  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5112:5115  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5108:5134  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5098:5134  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5058:5152  if and(absY, 0x4) {... */\n    tag_272:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5194:5197  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5189:5192  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5185:5198  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5180:5183  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5176:5199  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5169:5199  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5229:5232  0x8 */\n      0x08\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5223:5227  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5219:5233  and(absY, 0x8) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5216:5310  if and(absY, 0x8) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5287:5290  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5279:5285  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5275:5291  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5270:5273  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5266:5292  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5256:5292  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5216:5310  if and(absY, 0x8) {... */\n    tag_273:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5352:5355  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5347:5350  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5343:5356  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5338:5341  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5334:5357  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5327:5357  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5387:5391  0x10 */\n      0x10\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5381:5385  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5377:5392  and(absY, 0x10) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5374:5469  if and(absY, 0x10) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5446:5449  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5438:5444  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5434:5450  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5429:5432  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5425:5451  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5415:5451  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5374:5469  if and(absY, 0x10) {... */\n    tag_274:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5511:5514  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5506:5509  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5502:5515  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5497:5500  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5493:5516  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5486:5516  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5546:5550  0x20 */\n      0x20\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5540:5544  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5536:5551  and(absY, 0x20) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5533:5628  if and(absY, 0x20) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5605:5608  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5597:5603  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5593:5609  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5588:5591  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5584:5610  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5574:5610  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5533:5628  if and(absY, 0x20) {... */\n    tag_275:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5670:5673  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5665:5668  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5661:5674  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5656:5659  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5652:5675  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5645:5675  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5705:5709  0x40 */\n      0x40\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5699:5703  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5695:5710  and(absY, 0x40) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5692:5787  if and(absY, 0x40) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5764:5767  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5756:5762  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5752:5768  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5747:5750  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5743:5769  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5733:5769  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5692:5787  if and(absY, 0x40) {... */\n    tag_276:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5829:5832  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5824:5827  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5820:5833  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5815:5818  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5811:5834  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5804:5834  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5864:5868  0x80 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5858:5862  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5854:5869  and(absY, 0x80) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5851:5946  if and(absY, 0x80) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5923:5926  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5915:5921  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5911:5927  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5906:5909  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5902:5928  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5892:5928  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5851:5946  if and(absY, 0x80) {... */\n    tag_277:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5988:5991  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5983:5986  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5979:5992  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5974:5977  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5970:5993  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":5963:5993  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6023:6028  0x100 */\n      0x0100\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6017:6021  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6013:6029  and(absY, 0x100) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6010:6106  if and(absY, 0x100) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6083:6086  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6075:6081  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6071:6087  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6066:6069  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6062:6088  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6052:6088  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6010:6106  if and(absY, 0x100) {... */\n    tag_278:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6148:6151  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6143:6146  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6139:6152  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6134:6137  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6130:6153  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6123:6153  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6183:6188  0x200 */\n      0x0200\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6177:6181  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6173:6189  and(absY, 0x200) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6170:6266  if and(absY, 0x200) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6243:6246  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6235:6241  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6231:6247  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6226:6229  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6222:6248  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6212:6248  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6170:6266  if and(absY, 0x200) {... */\n    tag_279:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6308:6311  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6303:6306  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6299:6312  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6294:6297  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6290:6313  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6283:6313  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6343:6348  0x400 */\n      0x0400\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6337:6341  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6333:6349  and(absY, 0x400) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6330:6426  if and(absY, 0x400) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6403:6406  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6395:6401  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6391:6407  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6386:6389  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6382:6408  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6372:6408  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6330:6426  if and(absY, 0x400) {... */\n    tag_280:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6468:6471  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6463:6466  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6459:6472  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6454:6457  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6450:6473  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6443:6473  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6503:6508  0x800 */\n      0x0800\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6497:6501  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6493:6509  and(absY, 0x800) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6490:6586  if and(absY, 0x800) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6563:6566  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6555:6561  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6551:6567  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6546:6549  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6542:6568  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6532:6568  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6490:6586  if and(absY, 0x800) {... */\n    tag_281:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6628:6631  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6623:6626  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6619:6632  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6614:6617  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6610:6633  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6603:6633  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6663:6669  0x1000 */\n      0x1000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6657:6661  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6653:6670  and(absY, 0x1000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6650:6747  if and(absY, 0x1000) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6724:6727  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6716:6722  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6712:6728  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6707:6710  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6703:6729  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6693:6729  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6650:6747  if and(absY, 0x1000) {... */\n    tag_282:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6789:6792  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6784:6787  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6780:6793  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6775:6778  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6771:6794  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6764:6794  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6824:6830  0x2000 */\n      0x2000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6818:6822  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6814:6831  and(absY, 0x2000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6811:6908  if and(absY, 0x2000) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6885:6888  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6877:6883  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6873:6889  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6868:6871  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6864:6890  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6854:6890  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6811:6908  if and(absY, 0x2000) {... */\n    tag_283:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6950:6953  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6945:6948  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6941:6954  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6936:6939  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6932:6955  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6925:6955  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6985:6991  0x4000 */\n      0x4000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6979:6983  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6975:6992  and(absY, 0x4000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6972:7069  if and(absY, 0x4000) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7046:7049  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7038:7044  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7034:7050  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7029:7032  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7025:7051  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7015:7051  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":6972:7069  if and(absY, 0x4000) {... */\n    tag_284:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7111:7114  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7106:7109  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7102:7115  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7097:7100  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7093:7116  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7086:7116  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7146:7152  0x8000 */\n      0x8000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7140:7144  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7136:7153  and(absY, 0x8000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7133:7230  if and(absY, 0x8000) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7207:7210  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7199:7205  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7195:7211  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7190:7193  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7186:7212  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7176:7212  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7133:7230  if and(absY, 0x8000) {... */\n    tag_285:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7272:7275  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7267:7270  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7263:7276  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7258:7261  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7254:7277  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7247:7277  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7307:7314  0x10000 */\n      0x010000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7301:7305  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7297:7315  and(absY, 0x10000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7294:7392  if and(absY, 0x10000) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7369:7372  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7361:7367  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7357:7373  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7352:7355  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7348:7374  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7338:7374  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7294:7392  if and(absY, 0x10000) {... */\n    tag_286:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7434:7437  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7429:7432  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7425:7438  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7420:7423  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7416:7439  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7409:7439  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7469:7476  0x20000 */\n      0x020000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7463:7467  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7459:7477  and(absY, 0x20000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7456:7554  if and(absY, 0x20000) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7531:7534  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7523:7529  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7519:7535  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7514:7517  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7510:7536  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7500:7536  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7456:7554  if and(absY, 0x20000) {... */\n    tag_287:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7596:7599  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7591:7594  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7587:7600  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7582:7585  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7578:7601  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7571:7601  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7631:7638  0x40000 */\n      0x040000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7625:7629  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7621:7639  and(absY, 0x40000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7618:7716  if and(absY, 0x40000) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7693:7696  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7685:7691  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7681:7697  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7676:7679  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7672:7698  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7662:7698  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7618:7716  if and(absY, 0x40000) {... */\n    tag_288:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7758:7761  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7753:7756  pow */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7749:7762  mul(pow, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7744:7747  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7740:7763  shr(128, mul(pow, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7733:7763  pow := shr(128, mul(pow, pow)) */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7793:7800  0x80000 */\n      0x080000\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7787:7791  absY */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7783:7801  and(absY, 0x80000) */\n      and\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7780:7878  if and(absY, 0x80000) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7855:7858  pow */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7847:7853  result */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7843:7859  mul(result, pow) */\n      mul\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7838:7841  128 */\n      0x80\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7834:7860  shr(128, mul(result, pow)) */\n      shr\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7824:7860  result := shr(128, mul(result, pow)) */\n      swap4\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7780:7878  if and(absY, 0x80000) {... */\n    tag_289:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4524:7892  {... */\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4442:7902  if (absY < 0x100000) {... */\n    tag_268:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7982:7983  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7972:7978  result */\n      dup4\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7972:7983  result == 0 */\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7968:8025  if (result == 0) revert Math128x128__PowerUnderflow(x, y) */\n      iszero\n      tag_290\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8020:8021  x */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8023:8024  y */\n      dup5\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7992:8025  Math128x128__PowerUnderflow(x, y) */\n      mload(0x40)\n      0x74e3eb0800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap3\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":7968:8025  if (result == 0) revert Math128x128__PowerUnderflow(x, y) */\n    tag_290:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8043:8049  invert */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8043:8087  invert ? type(uint256).max / result : result */\n      tag_293\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8081:8087  result */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8043:8087  invert ? type(uint256).max / result : result */\n      jump(tag_294)\n    tag_293:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8072:8078  result */\n      dup3\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8052:8069  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8052:8078  type(uint256).max / result */\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8043:8087  invert ? type(uint256).max / result : result */\n    tag_294:\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":8036:8087  return invert ? type(uint256).max / result : result */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":4094:8094  function power(uint256 x, int256 y) internal pure returns (uint256 result) {... */\n    tag_265:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2206:2610  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2269:2273  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2290:2311  _contains(set, value) */\n      tag_298\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2300:2303  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2305:2310  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2290:2299  _contains */\n      tag_225\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2290:2311  _contains(set, value) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2285:2604  if (!_contains(set, value)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2330  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2338  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2344:2349  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2350  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2507:2510  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2507:2518  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2507:2525  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2488  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2497  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2504  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2498:2503  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2504  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2525  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2546:2550  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2539:2550  return true */\n      swap1\n      pop\n      jump(tag_297)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2285:2604  if (!_contains(set, value)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2588:2593  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2581:2593  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2206:2610  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_297:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4455:4562  function _length(Set storage set) private view returns (uint256) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4511:4518  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4537:4540  set */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4537:4548  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4537:4555  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4530:4555  return set._values.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4455:4562  function _length(Set storage set) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2778:4166  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2844:2848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2960:2978  uint256 valueIndex */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:2984  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:2993  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:3000  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2994:2999  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:3000  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2960:3000  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3029:3030  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3015:3025  valueIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3015:3030  valueIndex != 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3011:4160  if (valueIndex != 0) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3405  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3421:3422  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3418  valueIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3422  valueIndex - 1 */\n      tag_305\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3422  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3436:3453  uint256 lastIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3477:3478  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3459  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3467  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3474  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3478  set._values.length - 1 */\n      tag_306\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3436:3478  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3510:3523  toDeleteIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3497:3506  lastIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3497:3523  lastIndex != toDeleteIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3493:3891  if (lastIndex != toDeleteIndex) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3543:3560  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3566  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3574  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3575:3584  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3585  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_309\n      tag_310\n      jump\t// in\n    tag_309:\n    tag_308:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3543:3585  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3714:3723  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3688  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3696  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3697:3710  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3711  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_313\n      tag_310\n      jump\t// in\n    tag_313:\n    tag_312:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3723  set._values[toDeleteIndex] = lastValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3823:3833  valueIndex */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3800  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3809  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3820  set._indexes[lastValue] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3810:3819  lastValue */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3820  set._indexes[lastValue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3833  set._indexes[lastValue] = valueIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3525:3891  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3493:3891  if (lastIndex != toDeleteIndex) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3972  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3980  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3986  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_315\n      jumpi\n      tag_316\n      tag_317\n      jump\t// in\n    tag_316:\n    tag_315:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4064  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4073  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4080  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4074:4079  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4080  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4054:4080  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4102:4106  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4095:4106  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_303)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3011:4160  if (valueIndex != 0) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4144:4149  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4137:4149  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2778:4166  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_303:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:5022  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4971:4978  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5000  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5008  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5009:5014  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5015  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_321\n      jumpi\n      tag_322\n      tag_310\n      jump\t// in\n    tag_322:\n    tag_321:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4990:5015  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:5022  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    tag_211:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_325:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_327:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_328:\n        /* \"#utility.yul\":500:521   */\n      tag_375\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_327\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      dup1\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_376:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_329:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_378\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_328\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_31:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_381\n      tag_325\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":764:883   */\n    tag_380:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_382\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_329\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1146   */\n    tag_330:\n        /* \"#utility.yul\":1057:1064   */\n      0x00\n        /* \"#utility.yul\":1097:1139   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1090:1095   */\n      dup3\n        /* \"#utility.yul\":1086:1140   */\n      and\n        /* \"#utility.yul\":1075:1140   */\n      swap1\n      pop\n        /* \"#utility.yul\":1020:1146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1248   */\n    tag_331:\n        /* \"#utility.yul\":1189:1196   */\n      0x00\n        /* \"#utility.yul\":1218:1242   */\n      tag_385\n        /* \"#utility.yul\":1236:1241   */\n      dup3\n        /* \"#utility.yul\":1218:1242   */\n      tag_330\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1207:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1254:1364   */\n    tag_332:\n        /* \"#utility.yul\":1305:1312   */\n      0x00\n        /* \"#utility.yul\":1334:1358   */\n      tag_387\n        /* \"#utility.yul\":1352:1357   */\n      dup3\n        /* \"#utility.yul\":1334:1358   */\n      tag_331\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1323:1358   */\n      swap1\n      pop\n        /* \"#utility.yul\":1254:1364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1370:1520   */\n    tag_333:\n        /* \"#utility.yul\":1457:1495   */\n      tag_389\n        /* \"#utility.yul\":1489:1494   */\n      dup2\n        /* \"#utility.yul\":1457:1495   */\n      tag_332\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1450:1455   */\n      dup2\n        /* \"#utility.yul\":1447:1496   */\n      eq\n        /* \"#utility.yul\":1437:1514   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1507:1508   */\n      dup1\n        /* \"#utility.yul\":1500:1512   */\n      revert\n        /* \"#utility.yul\":1437:1514   */\n    tag_390:\n        /* \"#utility.yul\":1370:1520   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1693   */\n    tag_334:\n        /* \"#utility.yul\":1586:1591   */\n      0x00\n        /* \"#utility.yul\":1624:1630   */\n      dup2\n        /* \"#utility.yul\":1611:1631   */\n      calldataload\n        /* \"#utility.yul\":1602:1631   */\n      swap1\n      pop\n        /* \"#utility.yul\":1640:1687   */\n      tag_392\n        /* \"#utility.yul\":1681:1686   */\n      dup2\n        /* \"#utility.yul\":1640:1687   */\n      tag_333\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":1526:1693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:2056   */\n    tag_35:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x20\n        /* \"#utility.yul\":1809:1818   */\n      dup3\n        /* \"#utility.yul\":1800:1807   */\n      dup5\n        /* \"#utility.yul\":1796:1819   */\n      sub\n        /* \"#utility.yul\":1792:1824   */\n      slt\n        /* \"#utility.yul\":1789:1908   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":1827:1906   */\n      tag_395\n      tag_325\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":1789:1908   */\n    tag_394:\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1972:2039   */\n      tag_396\n        /* \"#utility.yul\":2031:2038   */\n      dup5\n        /* \"#utility.yul\":2022:2028   */\n      dup3\n        /* \"#utility.yul\":2011:2020   */\n      dup6\n        /* \"#utility.yul\":2007:2029   */\n      add\n        /* \"#utility.yul\":1972:2039   */\n      tag_334\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":1962:2039   */\n      swap2\n      pop\n        /* \"#utility.yul\":1918:2049   */\n      pop\n        /* \"#utility.yul\":1699:2056   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2062:2171   */\n    tag_335:\n        /* \"#utility.yul\":2143:2164   */\n      tag_398\n        /* \"#utility.yul\":2158:2163   */\n      dup2\n        /* \"#utility.yul\":2143:2164   */\n      tag_327\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2138:2141   */\n      dup3\n        /* \"#utility.yul\":2131:2165   */\n      mstore\n        /* \"#utility.yul\":2062:2171   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2177:2387   */\n    tag_38:\n        /* \"#utility.yul\":2264:2268   */\n      0x00\n        /* \"#utility.yul\":2302:2304   */\n      0x20\n        /* \"#utility.yul\":2291:2300   */\n      dup3\n        /* \"#utility.yul\":2287:2305   */\n      add\n        /* \"#utility.yul\":2279:2305   */\n      swap1\n      pop\n        /* \"#utility.yul\":2315:2380   */\n      tag_400\n        /* \"#utility.yul\":2377:2378   */\n      0x00\n        /* \"#utility.yul\":2366:2375   */\n      dup4\n        /* \"#utility.yul\":2362:2379   */\n      add\n        /* \"#utility.yul\":2353:2359   */\n      dup5\n        /* \"#utility.yul\":2315:2380   */\n      tag_335\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2177:2387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2393:2511   */\n    tag_336:\n        /* \"#utility.yul\":2480:2504   */\n      tag_402\n        /* \"#utility.yul\":2498:2503   */\n      dup2\n        /* \"#utility.yul\":2480:2504   */\n      tag_331\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2475:2478   */\n      dup3\n        /* \"#utility.yul\":2468:2505   */\n      mstore\n        /* \"#utility.yul\":2393:2511   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2517:2739   */\n    tag_42:\n        /* \"#utility.yul\":2610:2614   */\n      0x00\n        /* \"#utility.yul\":2648:2650   */\n      0x20\n        /* \"#utility.yul\":2637:2646   */\n      dup3\n        /* \"#utility.yul\":2633:2651   */\n      add\n        /* \"#utility.yul\":2625:2651   */\n      swap1\n      pop\n        /* \"#utility.yul\":2661:2732   */\n      tag_404\n        /* \"#utility.yul\":2729:2730   */\n      0x00\n        /* \"#utility.yul\":2718:2727   */\n      dup4\n        /* \"#utility.yul\":2714:2731   */\n      add\n        /* \"#utility.yul\":2705:2711   */\n      dup5\n        /* \"#utility.yul\":2661:2732   */\n      tag_336\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2517:2739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2745:2822   */\n    tag_337:\n        /* \"#utility.yul\":2782:2789   */\n      0x00\n        /* \"#utility.yul\":2811:2816   */\n      dup2\n        /* \"#utility.yul\":2800:2816   */\n      swap1\n      pop\n        /* \"#utility.yul\":2745:2822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2828:2946   */\n    tag_338:\n        /* \"#utility.yul\":2915:2939   */\n      tag_407\n        /* \"#utility.yul\":2933:2938   */\n      dup2\n        /* \"#utility.yul\":2915:2939   */\n      tag_337\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2910:2913   */\n      dup3\n        /* \"#utility.yul\":2903:2940   */\n      mstore\n        /* \"#utility.yul\":2828:2946   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2952:3174   */\n    tag_46:\n        /* \"#utility.yul\":3045:3049   */\n      0x00\n        /* \"#utility.yul\":3083:3085   */\n      0x20\n        /* \"#utility.yul\":3072:3081   */\n      dup3\n        /* \"#utility.yul\":3068:3086   */\n      add\n        /* \"#utility.yul\":3060:3086   */\n      swap1\n      pop\n        /* \"#utility.yul\":3096:3167   */\n      tag_409\n        /* \"#utility.yul\":3164:3165   */\n      0x00\n        /* \"#utility.yul\":3153:3162   */\n      dup4\n        /* \"#utility.yul\":3149:3166   */\n      add\n        /* \"#utility.yul\":3140:3146   */\n      dup5\n        /* \"#utility.yul\":3096:3167   */\n      tag_338\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2952:3174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3180:3271   */\n    tag_339:\n        /* \"#utility.yul\":3216:3223   */\n      0x00\n        /* \"#utility.yul\":3256:3264   */\n      0xffffff\n        /* \"#utility.yul\":3249:3254   */\n      dup3\n        /* \"#utility.yul\":3245:3265   */\n      and\n        /* \"#utility.yul\":3234:3265   */\n      swap1\n      pop\n        /* \"#utility.yul\":3180:3271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3397   */\n    tag_340:\n        /* \"#utility.yul\":3349:3372   */\n      tag_412\n        /* \"#utility.yul\":3366:3371   */\n      dup2\n        /* \"#utility.yul\":3349:3372   */\n      tag_339\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3342:3347   */\n      dup2\n        /* \"#utility.yul\":3339:3373   */\n      eq\n        /* \"#utility.yul\":3329:3391   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3384:3385   */\n      dup1\n        /* \"#utility.yul\":3377:3389   */\n      revert\n        /* \"#utility.yul\":3329:3391   */\n    tag_413:\n        /* \"#utility.yul\":3277:3397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3403:3540   */\n    tag_341:\n        /* \"#utility.yul\":3448:3453   */\n      0x00\n        /* \"#utility.yul\":3486:3492   */\n      dup2\n        /* \"#utility.yul\":3473:3493   */\n      calldataload\n        /* \"#utility.yul\":3464:3493   */\n      swap1\n      pop\n        /* \"#utility.yul\":3502:3534   */\n      tag_415\n        /* \"#utility.yul\":3528:3533   */\n      dup2\n        /* \"#utility.yul\":3502:3534   */\n      tag_340\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":3403:3540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3546:4359   */\n    tag_55:\n        /* \"#utility.yul\":3656:3662   */\n      0x00\n        /* \"#utility.yul\":3664:3670   */\n      dup1\n        /* \"#utility.yul\":3672:3678   */\n      0x00\n        /* \"#utility.yul\":3680:3686   */\n      dup1\n        /* \"#utility.yul\":3729:3732   */\n      0x80\n        /* \"#utility.yul\":3717:3726   */\n      dup6\n        /* \"#utility.yul\":3708:3715   */\n      dup8\n        /* \"#utility.yul\":3704:3727   */\n      sub\n        /* \"#utility.yul\":3700:3733   */\n      slt\n        /* \"#utility.yul\":3697:3817   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":3736:3815   */\n      tag_418\n      tag_325\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3697:3817   */\n    tag_417:\n        /* \"#utility.yul\":3856:3857   */\n      0x00\n        /* \"#utility.yul\":3881:3948   */\n      tag_419\n        /* \"#utility.yul\":3940:3947   */\n      dup8\n        /* \"#utility.yul\":3931:3937   */\n      dup3\n        /* \"#utility.yul\":3920:3929   */\n      dup9\n        /* \"#utility.yul\":3916:3938   */\n      add\n        /* \"#utility.yul\":3881:3948   */\n      tag_334\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3871:3948   */\n      swap5\n      pop\n        /* \"#utility.yul\":3827:3958   */\n      pop\n        /* \"#utility.yul\":3997:3999   */\n      0x20\n        /* \"#utility.yul\":4023:4090   */\n      tag_420\n        /* \"#utility.yul\":4082:4089   */\n      dup8\n        /* \"#utility.yul\":4073:4079   */\n      dup3\n        /* \"#utility.yul\":4062:4071   */\n      dup9\n        /* \"#utility.yul\":4058:4080   */\n      add\n        /* \"#utility.yul\":4023:4090   */\n      tag_334\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4013:4090   */\n      swap4\n      pop\n        /* \"#utility.yul\":3968:4100   */\n      pop\n        /* \"#utility.yul\":4139:4141   */\n      0x40\n        /* \"#utility.yul\":4165:4217   */\n      tag_421\n        /* \"#utility.yul\":4209:4216   */\n      dup8\n        /* \"#utility.yul\":4200:4206   */\n      dup3\n        /* \"#utility.yul\":4189:4198   */\n      dup9\n        /* \"#utility.yul\":4185:4207   */\n      add\n        /* \"#utility.yul\":4165:4217   */\n      tag_341\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4155:4217   */\n      swap3\n      pop\n        /* \"#utility.yul\":4110:4227   */\n      pop\n        /* \"#utility.yul\":4266:4268   */\n      0x60\n        /* \"#utility.yul\":4292:4342   */\n      tag_422\n        /* \"#utility.yul\":4334:4341   */\n      dup8\n        /* \"#utility.yul\":4325:4331   */\n      dup3\n        /* \"#utility.yul\":4314:4323   */\n      dup9\n        /* \"#utility.yul\":4310:4332   */\n      add\n        /* \"#utility.yul\":4292:4342   */\n      tag_329\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4282:4342   */\n      swap2\n      pop\n        /* \"#utility.yul\":4237:4352   */\n      pop\n        /* \"#utility.yul\":3546:4359   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4365:4425   */\n    tag_342:\n        /* \"#utility.yul\":4393:4396   */\n      0x00\n        /* \"#utility.yul\":4414:4419   */\n      dup2\n        /* \"#utility.yul\":4407:4419   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4431:4573   */\n    tag_343:\n        /* \"#utility.yul\":4481:4490   */\n      0x00\n        /* \"#utility.yul\":4514:4567   */\n      tag_425\n        /* \"#utility.yul\":4532:4566   */\n      tag_426\n        /* \"#utility.yul\":4541:4565   */\n      tag_427\n        /* \"#utility.yul\":4559:4564   */\n      dup5\n        /* \"#utility.yul\":4541:4565   */\n      tag_330\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":4532:4566   */\n      tag_342\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4514:4567   */\n      tag_330\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":4501:4567   */\n      swap1\n      pop\n        /* \"#utility.yul\":4431:4573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4579:4705   */\n    tag_344:\n        /* \"#utility.yul\":4629:4638   */\n      0x00\n        /* \"#utility.yul\":4662:4699   */\n      tag_429\n        /* \"#utility.yul\":4693:4698   */\n      dup3\n        /* \"#utility.yul\":4662:4699   */\n      tag_343\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4649:4699   */\n      swap1\n      pop\n        /* \"#utility.yul\":4579:4705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4711:4853   */\n    tag_345:\n        /* \"#utility.yul\":4777:4786   */\n      0x00\n        /* \"#utility.yul\":4810:4847   */\n      tag_431\n        /* \"#utility.yul\":4841:4846   */\n      dup3\n        /* \"#utility.yul\":4810:4847   */\n      tag_344\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4797:4847   */\n      swap1\n      pop\n        /* \"#utility.yul\":4711:4853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4859:5022   */\n    tag_346:\n        /* \"#utility.yul\":4962:5015   */\n      tag_433\n        /* \"#utility.yul\":5009:5014   */\n      dup2\n        /* \"#utility.yul\":4962:5015   */\n      tag_345\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4957:4960   */\n      dup3\n        /* \"#utility.yul\":4950:5016   */\n      mstore\n        /* \"#utility.yul\":4859:5022   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5028:5282   */\n    tag_58:\n        /* \"#utility.yul\":5137:5141   */\n      0x00\n        /* \"#utility.yul\":5175:5177   */\n      0x20\n        /* \"#utility.yul\":5164:5173   */\n      dup3\n        /* \"#utility.yul\":5160:5178   */\n      add\n        /* \"#utility.yul\":5152:5178   */\n      swap1\n      pop\n        /* \"#utility.yul\":5188:5275   */\n      tag_435\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5188:5275   */\n      tag_346\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5028:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5410   */\n    tag_347:\n        /* \"#utility.yul\":5361:5385   */\n      tag_437\n        /* \"#utility.yul\":5379:5384   */\n      dup2\n        /* \"#utility.yul\":5361:5385   */\n      tag_337\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5351:5386   */\n      eq\n        /* \"#utility.yul\":5341:5404   */\n      tag_438\n      jumpi\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5397:5398   */\n      dup1\n        /* \"#utility.yul\":5390:5402   */\n      revert\n        /* \"#utility.yul\":5341:5404   */\n    tag_438:\n        /* \"#utility.yul\":5288:5410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5555   */\n    tag_348:\n        /* \"#utility.yul\":5462:5467   */\n      0x00\n        /* \"#utility.yul\":5500:5506   */\n      dup2\n        /* \"#utility.yul\":5487:5507   */\n      calldataload\n        /* \"#utility.yul\":5478:5507   */\n      swap1\n      pop\n        /* \"#utility.yul\":5516:5549   */\n      tag_440\n        /* \"#utility.yul\":5543:5548   */\n      dup2\n        /* \"#utility.yul\":5516:5549   */\n      tag_347\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5416:5555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5890   */\n    tag_71:\n        /* \"#utility.yul\":5620:5626   */\n      0x00\n        /* \"#utility.yul\":5669:5671   */\n      0x20\n        /* \"#utility.yul\":5657:5666   */\n      dup3\n        /* \"#utility.yul\":5648:5655   */\n      dup5\n        /* \"#utility.yul\":5644:5667   */\n      sub\n        /* \"#utility.yul\":5640:5672   */\n      slt\n        /* \"#utility.yul\":5637:5756   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":5675:5754   */\n      tag_443\n      tag_325\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5637:5756   */\n    tag_442:\n        /* \"#utility.yul\":5795:5796   */\n      0x00\n        /* \"#utility.yul\":5820:5873   */\n      tag_444\n        /* \"#utility.yul\":5865:5872   */\n      dup5\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5845:5854   */\n      dup6\n        /* \"#utility.yul\":5841:5863   */\n      add\n        /* \"#utility.yul\":5820:5873   */\n      tag_348\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5810:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5766:5883   */\n      pop\n        /* \"#utility.yul\":5561:5890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6018   */\n    tag_349:\n        /* \"#utility.yul\":5969:5993   */\n      tag_446\n        /* \"#utility.yul\":5987:5992   */\n      dup2\n        /* \"#utility.yul\":5969:5993   */\n      tag_331\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5962:5967   */\n      dup2\n        /* \"#utility.yul\":5959:5994   */\n      eq\n        /* \"#utility.yul\":5949:6012   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":6008:6009   */\n      0x00\n        /* \"#utility.yul\":6005:6006   */\n      dup1\n        /* \"#utility.yul\":5998:6010   */\n      revert\n        /* \"#utility.yul\":5949:6012   */\n    tag_447:\n        /* \"#utility.yul\":5896:6018   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6024:6163   */\n    tag_350:\n        /* \"#utility.yul\":6070:6075   */\n      0x00\n        /* \"#utility.yul\":6108:6114   */\n      dup2\n        /* \"#utility.yul\":6095:6115   */\n      calldataload\n        /* \"#utility.yul\":6086:6115   */\n      swap1\n      pop\n        /* \"#utility.yul\":6124:6157   */\n      tag_449\n        /* \"#utility.yul\":6151:6156   */\n      dup2\n        /* \"#utility.yul\":6124:6157   */\n      tag_349\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6024:6163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6169:6498   */\n    tag_82:\n        /* \"#utility.yul\":6228:6234   */\n      0x00\n        /* \"#utility.yul\":6277:6279   */\n      0x20\n        /* \"#utility.yul\":6265:6274   */\n      dup3\n        /* \"#utility.yul\":6256:6263   */\n      dup5\n        /* \"#utility.yul\":6252:6275   */\n      sub\n        /* \"#utility.yul\":6248:6280   */\n      slt\n        /* \"#utility.yul\":6245:6364   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":6283:6362   */\n      tag_452\n      tag_325\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":6245:6364   */\n    tag_451:\n        /* \"#utility.yul\":6403:6404   */\n      0x00\n        /* \"#utility.yul\":6428:6481   */\n      tag_453\n        /* \"#utility.yul\":6473:6480   */\n      dup5\n        /* \"#utility.yul\":6464:6470   */\n      dup3\n        /* \"#utility.yul\":6453:6462   */\n      dup6\n        /* \"#utility.yul\":6449:6471   */\n      add\n        /* \"#utility.yul\":6428:6481   */\n      tag_350\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6418:6481   */\n      swap2\n      pop\n        /* \"#utility.yul\":6374:6491   */\n      pop\n        /* \"#utility.yul\":6169:6498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6504:7034   */\n    tag_101:\n        /* \"#utility.yul\":6600:6606   */\n      0x00\n        /* \"#utility.yul\":6608:6614   */\n      dup1\n        /* \"#utility.yul\":6657:6659   */\n      0x40\n        /* \"#utility.yul\":6645:6654   */\n      dup4\n        /* \"#utility.yul\":6636:6643   */\n      dup6\n        /* \"#utility.yul\":6632:6655   */\n      sub\n        /* \"#utility.yul\":6628:6660   */\n      slt\n        /* \"#utility.yul\":6625:6744   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6663:6742   */\n      tag_456\n      tag_325\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6625:6744   */\n    tag_455:\n        /* \"#utility.yul\":6783:6784   */\n      0x00\n        /* \"#utility.yul\":6808:6875   */\n      tag_457\n        /* \"#utility.yul\":6867:6874   */\n      dup6\n        /* \"#utility.yul\":6858:6864   */\n      dup3\n        /* \"#utility.yul\":6847:6856   */\n      dup7\n        /* \"#utility.yul\":6843:6865   */\n      add\n        /* \"#utility.yul\":6808:6875   */\n      tag_334\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6798:6875   */\n      swap3\n      pop\n        /* \"#utility.yul\":6754:6885   */\n      pop\n        /* \"#utility.yul\":6924:6926   */\n      0x20\n        /* \"#utility.yul\":6950:7017   */\n      tag_458\n        /* \"#utility.yul\":7009:7016   */\n      dup6\n        /* \"#utility.yul\":7000:7006   */\n      dup3\n        /* \"#utility.yul\":6989:6998   */\n      dup7\n        /* \"#utility.yul\":6985:7007   */\n      add\n        /* \"#utility.yul\":6950:7017   */\n      tag_334\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6940:7017   */\n      swap2\n      pop\n        /* \"#utility.yul\":6895:7027   */\n      pop\n        /* \"#utility.yul\":6504:7034   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7040:7193   */\n    tag_351:\n        /* \"#utility.yul\":7133:7186   */\n      tag_460\n        /* \"#utility.yul\":7180:7185   */\n      dup2\n        /* \"#utility.yul\":7133:7186   */\n      tag_345\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":7128:7131   */\n      dup3\n        /* \"#utility.yul\":7121:7187   */\n      mstore\n        /* \"#utility.yul\":7040:7193   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7199:7298   */\n    tag_352:\n        /* \"#utility.yul\":7270:7291   */\n      tag_462\n        /* \"#utility.yul\":7285:7290   */\n      dup2\n        /* \"#utility.yul\":7270:7291   */\n      tag_327\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7265:7268   */\n      dup3\n        /* \"#utility.yul\":7258:7292   */\n      mstore\n        /* \"#utility.yul\":7199:7298   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7386:7935   */\n    tag_353:\n        /* \"#utility.yul\":7553:7557   */\n      0x40\n        /* \"#utility.yul\":7548:7551   */\n      dup3\n        /* \"#utility.yul\":7544:7558   */\n      add\n        /* \"#utility.yul\":7642:7646   */\n      0x00\n        /* \"#utility.yul\":7635:7640   */\n      dup3\n        /* \"#utility.yul\":7631:7647   */\n      add\n        /* \"#utility.yul\":7625:7648   */\n      mload\n        /* \"#utility.yul\":7661:7740   */\n      tag_464\n        /* \"#utility.yul\":7734:7738   */\n      0x00\n        /* \"#utility.yul\":7729:7732   */\n      dup6\n        /* \"#utility.yul\":7725:7739   */\n      add\n        /* \"#utility.yul\":7711:7723   */\n      dup3\n        /* \"#utility.yul\":7661:7740   */\n      tag_351\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7568:7750   */\n      pop\n        /* \"#utility.yul\":7842:7846   */\n      0x20\n        /* \"#utility.yul\":7835:7840   */\n      dup3\n        /* \"#utility.yul\":7831:7847   */\n      add\n        /* \"#utility.yul\":7825:7848   */\n      mload\n        /* \"#utility.yul\":7861:7918   */\n      tag_465\n        /* \"#utility.yul\":7912:7916   */\n      0x20\n        /* \"#utility.yul\":7907:7910   */\n      dup6\n        /* \"#utility.yul\":7903:7917   */\n      add\n        /* \"#utility.yul\":7889:7901   */\n      dup3\n        /* \"#utility.yul\":7861:7918   */\n      tag_352\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7760:7928   */\n      pop\n        /* \"#utility.yul\":7522:7935   */\n      pop\n        /* \"#utility.yul\":7386:7935   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7941:8303   */\n    tag_104:\n        /* \"#utility.yul\":8104:8108   */\n      0x00\n        /* \"#utility.yul\":8142:8144   */\n      0x40\n        /* \"#utility.yul\":8131:8140   */\n      dup3\n        /* \"#utility.yul\":8127:8145   */\n      add\n        /* \"#utility.yul\":8119:8145   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8296   */\n      tag_467\n        /* \"#utility.yul\":8293:8294   */\n      0x00\n        /* \"#utility.yul\":8282:8291   */\n      dup4\n        /* \"#utility.yul\":8278:8295   */\n      add\n        /* \"#utility.yul\":8269:8275   */\n      dup5\n        /* \"#utility.yul\":8155:8296   */\n      tag_353\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7941:8303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8309:8449   */\n    tag_354:\n        /* \"#utility.yul\":8373:8382   */\n      0x00\n        /* \"#utility.yul\":8406:8443   */\n      tag_469\n        /* \"#utility.yul\":8437:8442   */\n      dup3\n        /* \"#utility.yul\":8406:8443   */\n      tag_344\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":8393:8443   */\n      swap1\n      pop\n        /* \"#utility.yul\":8309:8449   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8455:8614   */\n    tag_355:\n        /* \"#utility.yul\":8556:8607   */\n      tag_471\n        /* \"#utility.yul\":8601:8606   */\n      dup2\n        /* \"#utility.yul\":8556:8607   */\n      tag_354\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":8551:8554   */\n      dup3\n        /* \"#utility.yul\":8544:8608   */\n      mstore\n        /* \"#utility.yul\":8455:8614   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8620:8870   */\n    tag_109:\n        /* \"#utility.yul\":8727:8731   */\n      0x00\n        /* \"#utility.yul\":8765:8767   */\n      0x20\n        /* \"#utility.yul\":8754:8763   */\n      dup3\n        /* \"#utility.yul\":8750:8768   */\n      add\n        /* \"#utility.yul\":8742:8768   */\n      swap1\n      pop\n        /* \"#utility.yul\":8778:8863   */\n      tag_473\n        /* \"#utility.yul\":8860:8861   */\n      0x00\n        /* \"#utility.yul\":8849:8858   */\n      dup4\n        /* \"#utility.yul\":8845:8862   */\n      add\n        /* \"#utility.yul\":8836:8842   */\n      dup5\n        /* \"#utility.yul\":8778:8863   */\n      tag_355\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":8620:8870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8876:8961   */\n    tag_356:\n        /* \"#utility.yul\":8921:8928   */\n      0x00\n        /* \"#utility.yul\":8950:8955   */\n      dup2\n        /* \"#utility.yul\":8939:8955   */\n      swap1\n      pop\n        /* \"#utility.yul\":8876:8961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8967:9125   */\n    tag_357:\n        /* \"#utility.yul\":9025:9034   */\n      0x00\n        /* \"#utility.yul\":9058:9119   */\n      tag_476\n        /* \"#utility.yul\":9076:9118   */\n      tag_477\n        /* \"#utility.yul\":9085:9117   */\n      tag_478\n        /* \"#utility.yul\":9111:9116   */\n      dup5\n        /* \"#utility.yul\":9085:9117   */\n      tag_356\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":9076:9118   */\n      tag_342\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":9058:9119   */\n      tag_337\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":9045:9119   */\n      swap1\n      pop\n        /* \"#utility.yul\":8967:9125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9131:9278   */\n    tag_358:\n        /* \"#utility.yul\":9226:9271   */\n      tag_480\n        /* \"#utility.yul\":9265:9270   */\n      dup2\n        /* \"#utility.yul\":9226:9271   */\n      tag_357\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":9221:9224   */\n      dup3\n        /* \"#utility.yul\":9214:9272   */\n      mstore\n        /* \"#utility.yul\":9131:9278   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9284:9798   */\n    tag_139:\n        /* \"#utility.yul\":9469:9473   */\n      0x00\n        /* \"#utility.yul\":9507:9509   */\n      0x60\n        /* \"#utility.yul\":9496:9505   */\n      dup3\n        /* \"#utility.yul\":9492:9510   */\n      add\n        /* \"#utility.yul\":9484:9510   */\n      swap1\n      pop\n        /* \"#utility.yul\":9520:9605   */\n      tag_482\n        /* \"#utility.yul\":9602:9603   */\n      0x00\n        /* \"#utility.yul\":9591:9600   */\n      dup4\n        /* \"#utility.yul\":9587:9604   */\n      add\n        /* \"#utility.yul\":9578:9584   */\n      dup7\n        /* \"#utility.yul\":9520:9605   */\n      tag_355\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":9615:9701   */\n      tag_483\n        /* \"#utility.yul\":9697:9699   */\n      0x20\n        /* \"#utility.yul\":9686:9695   */\n      dup4\n        /* \"#utility.yul\":9682:9700   */\n      add\n        /* \"#utility.yul\":9673:9679   */\n      dup6\n        /* \"#utility.yul\":9615:9701   */\n      tag_355\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":9711:9791   */\n      tag_484\n        /* \"#utility.yul\":9787:9789   */\n      0x40\n        /* \"#utility.yul\":9776:9785   */\n      dup4\n        /* \"#utility.yul\":9772:9790   */\n      add\n        /* \"#utility.yul\":9763:9769   */\n      dup5\n        /* \"#utility.yul\":9711:9791   */\n      tag_358\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":9284:9798   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9804:10192   */\n    tag_141:\n        /* \"#utility.yul\":9953:9957   */\n      0x00\n        /* \"#utility.yul\":9991:9993   */\n      0x40\n        /* \"#utility.yul\":9980:9989   */\n      dup3\n        /* \"#utility.yul\":9976:9994   */\n      add\n        /* \"#utility.yul\":9968:9994   */\n      swap1\n      pop\n        /* \"#utility.yul\":10004:10089   */\n      tag_486\n        /* \"#utility.yul\":10086:10087   */\n      0x00\n        /* \"#utility.yul\":10075:10084   */\n      dup4\n        /* \"#utility.yul\":10071:10088   */\n      add\n        /* \"#utility.yul\":10062:10068   */\n      dup6\n        /* \"#utility.yul\":10004:10089   */\n      tag_355\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":10099:10185   */\n      tag_487\n        /* \"#utility.yul\":10181:10183   */\n      0x20\n        /* \"#utility.yul\":10170:10179   */\n      dup4\n        /* \"#utility.yul\":10166:10184   */\n      add\n        /* \"#utility.yul\":10157:10163   */\n      dup5\n        /* \"#utility.yul\":10099:10185   */\n      tag_355\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9804:10192   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10198:10313   */\n    tag_359:\n        /* \"#utility.yul\":10283:10306   */\n      tag_489\n        /* \"#utility.yul\":10300:10305   */\n      dup2\n        /* \"#utility.yul\":10283:10306   */\n      tag_339\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":10278:10281   */\n      dup3\n        /* \"#utility.yul\":10271:10307   */\n      mstore\n        /* \"#utility.yul\":10198:10313   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10319:10912   */\n    tag_145:\n        /* \"#utility.yul\":10516:10520   */\n      0x00\n        /* \"#utility.yul\":10554:10557   */\n      0x80\n        /* \"#utility.yul\":10543:10552   */\n      dup3\n        /* \"#utility.yul\":10539:10558   */\n      add\n        /* \"#utility.yul\":10531:10558   */\n      swap1\n      pop\n        /* \"#utility.yul\":10568:10653   */\n      tag_491\n        /* \"#utility.yul\":10650:10651   */\n      0x00\n        /* \"#utility.yul\":10639:10648   */\n      dup4\n        /* \"#utility.yul\":10635:10652   */\n      add\n        /* \"#utility.yul\":10626:10632   */\n      dup8\n        /* \"#utility.yul\":10568:10653   */\n      tag_355\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":10663:10749   */\n      tag_492\n        /* \"#utility.yul\":10745:10747   */\n      0x20\n        /* \"#utility.yul\":10734:10743   */\n      dup4\n        /* \"#utility.yul\":10730:10748   */\n      add\n        /* \"#utility.yul\":10721:10727   */\n      dup7\n        /* \"#utility.yul\":10663:10749   */\n      tag_355\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":10759:10829   */\n      tag_493\n        /* \"#utility.yul\":10825:10827   */\n      0x40\n        /* \"#utility.yul\":10814:10823   */\n      dup4\n        /* \"#utility.yul\":10810:10828   */\n      add\n        /* \"#utility.yul\":10801:10807   */\n      dup6\n        /* \"#utility.yul\":10759:10829   */\n      tag_359\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":10839:10905   */\n      tag_494\n        /* \"#utility.yul\":10901:10903   */\n      0x60\n        /* \"#utility.yul\":10890:10899   */\n      dup4\n        /* \"#utility.yul\":10886:10904   */\n      add\n        /* \"#utility.yul\":10877:10883   */\n      dup5\n        /* \"#utility.yul\":10839:10905   */\n      tag_335\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":10319:10912   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10918:11098   */\n    tag_360:\n        /* \"#utility.yul\":10966:11043   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10963:10964   */\n      0x00\n        /* \"#utility.yul\":10956:11044   */\n      mstore\n        /* \"#utility.yul\":11063:11067   */\n      0x11\n        /* \"#utility.yul\":11060:11061   */\n      0x04\n        /* \"#utility.yul\":11053:11068   */\n      mstore\n        /* \"#utility.yul\":11087:11091   */\n      0x24\n        /* \"#utility.yul\":11084:11085   */\n      0x00\n        /* \"#utility.yul\":11077:11092   */\n      revert\n        /* \"#utility.yul\":11104:11295   */\n    tag_151:\n        /* \"#utility.yul\":11144:11148   */\n      0x00\n        /* \"#utility.yul\":11164:11184   */\n      tag_497\n        /* \"#utility.yul\":11182:11183   */\n      dup3\n        /* \"#utility.yul\":11164:11184   */\n      tag_337\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":11159:11184   */\n      swap2\n      pop\n        /* \"#utility.yul\":11198:11218   */\n      tag_498\n        /* \"#utility.yul\":11216:11217   */\n      dup4\n        /* \"#utility.yul\":11198:11218   */\n      tag_337\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11193:11218   */\n      swap3\n      pop\n        /* \"#utility.yul\":11237:11238   */\n      dup3\n        /* \"#utility.yul\":11234:11235   */\n      dup3\n        /* \"#utility.yul\":11231:11239   */\n      lt\n        /* \"#utility.yul\":11228:11262   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":11242:11260   */\n      tag_500\n      tag_360\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":11228:11262   */\n    tag_499:\n        /* \"#utility.yul\":11287:11288   */\n      dup3\n        /* \"#utility.yul\":11284:11285   */\n      dup3\n        /* \"#utility.yul\":11280:11289   */\n      sub\n        /* \"#utility.yul\":11272:11289   */\n      swap1\n      pop\n        /* \"#utility.yul\":11104:11295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11301:11665   */\n    tag_153:\n        /* \"#utility.yul\":11438:11442   */\n      0x00\n        /* \"#utility.yul\":11476:11478   */\n      0x40\n        /* \"#utility.yul\":11465:11474   */\n      dup3\n        /* \"#utility.yul\":11461:11479   */\n      add\n        /* \"#utility.yul\":11453:11479   */\n      swap1\n      pop\n        /* \"#utility.yul\":11489:11576   */\n      tag_502\n        /* \"#utility.yul\":11573:11574   */\n      0x00\n        /* \"#utility.yul\":11562:11571   */\n      dup4\n        /* \"#utility.yul\":11558:11575   */\n      add\n        /* \"#utility.yul\":11549:11555   */\n      dup6\n        /* \"#utility.yul\":11489:11576   */\n      tag_346\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":11586:11658   */\n      tag_503\n        /* \"#utility.yul\":11654:11656   */\n      0x20\n        /* \"#utility.yul\":11643:11652   */\n      dup4\n        /* \"#utility.yul\":11639:11657   */\n      add\n        /* \"#utility.yul\":11630:11636   */\n      dup5\n        /* \"#utility.yul\":11586:11658   */\n      tag_338\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":11301:11665   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11671:11786   */\n    tag_361:\n        /* \"#utility.yul\":11727:11734   */\n      0x00\n        /* \"#utility.yul\":11756:11780   */\n      tag_505\n        /* \"#utility.yul\":11774:11779   */\n      dup3\n        /* \"#utility.yul\":11756:11780   */\n      tag_331\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11745:11780   */\n      swap1\n      pop\n        /* \"#utility.yul\":11671:11786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11792:11952   */\n    tag_362:\n        /* \"#utility.yul\":11884:11927   */\n      tag_507\n        /* \"#utility.yul\":11921:11926   */\n      dup2\n        /* \"#utility.yul\":11884:11927   */\n      tag_361\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":11877:11882   */\n      dup2\n        /* \"#utility.yul\":11874:11928   */\n      eq\n        /* \"#utility.yul\":11864:11946   */\n      tag_508\n      jumpi\n        /* \"#utility.yul\":11942:11943   */\n      0x00\n        /* \"#utility.yul\":11939:11940   */\n      dup1\n        /* \"#utility.yul\":11932:11944   */\n      revert\n        /* \"#utility.yul\":11864:11946   */\n    tag_508:\n        /* \"#utility.yul\":11792:11952   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11958:12139   */\n    tag_363:\n        /* \"#utility.yul\":12034:12039   */\n      0x00\n        /* \"#utility.yul\":12065:12071   */\n      dup2\n        /* \"#utility.yul\":12059:12072   */\n      mload\n        /* \"#utility.yul\":12050:12072   */\n      swap1\n      pop\n        /* \"#utility.yul\":12081:12133   */\n      tag_510\n        /* \"#utility.yul\":12127:12132   */\n      dup2\n        /* \"#utility.yul\":12081:12133   */\n      tag_362\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":11958:12139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12145:12534   */\n    tag_184:\n        /* \"#utility.yul\":12234:12240   */\n      0x00\n        /* \"#utility.yul\":12283:12285   */\n      0x20\n        /* \"#utility.yul\":12271:12280   */\n      dup3\n        /* \"#utility.yul\":12262:12269   */\n      dup5\n        /* \"#utility.yul\":12258:12281   */\n      sub\n        /* \"#utility.yul\":12254:12286   */\n      slt\n        /* \"#utility.yul\":12251:12370   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":12289:12368   */\n      tag_513\n      tag_325\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":12251:12370   */\n    tag_512:\n        /* \"#utility.yul\":12409:12410   */\n      0x00\n        /* \"#utility.yul\":12434:12517   */\n      tag_514\n        /* \"#utility.yul\":12509:12516   */\n      dup5\n        /* \"#utility.yul\":12500:12506   */\n      dup3\n        /* \"#utility.yul\":12489:12498   */\n      dup6\n        /* \"#utility.yul\":12485:12507   */\n      add\n        /* \"#utility.yul\":12434:12517   */\n      tag_363\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12424:12517   */\n      swap2\n      pop\n        /* \"#utility.yul\":12380:12527   */\n      pop\n        /* \"#utility.yul\":12145:12534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12540:12872   */\n    tag_190:\n        /* \"#utility.yul\":12661:12665   */\n      0x00\n        /* \"#utility.yul\":12699:12701   */\n      0x40\n        /* \"#utility.yul\":12688:12697   */\n      dup3\n        /* \"#utility.yul\":12684:12702   */\n      add\n        /* \"#utility.yul\":12676:12702   */\n      swap1\n      pop\n        /* \"#utility.yul\":12712:12783   */\n      tag_516\n        /* \"#utility.yul\":12780:12781   */\n      0x00\n        /* \"#utility.yul\":12769:12778   */\n      dup4\n        /* \"#utility.yul\":12765:12782   */\n      add\n        /* \"#utility.yul\":12756:12762   */\n      dup6\n        /* \"#utility.yul\":12712:12783   */\n      tag_336\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":12793:12865   */\n      tag_517\n        /* \"#utility.yul\":12861:12863   */\n      0x20\n        /* \"#utility.yul\":12850:12859   */\n      dup4\n        /* \"#utility.yul\":12846:12864   */\n      add\n        /* \"#utility.yul\":12837:12843   */\n      dup5\n        /* \"#utility.yul\":12793:12865   */\n      tag_336\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":12540:12872   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12878:13047   */\n    tag_364:\n        /* \"#utility.yul\":12962:12973   */\n      0x00\n        /* \"#utility.yul\":12996:13002   */\n      dup3\n        /* \"#utility.yul\":12991:12994   */\n      dup3\n        /* \"#utility.yul\":12984:13003   */\n      mstore\n        /* \"#utility.yul\":13036:13040   */\n      0x20\n        /* \"#utility.yul\":13031:13034   */\n      dup3\n        /* \"#utility.yul\":13027:13041   */\n      add\n        /* \"#utility.yul\":13012:13041   */\n      swap1\n      pop\n        /* \"#utility.yul\":12878:13047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13053:13226   */\n    tag_365:\n        /* \"#utility.yul\":13193:13218   */\n      0x455243313136373a2063726561746532206661696c6564000000000000000000\n        /* \"#utility.yul\":13189:13190   */\n      0x00\n        /* \"#utility.yul\":13181:13187   */\n      dup3\n        /* \"#utility.yul\":13177:13191   */\n      add\n        /* \"#utility.yul\":13170:13219   */\n      mstore\n        /* \"#utility.yul\":13053:13226   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13232:13598   */\n    tag_366:\n        /* \"#utility.yul\":13374:13377   */\n      0x00\n        /* \"#utility.yul\":13395:13462   */\n      tag_521\n        /* \"#utility.yul\":13459:13461   */\n      0x17\n        /* \"#utility.yul\":13454:13457   */\n      dup4\n        /* \"#utility.yul\":13395:13462   */\n      tag_364\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13388:13462   */\n      swap2\n      pop\n        /* \"#utility.yul\":13471:13564   */\n      tag_522\n        /* \"#utility.yul\":13560:13563   */\n      dup3\n        /* \"#utility.yul\":13471:13564   */\n      tag_365\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13589:13591   */\n      0x20\n        /* \"#utility.yul\":13584:13587   */\n      dup3\n        /* \"#utility.yul\":13580:13592   */\n      add\n        /* \"#utility.yul\":13573:13592   */\n      swap1\n      pop\n        /* \"#utility.yul\":13232:13598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13604:14023   */\n    tag_237:\n        /* \"#utility.yul\":13770:13774   */\n      0x00\n        /* \"#utility.yul\":13808:13810   */\n      0x20\n        /* \"#utility.yul\":13797:13806   */\n      dup3\n        /* \"#utility.yul\":13793:13811   */\n      add\n        /* \"#utility.yul\":13785:13811   */\n      swap1\n      pop\n        /* \"#utility.yul\":13857:13866   */\n      dup2\n        /* \"#utility.yul\":13851:13855   */\n      dup2\n        /* \"#utility.yul\":13847:13867   */\n      sub\n        /* \"#utility.yul\":13843:13844   */\n      0x00\n        /* \"#utility.yul\":13832:13841   */\n      dup4\n        /* \"#utility.yul\":13828:13845   */\n      add\n        /* \"#utility.yul\":13821:13868   */\n      mstore\n        /* \"#utility.yul\":13885:14016   */\n      tag_524\n        /* \"#utility.yul\":14011:14015   */\n      dup2\n        /* \"#utility.yul\":13885:14016   */\n      tag_366\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13877:14016   */\n      swap1\n      pop\n        /* \"#utility.yul\":13604:14023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14029:14209   */\n    tag_264:\n        /* \"#utility.yul\":14077:14154   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14074:14075   */\n      0x00\n        /* \"#utility.yul\":14067:14155   */\n      mstore\n        /* \"#utility.yul\":14174:14178   */\n      0x12\n        /* \"#utility.yul\":14171:14172   */\n      0x04\n        /* \"#utility.yul\":14164:14179   */\n      mstore\n        /* \"#utility.yul\":14198:14202   */\n      0x24\n        /* \"#utility.yul\":14195:14196   */\n      0x00\n        /* \"#utility.yul\":14188:14203   */\n      revert\n        /* \"#utility.yul\":14215:14291   */\n    tag_367:\n        /* \"#utility.yul\":14251:14258   */\n      0x00\n        /* \"#utility.yul\":14280:14285   */\n      dup2\n        /* \"#utility.yul\":14269:14285   */\n      swap1\n      pop\n        /* \"#utility.yul\":14215:14291   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14297:14412   */\n    tag_368:\n        /* \"#utility.yul\":14382:14405   */\n      tag_528\n        /* \"#utility.yul\":14399:14404   */\n      dup2\n        /* \"#utility.yul\":14382:14405   */\n      tag_367\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14377:14380   */\n      dup3\n        /* \"#utility.yul\":14370:14406   */\n      mstore\n        /* \"#utility.yul\":14297:14412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14418:14746   */\n    tag_292:\n        /* \"#utility.yul\":14537:14541   */\n      0x00\n        /* \"#utility.yul\":14575:14577   */\n      0x40\n        /* \"#utility.yul\":14564:14573   */\n      dup3\n        /* \"#utility.yul\":14560:14578   */\n      add\n        /* \"#utility.yul\":14552:14578   */\n      swap1\n      pop\n        /* \"#utility.yul\":14588:14659   */\n      tag_530\n        /* \"#utility.yul\":14656:14657   */\n      0x00\n        /* \"#utility.yul\":14645:14654   */\n      dup4\n        /* \"#utility.yul\":14641:14658   */\n      add\n        /* \"#utility.yul\":14632:14638   */\n      dup6\n        /* \"#utility.yul\":14588:14659   */\n      tag_338\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":14669:14739   */\n      tag_531\n        /* \"#utility.yul\":14735:14737   */\n      0x20\n        /* \"#utility.yul\":14724:14733   */\n      dup4\n        /* \"#utility.yul\":14720:14738   */\n      add\n        /* \"#utility.yul\":14711:14717   */\n      dup5\n        /* \"#utility.yul\":14669:14739   */\n      tag_368\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14418:14746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14752:14937   */\n    tag_296:\n        /* \"#utility.yul\":14792:14793   */\n      0x00\n        /* \"#utility.yul\":14809:14829   */\n      tag_533\n        /* \"#utility.yul\":14827:14828   */\n      dup3\n        /* \"#utility.yul\":14809:14829   */\n      tag_337\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":14804:14829   */\n      swap2\n      pop\n        /* \"#utility.yul\":14843:14863   */\n      tag_534\n        /* \"#utility.yul\":14861:14862   */\n      dup4\n        /* \"#utility.yul\":14843:14863   */\n      tag_337\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":14838:14863   */\n      swap3\n      pop\n        /* \"#utility.yul\":14882:14883   */\n      dup3\n        /* \"#utility.yul\":14872:14907   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":14887:14905   */\n      tag_536\n      tag_264\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":14872:14907   */\n    tag_535:\n        /* \"#utility.yul\":14929:14930   */\n      dup3\n        /* \"#utility.yul\":14926:14927   */\n      dup3\n        /* \"#utility.yul\":14922:14931   */\n      div\n        /* \"#utility.yul\":14917:14931   */\n      swap1\n      pop\n        /* \"#utility.yul\":14752:14937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14943:15123   */\n    tag_310:\n        /* \"#utility.yul\":14991:15068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14988:14989   */\n      0x00\n        /* \"#utility.yul\":14981:15069   */\n      mstore\n        /* \"#utility.yul\":15088:15092   */\n      0x32\n        /* \"#utility.yul\":15085:15086   */\n      0x04\n        /* \"#utility.yul\":15078:15093   */\n      mstore\n        /* \"#utility.yul\":15112:15116   */\n      0x24\n        /* \"#utility.yul\":15109:15110   */\n      0x00\n        /* \"#utility.yul\":15102:15117   */\n      revert\n        /* \"#utility.yul\":15129:15309   */\n    tag_317:\n        /* \"#utility.yul\":15177:15254   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15174:15175   */\n      0x00\n        /* \"#utility.yul\":15167:15255   */\n      mstore\n        /* \"#utility.yul\":15274:15278   */\n      0x31\n        /* \"#utility.yul\":15271:15272   */\n      0x04\n        /* \"#utility.yul\":15264:15279   */\n      mstore\n        /* \"#utility.yul\":15298:15302   */\n      0x24\n        /* \"#utility.yul\":15295:15296   */\n      0x00\n        /* \"#utility.yul\":15288:15303   */\n      revert\n\n    auxdata: 0xa264697066735822122089a482ed4b00096cbc56209c8331012820edb9aabbdd3182c27842667815eedc64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1392": {
									"entryPoint": null,
									"id": 1392,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3772": {
									"entryPoint": null,
									"id": 3772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setFeeRecipient_1831": {
									"entryPoint": 358,
									"id": 1831,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_3906": {
									"entryPoint": 96,
									"id": 3906,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1889:19",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:19",
														"type": ""
													}
												],
												"src": "696:143:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:19"
															},
															"nodeType": "YulIf",
															"src": "932:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:19",
														"type": ""
													}
												],
												"src": "845:351:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1255:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1262:3:19",
														"type": ""
													}
												],
												"src": "1202:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1434:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1396:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1419:4:19",
														"type": ""
													}
												],
												"src": "1326:222:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1680:206:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1690:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1702:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1713:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1698:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1698:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1690:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1783:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1794:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1779:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1779:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1726:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1726:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1851:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1864:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1875:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1860:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1860:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1807:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1807:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1644:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1656:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1664:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1675:4:19",
														"type": ""
													}
												],
												"src": "1554:332:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162002dde38038062002dde833981810160405281019062000037919062000353565b62000048336200006060201b60201c565b62000059816200016660201b60201c565b50620003e0565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001ce576040517f95cf3ee400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200026957816040517f4fcea97100000000000000000000000000000000000000000000000000000000815260040162000260919062000396565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa708401527218183604051620002dd929190620003b3565b60405180910390a15050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031b82620002ee565b9050919050565b6200032d816200030e565b81146200033957600080fd5b50565b6000815190506200034d8162000322565b92915050565b6000602082840312156200036c576200036b620002e9565b5b60006200037c848285016200033c565b91505092915050565b62000390816200030e565b82525050565b6000602082019050620003ad600083018462000385565b92915050565b6000604082019050620003ca600083018562000385565b620003d9602083018462000385565b9392505050565b6129ee80620003f06000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806372e47b8c116100c3578063ddbfd9411161007c578063ddbfd94114610356578063e30c397814610372578063e74b981b14610390578063eaec42a4146103ac578063f89a4cd5146103dc578063f9dca9891461040c5761014d565b806372e47b8c1461029457806380c5061e146102c45780638da5cb5b146102e2578063b038478114610300578063bc063e1a1461031c578063c42069ec1461033a5761014d565b8063509ceb9011610115578063509ceb90146101f857806352e2cf8e146102165780635a440923146102465780635c779d6d1461026257806367ab8a4e14610280578063715018a61461028a5761014d565b806322f3fe1414610152578063277218421461016e578063469048401461019e5780634847cdc8146101bc5780634e937c3a146101da575b600080fd5b61016c60048036038101906101679190612228565b610416565b005b610188600480360381019061018391906122c5565b61053c565b6040516101959190612301565b60405180910390f35b6101a6610559565b6040516101b3919061232b565b60405180910390f35b6101c461057f565b6040516101d1919061235f565b60405180910390f35b6101e2610585565b6040516101ef919061235f565b60405180910390f35b610200610592565b60405161020d919061232b565b60405180910390f35b610230600480360381019061022b91906123b5565b6105b8565b60405161023d919061247b565b60405180910390f35b610260600480360381019061025b91906122c5565b610c13565b005b61026a610d33565b6040516102779190612301565b60405180910390f35b610288610d46565b005b610292610e60565b005b6102ae60048036038101906102a991906124c2565b610ef1565b6040516102bb919061247b565b60405180910390f35b6102cc610f30565b6040516102d9919061235f565b60405180910390f35b6102ea610f41565b6040516102f7919061232b565b60405180910390f35b61031a6004803603810190610315919061251b565b610f6a565b005b6103246111e3565b604051610331919061235f565b60405180910390f35b610354600480360381019061034f919061251b565b6111ef565b005b610370600480360381019061036b91906122c5565b61136f565b005b61037a61148f565b604051610387919061232b565b60405180910390f35b6103aa60048036038101906103a5919061251b565b6114b9565b005b6103c660048036038101906103c19190612548565b61154a565b6040516103d391906125d5565b60405180910390f35b6103f660048036038101906103f191906124c2565b611564565b6040516104039190612611565b60405180910390f35b610414611581565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049b576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801515600360149054906101000a900460ff161515146104e7576040517f0b6ef29400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015600360146101000a81548160ff0219169083151502179055507fcdee7bf87b7a743b4cbe1d2d534c5248621b76f58460337e7fda92d5d23f4124816040516105319190612301565b60405180910390a150565b600061055282600961164c90919063ffffffff16565b9050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600580549050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c3610f41565b9050600360149054906101000a900460ff1615801561060e57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561065057336040517f3a43e980000000000000000000000000000000000000000000000000000000008152600401610647919061232b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106de576040517fa2d3f3e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f286600961164c90919063ffffffff16565b61073357856040517f8e888ef300000000000000000000000000000000000000000000000000000000815260040161072a9190612611565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156107a457866040517f2f9b185300000000000000000000000000000000000000000000000000000000815260040161079b9190612611565b60405180910390fd5b6107b28562ffffff1661167c565b506000806107c089896116e9565b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082b576040517f95cf3ee400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461094057888860016040517fcb27a43500000000000000000000000000000000000000000000000000000000815260040161093793929190612667565b60405180910390fd5b6000828260405160200161095592919061269e565b6040516020818303038152906040528051906020012090506109778482611738565b95508573ffffffffffffffffffffffffffffffffffffffff16638c6abc0f8b8b8b8b6040518563ffffffff1660e01b81526004016109b894939291906126d6565b600060405180830381600087803b1580156109d257600080fd5b505af11580156109e6573d6000803e3d6000fd5b5050505060405180604001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515815250600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055509050506005869080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f612fdd9b533d1ca33088dcbca9ad3186eeadc9893e63715b8a783040d729cd6a886001600580549050610bf0919061274a565b604051610bfe92919061277e565b60405180910390a35050505050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c98576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cac8160096117f590919063ffffffff16565b610ced57806040517f03ce0ad9000000000000000000000000000000000000000000000000000000008152600401610ce49190612611565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e60405160405180910390a250565b600360149054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e54576040517fecfad6bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e5e6000611825565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee5576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610eef60006118ac565b565b60058181548110610f0157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f3c60096119b2565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fef576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611051573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107591906127e5565b73ffffffffffffffffffffffffffffffffffffffff16146110cd57806040517f147ce15e0000000000000000000000000000000000000000000000000000000081526004016110c4919061232b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561116557816040517f6f69dca800000000000000000000000000000000000000000000000000000000815260040161115c919061232b565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e81836040516111d7929190612812565b60405180910390a15050565b67016345785d8a000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611274576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112db576040517f91f3851500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611363576040517f716b1fbf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136c81611825565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113f4576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114088160096119c790919063ffffffff16565b61144957806040517f8e888ef30000000000000000000000000000000000000000000000000000000081526004016114409190612611565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb360405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461153e576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611547816119f7565b50565b6115526121b9565b61155c8383611b74565b905092915050565b600061157a826009611c8e90919063ffffffff16565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158061160a5750600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15611641576040517f7304d01200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61164a336118ac565b565b6000611674836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611ca8565b905092915050565b600062ffffff80168211156116bd576040517f58f62eac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600062800000830390506116e1816116d3611ccb565b611cf190919063ffffffff16565b915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561172b57828480945081955050505b8383915091509250929050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e690612898565b60405180910390fd5b92915050565b600061181d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611ff9565b905092915050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f560405160405180910390a250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006119c082600001612069565b9050919050565b60006119ef836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61207a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a5e576040517f95cf3ee400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611af657816040517f4fcea971000000000000000000000000000000000000000000000000000000008152600401611aed919061232b565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa708401527218183604051611b68929190612812565b60405180910390a15050565b611b7c6121b9565b611b8683836116e9565b8093508194505050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581525050905092915050565b6000611c9d836000018361218e565b60001c905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600061271060806001901b81611ce457611ce36128b8565b5b0460806001901b01905090565b600080600080841415611d0d5760806001901b92505050611ff3565b8390506000811215611d2457806000039050811591505b62100000811015611f6e5760806001901b9250846fffffffffffffffffffffffffffffffff861115611d5c5780600019049050821592505b6001821615611d6e5780840260801c93505b80810260801c90506002821615611d885780840260801c93505b80810260801c90506004821615611da25780840260801c93505b80810260801c90506008821615611dbc5780840260801c93505b80810260801c90506010821615611dd65780840260801c93505b80810260801c90506020821615611df05780840260801c93505b80810260801c90506040821615611e0a5780840260801c93505b80810260801c90506080821615611e245780840260801c93505b80810260801c9050610100821615611e3f5780840260801c93505b80810260801c9050610200821615611e5a5780840260801c93505b80810260801c9050610400821615611e755780840260801c93505b80810260801c9050610800821615611e905780840260801c93505b80810260801c9050611000821615611eab5780840260801c93505b80810260801c9050612000821615611ec65780840260801c93505b80810260801c9050614000821615611ee15780840260801c93505b80810260801c9050618000821615611efc5780840260801c93505b80810260801c905062010000821615611f185780840260801c93505b80810260801c905062020000821615611f345780840260801c93505b80810260801c905062040000821615611f505780840260801c93505b80810260801c905062080000821615611f6c5780840260801c93505b505b6000831415611fb65784846040517f74e3eb08000000000000000000000000000000000000000000000000000000008152600401611fad929190612900565b60405180910390fd5b81611fc15782611fee565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fed9190612929565b5b925050505b92915050565b60006120058383611ca8565b61205e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612063565b600090505b92915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020549050600081146121825760006001826120ac919061274a565b90506000600186600001805490506120c4919061274a565b90508181146121335760008660000182815481106120e5576120e461295a565b5b90600052602060002001549050808760000184815481106121095761210861295a565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061214757612146612989565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612188565b60009150505b92915050565b60008260000182815481106121a6576121a561295a565b5b9060005260206000200154905092915050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b600080fd5b60008115159050919050565b612205816121f0565b811461221057600080fd5b50565b600081359050612222816121fc565b92915050565b60006020828403121561223e5761223d6121eb565b5b600061224c84828501612213565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061228082612255565b9050919050565b600061229282612275565b9050919050565b6122a281612287565b81146122ad57600080fd5b50565b6000813590506122bf81612299565b92915050565b6000602082840312156122db576122da6121eb565b5b60006122e9848285016122b0565b91505092915050565b6122fb816121f0565b82525050565b600060208201905061231660008301846122f2565b92915050565b61232581612275565b82525050565b6000602082019050612340600083018461231c565b92915050565b6000819050919050565b61235981612346565b82525050565b60006020820190506123746000830184612350565b92915050565b600062ffffff82169050919050565b6123928161237a565b811461239d57600080fd5b50565b6000813590506123af81612389565b92915050565b600080600080608085870312156123cf576123ce6121eb565b5b60006123dd878288016122b0565b94505060206123ee878288016122b0565b93505060406123ff878288016123a0565b925050606061241087828801612213565b91505092959194509250565b6000819050919050565b600061244161243c61243784612255565b61241c565b612255565b9050919050565b600061245382612426565b9050919050565b600061246582612448565b9050919050565b6124758161245a565b82525050565b6000602082019050612490600083018461246c565b92915050565b61249f81612346565b81146124aa57600080fd5b50565b6000813590506124bc81612496565b92915050565b6000602082840312156124d8576124d76121eb565b5b60006124e6848285016124ad565b91505092915050565b6124f881612275565b811461250357600080fd5b50565b600081359050612515816124ef565b92915050565b600060208284031215612531576125306121eb565b5b600061253f84828501612506565b91505092915050565b6000806040838503121561255f5761255e6121eb565b5b600061256d858286016122b0565b925050602061257e858286016122b0565b9150509250929050565b6125918161245a565b82525050565b6125a0816121f0565b82525050565b6040820160008201516125bc6000850182612588565b5060208201516125cf6020850182612597565b50505050565b60006040820190506125ea60008301846125a6565b92915050565b60006125fb82612448565b9050919050565b61260b816125f0565b82525050565b60006020820190506126266000830184612602565b92915050565b6000819050919050565b600061265161264c6126478461262c565b61241c565b612346565b9050919050565b61266181612636565b82525050565b600060608201905061267c6000830186612602565b6126896020830185612602565b6126966040830184612658565b949350505050565b60006040820190506126b36000830185612602565b6126c06020830184612602565b9392505050565b6126d08161237a565b82525050565b60006080820190506126eb6000830187612602565b6126f86020830186612602565b61270560408301856126c7565b61271260608301846122f2565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061275582612346565b915061276083612346565b9250828210156127735761277261271b565b5b828203905092915050565b6000604082019050612793600083018561246c565b6127a06020830184612350565b9392505050565b60006127b282612275565b9050919050565b6127c2816127a7565b81146127cd57600080fd5b50565b6000815190506127df816127b9565b92915050565b6000602082840312156127fb576127fa6121eb565b5b6000612809848285016127d0565b91505092915050565b6000604082019050612827600083018561231c565b612834602083018461231c565b9392505050565b600082825260208201905092915050565b7f455243313136373a2063726561746532206661696c6564000000000000000000600082015250565b600061288260178361283b565b915061288d8261284c565b602082019050919050565b600060208201905081810360008301526128b181612875565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000819050919050565b6128fa816128e7565b82525050565b60006040820190506129156000830185612350565b61292260208301846128f1565b9392505050565b600061293482612346565b915061293f83612346565b92508261294f5761294e6128b8565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122089a482ed4b00096cbc56209c8331012820edb9aabbdd3182c27842667815eedc64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2DDE CODESIZE SUB DUP1 PUSH3 0x2DDE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x353 JUMP JUMPDEST PUSH3 0x48 CALLER PUSH3 0x60 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x59 DUP2 PUSH3 0x166 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x3E0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x95CF3EE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x269 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4FCEA97100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x260 SWAP2 SWAP1 PUSH3 0x396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH3 0x2DD SWAP3 SWAP2 SWAP1 PUSH3 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x31B DUP3 PUSH3 0x2EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x32D DUP2 PUSH3 0x30E JUMP JUMPDEST DUP2 EQ PUSH3 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x34D DUP2 PUSH3 0x322 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x36C JUMPI PUSH3 0x36B PUSH3 0x2E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x37C DUP5 DUP3 DUP6 ADD PUSH3 0x33C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x390 DUP2 PUSH3 0x30E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x3AD PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x3CA PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x385 JUMP JUMPDEST PUSH3 0x3D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x385 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x29EE DUP1 PUSH3 0x3F0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72E47B8C GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDDBFD941 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDBFD941 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xEAEC42A4 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xF89A4CD5 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0x40C JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x72E47B8C EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x80C5061E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xB0384781 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0x33A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x509CEB90 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x509CEB90 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x52E2CF8E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5A440923 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x5C779D6D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x22F3FE14 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x27721842 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x4847CDC8 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x4E937C3A EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xD46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0xE60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xF6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0x136F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x14B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH2 0x1581 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB6EF29400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xCDEE7BF87B7A743B4CBE1D2D534C5248621B76F58460337E7FDA92D5D23F4124 DUP2 PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x552 DUP3 PUSH1 0x9 PUSH2 0x164C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C3 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x650 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x3A43E98000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2D3F3E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F2 DUP7 PUSH1 0x9 PUSH2 0x164C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x733 JUMPI DUP6 PUSH1 0x40 MLOAD PUSH32 0x8E888EF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A4 JUMPI DUP7 PUSH1 0x40 MLOAD PUSH32 0x2F9B185300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP6 PUSH3 0xFFFFFF AND PUSH2 0x167C JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x7C0 DUP10 DUP10 PUSH2 0x16E9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x95CF3EE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x940 JUMPI DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0xCB27A43500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x955 SWAP3 SWAP2 SWAP1 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x977 DUP5 DUP3 PUSH2 0x1738 JUMP JUMPDEST SWAP6 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C6ABC0F DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x612FDD9B533D1CA33088DCBCA9AD3186EEADC9893E63715B8A783040D729CD6A DUP9 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x274A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP3 SWAP2 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAC DUP2 PUSH1 0x9 PUSH2 0x17F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCED JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x3CE0AD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE4 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x84CC2115995684DCB0CD3D3A9565E3D32F075DE81DB70C8DC3A719B2A47AF67E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5E PUSH1 0x0 PUSH2 0x1825 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEEF PUSH1 0x0 PUSH2 0x18AC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3C PUSH1 0x9 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1051 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10CD JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x147CE15E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1165 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x6F69DCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115C SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x900D0E3D359F50E4F923ECDC06B401E07DBB9F485E17B07BCFC91A13000B277E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x136C DUP2 PUSH2 0x1825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1408 DUP2 PUSH1 0x9 PUSH2 0x19C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1449 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x8E888EF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1440 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB767739217755D8AF5A2BA75B181A19FA1750F8BB701F09311CB19A90140CB3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x19F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x155C DUP4 DUP4 PUSH2 0x1B74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP3 PUSH1 0x9 PUSH2 0x1C8E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x160A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164A CALLER PUSH2 0x18AC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1674 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1CA8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x16BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x58F62EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x800000 DUP4 SUB SWAP1 POP PUSH2 0x16E1 DUP2 PUSH2 0x16D3 PUSH2 0x1CCB JUMP JUMPDEST PUSH2 0x1CF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x172B JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST DUP4 DUP4 SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP2 PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E6 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C0 DUP3 PUSH1 0x0 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EF DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x207A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x95CF3EE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AF6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4FCEA97100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B68 SWAP3 SWAP2 SWAP1 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1B7C PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x1B86 DUP4 DUP4 PUSH2 0x16E9 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9D DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL DUP2 PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x28B8 JUMP JUMPDEST JUMPDEST DIV PUSH1 0x80 PUSH1 0x1 SWAP1 SHL ADD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 EQ ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SWAP3 POP POP POP PUSH2 0x1FF3 JUMP JUMPDEST DUP4 SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1D24 JUMPI DUP1 PUSH1 0x0 SUB SWAP1 POP DUP2 ISZERO SWAP2 POP JUMPDEST PUSH3 0x100000 DUP2 LT ISZERO PUSH2 0x1F6E JUMPI PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SWAP3 POP DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 GT ISZERO PUSH2 0x1D5C JUMPI DUP1 PUSH1 0x0 NOT DIV SWAP1 POP DUP3 ISZERO SWAP3 POP JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x1D6E JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x1D88 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x1DA2 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x1DBC JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x1DD6 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1DF0 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x1E0A JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x1E24 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x1E3F JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x1E5A JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x1E75 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1E90 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x1EAB JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x1EC6 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x1EE1 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x1EFC JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x1F18 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x1F34 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1F50 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x1F6C JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x1FB6 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x74E3EB0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FAD SWAP3 SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x1FC1 JUMPI DUP3 PUSH2 0x1FEE JUMP JUMPDEST DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1FED SWAP2 SWAP1 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP4 DUP4 PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0x205E JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2182 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x20C4 SWAP2 SWAP1 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2133 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x295A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2109 JUMPI PUSH2 0x2108 PUSH2 0x295A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x2989 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x295A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2205 DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2222 DUP2 PUSH2 0x21FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x223E JUMPI PUSH2 0x223D PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP5 DUP3 DUP6 ADD PUSH2 0x2213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2280 DUP3 PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2292 DUP3 PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A2 DUP2 PUSH2 0x2287 JUMP JUMPDEST DUP2 EQ PUSH2 0x22AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22BF DUP2 PUSH2 0x2299 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22DB JUMPI PUSH2 0x22DA PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E9 DUP5 DUP3 DUP6 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22FB DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2316 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2325 DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2340 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2359 DUP2 PUSH2 0x2346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2374 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2392 DUP2 PUSH2 0x237A JUMP JUMPDEST DUP2 EQ PUSH2 0x239D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AF DUP2 PUSH2 0x2389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23CF JUMPI PUSH2 0x23CE PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DD DUP8 DUP3 DUP9 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23EE DUP8 DUP3 DUP9 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23FF DUP8 DUP3 DUP9 ADD PUSH2 0x23A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2410 DUP8 DUP3 DUP9 ADD PUSH2 0x2213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2441 PUSH2 0x243C PUSH2 0x2437 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2453 DUP3 PUSH2 0x2426 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2465 DUP3 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2475 DUP2 PUSH2 0x245A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2490 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x249F DUP2 PUSH2 0x2346 JUMP JUMPDEST DUP2 EQ PUSH2 0x24AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24BC DUP2 PUSH2 0x2496 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D8 JUMPI PUSH2 0x24D7 PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E6 DUP5 DUP3 DUP6 ADD PUSH2 0x24AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24F8 DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP2 EQ PUSH2 0x2503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2515 DUP2 PUSH2 0x24EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2531 JUMPI PUSH2 0x2530 PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x253F DUP5 DUP3 DUP6 ADD PUSH2 0x2506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x255F JUMPI PUSH2 0x255E PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x256D DUP6 DUP3 DUP7 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x257E DUP6 DUP3 DUP7 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2591 DUP2 PUSH2 0x245A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25A0 DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x25BC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2588 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x25CF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2597 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FB DUP3 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x260B DUP2 PUSH2 0x25F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2626 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2651 PUSH2 0x264C PUSH2 0x2647 DUP5 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2346 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2661 DUP2 PUSH2 0x2636 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x267C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2689 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2696 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2658 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x26C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x26D0 DUP2 PUSH2 0x237A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x26EB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x26F8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2705 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26C7 JUMP JUMPDEST PUSH2 0x2712 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22F2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2755 DUP3 PUSH2 0x2346 JUMP JUMPDEST SWAP2 POP PUSH2 0x2760 DUP4 PUSH2 0x2346 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2773 JUMPI PUSH2 0x2772 PUSH2 0x271B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2793 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x246C JUMP JUMPDEST PUSH2 0x27A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2350 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B2 DUP3 PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x27A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x27CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x27DF DUP2 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27FB JUMPI PUSH2 0x27FA PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2809 DUP5 DUP3 DUP6 ADD PUSH2 0x27D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2827 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x231C JUMP JUMPDEST PUSH2 0x2834 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x231C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2882 PUSH1 0x17 DUP4 PUSH2 0x283B JUMP JUMPDEST SWAP2 POP PUSH2 0x288D DUP3 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28B1 DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28FA DUP2 PUSH2 0x28E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2915 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x2922 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2934 DUP3 PUSH2 0x2346 JUMP JUMPDEST SWAP2 POP PUSH2 0x293F DUP4 PUSH2 0x2346 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x28B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 LOG4 DUP3 0xED 0x4B STOP MULMOD PUSH13 0xBC56209C8331012820EDB9AABB 0xDD BALANCE DUP3 0xC2 PUSH25 0x42667815EEDC64736F6C634300080A00330000000000000000 ",
							"sourceMap": "712:9498:4:-:0;;;2126:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1652:30:16;1671:10;1652:18;;;:30;;:::i;:::-;2171:31:4;2188:13;2171:16;;;:31;;:::i;:::-;2126:83;712:9498;;3788:228:16;3862:17;3882:6;;;;;;;;;;;3862:26;;3907:9;3898:6;;:18;;;;;;;;;;;;;;;;;;3950:1;3926:13;;:26;;;;;;;;;;;;;;;;;;3999:9;3967:42;;3988:9;3967:42;;;;;;;;;;;;3852:164;3788:228;:::o;8813:389:4:-;8910:1;8885:27;;:13;:27;;;8881:64;;;8921:24;;;;;;;;;;;;;;8881:64;8956:24;8983:12;;;;;;;;;;;8956:39;;9029:13;9009:33;;:16;:33;;;9005:88;;;9079:13;9051:42;;;;;;;;;;;:::i;:::-;;;;;;;;9005:88;9119:13;9104:12;;:28;;;;;;;;;;;;;;;;;;9147:48;9163:16;9181:13;9147:48;;;;;;;:::i;:::-;;;;;;;;8871:331;8813:389;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:332::-;1675:4;1713:2;1702:9;1698:18;1690:26;;1726:71;1794:1;1783:9;1779:17;1770:6;1726:71;:::i;:::-;1807:72;1875:2;1864:9;1860:18;1851:6;1807:72;:::i;:::-;1554:332;;;;;:::o;712:9498:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LBPairImplementation_1346": {
									"entryPoint": 1426,
									"id": 1346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_FEE_1343": {
									"entryPoint": 4579,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_210": {
									"entryPoint": 8185,
									"id": 210,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_at_344": {
									"entryPoint": 8590,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_313": {
									"entryPoint": 7336,
									"id": 313,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getBPValue_2568": {
									"entryPoint": 7371,
									"id": 2568,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getLBPairInformation_1860": {
									"entryPoint": 7028,
									"id": 1860,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_length_327": {
									"entryPoint": 8297,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_remove_294": {
									"entryPoint": 8314,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setFeeRecipient_1831": {
									"entryPoint": 6647,
									"id": 1831,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPendingOwner_3921": {
									"entryPoint": 6181,
									"id": 3921,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sortTokens_1893": {
									"entryPoint": 5865,
									"id": 1893,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_transferOwnership_3906": {
									"entryPoint": 6316,
									"id": 3906,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addQuoteAsset_1765": {
									"entryPoint": 3091,
									"id": 1765,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_510": {
									"entryPoint": 6133,
									"id": 510,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allLBPairs_1361": {
									"entryPoint": 3825,
									"id": 1361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@at_606": {
									"entryPoint": 7310,
									"id": 606,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@becomeOwner_3864": {
									"entryPoint": 5505,
									"id": 3864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cloneDeterministic_44": {
									"entryPoint": 5944,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_564": {
									"entryPoint": 5708,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createLBPair_1697": {
									"entryPoint": 1464,
									"id": 1697,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@creationUnlocked_1353": {
									"entryPoint": 3379,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeRecipient_1349": {
									"entryPoint": 1369,
									"id": 1349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flashLoanFee_1356": {
									"entryPoint": 1407,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLBPairInformation_1472": {
									"entryPoint": 5450,
									"id": 1472,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getNumberOfLBPairs_1403": {
									"entryPoint": 1413,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumberOfQuoteAssets_1415": {
									"entryPoint": 3888,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPriceFromId_2548": {
									"entryPoint": 5756,
									"id": 2548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getQuoteAsset_1433": {
									"entryPoint": 5476,
									"id": 1433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isQuoteAsset_1452": {
									"entryPoint": 1340,
									"id": 1452,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_579": {
									"entryPoint": 6578,
									"id": 579,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_3782": {
									"entryPoint": 3905,
									"id": 3782,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_3792": {
									"entryPoint": 5263,
									"id": 3792,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@power_3348": {
									"entryPoint": 7409,
									"id": 3348,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeQuoteAsset_1793": {
									"entryPoint": 4975,
									"id": 1793,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_537": {
									"entryPoint": 6599,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_3879": {
									"entryPoint": 3680,
									"id": 3879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokePendingOwner_3851": {
									"entryPoint": 3398,
									"id": 3851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFactoryLockedState_1737": {
									"entryPoint": 1046,
									"id": 1737,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeRecipient_1711": {
									"entryPoint": 5305,
									"id": 1711,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLBPairImplementation_1515": {
									"entryPoint": 3946,
									"id": 1515,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingOwner_3826": {
									"entryPoint": 4591,
									"id": 3826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$157": {
									"entryPoint": 8880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_ILBFactory_$2116_fromMemory": {
									"entryPoint": 10192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$157": {
									"entryPoint": 8901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157": {
									"entryPoint": 9544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157t_uint24t_bool": {
									"entryPoint": 9141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_ILBFactory_$2116_fromMemory": {
									"entryPoint": 10213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack": {
									"entryPoint": 9730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ILBPair_$2405_to_t_address": {
									"entryPoint": 9608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ILBPair_$2405_to_t_address_fromStack": {
									"entryPoint": 9324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 10481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 9816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_LBPairInformation_$1908_memory_ptr_to_t_struct$_LBPairInformation_$1908_memory_ptr_fromStack": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 9927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 10258,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157__to_t_address__fromStack_reversed": {
									"entryPoint": 9745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9886,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9831,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_uint24_t_bool__to_t_address_t_address_t_uint24_t_bool__fromStack_reversed": {
									"entryPoint": 9942,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILBPair_$2405__to_t_address__fromStack_reversed": {
									"entryPoint": 9339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILBPair_$2405_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10110,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_LBPairInformation_$1908_memory_ptr__to_t_struct$_LBPairInformation_$1908_memory_ptr__fromStack_reversed": {
									"entryPoint": 9685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed": {
									"entryPoint": 10496,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$157": {
									"entryPoint": 8839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ILBFactory_$2116": {
									"entryPoint": 10151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 10471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 9772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 9082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$157_to_t_address": {
									"entryPoint": 9712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ILBPair_$2405_to_t_address": {
									"entryPoint": 9306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 10633,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73": {
									"entryPoint": 10316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$157": {
									"entryPoint": 8857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ILBFactory_$2116": {
									"entryPoint": 10169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 9097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15312:19",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "376:48:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "386:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "358:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "368:7:19",
														"type": ""
													}
												],
												"src": "334:90:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:76:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "524:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "533:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "536:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:40:19"
															},
															"nodeType": "YulIf",
															"src": "480:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "463:5:19",
														"type": ""
													}
												],
												"src": "430:116:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "601:84:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "611:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "579:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "587:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "595:5:19",
														"type": ""
													}
												],
												"src": "552:133:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "754:260:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "800:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "802:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "802:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "802:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "796:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:32:19"
															},
															"nodeType": "YulIf",
															"src": "764:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "893:114:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "908:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "912:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "937:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "969:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "965:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "947:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "724:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "735:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "747:6:19",
														"type": ""
													}
												],
												"src": "691:323:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1065:81:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1075:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1090:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1097:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1086:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1086:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1075:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1047:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1057:7:19",
														"type": ""
													}
												],
												"src": "1020:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1197:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1207:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1236:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1218:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1207:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1179:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1189:7:19",
														"type": ""
													}
												],
												"src": "1152:96:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1313:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1323:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1352:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1334:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1323:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$157",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1295:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1305:7:19",
														"type": ""
													}
												],
												"src": "1254:110:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1427:93:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1498:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1507:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1510:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1500:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1500:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1500:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1450:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1489:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$157",
																					"nodeType": "YulIdentifier",
																					"src": "1457:31:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1457:38:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1447:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1447:49:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:57:19"
															},
															"nodeType": "YulIf",
															"src": "1437:77:19"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$157",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1420:5:19",
														"type": ""
													}
												],
												"src": "1370:150:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1592:101:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1602:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1624:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1611:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1602:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1681:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$157",
																	"nodeType": "YulIdentifier",
																	"src": "1640:40:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1640:47:19"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$157",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1570:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1578:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1586:5:19",
														"type": ""
													}
												],
												"src": "1526:167:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:277:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1825:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1827:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1827:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1800:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1809:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1821:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:32:19"
															},
															"nodeType": "YulIf",
															"src": "1789:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "1918:131:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1933:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1937:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1962:77:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2011:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2022:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2007:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2007:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2031:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$157",
																			"nodeType": "YulIdentifier",
																			"src": "1972:34:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:67:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1962:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$157",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1749:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1760:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1772:6:19",
														"type": ""
													}
												],
												"src": "1699:357:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2121:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2138:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2158:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2143:14:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2109:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2116:3:19",
														"type": ""
													}
												],
												"src": "2062:109:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2269:118:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2279:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2291:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2302:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2287:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2279:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2353:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2366:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2377:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2362:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2362:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2315:37:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:65:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2241:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2253:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2264:4:19",
														"type": ""
													}
												],
												"src": "2177:210:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2458:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2475:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2498:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2480:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2480:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2468:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2468:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2446:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2453:3:19",
														"type": ""
													}
												],
												"src": "2393:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2615:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2625:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2648:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2625:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2705:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2718:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2729:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2661:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2661:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2587:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2599:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2610:4:19",
														"type": ""
													}
												],
												"src": "2517:222:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2800:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2811:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2800:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2772:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2782:7:19",
														"type": ""
													}
												],
												"src": "2745:77:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2893:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2910:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2933:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2915:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2915:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2903:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2903:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2881:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2888:3:19",
														"type": ""
													}
												],
												"src": "2828:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3050:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3060:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3072:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3068:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3068:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3060:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3140:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3153:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3164:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3096:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3096:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3096:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3022:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3034:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3045:4:19",
														"type": ""
													}
												],
												"src": "2952:222:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3224:47:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3234:31:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3249:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3256:8:19",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3245:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:20:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3234:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3206:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3216:7:19",
														"type": ""
													}
												],
												"src": "3180:91:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3319:78:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3375:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3384:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3387:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3377:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3377:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3377:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3342:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3366:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "3349:16:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3349:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3339:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3339:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:42:19"
															},
															"nodeType": "YulIf",
															"src": "3329:62:19"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3312:5:19",
														"type": ""
													}
												],
												"src": "3277:120:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3454:86:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3464:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3486:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3473:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3473:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3464:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3528:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "3502:25:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3502:32:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3502:32:19"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3432:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3440:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3448:5:19",
														"type": ""
													}
												],
												"src": "3403:137:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3687:672:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3734:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3736:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3736:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3736:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3708:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3704:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3704:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:33:19"
															},
															"nodeType": "YulIf",
															"src": "3697:120:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "3827:131:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3842:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3856:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3846:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3871:77:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3920:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3931:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3916:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3916:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3940:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$157",
																			"nodeType": "YulIdentifier",
																			"src": "3881:34:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3881:67:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3871:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3968:132:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3983:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3997:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3987:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4013:77:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4062:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4073:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4058:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4058:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4082:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$157",
																			"nodeType": "YulIdentifier",
																			"src": "4023:34:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4023:67:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4013:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4110:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4125:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4129:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4155:62:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4189:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4200:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4185:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4185:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4209:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "4165:19:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4165:52:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4155:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4237:115:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4252:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4266:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4256:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4282:60:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4314:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4325:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4310:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4310:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4334:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4292:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4292:50:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4282:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157t_uint24t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3633:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3644:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3656:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3664:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3672:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3680:6:19",
														"type": ""
													}
												],
												"src": "3546:813:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4397:28:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4407:12:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4414:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4407:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4383:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4393:3:19",
														"type": ""
													}
												],
												"src": "4365:60:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4491:82:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4501:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4559:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4541:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4541:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4532:8:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4532:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4514:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4514:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4501:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4471:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4481:9:19",
														"type": ""
													}
												],
												"src": "4431:142:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4639:66:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4649:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4693:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4662:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4649:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4619:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4629:9:19",
														"type": ""
													}
												],
												"src": "4579:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4787:66:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4797:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4841:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4810:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4810:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4797:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ILBPair_$2405_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4767:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4777:9:19",
														"type": ""
													}
												],
												"src": "4711:142:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4940:82:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4957:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5009:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ILBPair_$2405_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4962:46:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4962:53:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4950:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4950:66:19"
														}
													]
												},
												"name": "abi_encode_t_contract$_ILBPair_$2405_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4928:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4935:3:19",
														"type": ""
													}
												],
												"src": "4859:163:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5142:140:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5152:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5164:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5175:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5152:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ILBPair_$2405_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5188:59:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:87:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:87:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILBPair_$2405__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5114:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5126:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5137:4:19",
														"type": ""
													}
												],
												"src": "5028:254:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5331:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5388:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5397:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5400:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5390:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5390:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5354:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5379:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5361:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5361:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5351:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5351:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5344:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5344:43:19"
															},
															"nodeType": "YulIf",
															"src": "5341:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5324:5:19",
														"type": ""
													}
												],
												"src": "5288:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5468:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5478:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5500:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5487:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5478:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5543:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5516:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5516:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5446:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5454:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5462:5:19",
														"type": ""
													}
												],
												"src": "5416:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5627:263:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5673:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5675:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5675:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5675:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5648:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5644:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5669:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:32:19"
															},
															"nodeType": "YulIf",
															"src": "5637:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "5766:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5781:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5795:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5785:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5810:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5845:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5856:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5841:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5841:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5820:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5820:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5810:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5597:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5608:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5620:6:19",
														"type": ""
													}
												],
												"src": "5561:329:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5939:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5996:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6005:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6008:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5998:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5998:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5998:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5962:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5987:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5969:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5969:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5959:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5959:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5952:43:19"
															},
															"nodeType": "YulIf",
															"src": "5949:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5932:5:19",
														"type": ""
													}
												],
												"src": "5896:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6076:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6086:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6108:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6095:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6095:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6086:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6151:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6124:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6124:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6124:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6054:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6062:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6070:5:19",
														"type": ""
													}
												],
												"src": "6024:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6235:263:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6281:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6283:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6283:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6283:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6256:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6265:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6252:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6277:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6248:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6248:32:19"
															},
															"nodeType": "YulIf",
															"src": "6245:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "6374:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6389:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6403:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6393:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6418:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6453:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6464:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6449:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6449:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6473:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6428:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6428:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6418:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6205:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6216:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6228:6:19",
														"type": ""
													}
												],
												"src": "6169:329:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6615:419:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6661:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6663:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6663:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6663:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6636:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6645:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6632:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6657:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6628:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6628:32:19"
															},
															"nodeType": "YulIf",
															"src": "6625:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "6754:131:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6769:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6783:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6773:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6798:77:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6847:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6858:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6843:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6843:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6867:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$157",
																			"nodeType": "YulIdentifier",
																			"src": "6808:34:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6808:67:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6798:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6895:132:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6910:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6924:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6914:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6940:77:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6989:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7000:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6985:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6985:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7009:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$157",
																			"nodeType": "YulIdentifier",
																			"src": "6950:34:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6950:67:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6940:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6577:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6588:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6600:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6608:6:19",
														"type": ""
													}
												],
												"src": "6504:530:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7111:82:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7128:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7180:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ILBPair_$2405_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7133:46:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7133:53:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7121:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7121:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7121:66:19"
														}
													]
												},
												"name": "abi_encode_t_contract$_ILBPair_$2405_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7099:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7106:3:19",
														"type": ""
													}
												],
												"src": "7040:153:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7248:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7265:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7285:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7270:14:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7270:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7258:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7258:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7236:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7243:3:19",
														"type": ""
													}
												],
												"src": "7199:99:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7522:413:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7532:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7548:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7553:4:19",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7544:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:14:19"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "7536:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7568:182:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7605:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7635:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7642:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7631:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7631:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7625:5:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7625:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7609:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7711:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7729:3:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7734:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7725:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7725:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_contract$_ILBPair_$2405_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7661:49:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7661:79:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7661:79:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7760:168:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7805:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7835:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7842:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7831:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7831:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7825:5:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7825:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "7809:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7889:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7907:3:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7912:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7903:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7903:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "7861:27:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7861:57:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7861:57:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_LBPairInformation_$1908_memory_ptr_to_t_struct$_LBPairInformation_$1908_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7509:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7516:3:19",
														"type": ""
													}
												],
												"src": "7386:549:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8109:194:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8119:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8131:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8142:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8269:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8282:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8293:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8278:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8278:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_LBPairInformation_$1908_memory_ptr_to_t_struct$_LBPairInformation_$1908_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8155:113:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8155:141:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8155:141:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_LBPairInformation_$1908_memory_ptr__to_t_struct$_LBPairInformation_$1908_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8081:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8093:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8104:4:19",
														"type": ""
													}
												],
												"src": "7941:362:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8383:66:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8393:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8437:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8406:30:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8393:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$157_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8363:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8373:9:19",
														"type": ""
													}
												],
												"src": "8309:140:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8534:80:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8601:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$157_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8556:44:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8556:51:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8544:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8544:64:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8544:64:19"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8522:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8529:3:19",
														"type": ""
													}
												],
												"src": "8455:159:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8732:138:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8742:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8754:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8765:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8750:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8742:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8836:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8849:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8860:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8845:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8845:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8778:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:85:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8778:85:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8704:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8716:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8727:4:19",
														"type": ""
													}
												],
												"src": "8620:250:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8929:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8939:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8950:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8939:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8911:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8921:7:19",
														"type": ""
													}
												],
												"src": "8876:85:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9035:90:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9045:74:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9111:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "9085:25:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9085:32:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "9076:8:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9076:42:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9058:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9058:61:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9045:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9015:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9025:9:19",
														"type": ""
													}
												],
												"src": "8967:158:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9204:74:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9221:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9265:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9226:38:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:45:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9214:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:58:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9214:58:19"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9192:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9199:3:19",
														"type": ""
													}
												],
												"src": "9131:147:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9474:324:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9484:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9496:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9492:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9492:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9484:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9578:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9591:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9602:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9587:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9587:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9520:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9520:85:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9520:85:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9673:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9686:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9697:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9682:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9682:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9615:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9615:86:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9615:86:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9763:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9776:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9787:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9772:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9711:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9711:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9711:80:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9430:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9442:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9450:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9458:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9469:4:19",
														"type": ""
													}
												],
												"src": "9284:514:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9958:234:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9968:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9980:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9991:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9976:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9968:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10062:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10075:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10086:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10071:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10071:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10004:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10004:85:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10004:85:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10157:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10170:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10181:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10166:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10166:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10099:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10099:86:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10099:86:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9922:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9934:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9942:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9953:4:19",
														"type": ""
													}
												],
												"src": "9804:388:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10261:52:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10278:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10300:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "10283:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10283:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10271:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10271:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10271:36:19"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10249:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10256:3:19",
														"type": ""
													}
												],
												"src": "10198:115:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10521:391:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10531:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10543:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10554:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10539:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10539:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10531:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10626:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10639:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10650:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10635:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10635:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10568:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10568:85:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10568:85:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10721:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10734:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10745:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10730:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10730:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10663:57:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10663:86:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10663:86:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10801:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10814:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10825:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10810:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10810:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10759:41:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10759:70:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10759:70:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10877:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10890:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10901:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10886:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10886:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10839:37:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10839:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10839:66:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_uint24_t_bool__to_t_address_t_address_t_uint24_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10469:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10481:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10489:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10497:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10505:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10516:4:19",
														"type": ""
													}
												],
												"src": "10319:593:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10946:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10963:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10966:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10956:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10956:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10956:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11060:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11063:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11053:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11053:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11084:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11087:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11077:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11077:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11077:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10918:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11149:146:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11159:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11182:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11164:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11164:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11159:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11193:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11216:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11198:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11198:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11193:1:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11240:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11242:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11242:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11242:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11234:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11237:1:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11231:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11231:8:19"
															},
															"nodeType": "YulIf",
															"src": "11228:34:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11272:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11284:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11287:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11280:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11280:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11272:4:19"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11135:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11138:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11144:4:19",
														"type": ""
													}
												],
												"src": "11104:191:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11443:222:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11453:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11465:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11476:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11461:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11461:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11453:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11549:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11562:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11573:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11558:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11558:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ILBPair_$2405_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11489:59:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11489:87:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11489:87:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11630:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11643:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11654:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11639:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11639:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11586:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11586:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11586:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILBPair_$2405_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11407:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11419:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11427:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11438:4:19",
														"type": ""
													}
												],
												"src": "11301:364:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11735:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11745:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11774:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "11756:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11756:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11745:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ILBFactory_$2116",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11717:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11727:7:19",
														"type": ""
													}
												],
												"src": "11671:115:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11854:98:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11930:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11939:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11942:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11932:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11932:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11932:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11877:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11921:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ILBFactory_$2116",
																					"nodeType": "YulIdentifier",
																					"src": "11884:36:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11884:43:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11874:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11874:54:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11867:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11867:62:19"
															},
															"nodeType": "YulIf",
															"src": "11864:82:19"
														}
													]
												},
												"name": "validator_revert_t_contract$_ILBFactory_$2116",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11847:5:19",
														"type": ""
													}
												],
												"src": "11792:160:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12040:99:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12050:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12065:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12059:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12059:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12050:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12127:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ILBFactory_$2116",
																	"nodeType": "YulIdentifier",
																	"src": "12081:45:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12081:52:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12081:52:19"
														}
													]
												},
												"name": "abi_decode_t_contract$_ILBFactory_$2116_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12018:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12026:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12034:5:19",
														"type": ""
													}
												],
												"src": "11958:181:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12241:293:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12287:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12289:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12289:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12289:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12262:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12271:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12258:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12258:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12283:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12254:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12254:32:19"
															},
															"nodeType": "YulIf",
															"src": "12251:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "12380:147:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12395:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12409:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12399:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12424:93:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12489:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12500:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12485:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12485:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12509:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ILBFactory_$2116_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "12434:50:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12434:83:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12424:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ILBFactory_$2116_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12211:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12222:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12234:6:19",
														"type": ""
													}
												],
												"src": "12145:389:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12666:206:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12676:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12688:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12699:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12684:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12684:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12676:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12756:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12769:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12780:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12765:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12765:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12712:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12712:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12712:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12837:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12850:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12861:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12846:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12846:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12793:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12793:72:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12793:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12630:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12642:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12650:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12661:4:19",
														"type": ""
													}
												],
												"src": "12540:332:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12974:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12991:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12996:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12984:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12984:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12984:19:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13012:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13031:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13036:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13027:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13012:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12946:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12951:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12962:11:19",
														"type": ""
													}
												],
												"src": "12878:169:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13159:67:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13181:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13189:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13177:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13177:14:19"
																	},
																	{
																		"hexValue": "455243313136373a2063726561746532206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13193:25:19",
																		"type": "",
																		"value": "ERC1167: create2 failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13170:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13170:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13170:49:19"
														}
													]
												},
												"name": "store_literal_in_memory_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13151:6:19",
														"type": ""
													}
												],
												"src": "13053:173:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13378:220:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13388:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13454:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13459:2:19",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13395:58:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13395:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13388:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13560:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																	"nodeType": "YulIdentifier",
																	"src": "13471:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13471:93:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13471:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13573:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13584:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13589:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13580:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13580:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13573:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13366:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13374:3:19",
														"type": ""
													}
												],
												"src": "13232:366:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13775:248:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13785:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13797:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13808:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13793:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13793:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13785:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13832:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13843:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13828:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13828:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13851:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13857:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13847:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13847:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13821:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13821:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13821:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13877:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14011:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13885:124:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13885:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13877:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13755:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13770:4:19",
														"type": ""
													}
												],
												"src": "13604:419:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14057:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14074:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14077:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14067:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14067:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14067:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14171:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14174:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14164:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14164:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14164:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14195:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14198:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14188:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14188:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14188:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14029:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14259:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14269:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14280:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14269:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14241:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14251:7:19",
														"type": ""
													}
												],
												"src": "14215:76:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14360:52:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14377:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14399:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "14382:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14382:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14370:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14370:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14370:36:19"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14348:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14355:3:19",
														"type": ""
													}
												],
												"src": "14297:115:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14542:204:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14552:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14564:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14575:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14560:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14560:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14552:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14632:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14645:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14656:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14641:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14641:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14588:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14588:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14588:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14711:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14724:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14735:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14720:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14720:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14669:41:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14669:70:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14669:70:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14506:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14518:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14526:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14537:4:19",
														"type": ""
													}
												],
												"src": "14418:328:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14794:143:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14804:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14827:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14809:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14809:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14804:1:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14838:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14861:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14843:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14843:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14838:1:19"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14885:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14887:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14887:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14887:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14882:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14875:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14875:9:19"
															},
															"nodeType": "YulIf",
															"src": "14872:35:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14917:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14926:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14929:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14922:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14922:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14917:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14783:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14786:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14792:1:19",
														"type": ""
													}
												],
												"src": "14752:185:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14971:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14988:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14991:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14981:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14981:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14981:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15085:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15088:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15078:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15078:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15078:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15109:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15112:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15102:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15102:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15102:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14943:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15157:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15174:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15177:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15167:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15167:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15167:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15271:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15274:4:19",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15264:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15264:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15264:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15295:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15298:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15288:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15288:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15288:15:19"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "15129:180:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$157(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$157(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$157(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$157(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$157(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$157(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$157(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157t_uint24t_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$157(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$157(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ILBPair_$2405_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ILBPair_$2405_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ILBPair_$2405_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ILBPair_$2405__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ILBPair_$2405_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$157(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$157(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_contract$_ILBPair_$2405_to_t_address(value, pos) {\n        mstore(pos, convert_t_contract$_ILBPair_$2405_to_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct ILBFactory.LBPairInformation -> struct ILBFactory.LBPairInformation\n    function abi_encode_t_struct$_LBPairInformation_$1908_memory_ptr_to_t_struct$_LBPairInformation_$1908_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // LBPair\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_contract$_ILBPair_$2405_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // createdByOwner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_LBPairInformation_$1908_memory_ptr__to_t_struct$_LBPairInformation_$1908_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_LBPairInformation_$1908_memory_ptr_to_t_struct$_LBPairInformation_$1908_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$157_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$157_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$157__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_uint24_t_bool__to_t_address_t_address_t_uint24_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$157_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_contract$_ILBPair_$2405_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_ILBPair_$2405_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_contract$_ILBFactory_$2116(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ILBFactory_$2116(value) {\n        if iszero(eq(value, cleanup_t_contract$_ILBFactory_$2116(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ILBFactory_$2116_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ILBFactory_$2116(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ILBFactory_$2116_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ILBFactory_$2116_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1167: create2 failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014d5760003560e01c806372e47b8c116100c3578063ddbfd9411161007c578063ddbfd94114610356578063e30c397814610372578063e74b981b14610390578063eaec42a4146103ac578063f89a4cd5146103dc578063f9dca9891461040c5761014d565b806372e47b8c1461029457806380c5061e146102c45780638da5cb5b146102e2578063b038478114610300578063bc063e1a1461031c578063c42069ec1461033a5761014d565b8063509ceb9011610115578063509ceb90146101f857806352e2cf8e146102165780635a440923146102465780635c779d6d1461026257806367ab8a4e14610280578063715018a61461028a5761014d565b806322f3fe1414610152578063277218421461016e578063469048401461019e5780634847cdc8146101bc5780634e937c3a146101da575b600080fd5b61016c60048036038101906101679190612228565b610416565b005b610188600480360381019061018391906122c5565b61053c565b6040516101959190612301565b60405180910390f35b6101a6610559565b6040516101b3919061232b565b60405180910390f35b6101c461057f565b6040516101d1919061235f565b60405180910390f35b6101e2610585565b6040516101ef919061235f565b60405180910390f35b610200610592565b60405161020d919061232b565b60405180910390f35b610230600480360381019061022b91906123b5565b6105b8565b60405161023d919061247b565b60405180910390f35b610260600480360381019061025b91906122c5565b610c13565b005b61026a610d33565b6040516102779190612301565b60405180910390f35b610288610d46565b005b610292610e60565b005b6102ae60048036038101906102a991906124c2565b610ef1565b6040516102bb919061247b565b60405180910390f35b6102cc610f30565b6040516102d9919061235f565b60405180910390f35b6102ea610f41565b6040516102f7919061232b565b60405180910390f35b61031a6004803603810190610315919061251b565b610f6a565b005b6103246111e3565b604051610331919061235f565b60405180910390f35b610354600480360381019061034f919061251b565b6111ef565b005b610370600480360381019061036b91906122c5565b61136f565b005b61037a61148f565b604051610387919061232b565b60405180910390f35b6103aa60048036038101906103a5919061251b565b6114b9565b005b6103c660048036038101906103c19190612548565b61154a565b6040516103d391906125d5565b60405180910390f35b6103f660048036038101906103f191906124c2565b611564565b6040516104039190612611565b60405180910390f35b610414611581565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049b576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b801515600360149054906101000a900460ff161515146104e7576040517f0b6ef29400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8015600360146101000a81548160ff0219169083151502179055507fcdee7bf87b7a743b4cbe1d2d534c5248621b76f58460337e7fda92d5d23f4124816040516105319190612301565b60405180910390a150565b600061055282600961164c90919063ffffffff16565b9050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000600580549050905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c3610f41565b9050600360149054906101000a900460ff1615801561060e57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561065057336040517f3a43e980000000000000000000000000000000000000000000000000000000008152600401610647919061232b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106de576040517fa2d3f3e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f286600961164c90919063ffffffff16565b61073357856040517f8e888ef300000000000000000000000000000000000000000000000000000000815260040161072a9190612611565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156107a457866040517f2f9b185300000000000000000000000000000000000000000000000000000000815260040161079b9190612611565b60405180910390fd5b6107b28562ffffff1661167c565b506000806107c089896116e9565b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082b576040517f95cf3ee400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461094057888860016040517fcb27a43500000000000000000000000000000000000000000000000000000000815260040161093793929190612667565b60405180910390fd5b6000828260405160200161095592919061269e565b6040516020818303038152906040528051906020012090506109778482611738565b95508573ffffffffffffffffffffffffffffffffffffffff16638c6abc0f8b8b8b8b6040518563ffffffff1660e01b81526004016109b894939291906126d6565b600060405180830381600087803b1580156109d257600080fd5b505af11580156109e6573d6000803e3d6000fd5b5050505060405180604001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515815250600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055509050506005869080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167f612fdd9b533d1ca33088dcbca9ad3186eeadc9893e63715b8a783040d729cd6a886001600580549050610bf0919061274a565b604051610bfe92919061277e565b60405180910390a35050505050949350505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c98576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cac8160096117f590919063ffffffff16565b610ced57806040517f03ce0ad9000000000000000000000000000000000000000000000000000000008152600401610ce49190612611565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e60405160405180910390a250565b600360149054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dcb576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e54576040517fecfad6bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e5e6000611825565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ee5576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610eef60006118ac565b565b60058181548110610f0157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610f3c60096119b2565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fef576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015611051573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107591906127e5565b73ffffffffffffffffffffffffffffffffffffffff16146110cd57806040517f147ce15e0000000000000000000000000000000000000000000000000000000081526004016110c4919061232b565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561116557816040517f6f69dca800000000000000000000000000000000000000000000000000000000815260040161115c919061232b565b60405180910390fd5b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e81836040516111d7929190612812565b60405180910390a15050565b67016345785d8a000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611274576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112db576040517f91f3851500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611363576040517f716b1fbf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61136c81611825565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113f4576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114088160096119c790919063ffffffff16565b61144957806040517f8e888ef30000000000000000000000000000000000000000000000000000000081526004016114409190612611565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb360405160405180910390a250565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461153e576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611547816119f7565b50565b6115526121b9565b61155c8383611b74565b905092915050565b600061157a826009611c8e90919063ffffffff16565b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158061160a5750600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15611641576040517f7304d01200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61164a336118ac565b565b6000611674836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611ca8565b905092915050565b600062ffffff80168211156116bd576040517f58f62eac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600062800000830390506116e1816116d3611ccb565b611cf190919063ffffffff16565b915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561172b57828480945081955050505b8383915091509250929050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117e690612898565b60405180910390fd5b92915050565b600061181d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611ff9565b905092915050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f560405160405180910390a250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006119c082600001612069565b9050919050565b60006119ef836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61207a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611a5e576040517f95cf3ee400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611af657816040517f4fcea971000000000000000000000000000000000000000000000000000000008152600401611aed919061232b565b60405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa708401527218183604051611b68929190612812565b60405180910390a15050565b611b7c6121b9565b611b8683836116e9565b8093508194505050600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff161515151581525050905092915050565b6000611c9d836000018361218e565b60001c905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600061271060806001901b81611ce457611ce36128b8565b5b0460806001901b01905090565b600080600080841415611d0d5760806001901b92505050611ff3565b8390506000811215611d2457806000039050811591505b62100000811015611f6e5760806001901b9250846fffffffffffffffffffffffffffffffff861115611d5c5780600019049050821592505b6001821615611d6e5780840260801c93505b80810260801c90506002821615611d885780840260801c93505b80810260801c90506004821615611da25780840260801c93505b80810260801c90506008821615611dbc5780840260801c93505b80810260801c90506010821615611dd65780840260801c93505b80810260801c90506020821615611df05780840260801c93505b80810260801c90506040821615611e0a5780840260801c93505b80810260801c90506080821615611e245780840260801c93505b80810260801c9050610100821615611e3f5780840260801c93505b80810260801c9050610200821615611e5a5780840260801c93505b80810260801c9050610400821615611e755780840260801c93505b80810260801c9050610800821615611e905780840260801c93505b80810260801c9050611000821615611eab5780840260801c93505b80810260801c9050612000821615611ec65780840260801c93505b80810260801c9050614000821615611ee15780840260801c93505b80810260801c9050618000821615611efc5780840260801c93505b80810260801c905062010000821615611f185780840260801c93505b80810260801c905062020000821615611f345780840260801c93505b80810260801c905062040000821615611f505780840260801c93505b80810260801c905062080000821615611f6c5780840260801c93505b505b6000831415611fb65784846040517f74e3eb08000000000000000000000000000000000000000000000000000000008152600401611fad929190612900565b60405180910390fd5b81611fc15782611fee565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff611fed9190612929565b5b925050505b92915050565b60006120058383611ca8565b61205e578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612063565b600090505b92915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020549050600081146121825760006001826120ac919061274a565b90506000600186600001805490506120c4919061274a565b90508181146121335760008660000182815481106120e5576120e461295a565b5b90600052602060002001549050808760000184815481106121095761210861295a565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b8560000180548061214757612146612989565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050612188565b60009150505b92915050565b60008260000182815481106121a6576121a561295a565b5b9060005260206000200154905092915050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b600080fd5b60008115159050919050565b612205816121f0565b811461221057600080fd5b50565b600081359050612222816121fc565b92915050565b60006020828403121561223e5761223d6121eb565b5b600061224c84828501612213565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061228082612255565b9050919050565b600061229282612275565b9050919050565b6122a281612287565b81146122ad57600080fd5b50565b6000813590506122bf81612299565b92915050565b6000602082840312156122db576122da6121eb565b5b60006122e9848285016122b0565b91505092915050565b6122fb816121f0565b82525050565b600060208201905061231660008301846122f2565b92915050565b61232581612275565b82525050565b6000602082019050612340600083018461231c565b92915050565b6000819050919050565b61235981612346565b82525050565b60006020820190506123746000830184612350565b92915050565b600062ffffff82169050919050565b6123928161237a565b811461239d57600080fd5b50565b6000813590506123af81612389565b92915050565b600080600080608085870312156123cf576123ce6121eb565b5b60006123dd878288016122b0565b94505060206123ee878288016122b0565b93505060406123ff878288016123a0565b925050606061241087828801612213565b91505092959194509250565b6000819050919050565b600061244161243c61243784612255565b61241c565b612255565b9050919050565b600061245382612426565b9050919050565b600061246582612448565b9050919050565b6124758161245a565b82525050565b6000602082019050612490600083018461246c565b92915050565b61249f81612346565b81146124aa57600080fd5b50565b6000813590506124bc81612496565b92915050565b6000602082840312156124d8576124d76121eb565b5b60006124e6848285016124ad565b91505092915050565b6124f881612275565b811461250357600080fd5b50565b600081359050612515816124ef565b92915050565b600060208284031215612531576125306121eb565b5b600061253f84828501612506565b91505092915050565b6000806040838503121561255f5761255e6121eb565b5b600061256d858286016122b0565b925050602061257e858286016122b0565b9150509250929050565b6125918161245a565b82525050565b6125a0816121f0565b82525050565b6040820160008201516125bc6000850182612588565b5060208201516125cf6020850182612597565b50505050565b60006040820190506125ea60008301846125a6565b92915050565b60006125fb82612448565b9050919050565b61260b816125f0565b82525050565b60006020820190506126266000830184612602565b92915050565b6000819050919050565b600061265161264c6126478461262c565b61241c565b612346565b9050919050565b61266181612636565b82525050565b600060608201905061267c6000830186612602565b6126896020830185612602565b6126966040830184612658565b949350505050565b60006040820190506126b36000830185612602565b6126c06020830184612602565b9392505050565b6126d08161237a565b82525050565b60006080820190506126eb6000830187612602565b6126f86020830186612602565b61270560408301856126c7565b61271260608301846122f2565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061275582612346565b915061276083612346565b9250828210156127735761277261271b565b5b828203905092915050565b6000604082019050612793600083018561246c565b6127a06020830184612350565b9392505050565b60006127b282612275565b9050919050565b6127c2816127a7565b81146127cd57600080fd5b50565b6000815190506127df816127b9565b92915050565b6000602082840312156127fb576127fa6121eb565b5b6000612809848285016127d0565b91505092915050565b6000604082019050612827600083018561231c565b612834602083018461231c565b9392505050565b600082825260208201905092915050565b7f455243313136373a2063726561746532206661696c6564000000000000000000600082015250565b600061288260178361283b565b915061288d8261284c565b602082019050919050565b600060208201905081810360008301526128b181612875565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000819050919050565b6128fa816128e7565b82525050565b60006040820190506129156000830185612350565b61292260208301846128f1565b9392505050565b600061293482612346565b915061293f83612346565b92508261294f5761294e6128b8565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122089a482ed4b00096cbc56209c8331012820edb9aabbdd3182c27842667815eedc64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72E47B8C GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xDDBFD941 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDDBFD941 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xEAEC42A4 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xF89A4CD5 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0x40C JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x72E47B8C EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x80C5061E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xB0384781 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0x33A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x509CEB90 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x509CEB90 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x52E2CF8E EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x5A440923 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x5C779D6D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x28A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x22F3FE14 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x27721842 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x4847CDC8 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x4E937C3A EQ PUSH2 0x1DA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x416 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x23B5 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0xC13 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26A PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0xD46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x292 PUSH2 0xE60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x247B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0xF6A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x235F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x354 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x11EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x370 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x22C5 JUMP JUMPDEST PUSH2 0x136F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37A PUSH2 0x148F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x251B JUMP JUMPDEST PUSH2 0x14B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x24C2 JUMP JUMPDEST PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH2 0x1581 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB6EF29400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH1 0x3 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xCDEE7BF87B7A743B4CBE1D2D534C5248621B76F58460337E7FDA92D5D23F4124 DUP2 PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x2301 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x552 DUP3 PUSH1 0x9 PUSH2 0x164C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5C3 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x60E JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x650 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x3A43E98000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2D3F3E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F2 DUP7 PUSH1 0x9 PUSH2 0x164C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x733 JUMPI DUP6 PUSH1 0x40 MLOAD PUSH32 0x8E888EF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A4 JUMPI DUP7 PUSH1 0x40 MLOAD PUSH32 0x2F9B185300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B2 DUP6 PUSH3 0xFFFFFF AND PUSH2 0x167C JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x7C0 DUP10 DUP10 PUSH2 0x16E9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH32 0x95CF3EE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x940 JUMPI DUP9 DUP9 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0xCB27A43500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2667 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x955 SWAP3 SWAP2 SWAP1 PUSH2 0x269E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x977 DUP5 DUP3 PUSH2 0x1738 JUMP JUMPDEST SWAP6 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C6ABC0F DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x612FDD9B533D1CA33088DCBCA9AD3186EEADC9893E63715B8A783040D729CD6A DUP9 PUSH1 0x1 PUSH1 0x5 DUP1 SLOAD SWAP1 POP PUSH2 0xBF0 SWAP2 SWAP1 PUSH2 0x274A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBFE SWAP3 SWAP2 SWAP1 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAC DUP2 PUSH1 0x9 PUSH2 0x17F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCED JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x3CE0AD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE4 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x84CC2115995684DCB0CD3D3A9565E3D32F075DE81DB70C8DC3A719B2A47AF67E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDCB JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5E PUSH1 0x0 PUSH2 0x1825 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEEF PUSH1 0x0 PUSH2 0x18AC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3C PUSH1 0x9 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1051 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1075 SWAP2 SWAP1 PUSH2 0x27E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10CD JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x147CE15E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1165 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x6F69DCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115C SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x900D0E3D359F50E4F923ECDC06B401E07DBB9F485E17B07BCFC91A13000B277E DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x12DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1363 JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x136C DUP2 PUSH2 0x1825 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1408 DUP2 PUSH1 0x9 PUSH2 0x19C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1449 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x8E888EF300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1440 SWAP2 SWAP1 PUSH2 0x2611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB767739217755D8AF5A2BA75B181A19FA1750F8BB701F09311CB19A90140CB3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x19F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1552 PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x155C DUP4 DUP4 PUSH2 0x1B74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP3 PUSH1 0x9 PUSH2 0x1C8E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x160A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1641 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x164A CALLER PUSH2 0x18AC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1674 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1CA8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x16BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x58F62EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x800000 DUP4 SUB SWAP1 POP PUSH2 0x16E1 DUP2 PUSH2 0x16D3 PUSH2 0x1CCB JUMP JUMPDEST PUSH2 0x1CF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x172B JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST DUP4 DUP4 SWAP2 POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP2 PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E6 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x1FF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C0 DUP3 PUSH1 0x0 ADD PUSH2 0x2069 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EF DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x207A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x95CF3EE400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1AF6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4FCEA97100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AED SWAP2 SWAP1 PUSH2 0x232B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B68 SWAP3 SWAP2 SWAP1 PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1B7C PUSH2 0x21B9 JUMP JUMPDEST PUSH2 0x1B86 DUP4 DUP4 PUSH2 0x16E9 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C9D DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x80 PUSH1 0x1 SWAP1 SHL DUP2 PUSH2 0x1CE4 JUMPI PUSH2 0x1CE3 PUSH2 0x28B8 JUMP JUMPDEST JUMPDEST DIV PUSH1 0x80 PUSH1 0x1 SWAP1 SHL ADD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 EQ ISZERO PUSH2 0x1D0D JUMPI PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SWAP3 POP POP POP PUSH2 0x1FF3 JUMP JUMPDEST DUP4 SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x1D24 JUMPI DUP1 PUSH1 0x0 SUB SWAP1 POP DUP2 ISZERO SWAP2 POP JUMPDEST PUSH3 0x100000 DUP2 LT ISZERO PUSH2 0x1F6E JUMPI PUSH1 0x80 PUSH1 0x1 SWAP1 SHL SWAP3 POP DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 GT ISZERO PUSH2 0x1D5C JUMPI DUP1 PUSH1 0x0 NOT DIV SWAP1 POP DUP3 ISZERO SWAP3 POP JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x1D6E JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x1D88 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x1DA2 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x1DBC JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x1DD6 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1DF0 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x1E0A JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x1E24 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x1E3F JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x1E5A JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x1E75 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1E90 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x1EAB JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x1EC6 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x1EE1 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x1EFC JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x1F18 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x1F34 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1F50 JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST DUP1 DUP2 MUL PUSH1 0x80 SHR SWAP1 POP PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x1F6C JUMPI DUP1 DUP5 MUL PUSH1 0x80 SHR SWAP4 POP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x1FB6 JUMPI DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x74E3EB0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FAD SWAP3 SWAP2 SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x1FC1 JUMPI DUP3 PUSH2 0x1FEE JUMP JUMPDEST DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1FED SWAP2 SWAP1 PUSH2 0x2929 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2005 DUP4 DUP4 PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0x205E JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2182 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x20AC SWAP2 SWAP1 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x20C4 SWAP2 SWAP1 PUSH2 0x274A JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x2133 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x295A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2109 JUMPI PUSH2 0x2108 PUSH2 0x295A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x2147 JUMPI PUSH2 0x2146 PUSH2 0x2989 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x295A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2205 DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x2210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2222 DUP2 PUSH2 0x21FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x223E JUMPI PUSH2 0x223D PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP5 DUP3 DUP6 ADD PUSH2 0x2213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2280 DUP3 PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2292 DUP3 PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A2 DUP2 PUSH2 0x2287 JUMP JUMPDEST DUP2 EQ PUSH2 0x22AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22BF DUP2 PUSH2 0x2299 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22DB JUMPI PUSH2 0x22DA PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E9 DUP5 DUP3 DUP6 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22FB DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2316 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2325 DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2340 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2359 DUP2 PUSH2 0x2346 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2374 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2392 DUP2 PUSH2 0x237A JUMP JUMPDEST DUP2 EQ PUSH2 0x239D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23AF DUP2 PUSH2 0x2389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23CF JUMPI PUSH2 0x23CE PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23DD DUP8 DUP3 DUP9 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x23EE DUP8 DUP3 DUP9 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x23FF DUP8 DUP3 DUP9 ADD PUSH2 0x23A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2410 DUP8 DUP3 DUP9 ADD PUSH2 0x2213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2441 PUSH2 0x243C PUSH2 0x2437 DUP5 PUSH2 0x2255 JUMP JUMPDEST PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2255 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2453 DUP3 PUSH2 0x2426 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2465 DUP3 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2475 DUP2 PUSH2 0x245A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2490 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x246C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x249F DUP2 PUSH2 0x2346 JUMP JUMPDEST DUP2 EQ PUSH2 0x24AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24BC DUP2 PUSH2 0x2496 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D8 JUMPI PUSH2 0x24D7 PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24E6 DUP5 DUP3 DUP6 ADD PUSH2 0x24AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24F8 DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP2 EQ PUSH2 0x2503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2515 DUP2 PUSH2 0x24EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2531 JUMPI PUSH2 0x2530 PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x253F DUP5 DUP3 DUP6 ADD PUSH2 0x2506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x255F JUMPI PUSH2 0x255E PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x256D DUP6 DUP3 DUP7 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x257E DUP6 DUP3 DUP7 ADD PUSH2 0x22B0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2591 DUP2 PUSH2 0x245A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25A0 DUP2 PUSH2 0x21F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x25BC PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2588 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x25CF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2597 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25FB DUP3 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x260B DUP2 PUSH2 0x25F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2626 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2651 PUSH2 0x264C PUSH2 0x2647 DUP5 PUSH2 0x262C JUMP JUMPDEST PUSH2 0x241C JUMP JUMPDEST PUSH2 0x2346 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2661 DUP2 PUSH2 0x2636 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x267C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2689 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2696 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2658 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x26C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x26D0 DUP2 PUSH2 0x237A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x26EB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x26F8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x2705 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26C7 JUMP JUMPDEST PUSH2 0x2712 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22F2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2755 DUP3 PUSH2 0x2346 JUMP JUMPDEST SWAP2 POP PUSH2 0x2760 DUP4 PUSH2 0x2346 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2773 JUMPI PUSH2 0x2772 PUSH2 0x271B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2793 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x246C JUMP JUMPDEST PUSH2 0x27A0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2350 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B2 DUP3 PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x27A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x27CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x27DF DUP2 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27FB JUMPI PUSH2 0x27FA PUSH2 0x21EB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2809 DUP5 DUP3 DUP6 ADD PUSH2 0x27D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2827 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x231C JUMP JUMPDEST PUSH2 0x2834 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x231C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2882 PUSH1 0x17 DUP4 PUSH2 0x283B JUMP JUMPDEST SWAP2 POP PUSH2 0x288D DUP3 PUSH2 0x284C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28B1 DUP2 PUSH2 0x2875 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28FA DUP2 PUSH2 0x28E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2915 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2350 JUMP JUMPDEST PUSH2 0x2922 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28F1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2934 DUP3 PUSH2 0x2346 JUMP JUMPDEST SWAP2 POP PUSH2 0x293F DUP4 PUSH2 0x2346 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x28B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 LOG4 DUP3 0xED 0x4B STOP MULMOD PUSH13 0xBC56209C8331012820EDB9AABB 0xDD BALANCE DUP3 0xC2 PUSH25 0x42667815EEDC64736F6C634300080A00330000000000000000 ",
							"sourceMap": "712:9498:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7622:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3225:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;999:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1208;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2322:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4945:2228;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8030:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1164:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2741:183:16;;;:::i;:::-;;3489:102;;;:::i;:::-;;1251:36:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2562:128;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1801:86:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4061:584:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;885:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2265:291:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8435:248:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2015:100:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7344:124:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3680:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2877:142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3052:103:16;;;:::i;:::-;;7622:264:4;1239:6:16;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;7729:7:4::1;7709:27;;:16;;;;;;;;;;;:27;;;7705:87;;7745:47;;;;;;;;;;;;;;7705:87;7822:7;7821:8;7802:16;;:27;;;;;;;;;;;;;;;;;;7844:35;7871:7;7844:35;;;;;;:::i;:::-;;;;;;;;7622:264:::0;:::o;3225:145::-;3294:4;3317:46;3355:6;3317:20;:29;;:46;;;;:::i;:::-;3310:53;;3225:145;;;:::o;999:36::-;;;;;;;;;;;;;:::o;1208:::-;;;;:::o;2322:112::-;2384:7;2410:10;:17;;;;2403:24;;2322:112;:::o;948:44::-;;;;;;;;;;;;;:::o;4945:2228::-;5105:15;5132:14;5149:7;:5;:7::i;:::-;5132:24;;5171:16;;;;;;;;;;;5170:17;:41;;;;;5205:6;5191:20;;:10;:20;;;;5170:41;5166:101;;;5256:10;5220:47;;;;;;;;;;;:::i;:::-;;;;;;;;5166:101;5278:29;5310:20;;;;;;;;;;;5278:52;;5378:1;5345:35;;:21;:35;;;5341:81;;;5389:33;;;;;;;;;;;;;;5341:81;5438:47;5476:7;5438:20;:29;;:47;;;;:::i;:::-;5433:105;;5530:7;5494:44;;;;;;;;;;;:::i;:::-;;;;;;;;5433:105;5564:7;5553:18;;:7;:18;;;5549:69;;;5610:7;5580:38;;;;;;;;;;;:::i;:::-;;;;;;;;5549:69;5699:35;5724:9;5699:35;;:24;:35::i;:::-;;5853:14;5869;5887:29;5899:7;5908;5887:11;:29::i;:::-;5852:64;;;;5996:1;5968:30;;5976:7;5968:30;;;5964:67;;;6007:24;;;;;;;;;;;;;;5964:67;6103:1;6045:60;;6053:12;:21;6066:7;6053:21;;;;;;;;;;;;;;;:30;6075:7;6053:30;;;;;;;;;;;;;;;:37;;;;;;;;;;;;6045:60;;;6041:136;;6157:7;6166;6175:1;6126:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;6041:136;6188:13;6225:7;6234;6214:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6204:39;;;;;;6188:55;;6271;6297:21;6320:5;6271:25;:55::i;:::-;6253:74;;6338:7;:18;;;6357:7;6366;6375:9;6386:16;6338:65;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6447:108;;;;;;;;6487:7;6447:108;;;;;;6538:6;6524:20;;:10;:20;;;6447:108;;;;;6414:12;:21;6427:7;6414:21;;;;;;;;;;;;;;;:30;6436:7;6414:30;;;;;;;;;;;;;;;:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6566:10;6582:7;6566:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6629:7;6606:63;;6620:7;6606:63;;;6638:7;6667:1;6647:10;:17;;;;:21;;;;:::i;:::-;6606:63;;;;;;;:::i;:::-;;;;;;;;5122:2051;;;;;4945:2228;;;;;;:::o;8030:256::-;1239:6:16;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;8116:46:4::1;8149:11;8116:20;:24;;:46;;;;:::i;:::-;8111:124;;8223:11;8183:52;;;;;;;;;;;:::i;:::-;;;;;;;;8111:124;8267:11;8251:28;;;;;;;;;;;;8030:256:::0;:::o;1164:37::-;;;;;;;;;;;;;:::o;2741:183:16:-;1239:6;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;2836:1:::1;2811:27;;:13;;;;;;;;;;;:27;;;2807:72;;;2847:32;;;;;;;;;;;;;;2807:72;2889:28;2914:1;2889:16;:28::i;:::-;2741:183::o:0;3489:102::-;1239:6;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;3554:30:::1;3581:1;3554:18;:30::i;:::-;3489:102::o:0;1251:36:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2562:128::-;2628:7;2654:29;:20;:27;:29::i;:::-;2647:36;;2562:128;:::o;1801:86:16:-;1848:7;1874:6;;;;;;;;;;;1867:13;;1801:86;:::o;4061:584:4:-;1239:6:16;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;4211:4:4::1;4167:48;;4175:21;4167:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;4163:130;;4271:21;4236:57;;;;;;;;;;;:::i;:::-;;;;;;;;4163:130;4304:32;4339:20;;;;;;;;;;;4304:55;;4401:21;4373:49;;:24;:49;;;4369:126;;;4473:21;4443:52;;;;;;;;;;;:::i;:::-;;;;;;;;4369:126;4529:21;4506:20;;:44;;;;;;;;;;;;;;;;;;4566:72;4590:24;4616:21;4566:72;;;;;;;:::i;:::-;;;;;;;;4153:492;4061:584:::0;:::o;885:49::-;928:6;885:49;:::o;2265:291:16:-;1239:6;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;2378:1:::1;2353:27;;:13;:27;;;2349:69;;;2389:29;;;;;;;;;;;;;;2349:69;2457:1;2432:27;;:13;;;;;;;;;;;:27;;;2428:80;;2468:40;;;;;;;;;;;;;;2428:80;2518:31;2535:13;2518:16;:31::i;:::-;2265:291:::0;:::o;8435:248:4:-;1239:6:16;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;8524:49:4::1;8560:11;8524:20;:27;;:49;;;;:::i;:::-;8519:111;;8618:11;8582:48;;;;;;;;;;;:::i;:::-;;;;;;;;8519:111;8664:11;8646:30;;;;;;;;;;;;8435:248:::0;:::o;2015:100:16:-;2069:7;2095:13;;;;;;;;;;;2088:20;;2015:100;:::o;7344:124:4:-;1239:6:16;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;7430:31:4::1;7447:13;7430:16;:31::i;:::-;7344:124:::0;:::o;3680:205::-;3796:24;;:::i;:::-;3839:39;3861:7;3870;3839:21;:39::i;:::-;3832:46;;3680:205;;;;:::o;2877:142::-;2948:6;2980:31;3004:6;2980:20;:23;;:31;;;;:::i;:::-;2966:46;;2877:142;;;:::o;3052:103:16:-;1438:13;;;;;;;;;;;1424:27;;:10;:27;;;;:55;;;;1477:1;1455:24;;:10;:24;;;1424:55;1420:101;;;1488:33;;;;;;;;;;;;;;1420:101;3118:30:::1;3137:10;3118:18;:30::i;:::-;3052:103::o:0;8852:165:2:-;8932:4;8955:55;8965:3;:10;;9001:5;8985:23;;8977:32;;8955:9;:55::i;:::-;8948:62;;8852:165;;;;:::o;1462:292:9:-;1522:7;1559:16;1551:25;;1545:3;:31;1541:68;;;1585:24;;;;;;;;;;;;;;1541:68;1643:14;343:7;1667:3;1660:27;1643:44;;1709:28;1729:7;1709:13;:11;:13::i;:::-;:19;;:28;;;;:::i;:::-;1702:35;;;1462:292;;;:::o;10003:205:4:-;10078:6;10086;10118:7;10108:17;;:7;:17;;;10104:62;;;10149:7;10158;10127:39;;;;;;;;10104:62;10184:7;10193;10176:25;;;;10003:205;;;;;:::o;2107:794:0:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;;2864:1;2844:22;;:8;:22;;;;2836:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2107:794;;;;:::o;8297:150:2:-;8367:4;8390:50;8395:3;:10;;8431:5;8415:23;;8407:32;;8390:4;:50::i;:::-;8383:57;;8297:150;;;;:::o;4217:157:16:-;4309:13;4293;;:29;;;;;;;;;;;;;;;;;;4353:13;4337:30;;;;;;;;;;;;4217:157;:::o;3788:228::-;3862:17;3882:6;;;;;;;;;;;3862:26;;3907:9;3898:6;;:18;;;;;;;;;;;;;;;;;;3950:1;3926:13;;:26;;;;;;;;;;;;;;;;;;3999:9;3967:42;;3988:9;3967:42;;;;;;;;;;;;3852:164;3788:228;:::o;9098:115:2:-;9161:7;9187:19;9195:3;:10;;9187:7;:19::i;:::-;9180:26;;9098:115;;;:::o;8615:156::-;8688:4;8711:53;8719:3;:10;;8755:5;8739:23;;8731:32;;8711:7;:53::i;:::-;8704:60;;8615:156;;;;:::o;8813:389:4:-;8910:1;8885:27;;:13;:27;;;8881:64;;;8921:24;;;;;;;;;;;;;;8881:64;8956:24;8983:12;;;;;;;;;;;8956:39;;9029:13;9009:33;;:16;:33;;;9005:88;;;9079:13;9051:42;;;;;;;;;;;:::i;:::-;;;;;;;;9005:88;9119:13;9104:12;;:28;;;;;;;;;;;;;;;;;;9147:48;9163:16;9181:13;9147:48;;;;;;;:::i;:::-;;;;;;;;8871:331;8813:389;:::o;9518:247::-;9625:24;;:::i;:::-;9682:29;9694:7;9703;9682:11;:29::i;:::-;9661:50;;;;;;;;9728:12;:21;9741:7;9728:21;;;;;;;;;;;;;;;:30;9750:7;9728:30;;;;;;;;;;;;;;;9721:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9518:247;;;;:::o;9555:156:2:-;9629:7;9679:22;9683:3;:10;;9695:5;9679:3;:22::i;:::-;9671:31;;9648:56;;9555:156;;;;:::o;4247:127::-;4320:4;4366:1;4343:3;:12;;:19;4356:5;4343:19;;;;;;;;;;;;:24;;4336:31;;4247:127;;;;:::o;1916:284:9:-;1962:7;407:6:11;248:3;2127:1:9;:27;;2126:57;;;;;:::i;:::-;;;248:3:11;291:1;:17;;2108:75:9;2101:82;;1916:284;:::o;4094:4000:14:-;4153:14;4179:11;4200:12;4232:1;4227;:6;4223:34;;;248:3:11;291:1;:17;;4235:22:14;;;;;;4223:34;4299:1;4291:9;;4326:1;4320:4;4316:12;4313:109;;;4362:4;4359:1;4355:12;4347:20;;4401:6;4394:14;4384:24;;4313:109;4453:8;4446:4;:15;4442:3460;;;248:3:11;291:1;:17;;4477:24:14;;4553:1;4580:34;4577:1;4574:41;4571:153;;;4657:3;4653:1;4649:6;4645:16;4638:23;;4699:6;4692:14;4682:24;;4571:153;4755:3;4749:4;4745:14;4742:94;;;4813:3;4805:6;4801:16;4796:3;4792:26;4782:36;;4742:94;4878:3;4873;4869:13;4864:3;4860:23;4853:30;;4913:3;4907:4;4903:14;4900:94;;;4971:3;4963:6;4959:16;4954:3;4950:26;4940:36;;4900:94;5036:3;5031;5027:13;5022:3;5018:23;5011:30;;5071:3;5065:4;5061:14;5058:94;;;5129:3;5121:6;5117:16;5112:3;5108:26;5098:36;;5058:94;5194:3;5189;5185:13;5180:3;5176:23;5169:30;;5229:3;5223:4;5219:14;5216:94;;;5287:3;5279:6;5275:16;5270:3;5266:26;5256:36;;5216:94;5352:3;5347;5343:13;5338:3;5334:23;5327:30;;5387:4;5381;5377:15;5374:95;;;5446:3;5438:6;5434:16;5429:3;5425:26;5415:36;;5374:95;5511:3;5506;5502:13;5497:3;5493:23;5486:30;;5546:4;5540;5536:15;5533:95;;;5605:3;5597:6;5593:16;5588:3;5584:26;5574:36;;5533:95;5670:3;5665;5661:13;5656:3;5652:23;5645:30;;5705:4;5699;5695:15;5692:95;;;5764:3;5756:6;5752:16;5747:3;5743:26;5733:36;;5692:95;5829:3;5824;5820:13;5815:3;5811:23;5804:30;;5864:4;5858;5854:15;5851:95;;;5923:3;5915:6;5911:16;5906:3;5902:26;5892:36;;5851:95;5988:3;5983;5979:13;5974:3;5970:23;5963:30;;6023:5;6017:4;6013:16;6010:96;;;6083:3;6075:6;6071:16;6066:3;6062:26;6052:36;;6010:96;6148:3;6143;6139:13;6134:3;6130:23;6123:30;;6183:5;6177:4;6173:16;6170:96;;;6243:3;6235:6;6231:16;6226:3;6222:26;6212:36;;6170:96;6308:3;6303;6299:13;6294:3;6290:23;6283:30;;6343:5;6337:4;6333:16;6330:96;;;6403:3;6395:6;6391:16;6386:3;6382:26;6372:36;;6330:96;6468:3;6463;6459:13;6454:3;6450:23;6443:30;;6503:5;6497:4;6493:16;6490:96;;;6563:3;6555:6;6551:16;6546:3;6542:26;6532:36;;6490:96;6628:3;6623;6619:13;6614:3;6610:23;6603:30;;6663:6;6657:4;6653:17;6650:97;;;6724:3;6716:6;6712:16;6707:3;6703:26;6693:36;;6650:97;6789:3;6784;6780:13;6775:3;6771:23;6764:30;;6824:6;6818:4;6814:17;6811:97;;;6885:3;6877:6;6873:16;6868:3;6864:26;6854:36;;6811:97;6950:3;6945;6941:13;6936:3;6932:23;6925:30;;6985:6;6979:4;6975:17;6972:97;;;7046:3;7038:6;7034:16;7029:3;7025:26;7015:36;;6972:97;7111:3;7106;7102:13;7097:3;7093:23;7086:30;;7146:6;7140:4;7136:17;7133:97;;;7207:3;7199:6;7195:16;7190:3;7186:26;7176:36;;7133:97;7272:3;7267;7263:13;7258:3;7254:23;7247:30;;7307:7;7301:4;7297:18;7294:98;;;7369:3;7361:6;7357:16;7352:3;7348:26;7338:36;;7294:98;7434:3;7429;7425:13;7420:3;7416:23;7409:30;;7469:7;7463:4;7459:18;7456:98;;;7531:3;7523:6;7519:16;7514:3;7510:26;7500:36;;7456:98;7596:3;7591;7587:13;7582:3;7578:23;7571:30;;7631:7;7625:4;7621:18;7618:98;;;7693:3;7685:6;7681:16;7676:3;7672:26;7662:36;;7618:98;7758:3;7753;7749:13;7744:3;7740:23;7733:30;;7793:7;7787:4;7783:18;7780:98;;;7855:3;7847:6;7843:16;7838:3;7834:26;7824:36;;7780:98;4524:3368;4442:3460;7982:1;7972:6;:11;7968:57;;;8020:1;8023;7992:33;;;;;;;;;;;;:::i;:::-;;;;;;;;7968:57;8043:6;:44;;8081:6;8043:44;;;8072:6;8052:17;:26;;;;:::i;:::-;8043:44;8036:51;;;;4094:4000;;;;;:::o;2206:404:2:-;2269:4;2290:21;2300:3;2305:5;2290:9;:21::i;:::-;2285:319;;2327:3;:11;;2344:5;2327:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:3;:11;;:18;;;;2485:3;:12;;:19;2498:5;2485:19;;;;;;;;;;;:40;;;;2546:4;2539:11;;;;2285:319;2588:5;2581:12;;2206:404;;;;;:::o;4455:107::-;4511:7;4537:3;:11;;:18;;;;4530:25;;4455:107;;;:::o;2778:1388::-;2844:4;2960:18;2981:3;:12;;:19;2994:5;2981:19;;;;;;;;;;;;2960:40;;3029:1;3015:10;:15;3011:1149;;3384:21;3421:1;3408:10;:14;;;;:::i;:::-;3384:38;;3436:17;3477:1;3456:3;:11;;:18;;;;:22;;;;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3823:10;3797:3;:12;;:23;3810:9;3797:23;;;;;;;;;;;:36;;;;3525:366;3493:398;3969:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;2778:1388;;;;;:::o;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;;4990:25;;4904:118;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:19:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:126::-;1057:7;1097:42;1090:5;1086:54;1075:65;;1020:126;;;:::o;1152:96::-;1189:7;1218:24;1236:5;1218:24;:::i;:::-;1207:35;;1152:96;;;:::o;1254:110::-;1305:7;1334:24;1352:5;1334:24;:::i;:::-;1323:35;;1254:110;;;:::o;1370:150::-;1457:38;1489:5;1457:38;:::i;:::-;1450:5;1447:49;1437:77;;1510:1;1507;1500:12;1437:77;1370:150;:::o;1526:167::-;1586:5;1624:6;1611:20;1602:29;;1640:47;1681:5;1640:47;:::i;:::-;1526:167;;;;:::o;1699:357::-;1772:6;1821:2;1809:9;1800:7;1796:23;1792:32;1789:119;;;1827:79;;:::i;:::-;1789:119;1947:1;1972:67;2031:7;2022:6;2011:9;2007:22;1972:67;:::i;:::-;1962:77;;1918:131;1699:357;;;;:::o;2062:109::-;2143:21;2158:5;2143:21;:::i;:::-;2138:3;2131:34;2062:109;;:::o;2177:210::-;2264:4;2302:2;2291:9;2287:18;2279:26;;2315:65;2377:1;2366:9;2362:17;2353:6;2315:65;:::i;:::-;2177:210;;;;:::o;2393:118::-;2480:24;2498:5;2480:24;:::i;:::-;2475:3;2468:37;2393:118;;:::o;2517:222::-;2610:4;2648:2;2637:9;2633:18;2625:26;;2661:71;2729:1;2718:9;2714:17;2705:6;2661:71;:::i;:::-;2517:222;;;;:::o;2745:77::-;2782:7;2811:5;2800:16;;2745:77;;;:::o;2828:118::-;2915:24;2933:5;2915:24;:::i;:::-;2910:3;2903:37;2828:118;;:::o;2952:222::-;3045:4;3083:2;3072:9;3068:18;3060:26;;3096:71;3164:1;3153:9;3149:17;3140:6;3096:71;:::i;:::-;2952:222;;;;:::o;3180:91::-;3216:7;3256:8;3249:5;3245:20;3234:31;;3180:91;;;:::o;3277:120::-;3349:23;3366:5;3349:23;:::i;:::-;3342:5;3339:34;3329:62;;3387:1;3384;3377:12;3329:62;3277:120;:::o;3403:137::-;3448:5;3486:6;3473:20;3464:29;;3502:32;3528:5;3502:32;:::i;:::-;3403:137;;;;:::o;3546:813::-;3656:6;3664;3672;3680;3729:3;3717:9;3708:7;3704:23;3700:33;3697:120;;;3736:79;;:::i;:::-;3697:120;3856:1;3881:67;3940:7;3931:6;3920:9;3916:22;3881:67;:::i;:::-;3871:77;;3827:131;3997:2;4023:67;4082:7;4073:6;4062:9;4058:22;4023:67;:::i;:::-;4013:77;;3968:132;4139:2;4165:52;4209:7;4200:6;4189:9;4185:22;4165:52;:::i;:::-;4155:62;;4110:117;4266:2;4292:50;4334:7;4325:6;4314:9;4310:22;4292:50;:::i;:::-;4282:60;;4237:115;3546:813;;;;;;;:::o;4365:60::-;4393:3;4414:5;4407:12;;4365:60;;;:::o;4431:142::-;4481:9;4514:53;4532:34;4541:24;4559:5;4541:24;:::i;:::-;4532:34;:::i;:::-;4514:53;:::i;:::-;4501:66;;4431:142;;;:::o;4579:126::-;4629:9;4662:37;4693:5;4662:37;:::i;:::-;4649:50;;4579:126;;;:::o;4711:142::-;4777:9;4810:37;4841:5;4810:37;:::i;:::-;4797:50;;4711:142;;;:::o;4859:163::-;4962:53;5009:5;4962:53;:::i;:::-;4957:3;4950:66;4859:163;;:::o;5028:254::-;5137:4;5175:2;5164:9;5160:18;5152:26;;5188:87;5272:1;5261:9;5257:17;5248:6;5188:87;:::i;:::-;5028:254;;;;:::o;5288:122::-;5361:24;5379:5;5361:24;:::i;:::-;5354:5;5351:35;5341:63;;5400:1;5397;5390:12;5341:63;5288:122;:::o;5416:139::-;5462:5;5500:6;5487:20;5478:29;;5516:33;5543:5;5516:33;:::i;:::-;5416:139;;;;:::o;5561:329::-;5620:6;5669:2;5657:9;5648:7;5644:23;5640:32;5637:119;;;5675:79;;:::i;:::-;5637:119;5795:1;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;:::i;:::-;5810:63;;5766:117;5561:329;;;;:::o;5896:122::-;5969:24;5987:5;5969:24;:::i;:::-;5962:5;5959:35;5949:63;;6008:1;6005;5998:12;5949:63;5896:122;:::o;6024:139::-;6070:5;6108:6;6095:20;6086:29;;6124:33;6151:5;6124:33;:::i;:::-;6024:139;;;;:::o;6169:329::-;6228:6;6277:2;6265:9;6256:7;6252:23;6248:32;6245:119;;;6283:79;;:::i;:::-;6245:119;6403:1;6428:53;6473:7;6464:6;6453:9;6449:22;6428:53;:::i;:::-;6418:63;;6374:117;6169:329;;;;:::o;6504:530::-;6600:6;6608;6657:2;6645:9;6636:7;6632:23;6628:32;6625:119;;;6663:79;;:::i;:::-;6625:119;6783:1;6808:67;6867:7;6858:6;6847:9;6843:22;6808:67;:::i;:::-;6798:77;;6754:131;6924:2;6950:67;7009:7;7000:6;6989:9;6985:22;6950:67;:::i;:::-;6940:77;;6895:132;6504:530;;;;;:::o;7040:153::-;7133:53;7180:5;7133:53;:::i;:::-;7128:3;7121:66;7040:153;;:::o;7199:99::-;7270:21;7285:5;7270:21;:::i;:::-;7265:3;7258:34;7199:99;;:::o;7386:549::-;7553:4;7548:3;7544:14;7642:4;7635:5;7631:16;7625:23;7661:79;7734:4;7729:3;7725:14;7711:12;7661:79;:::i;:::-;7568:182;7842:4;7835:5;7831:16;7825:23;7861:57;7912:4;7907:3;7903:14;7889:12;7861:57;:::i;:::-;7760:168;7522:413;7386:549;;:::o;7941:362::-;8104:4;8142:2;8131:9;8127:18;8119:26;;8155:141;8293:1;8282:9;8278:17;8269:6;8155:141;:::i;:::-;7941:362;;;;:::o;8309:140::-;8373:9;8406:37;8437:5;8406:37;:::i;:::-;8393:50;;8309:140;;;:::o;8455:159::-;8556:51;8601:5;8556:51;:::i;:::-;8551:3;8544:64;8455:159;;:::o;8620:250::-;8727:4;8765:2;8754:9;8750:18;8742:26;;8778:85;8860:1;8849:9;8845:17;8836:6;8778:85;:::i;:::-;8620:250;;;;:::o;8876:85::-;8921:7;8950:5;8939:16;;8876:85;;;:::o;8967:158::-;9025:9;9058:61;9076:42;9085:32;9111:5;9085:32;:::i;:::-;9076:42;:::i;:::-;9058:61;:::i;:::-;9045:74;;8967:158;;;:::o;9131:147::-;9226:45;9265:5;9226:45;:::i;:::-;9221:3;9214:58;9131:147;;:::o;9284:514::-;9469:4;9507:2;9496:9;9492:18;9484:26;;9520:85;9602:1;9591:9;9587:17;9578:6;9520:85;:::i;:::-;9615:86;9697:2;9686:9;9682:18;9673:6;9615:86;:::i;:::-;9711:80;9787:2;9776:9;9772:18;9763:6;9711:80;:::i;:::-;9284:514;;;;;;:::o;9804:388::-;9953:4;9991:2;9980:9;9976:18;9968:26;;10004:85;10086:1;10075:9;10071:17;10062:6;10004:85;:::i;:::-;10099:86;10181:2;10170:9;10166:18;10157:6;10099:86;:::i;:::-;9804:388;;;;;:::o;10198:115::-;10283:23;10300:5;10283:23;:::i;:::-;10278:3;10271:36;10198:115;;:::o;10319:593::-;10516:4;10554:3;10543:9;10539:19;10531:27;;10568:85;10650:1;10639:9;10635:17;10626:6;10568:85;:::i;:::-;10663:86;10745:2;10734:9;10730:18;10721:6;10663:86;:::i;:::-;10759:70;10825:2;10814:9;10810:18;10801:6;10759:70;:::i;:::-;10839:66;10901:2;10890:9;10886:18;10877:6;10839:66;:::i;:::-;10319:593;;;;;;;:::o;10918:180::-;10966:77;10963:1;10956:88;11063:4;11060:1;11053:15;11087:4;11084:1;11077:15;11104:191;11144:4;11164:20;11182:1;11164:20;:::i;:::-;11159:25;;11198:20;11216:1;11198:20;:::i;:::-;11193:25;;11237:1;11234;11231:8;11228:34;;;11242:18;;:::i;:::-;11228:34;11287:1;11284;11280:9;11272:17;;11104:191;;;;:::o;11301:364::-;11438:4;11476:2;11465:9;11461:18;11453:26;;11489:87;11573:1;11562:9;11558:17;11549:6;11489:87;:::i;:::-;11586:72;11654:2;11643:9;11639:18;11630:6;11586:72;:::i;:::-;11301:364;;;;;:::o;11671:115::-;11727:7;11756:24;11774:5;11756:24;:::i;:::-;11745:35;;11671:115;;;:::o;11792:160::-;11884:43;11921:5;11884:43;:::i;:::-;11877:5;11874:54;11864:82;;11942:1;11939;11932:12;11864:82;11792:160;:::o;11958:181::-;12034:5;12065:6;12059:13;12050:22;;12081:52;12127:5;12081:52;:::i;:::-;11958:181;;;;:::o;12145:389::-;12234:6;12283:2;12271:9;12262:7;12258:23;12254:32;12251:119;;;12289:79;;:::i;:::-;12251:119;12409:1;12434:83;12509:7;12500:6;12489:9;12485:22;12434:83;:::i;:::-;12424:93;;12380:147;12145:389;;;;:::o;12540:332::-;12661:4;12699:2;12688:9;12684:18;12676:26;;12712:71;12780:1;12769:9;12765:17;12756:6;12712:71;:::i;:::-;12793:72;12861:2;12850:9;12846:18;12837:6;12793:72;:::i;:::-;12540:332;;;;;:::o;12878:169::-;12962:11;12996:6;12991:3;12984:19;13036:4;13031:3;13027:14;13012:29;;12878:169;;;;:::o;13053:173::-;13193:25;13189:1;13181:6;13177:14;13170:49;13053:173;:::o;13232:366::-;13374:3;13395:67;13459:2;13454:3;13395:67;:::i;:::-;13388:74;;13471:93;13560:3;13471:93;:::i;:::-;13589:2;13584:3;13580:12;13573:19;;13232:366;;;:::o;13604:419::-;13770:4;13808:2;13797:9;13793:18;13785:26;;13857:9;13851:4;13847:20;13843:1;13832:9;13828:17;13821:47;13885:131;14011:4;13885:131;:::i;:::-;13877:139;;13604:419;;;:::o;14029:180::-;14077:77;14074:1;14067:88;14174:4;14171:1;14164:15;14198:4;14195:1;14188:15;14215:76;14251:7;14280:5;14269:16;;14215:76;;;:::o;14297:115::-;14382:23;14399:5;14382:23;:::i;:::-;14377:3;14370:36;14297:115;;:::o;14418:328::-;14537:4;14575:2;14564:9;14560:18;14552:26;;14588:71;14656:1;14645:9;14641:17;14632:6;14588:71;:::i;:::-;14669:70;14735:2;14724:9;14720:18;14711:6;14669:70;:::i;:::-;14418:328;;;;;:::o;14752:185::-;14792:1;14809:20;14827:1;14809:20;:::i;:::-;14804:25;;14843:20;14861:1;14843:20;:::i;:::-;14838:25;;14882:1;14872:35;;14887:18;;:::i;:::-;14872:35;14929:1;14926;14922:9;14917:14;;14752:185;;;;:::o;14943:180::-;14991:77;14988:1;14981:88;15088:4;15085:1;15078:15;15112:4;15109:1;15102:15;15129:180;15177:77;15174:1;15167:88;15274:4;15271:1;15264:15;15298:4;15295:1;15288:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2146800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LBPairImplementation()": "2537",
								"MAX_FEE()": "440",
								"addQuoteAsset(address)": "infinite",
								"allLBPairs(uint256)": "infinite",
								"becomeOwner()": "54747",
								"createLBPair(address,address,uint24,bool)": "infinite",
								"creationUnlocked()": "2610",
								"feeRecipient()": "2582",
								"flashLoanFee()": "2519",
								"getLBPairInformation(address,address)": "infinite",
								"getNumberOfLBPairs()": "2557",
								"getNumberOfQuoteAssets()": "2588",
								"getQuoteAsset(uint256)": "infinite",
								"isQuoteAsset(address)": "infinite",
								"owner()": "2589",
								"pendingOwner()": "2566",
								"removeQuoteAsset(address)": "infinite",
								"renounceOwnership()": "54701",
								"revokePendingOwner()": "30053",
								"setFactoryLockedState(bool)": "infinite",
								"setFeeRecipient(address)": "infinite",
								"setLBPairImplementation(address)": "infinite",
								"setPendingOwner(address)": "30421"
							},
							"internal": {
								"_getLBPairInformation(contract IERC20,contract IERC20)": "infinite",
								"_setFeeRecipient(address)": "infinite",
								"_sortTokens(contract IERC20,contract IERC20)": "108"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 712,
									"end": 10210,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1681,
									"name": "CALLER",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "tag",
									"source": 16,
									"value": "7"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2188,
									"end": 2201,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2171,
									"end": 2187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2171,
									"end": 2187,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2171,
									"end": 2187,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3879,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3888,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3907,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3904,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3898,
									"end": 3904,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 3939,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 3939,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3999,
									"end": 4008,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3988,
									"end": 3997,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "LOG3",
									"source": 16
								},
								{
									"begin": 3852,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 8813,
									"end": 9202,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 8813,
									"end": 9202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8910,
									"end": 8911,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8885,
									"end": 8912,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8885,
									"end": 8912,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8885,
									"end": 8898,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8885,
									"end": 8912,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8885,
									"end": 8912,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8885,
									"end": 8912,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 8881,
									"end": 8945,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8881,
									"end": 8945,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 8881,
									"end": 8945,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "PUSH",
									"source": 4,
									"value": "95CF3EE400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 8881,
									"end": 8945,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 8881,
									"end": 8945,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8956,
									"end": 8980,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8983,
									"end": 8995,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8956,
									"end": 8995,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8956,
									"end": 8995,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 9029,
									"end": 9042,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9009,
									"end": 9042,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9009,
									"end": 9042,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9009,
									"end": 9025,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9009,
									"end": 9042,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9009,
									"end": 9042,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9009,
									"end": 9042,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 9005,
									"end": 9093,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 9005,
									"end": 9093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 9005,
									"end": 9093,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 9079,
									"end": 9092,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "PUSH",
									"source": 4,
									"value": "4FCEA97100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9051,
									"end": 9093,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 9005,
									"end": 9093,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 9005,
									"end": 9093,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 9119,
									"end": 9132,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9116,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 9104,
									"end": 9116,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 9104,
									"end": 9132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "PUSH",
									"source": 4,
									"value": "15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721"
								},
								{
									"begin": 9163,
									"end": 9179,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9181,
									"end": 9194,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9147,
									"end": 9195,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 8871,
									"end": 9202,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8813,
									"end": 9202,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8813,
									"end": 9202,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 19,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "26"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 19,
									"value": "42"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "27"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "25"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 19,
									"value": "46"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 19,
									"value": "48"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1675,
									"end": 1679,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1715,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1698,
									"end": 1716,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1690,
									"end": 1716,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1690,
									"end": 1716,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1726,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 1794,
									"end": 1795,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1783,
									"end": 1792,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1779,
									"end": 1796,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1726,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1726,
									"end": 1797,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1726,
									"end": 1797,
									"name": "tag",
									"source": 19,
									"value": "50"
								},
								{
									"begin": 1726,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1807,
									"end": 1879,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 1875,
									"end": 1877,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1864,
									"end": 1873,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1860,
									"end": 1878,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1851,
									"end": 1857,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1807,
									"end": 1879,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "28"
								},
								{
									"begin": 1807,
									"end": 1879,
									"name": "JUMP",
									"source": 19,
									"value": "[in]"
								},
								{
									"begin": 1807,
									"end": 1879,
									"name": "tag",
									"source": 19,
									"value": "51"
								},
								{
									"begin": 1807,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1554,
									"end": 1886,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 10210,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122089a482ed4b00096cbc56209c8331012820edb9aabbdd3182c27842667815eedc64736f6c634300080a0033",
									".code": [
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "72E47B8C"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "DDBFD941"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "DDBFD941"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "E30C3978"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "E74B981B"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "EAEC42A4"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "F89A4CD5"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "F9DCA989"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "72E47B8C"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "80C5061E"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "B0384781"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "BC063E1A"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "C42069EC"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "509CEB90"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "509CEB90"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "52E2CF8E"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "5A440923"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "5C779D6D"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "67AB8A4E"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "22F3FE14"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "27721842"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "46904840"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "4847CDC8"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "4E937C3A"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10210,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "89"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "87"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7736,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7736,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7709,
											"end": 7725,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7736,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7736,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7709,
											"end": 7736,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7705,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 7705,
											"end": 7792,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "PUSH",
											"source": 4,
											"value": "B6EF29400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7792,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7705,
											"end": 7792,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 7705,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7822,
											"end": 7829,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7821,
											"end": 7829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7802,
											"end": 7818,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7802,
											"end": 7829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "PUSH",
											"source": 4,
											"value": "CDEE7BF87B7A743B4CBE1D2D534C5248621B76F58460337E7FDA92D5D23F4124"
										},
										{
											"begin": 7871,
											"end": 7878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7879,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7622,
											"end": 7886,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3355,
											"end": 3361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3337,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3317,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3317,
											"end": 3346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2391,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2420,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2410,
											"end": 2427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2427,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2403,
											"end": 2427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5149,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 5156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5171,
											"end": 5187,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5187,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5211,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5170,
											"end": 5211,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5205,
											"end": 5211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5201,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5211,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5170,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5267,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5166,
											"end": 5267,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5266,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "PUSH",
											"source": 4,
											"value": "3A43E98000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5220,
											"end": 5267,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5267,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5166,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5310,
											"end": 5330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5378,
											"end": 5379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5345,
											"end": 5380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5345,
											"end": 5380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5345,
											"end": 5366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5345,
											"end": 5380,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5345,
											"end": 5380,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5345,
											"end": 5380,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5422,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5341,
											"end": 5422,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "PUSH",
											"source": 4,
											"value": "A2D3F3E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5389,
											"end": 5422,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5422,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5341,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5476,
											"end": 5483,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5458,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5438,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5438,
											"end": 5467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5438,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5433,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5433,
											"end": 5538,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "PUSH",
											"source": 4,
											"value": "8E888EF300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5538,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5433,
											"end": 5538,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5433,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5564,
											"end": 5571,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5560,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5618,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5549,
											"end": 5618,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5617,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "2F9B185300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5618,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5618,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5549,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5699,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5724,
											"end": 5733,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5699,
											"end": 5734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 5699,
											"end": 5734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5699,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5699,
											"end": 5734,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5699,
											"end": 5734,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5699,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5699,
											"end": 5734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5853,
											"end": 5867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5899,
											"end": 5906,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5908,
											"end": 5915,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5887,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5887,
											"end": 5916,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5887,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 5887,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5852,
											"end": 5916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5852,
											"end": 5916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5852,
											"end": 5916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5852,
											"end": 5916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5968,
											"end": 5998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5968,
											"end": 5998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5968,
											"end": 5998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5968,
											"end": 5998,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 6031,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 6031,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5964,
											"end": 6031,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "PUSH",
											"source": 4,
											"value": "95CF3EE400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6031,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 6031,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5964,
											"end": 6031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6045,
											"end": 6105,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6065,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6073,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6082,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6053,
											"end": 6090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6105,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6045,
											"end": 6105,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6105,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6041,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6041,
											"end": 6177,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6157,
											"end": 6164,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6173,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH",
											"source": 4,
											"value": "CB27A43500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6041,
											"end": 6177,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 6041,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6234,
											"end": 6241,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6214,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6204,
											"end": 6243,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6204,
											"end": 6243,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6204,
											"end": 6243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6204,
											"end": 6243,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6204,
											"end": 6243,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6297,
											"end": 6318,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6271,
											"end": 6326,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6271,
											"end": 6326,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6271,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6253,
											"end": 6327,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 6253,
											"end": 6327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6345,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6356,
											"name": "PUSH",
											"source": 4,
											"value": "8C6ABC0F"
										},
										{
											"begin": 6357,
											"end": 6364,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6366,
											"end": 6373,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6375,
											"end": 6384,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6402,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6338,
											"end": 6403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6487,
											"end": 6494,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6538,
											"end": 6544,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6524,
											"end": 6544,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6524,
											"end": 6544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6524,
											"end": 6534,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6524,
											"end": 6544,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6524,
											"end": 6544,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6524,
											"end": 6544,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6426,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6427,
											"end": 6434,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6435,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6443,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6444,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6414,
											"end": 6555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6576,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6582,
											"end": 6589,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6590,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6636,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6620,
											"end": 6627,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH",
											"source": 4,
											"value": "612FDD9B533D1CA33088DCBCA9AD3186EEADC9893E63715B8A783040D729CD6A"
										},
										{
											"begin": 6638,
											"end": 6645,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6667,
											"end": 6668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6647,
											"end": 6657,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6647,
											"end": 6664,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6664,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 6647,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6606,
											"end": 6669,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7173,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "155"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8149,
											"end": 8160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8136,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 8116,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 8116,
											"end": 8140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8116,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 8111,
											"end": 8235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8223,
											"end": 8234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "PUSH",
											"source": 4,
											"value": "3CE0AD900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8183,
											"end": 8235,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8235,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 8111,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8267,
											"end": 8278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "PUSH",
											"source": 4,
											"value": "84CC2115995684DCB0CD3D3A9565E3D32F075DE81DB70C8DC3A719B2A47AF67E"
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8251,
											"end": 8279,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8286,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "162"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "ECFAD6BF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "tag",
											"source": 16,
											"value": "164"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "tag",
											"source": 16,
											"value": "165"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2654,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2654,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4211,
											"end": 4215,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4205,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4205,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4205,
											"name": "PUSH",
											"source": 4,
											"value": "C45A0155"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4292,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH",
											"source": 4,
											"value": "147CE15E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4304,
											"end": 4336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4304,
											"end": 4359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4304,
											"end": 4359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4397,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4473,
											"end": 4494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH",
											"source": 4,
											"value": "6F69DCA800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4506,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "900D0E3D359F50E4F923ECDC06B401E07DBB9F485E17B07BCFC91A13000B277E"
										},
										{
											"begin": 4590,
											"end": 4614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4637,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 928,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "16345785D8A0000"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "89"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2366,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "91F3851500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "716B1FBF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "tag",
											"source": 16,
											"value": "195"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8560,
											"end": 8571,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8544,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 8524,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 8524,
											"end": 8551,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8524,
											"end": 8573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8519,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8519,
											"end": 8630,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8618,
											"end": 8629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "PUSH",
											"source": 4,
											"value": "8E888EF300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8582,
											"end": 8630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8519,
											"end": 8630,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 8519,
											"end": 8630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "PUSH",
											"source": 4,
											"value": "B767739217755D8AF5A2BA75B181A19FA1750F8BB701F09311CB19A90140CB3"
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8435,
											"end": 8683,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7447,
											"end": 7460,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7430,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7344,
											"end": 7468,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3796,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3796,
											"end": 3820,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3796,
											"end": 3820,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3796,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3861,
											"end": 3868,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3877,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1465,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "7304D01200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "tag",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8965,
											"end": 8968,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8965,
											"end": 8975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8965,
											"end": 8975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9001,
											"end": 9006,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8985,
											"end": 9008,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8985,
											"end": 9008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 9009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 9009,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8955,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 8955,
											"end": 9010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8955,
											"end": 9010,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 8955,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 9010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 9010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1551,
											"end": 1576,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1576,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1576,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "58F62EAC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1643,
											"end": 1657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 350,
											"name": "PUSH",
											"source": 9,
											"value": "800000"
										},
										{
											"begin": 1667,
											"end": 1670,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1687,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1643,
											"end": 1687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1643,
											"end": 1687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1729,
											"end": 1736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1709,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1709,
											"end": 1722,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1709,
											"end": 1722,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1709,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1702,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10086,
											"end": 10092,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10118,
											"end": 10125,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10108,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10108,
											"end": 10125,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10166,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10166,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10104,
											"end": 10166,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10149,
											"end": 10156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10158,
											"end": 10165,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10127,
											"end": 10166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10104,
											"end": 10166,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10104,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10191,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10176,
											"end": 10201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10208,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2503,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2495,
											"end": 2520,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2493,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2485,
											"end": 2521,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2572,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2800,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2817,
											"name": "CREATE2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2817,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8395,
											"end": 8398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8395,
											"end": 8405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8431,
											"end": 8436,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8415,
											"end": 8438,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8407,
											"end": 8439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8439,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8390,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8383,
											"end": 8440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8383,
											"end": 8440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4309,
											"end": 4322,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4306,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4293,
											"end": 4306,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4353,
											"end": 4366,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "tag",
											"source": 16,
											"value": "171"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3879,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3888,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3939,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3939,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9195,
											"end": 9205,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9195,
											"end": 9205,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9187,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 9187,
											"end": 9206,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9187,
											"end": 9206,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9187,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8688,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 8719,
											"end": 8722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8719,
											"end": 8729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8755,
											"end": 8760,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8763,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8763,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8711,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 8711,
											"end": 8764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8711,
											"end": 8764,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 8711,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8704,
											"end": 8764,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8704,
											"end": 8764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8813,
											"end": 9202,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8813,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8885,
											"end": 8912,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8885,
											"end": 8912,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8912,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8885,
											"end": 8912,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8912,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8881,
											"end": 8945,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8881,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8881,
											"end": 8945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "PUSH",
											"source": 4,
											"value": "95CF3EE400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8921,
											"end": 8945,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8881,
											"end": 8945,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 8881,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8983,
											"end": 8995,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 8995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9029,
											"end": 9042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9009,
											"end": 9042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9042,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9009,
											"end": 9042,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9042,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9005,
											"end": 9093,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9005,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9005,
											"end": 9093,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "PUSH",
											"source": 4,
											"value": "4FCEA97100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9093,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9005,
											"end": 9093,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9005,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9119,
											"end": 9132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9116,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9104,
											"end": 9116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9104,
											"end": 9132,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "PUSH",
											"source": 4,
											"value": "15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721"
										},
										{
											"begin": 9163,
											"end": 9179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9181,
											"end": 9194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9147,
											"end": 9195,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 8871,
											"end": 9202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8813,
											"end": 9202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8813,
											"end": 9202,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9518,
											"end": 9765,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 9518,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9625,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 9625,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 9625,
											"end": 9649,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9625,
											"end": 9649,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 9625,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 9694,
											"end": 9701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9703,
											"end": 9710,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 9682,
											"end": 9711,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9682,
											"end": 9711,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 9682,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9661,
											"end": 9711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9740,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9749,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9757,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9721,
											"end": 9758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9765,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9765,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9636,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9683,
											"end": 9693,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9683,
											"end": 9693,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9679,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9679,
											"end": 9701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9679,
											"end": 9701,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9679,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9671,
											"end": 9702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9671,
											"end": 9702,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 9648,
											"end": 9704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9648,
											"end": 9704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4320,
											"end": 4324,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4346,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4356,
											"end": 4361,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4367,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4367,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4336,
											"end": 4367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1916,
											"end": 2200,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1916,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 413,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2127,
											"end": 2154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2127,
											"end": 2154,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2126,
											"end": 2183,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 292,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2183,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2183,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2200,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4190,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4200,
											"end": 4212,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4233,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 292,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4300,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4291,
											"end": 4300,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4326,
											"end": 4327,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4324,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4328,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4384,
											"end": 4408,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4384,
											"end": 4408,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4461,
											"name": "PUSH",
											"source": 14,
											"value": "100000"
										},
										{
											"begin": 4446,
											"end": 4450,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 291,
											"end": 292,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4477,
											"end": 4501,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4477,
											"end": 4501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4580,
											"end": 4614,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4577,
											"end": 4578,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4574,
											"end": 4615,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4657,
											"end": 4660,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4653,
											"end": 4654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4649,
											"end": 4655,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4661,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4661,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4705,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4706,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4682,
											"end": 4706,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4682,
											"end": 4706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4755,
											"end": 4758,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4749,
											"end": 4753,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4745,
											"end": 4759,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4796,
											"end": 4799,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4792,
											"end": 4818,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4873,
											"end": 4876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4869,
											"end": 4882,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4864,
											"end": 4867,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4860,
											"end": 4883,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4907,
											"end": 4911,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 4917,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4971,
											"end": 4974,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4959,
											"end": 4975,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4950,
											"end": 4976,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4940,
											"end": 4976,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4940,
											"end": 4976,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5036,
											"end": 5039,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5031,
											"end": 5034,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5027,
											"end": 5040,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5022,
											"end": 5025,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5011,
											"end": 5041,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5011,
											"end": 5041,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5074,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5065,
											"end": 5069,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5061,
											"end": 5075,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5132,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5127,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5117,
											"end": 5133,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5108,
											"end": 5134,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5098,
											"end": 5134,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5098,
											"end": 5134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5194,
											"end": 5197,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5189,
											"end": 5192,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5185,
											"end": 5198,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5180,
											"end": 5183,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5176,
											"end": 5199,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5169,
											"end": 5199,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5169,
											"end": 5199,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5229,
											"end": 5232,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 5223,
											"end": 5227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5291,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5266,
											"end": 5292,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5256,
											"end": 5292,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5256,
											"end": 5292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5347,
											"end": 5350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5343,
											"end": 5356,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5334,
											"end": 5357,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5327,
											"end": 5357,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5327,
											"end": 5357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5387,
											"end": 5391,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 5381,
											"end": 5385,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5377,
											"end": 5392,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5446,
											"end": 5449,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5432,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5425,
											"end": 5451,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5415,
											"end": 5451,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5415,
											"end": 5451,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5506,
											"end": 5509,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5502,
											"end": 5515,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5500,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5493,
											"end": 5516,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5546,
											"end": 5550,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5536,
											"end": 5551,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5597,
											"end": 5603,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5593,
											"end": 5609,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5588,
											"end": 5591,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5584,
											"end": 5610,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 5610,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 5610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5670,
											"end": 5673,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5665,
											"end": 5668,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5661,
											"end": 5674,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5652,
											"end": 5675,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5709,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5699,
											"end": 5703,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5710,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5764,
											"end": 5767,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5756,
											"end": 5762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5752,
											"end": 5768,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5747,
											"end": 5750,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5733,
											"end": 5769,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5733,
											"end": 5769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5832,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5824,
											"end": 5827,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5815,
											"end": 5818,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5804,
											"end": 5834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5804,
											"end": 5834,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 5868,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5858,
											"end": 5862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 5869,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5923,
											"end": 5926,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5911,
											"end": 5927,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5906,
											"end": 5909,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5902,
											"end": 5928,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 5928,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5892,
											"end": 5928,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5988,
											"end": 5991,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5983,
											"end": 5986,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5979,
											"end": 5992,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5970,
											"end": 5993,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5963,
											"end": 5993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6023,
											"end": 6028,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 6017,
											"end": 6021,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6013,
											"end": 6029,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6083,
											"end": 6086,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6075,
											"end": 6081,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6071,
											"end": 6087,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6062,
											"end": 6088,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6052,
											"end": 6088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6148,
											"end": 6151,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6143,
											"end": 6146,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6139,
											"end": 6152,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6134,
											"end": 6137,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6130,
											"end": 6153,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6123,
											"end": 6153,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6123,
											"end": 6153,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "PUSH",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 6177,
											"end": 6181,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6243,
											"end": 6246,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6235,
											"end": 6241,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6231,
											"end": 6247,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6226,
											"end": 6229,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6212,
											"end": 6248,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6212,
											"end": 6248,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6308,
											"end": 6311,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6303,
											"end": 6306,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6312,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6294,
											"end": 6297,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6290,
											"end": 6313,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6283,
											"end": 6313,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6283,
											"end": 6313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6343,
											"end": 6348,
											"name": "PUSH",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 6337,
											"end": 6341,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6333,
											"end": 6349,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6403,
											"end": 6406,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6395,
											"end": 6401,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6391,
											"end": 6407,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6386,
											"end": 6389,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6382,
											"end": 6408,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6372,
											"end": 6408,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6372,
											"end": 6408,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6468,
											"end": 6471,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6463,
											"end": 6466,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6472,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6443,
											"end": 6473,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6443,
											"end": 6473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6503,
											"end": 6508,
											"name": "PUSH",
											"source": 14,
											"value": "800"
										},
										{
											"begin": 6497,
											"end": 6501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6493,
											"end": 6509,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6563,
											"end": 6566,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6555,
											"end": 6561,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6546,
											"end": 6549,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6542,
											"end": 6568,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6532,
											"end": 6568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6628,
											"end": 6631,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6623,
											"end": 6626,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6632,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6617,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6633,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6603,
											"end": 6633,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "PUSH",
											"source": 14,
											"value": "1000"
										},
										{
											"begin": 6657,
											"end": 6661,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6724,
											"end": 6727,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6712,
											"end": 6728,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6707,
											"end": 6710,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6703,
											"end": 6729,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6693,
											"end": 6729,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6693,
											"end": 6729,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6784,
											"end": 6787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6780,
											"end": 6793,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6771,
											"end": 6794,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 14,
											"value": "2000"
										},
										{
											"begin": 6818,
											"end": 6822,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6831,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6885,
											"end": 6888,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6877,
											"end": 6883,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6889,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6871,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6864,
											"end": 6890,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6854,
											"end": 6890,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6854,
											"end": 6890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6950,
											"end": 6953,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6945,
											"end": 6948,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6941,
											"end": 6954,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6936,
											"end": 6939,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6932,
											"end": 6955,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6925,
											"end": 6955,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6925,
											"end": 6955,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "PUSH",
											"source": 14,
											"value": "4000"
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7046,
											"end": 7049,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7038,
											"end": 7044,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7034,
											"end": 7050,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7029,
											"end": 7032,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7025,
											"end": 7051,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7015,
											"end": 7051,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7015,
											"end": 7051,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7115,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7093,
											"end": 7116,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7086,
											"end": 7116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7086,
											"end": 7116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "PUSH",
											"source": 14,
											"value": "8000"
										},
										{
											"begin": 7140,
											"end": 7144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7136,
											"end": 7153,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7207,
											"end": 7210,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7190,
											"end": 7193,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7186,
											"end": 7212,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7176,
											"end": 7212,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7176,
											"end": 7212,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7272,
											"end": 7275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7267,
											"end": 7270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7258,
											"end": 7261,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7254,
											"end": 7277,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7247,
											"end": 7277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7247,
											"end": 7277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 7314,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 7301,
											"end": 7305,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7369,
											"end": 7372,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7357,
											"end": 7373,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7352,
											"end": 7355,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7338,
											"end": 7374,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7338,
											"end": 7374,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7429,
											"end": 7432,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7425,
											"end": 7438,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7420,
											"end": 7423,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7416,
											"end": 7439,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7409,
											"end": 7439,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7409,
											"end": 7439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7469,
											"end": 7476,
											"name": "PUSH",
											"source": 14,
											"value": "20000"
										},
										{
											"begin": 7463,
											"end": 7467,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7531,
											"end": 7534,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7523,
											"end": 7529,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7519,
											"end": 7535,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7517,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7500,
											"end": 7536,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7500,
											"end": 7536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7596,
											"end": 7599,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7591,
											"end": 7594,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7587,
											"end": 7600,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7582,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7578,
											"end": 7601,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7571,
											"end": 7601,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7571,
											"end": 7601,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7631,
											"end": 7638,
											"name": "PUSH",
											"source": 14,
											"value": "40000"
										},
										{
											"begin": 7625,
											"end": 7629,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7693,
											"end": 7696,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7685,
											"end": 7691,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7681,
											"end": 7697,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7676,
											"end": 7679,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7672,
											"end": 7698,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7662,
											"end": 7698,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7662,
											"end": 7698,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7758,
											"end": 7761,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7753,
											"end": 7756,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7749,
											"end": 7762,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7744,
											"end": 7747,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7740,
											"end": 7763,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7733,
											"end": 7763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7793,
											"end": 7800,
											"name": "PUSH",
											"source": 14,
											"value": "80000"
										},
										{
											"begin": 7787,
											"end": 7791,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7855,
											"end": 7858,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7847,
											"end": 7853,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7824,
											"end": 7860,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7824,
											"end": 7860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4524,
											"end": 7892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7982,
											"end": 7983,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7978,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7972,
											"end": 7983,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8020,
											"end": 8021,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8023,
											"end": 8024,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH",
											"source": 14,
											"value": "74E3EB0800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8081,
											"end": 8087,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8052,
											"end": 8069,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8036,
											"end": 8087,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8036,
											"end": 8087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8036,
											"end": 8087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8036,
											"end": 8087,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2300,
											"end": 2303,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2290,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 2290,
											"end": 2311,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2290,
											"end": 2311,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2290,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2344,
											"end": 2349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2510,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2488,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2550,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4511,
											"end": 4518,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4530,
											"end": 4555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2984,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2994,
											"end": 2999,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2960,
											"end": 3000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3459,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3523,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3688,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3823,
											"end": 3833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3525,
											"end": 3891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4073,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4061,
											"end": 4073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4144,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 4978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "211"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 19,
											"value": "375"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "tag",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 764,
											"end": 883,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 764,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "tag",
											"source": 19,
											"value": "381"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 764,
											"end": 883,
											"name": "tag",
											"source": 19,
											"value": "380"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "tag",
											"source": 19,
											"value": "382"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 937,
											"end": 997,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 937,
											"end": 997,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 893,
											"end": 1007,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "tag",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1057,
											"end": 1064,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1139,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1086,
											"end": 1140,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1140,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1075,
											"end": 1140,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1152,
											"end": 1248,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 1152,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 1236,
											"end": 1241,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1218,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 1218,
											"end": 1242,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1242,
											"name": "tag",
											"source": 19,
											"value": "385"
										},
										{
											"begin": 1218,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1207,
											"end": 1242,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1207,
											"end": 1242,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1248,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1248,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1248,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1152,
											"end": 1248,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1254,
											"end": 1364,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 1254,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1312,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 1352,
											"end": 1357,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "tag",
											"source": 19,
											"value": "387"
										},
										{
											"begin": 1334,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 1358,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1323,
											"end": 1358,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1254,
											"end": 1364,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1254,
											"end": 1364,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1254,
											"end": 1364,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1254,
											"end": 1364,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1370,
											"end": 1520,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 1370,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 1489,
											"end": 1494,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "tag",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 1457,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1447,
											"end": 1496,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1437,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 1437,
											"end": 1514,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1500,
											"end": 1512,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1437,
											"end": 1514,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 1437,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1520,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1693,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 1526,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1586,
											"end": 1591,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1602,
											"end": 1631,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1602,
											"end": 1631,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1640,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1640,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 1640,
											"end": 1687,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1640,
											"end": 1687,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 1640,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1526,
											"end": 1693,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1526,
											"end": 1693,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1526,
											"end": 1693,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1526,
											"end": 1693,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1526,
											"end": 1693,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 2056,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 1699,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1800,
											"end": 1807,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1792,
											"end": 1824,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 1908,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 1789,
											"end": 1908,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1827,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 1827,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 1827,
											"end": 1906,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1827,
											"end": 1906,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 1827,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 1908,
											"name": "tag",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 1789,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1972,
											"end": 2039,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 1972,
											"end": 2039,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2039,
											"name": "tag",
											"source": 19,
											"value": "396"
										},
										{
											"begin": 1972,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 2039,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1962,
											"end": 2039,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1918,
											"end": 2049,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1699,
											"end": 2056,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1699,
											"end": 2056,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1699,
											"end": 2056,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1699,
											"end": 2056,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1699,
											"end": 2056,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2062,
											"end": 2171,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 2062,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2158,
											"end": 2163,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "tag",
											"source": 19,
											"value": "398"
										},
										{
											"begin": 2143,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2138,
											"end": 2141,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2131,
											"end": 2165,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2062,
											"end": 2171,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2062,
											"end": 2171,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2062,
											"end": 2171,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2177,
											"end": 2387,
											"name": "tag",
											"source": 19,
											"value": "38"
										},
										{
											"begin": 2177,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2264,
											"end": 2268,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2279,
											"end": 2305,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2315,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2375,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2362,
											"end": 2379,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2315,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 2315,
											"end": 2380,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2380,
											"name": "tag",
											"source": 19,
											"value": "400"
										},
										{
											"begin": 2315,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2177,
											"end": 2387,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2177,
											"end": 2387,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2177,
											"end": 2387,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2177,
											"end": 2387,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2177,
											"end": 2387,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2393,
											"end": 2511,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 2393,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2480,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2498,
											"end": 2503,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2480,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 2480,
											"end": 2504,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2480,
											"end": 2504,
											"name": "tag",
											"source": 19,
											"value": "402"
										},
										{
											"begin": 2480,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2475,
											"end": 2478,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2468,
											"end": 2505,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2393,
											"end": 2511,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2393,
											"end": 2511,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2393,
											"end": 2511,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2517,
											"end": 2739,
											"name": "tag",
											"source": 19,
											"value": "42"
										},
										{
											"begin": 2517,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2610,
											"end": 2614,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2650,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2633,
											"end": 2651,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2625,
											"end": 2651,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2625,
											"end": 2651,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2661,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2661,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 2661,
											"end": 2732,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2661,
											"end": 2732,
											"name": "tag",
											"source": 19,
											"value": "404"
										},
										{
											"begin": 2661,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2517,
											"end": 2739,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2517,
											"end": 2739,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2517,
											"end": 2739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2517,
											"end": 2739,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2517,
											"end": 2739,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2745,
											"end": 2822,
											"name": "tag",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 2745,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2782,
											"end": 2789,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2800,
											"end": 2816,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2800,
											"end": 2816,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2822,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2822,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2822,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2745,
											"end": 2822,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2828,
											"end": 2946,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 2828,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 2933,
											"end": 2938,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 2915,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2910,
											"end": 2913,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2903,
											"end": 2940,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2828,
											"end": 2946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2828,
											"end": 2946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2828,
											"end": 2946,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2952,
											"end": 3174,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 2952,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3045,
											"end": 3049,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3081,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3068,
											"end": 3086,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3060,
											"end": 3086,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3060,
											"end": 3086,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3096,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3162,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3149,
											"end": 3166,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3096,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 3096,
											"end": 3167,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3096,
											"end": 3167,
											"name": "tag",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 3096,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2952,
											"end": 3174,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2952,
											"end": 3174,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2952,
											"end": 3174,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2952,
											"end": 3174,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2952,
											"end": 3174,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 3180,
											"end": 3271,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 3180,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3264,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 3249,
											"end": 3254,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3245,
											"end": 3265,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3234,
											"end": 3265,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3180,
											"end": 3271,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3180,
											"end": 3271,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3180,
											"end": 3271,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3180,
											"end": 3271,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 3277,
											"end": 3397,
											"name": "tag",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 3277,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 3366,
											"end": 3371,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3342,
											"end": 3347,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3339,
											"end": 3373,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3385,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3377,
											"end": 3389,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "tag",
											"source": 19,
											"value": "413"
										},
										{
											"begin": 3329,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3277,
											"end": 3397,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3277,
											"end": 3397,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 3403,
											"end": 3540,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 3403,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3473,
											"end": 3493,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3464,
											"end": 3493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3502,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 3528,
											"end": 3533,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3502,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "340"
										},
										{
											"begin": 3502,
											"end": 3534,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3502,
											"end": 3534,
											"name": "tag",
											"source": 19,
											"value": "415"
										},
										{
											"begin": 3502,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3403,
											"end": 3540,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3403,
											"end": 3540,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3403,
											"end": 3540,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3403,
											"end": 3540,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3403,
											"end": 3540,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "tag",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3670,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3672,
											"end": 3678,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3686,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3729,
											"end": 3732,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3708,
											"end": 3715,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3704,
											"end": 3727,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 3700,
											"end": 3733,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 3697,
											"end": 3817,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3697,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 3697,
											"end": 3817,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 3736,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 3736,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 3736,
											"end": 3815,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3815,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 3736,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3697,
											"end": 3817,
											"name": "tag",
											"source": 19,
											"value": "417"
										},
										{
											"begin": 3697,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 3940,
											"end": 3947,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 3931,
											"end": 3937,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3920,
											"end": 3929,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 3916,
											"end": 3938,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3881,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 3881,
											"end": 3948,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3881,
											"end": 3948,
											"name": "tag",
											"source": 19,
											"value": "419"
										},
										{
											"begin": 3881,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3871,
											"end": 3948,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 3871,
											"end": 3948,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3827,
											"end": 3958,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3997,
											"end": 3999,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 4082,
											"end": 4089,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4062,
											"end": 4071,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4058,
											"end": 4080,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4013,
											"end": 4090,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4013,
											"end": 4090,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3968,
											"end": 4100,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4139,
											"end": 4141,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 4209,
											"end": 4216,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4189,
											"end": 4198,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4185,
											"end": 4207,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 4165,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4155,
											"end": 4217,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4155,
											"end": 4217,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4110,
											"end": 4227,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4266,
											"end": 4268,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 4325,
											"end": 4331,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4314,
											"end": 4323,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4310,
											"end": 4332,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "tag",
											"source": 19,
											"value": "422"
										},
										{
											"begin": 4292,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4282,
											"end": 4342,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4282,
											"end": 4342,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4237,
											"end": 4352,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3546,
											"end": 4359,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4365,
											"end": 4425,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 4365,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4393,
											"end": 4396,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4419,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4407,
											"end": 4419,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4407,
											"end": 4419,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4425,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4425,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4365,
											"end": 4425,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4431,
											"end": 4573,
											"name": "tag",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 4431,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4481,
											"end": 4490,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 4532,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 4541,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 4559,
											"end": 4564,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4541,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 4541,
											"end": 4565,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4541,
											"end": 4565,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 4541,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4532,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 4532,
											"end": 4566,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4532,
											"end": 4566,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 4532,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4514,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "330"
										},
										{
											"begin": 4514,
											"end": 4567,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4514,
											"end": 4567,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 4514,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4501,
											"end": 4567,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4501,
											"end": 4567,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4573,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4573,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4573,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4431,
											"end": 4573,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4579,
											"end": 4705,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 4579,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4629,
											"end": 4638,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 4693,
											"end": 4698,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4662,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "343"
										},
										{
											"begin": 4662,
											"end": 4699,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4662,
											"end": 4699,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 4662,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4649,
											"end": 4699,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4649,
											"end": 4699,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4705,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4705,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4705,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4579,
											"end": 4705,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4711,
											"end": 4853,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 4711,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4777,
											"end": 4786,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 4841,
											"end": 4846,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4810,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 4810,
											"end": 4847,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4810,
											"end": 4847,
											"name": "tag",
											"source": 19,
											"value": "431"
										},
										{
											"begin": 4810,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4797,
											"end": 4847,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4797,
											"end": 4847,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4711,
											"end": 4853,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4711,
											"end": 4853,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4711,
											"end": 4853,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4711,
											"end": 4853,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4859,
											"end": 5022,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 4859,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "tag",
											"source": 19,
											"value": "433"
										},
										{
											"begin": 4962,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4957,
											"end": 4960,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4950,
											"end": 5016,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4859,
											"end": 5022,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4859,
											"end": 5022,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4859,
											"end": 5022,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5028,
											"end": 5282,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 5028,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5177,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5173,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5160,
											"end": 5178,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5152,
											"end": 5178,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5152,
											"end": 5178,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5188,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5188,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 5188,
											"end": 5275,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5188,
											"end": 5275,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 5188,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5028,
											"end": 5282,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5028,
											"end": 5282,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5028,
											"end": 5282,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5028,
											"end": 5282,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5028,
											"end": 5282,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5288,
											"end": 5410,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 5288,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 5379,
											"end": 5384,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 5361,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5351,
											"end": 5386,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 5341,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 5341,
											"end": 5404,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5390,
											"end": 5402,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5341,
											"end": 5404,
											"name": "tag",
											"source": 19,
											"value": "438"
										},
										{
											"begin": 5341,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5288,
											"end": 5410,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5288,
											"end": 5410,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5462,
											"end": 5467,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5506,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5478,
											"end": 5507,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5478,
											"end": 5507,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5516,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 5543,
											"end": 5548,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5516,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 5516,
											"end": 5549,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5516,
											"end": 5549,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 5516,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5416,
											"end": 5555,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "tag",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5644,
											"end": 5667,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "tag",
											"source": 19,
											"value": "442"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5766,
											"end": 5883,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5896,
											"end": 6018,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 5896,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5969,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 5987,
											"end": 5992,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5969,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 5969,
											"end": 5993,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5969,
											"end": 5993,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 5969,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5962,
											"end": 5967,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5959,
											"end": 5994,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 5949,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 5949,
											"end": 6012,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6008,
											"end": 6009,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6005,
											"end": 6006,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5998,
											"end": 6010,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5949,
											"end": 6012,
											"name": "tag",
											"source": 19,
											"value": "447"
										},
										{
											"begin": 5949,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5896,
											"end": 6018,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5896,
											"end": 6018,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 6024,
											"end": 6163,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 6024,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6070,
											"end": 6075,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6114,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6095,
											"end": 6115,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6086,
											"end": 6115,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6086,
											"end": 6115,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6124,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 6151,
											"end": 6156,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6124,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 6124,
											"end": 6157,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6124,
											"end": 6157,
											"name": "tag",
											"source": 19,
											"value": "449"
										},
										{
											"begin": 6124,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6163,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6163,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6163,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6163,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6024,
											"end": 6163,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 6169,
											"end": 6498,
											"name": "tag",
											"source": 19,
											"value": "82"
										},
										{
											"begin": 6169,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6228,
											"end": 6234,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6279,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6256,
											"end": 6263,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6252,
											"end": 6275,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6248,
											"end": 6280,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6245,
											"end": 6364,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6245,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 6245,
											"end": 6364,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6283,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 6283,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 6283,
											"end": 6362,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6283,
											"end": 6362,
											"name": "tag",
											"source": 19,
											"value": "452"
										},
										{
											"begin": 6283,
											"end": 6362,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6245,
											"end": 6364,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 6245,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6403,
											"end": 6404,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 6473,
											"end": 6480,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6453,
											"end": 6462,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6428,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 6428,
											"end": 6481,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6428,
											"end": 6481,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 6428,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6418,
											"end": 6481,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6418,
											"end": 6481,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6374,
											"end": 6491,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6169,
											"end": 6498,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6169,
											"end": 6498,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6169,
											"end": 6498,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6169,
											"end": 6498,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6169,
											"end": 6498,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "tag",
											"source": 19,
											"value": "101"
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6600,
											"end": 6606,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6614,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6645,
											"end": 6654,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6636,
											"end": 6643,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6632,
											"end": 6655,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6628,
											"end": 6660,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6625,
											"end": 6744,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6625,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 6625,
											"end": 6744,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 6663,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6625,
											"end": 6744,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 6625,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 6867,
											"end": 6874,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6858,
											"end": 6864,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6808,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 6808,
											"end": 6875,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6808,
											"end": 6875,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 6808,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6798,
											"end": 6875,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6798,
											"end": 6875,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6754,
											"end": 6885,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6950,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 7009,
											"end": 7016,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6989,
											"end": 6998,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6950,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 6950,
											"end": 7017,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6950,
											"end": 7017,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 6950,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6940,
											"end": 7017,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6940,
											"end": 7017,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6895,
											"end": 7027,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6504,
											"end": 7034,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7040,
											"end": 7193,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 7040,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7133,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 7180,
											"end": 7185,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7133,
											"end": 7186,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 7133,
											"end": 7186,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 7133,
											"end": 7186,
											"name": "tag",
											"source": 19,
											"value": "460"
										},
										{
											"begin": 7133,
											"end": 7186,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7128,
											"end": 7131,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7121,
											"end": 7187,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7040,
											"end": 7193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7040,
											"end": 7193,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7040,
											"end": 7193,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7199,
											"end": 7298,
											"name": "tag",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 7199,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 7285,
											"end": 7290,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "327"
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 7270,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7265,
											"end": 7268,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7258,
											"end": 7292,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7199,
											"end": 7298,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7199,
											"end": 7298,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7199,
											"end": 7298,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7386,
											"end": 7935,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 7386,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7553,
											"end": 7557,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 7548,
											"end": 7551,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7544,
											"end": 7558,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7642,
											"end": 7646,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7631,
											"end": 7647,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7625,
											"end": 7648,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 7734,
											"end": 7738,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7732,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7725,
											"end": 7739,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7711,
											"end": 7723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 7661,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7568,
											"end": 7750,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7842,
											"end": 7846,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7835,
											"end": 7840,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7831,
											"end": 7847,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7825,
											"end": 7848,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 7861,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 7912,
											"end": 7916,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7910,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7903,
											"end": 7917,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7889,
											"end": 7901,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7861,
											"end": 7918,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "352"
										},
										{
											"begin": 7861,
											"end": 7918,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 7861,
											"end": 7918,
											"name": "tag",
											"source": 19,
											"value": "465"
										},
										{
											"begin": 7861,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7760,
											"end": 7928,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7522,
											"end": 7935,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7386,
											"end": 7935,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7386,
											"end": 7935,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7386,
											"end": 7935,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7941,
											"end": 8303,
											"name": "tag",
											"source": 19,
											"value": "104"
										},
										{
											"begin": 7941,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8104,
											"end": 8108,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8144,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8131,
											"end": 8140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8127,
											"end": 8145,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8119,
											"end": 8145,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8119,
											"end": 8145,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8155,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 8293,
											"end": 8294,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8282,
											"end": 8291,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8278,
											"end": 8295,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8269,
											"end": 8275,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8155,
											"end": 8296,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 8155,
											"end": 8296,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8155,
											"end": 8296,
											"name": "tag",
											"source": 19,
											"value": "467"
										},
										{
											"begin": 8155,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7941,
											"end": 8303,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7941,
											"end": 8303,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7941,
											"end": 8303,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7941,
											"end": 8303,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7941,
											"end": 8303,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8309,
											"end": 8449,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 8309,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8373,
											"end": 8382,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 8437,
											"end": 8442,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 8406,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8393,
											"end": 8443,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8393,
											"end": 8443,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8309,
											"end": 8449,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8309,
											"end": 8449,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8309,
											"end": 8449,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8309,
											"end": 8449,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8455,
											"end": 8614,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 8455,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8556,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 8601,
											"end": 8606,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8556,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 8556,
											"end": 8607,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8556,
											"end": 8607,
											"name": "tag",
											"source": 19,
											"value": "471"
										},
										{
											"begin": 8556,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8544,
											"end": 8608,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8455,
											"end": 8614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8455,
											"end": 8614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8455,
											"end": 8614,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8620,
											"end": 8870,
											"name": "tag",
											"source": 19,
											"value": "109"
										},
										{
											"begin": 8620,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8727,
											"end": 8731,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8765,
											"end": 8767,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8750,
											"end": 8768,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8742,
											"end": 8768,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8742,
											"end": 8768,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8778,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 8860,
											"end": 8861,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8858,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8845,
											"end": 8862,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8778,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 8778,
											"end": 8863,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8778,
											"end": 8863,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 8778,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8620,
											"end": 8870,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8620,
											"end": 8870,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8620,
											"end": 8870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8620,
											"end": 8870,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8620,
											"end": 8870,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8876,
											"end": 8961,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 8876,
											"end": 8961,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8921,
											"end": 8928,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8955,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 8939,
											"end": 8955,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8939,
											"end": 8955,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8876,
											"end": 8961,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8876,
											"end": 8961,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8876,
											"end": 8961,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8876,
											"end": 8961,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8967,
											"end": 9125,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 8967,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9025,
											"end": 9034,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 9076,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 9085,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 9111,
											"end": 9116,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9085,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 9085,
											"end": 9117,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9085,
											"end": 9117,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 9085,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9076,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 9076,
											"end": 9118,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9076,
											"end": 9118,
											"name": "tag",
											"source": 19,
											"value": "477"
										},
										{
											"begin": 9076,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 9058,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9045,
											"end": 9119,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9045,
											"end": 9119,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8967,
											"end": 9125,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8967,
											"end": 9125,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8967,
											"end": 9125,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8967,
											"end": 9125,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 9131,
											"end": 9278,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 9131,
											"end": 9278,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9226,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 9265,
											"end": 9270,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9226,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 9226,
											"end": 9271,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9226,
											"end": 9271,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 9226,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9214,
											"end": 9272,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9131,
											"end": 9278,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9131,
											"end": 9278,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9131,
											"end": 9278,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "tag",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9469,
											"end": 9473,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 9496,
											"end": 9505,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9484,
											"end": 9510,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9484,
											"end": 9510,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9520,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 9602,
											"end": 9603,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9591,
											"end": 9600,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9587,
											"end": 9604,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9578,
											"end": 9584,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 9520,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 9520,
											"end": 9605,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9520,
											"end": 9605,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 9520,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9615,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 9697,
											"end": 9699,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9682,
											"end": 9700,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9615,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 9615,
											"end": 9701,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9615,
											"end": 9701,
											"name": "tag",
											"source": 19,
											"value": "483"
										},
										{
											"begin": 9615,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9711,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 9787,
											"end": 9789,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9785,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9711,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 9711,
											"end": 9791,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9711,
											"end": 9791,
											"name": "tag",
											"source": 19,
											"value": "484"
										},
										{
											"begin": 9711,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9284,
											"end": 9798,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "tag",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9953,
											"end": 9957,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9991,
											"end": 9993,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 9980,
											"end": 9989,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9976,
											"end": 9994,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9968,
											"end": 9994,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9968,
											"end": 9994,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10004,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 10086,
											"end": 10087,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10075,
											"end": 10084,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10004,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 10004,
											"end": 10089,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10004,
											"end": 10089,
											"name": "tag",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 10004,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10099,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 10181,
											"end": 10183,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10170,
											"end": 10179,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10166,
											"end": 10184,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10157,
											"end": 10163,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10099,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 10099,
											"end": 10185,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10099,
											"end": 10185,
											"name": "tag",
											"source": 19,
											"value": "487"
										},
										{
											"begin": 10099,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9804,
											"end": 10192,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10198,
											"end": 10313,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 10198,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10283,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 10300,
											"end": 10305,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10283,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 10283,
											"end": 10306,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10283,
											"end": 10306,
											"name": "tag",
											"source": 19,
											"value": "489"
										},
										{
											"begin": 10283,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10278,
											"end": 10281,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10271,
											"end": 10307,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10198,
											"end": 10313,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10198,
											"end": 10313,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10198,
											"end": 10313,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "tag",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10516,
											"end": 10520,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10554,
											"end": 10557,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 10543,
											"end": 10552,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10539,
											"end": 10558,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10531,
											"end": 10558,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10531,
											"end": 10558,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10568,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 10650,
											"end": 10651,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10639,
											"end": 10648,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10635,
											"end": 10652,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10626,
											"end": 10632,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 10568,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 10568,
											"end": 10653,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10568,
											"end": 10653,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 10568,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10663,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 10745,
											"end": 10747,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10734,
											"end": 10743,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10721,
											"end": 10727,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 10663,
											"end": 10749,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 10663,
											"end": 10749,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10663,
											"end": 10749,
											"name": "tag",
											"source": 19,
											"value": "492"
										},
										{
											"begin": 10663,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 10825,
											"end": 10827,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10801,
											"end": 10807,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 10759,
											"end": 10829,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10759,
											"end": 10829,
											"name": "tag",
											"source": 19,
											"value": "493"
										},
										{
											"begin": 10759,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10839,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 10901,
											"end": 10903,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 10890,
											"end": 10899,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10877,
											"end": 10883,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10839,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 10839,
											"end": 10905,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10839,
											"end": 10905,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 10839,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10319,
											"end": 10912,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10918,
											"end": 11098,
											"name": "tag",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 10918,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10966,
											"end": 11043,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10963,
											"end": 10964,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10956,
											"end": 11044,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11063,
											"end": 11067,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 11060,
											"end": 11061,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 11053,
											"end": 11068,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11087,
											"end": 11091,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 11084,
											"end": 11085,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11077,
											"end": 11092,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 11104,
											"end": 11295,
											"name": "tag",
											"source": 19,
											"value": "151"
										},
										{
											"begin": 11104,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11144,
											"end": 11148,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 11182,
											"end": 11183,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11164,
											"end": 11184,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 11164,
											"end": 11184,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11164,
											"end": 11184,
											"name": "tag",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 11164,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11159,
											"end": 11184,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11159,
											"end": 11184,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11198,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 11216,
											"end": 11217,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11198,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 11198,
											"end": 11218,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11198,
											"end": 11218,
											"name": "tag",
											"source": 19,
											"value": "498"
										},
										{
											"begin": 11198,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11193,
											"end": 11218,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11193,
											"end": 11218,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11237,
											"end": 11238,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11234,
											"end": 11235,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11231,
											"end": 11239,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 11228,
											"end": 11262,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11228,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 11228,
											"end": 11262,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "360"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "tag",
											"source": 19,
											"value": "500"
										},
										{
											"begin": 11242,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11228,
											"end": 11262,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 11228,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11287,
											"end": 11288,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11284,
											"end": 11285,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11289,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11272,
											"end": 11289,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11272,
											"end": 11289,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11104,
											"end": 11295,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11104,
											"end": 11295,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11104,
											"end": 11295,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11104,
											"end": 11295,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11104,
											"end": 11295,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "tag",
											"source": 19,
											"value": "153"
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11438,
											"end": 11442,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11476,
											"end": 11478,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11465,
											"end": 11474,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11461,
											"end": 11479,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11453,
											"end": 11479,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11453,
											"end": 11479,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11489,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 11573,
											"end": 11574,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11562,
											"end": 11571,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11549,
											"end": 11555,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11489,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 11489,
											"end": 11576,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11489,
											"end": 11576,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 11489,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11643,
											"end": 11652,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11630,
											"end": 11636,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11301,
											"end": 11665,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 11671,
											"end": 11786,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 11671,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11727,
											"end": 11734,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11756,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 11774,
											"end": 11779,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11756,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 11756,
											"end": 11780,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11756,
											"end": 11780,
											"name": "tag",
											"source": 19,
											"value": "505"
										},
										{
											"begin": 11756,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 11780,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11745,
											"end": 11780,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11786,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11786,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11671,
											"end": 11786,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 11792,
											"end": 11952,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 11792,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11884,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 11921,
											"end": 11926,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11884,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 11884,
											"end": 11927,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11884,
											"end": 11927,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 11884,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11877,
											"end": 11882,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11874,
											"end": 11928,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 11864,
											"end": 11946,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 11864,
											"end": 11946,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11942,
											"end": 11943,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11939,
											"end": 11940,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 11932,
											"end": 11944,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 11864,
											"end": 11946,
											"name": "tag",
											"source": 19,
											"value": "508"
										},
										{
											"begin": 11864,
											"end": 11946,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11792,
											"end": 11952,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11792,
											"end": 11952,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 11958,
											"end": 12139,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 11958,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12034,
											"end": 12039,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12065,
											"end": 12071,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12059,
											"end": 12072,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12050,
											"end": 12072,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 12127,
											"end": 12132,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 12081,
											"end": 12133,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12081,
											"end": 12133,
											"name": "tag",
											"source": 19,
											"value": "510"
										},
										{
											"begin": 12081,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11958,
											"end": 12139,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11958,
											"end": 12139,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11958,
											"end": 12139,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11958,
											"end": 12139,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11958,
											"end": 12139,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 12145,
											"end": 12534,
											"name": "tag",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 12145,
											"end": 12534,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12234,
											"end": 12240,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12283,
											"end": 12285,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12271,
											"end": 12280,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12262,
											"end": 12269,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12258,
											"end": 12281,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12254,
											"end": 12286,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 12251,
											"end": 12370,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 12251,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 12251,
											"end": 12370,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 12289,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 12289,
											"end": 12368,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 12289,
											"end": 12368,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12289,
											"end": 12368,
											"name": "tag",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 12289,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12251,
											"end": 12370,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 12251,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12409,
											"end": 12410,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 12509,
											"end": 12516,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12500,
											"end": 12506,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12489,
											"end": 12498,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12485,
											"end": 12507,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "tag",
											"source": 19,
											"value": "514"
										},
										{
											"begin": 12434,
											"end": 12517,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12424,
											"end": 12517,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12424,
											"end": 12517,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12380,
											"end": 12527,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12534,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12534,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12534,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12534,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12145,
											"end": 12534,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "tag",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12661,
											"end": 12665,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12701,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12688,
											"end": 12697,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12684,
											"end": 12702,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12676,
											"end": 12702,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12676,
											"end": 12702,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12712,
											"end": 12783,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 12780,
											"end": 12781,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12769,
											"end": 12778,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12765,
											"end": 12782,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12756,
											"end": 12762,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12712,
											"end": 12783,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 12712,
											"end": 12783,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12712,
											"end": 12783,
											"name": "tag",
											"source": 19,
											"value": "516"
										},
										{
											"begin": 12712,
											"end": 12783,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12793,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 12861,
											"end": 12863,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12850,
											"end": 12859,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12846,
											"end": 12864,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12837,
											"end": 12843,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12793,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 12793,
											"end": 12865,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12793,
											"end": 12865,
											"name": "tag",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 12793,
											"end": 12865,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12540,
											"end": 12872,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 12878,
											"end": 13047,
											"name": "tag",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 12878,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12962,
											"end": 12973,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12996,
											"end": 13002,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12991,
											"end": 12994,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12984,
											"end": 13003,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13036,
											"end": 13040,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13031,
											"end": 13034,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13027,
											"end": 13041,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13012,
											"end": 13041,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13012,
											"end": 13041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12878,
											"end": 13047,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 12878,
											"end": 13047,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12878,
											"end": 13047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12878,
											"end": 13047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12878,
											"end": 13047,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 13053,
											"end": 13226,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 13053,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13193,
											"end": 13218,
											"name": "PUSH",
											"source": 19,
											"value": "455243313136373A2063726561746532206661696C6564000000000000000000"
										},
										{
											"begin": 13189,
											"end": 13190,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13181,
											"end": 13187,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13177,
											"end": 13191,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13170,
											"end": 13219,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13053,
											"end": 13226,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13053,
											"end": 13226,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 13232,
											"end": 13598,
											"name": "tag",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 13232,
											"end": 13598,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13374,
											"end": 13377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13395,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 13459,
											"end": 13461,
											"name": "PUSH",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 13454,
											"end": 13457,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13395,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "364"
										},
										{
											"begin": 13395,
											"end": 13462,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13395,
											"end": 13462,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 13395,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13388,
											"end": 13462,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13388,
											"end": 13462,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13471,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 13560,
											"end": 13563,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13471,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 13471,
											"end": 13564,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13471,
											"end": 13564,
											"name": "tag",
											"source": 19,
											"value": "522"
										},
										{
											"begin": 13471,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13589,
											"end": 13591,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13584,
											"end": 13587,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13580,
											"end": 13592,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13573,
											"end": 13592,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13573,
											"end": 13592,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13232,
											"end": 13598,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13232,
											"end": 13598,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13232,
											"end": 13598,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13232,
											"end": 13598,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 13604,
											"end": 14023,
											"name": "tag",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 13604,
											"end": 14023,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13770,
											"end": 13774,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13808,
											"end": 13810,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13797,
											"end": 13806,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13793,
											"end": 13811,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13785,
											"end": 13811,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13785,
											"end": 13811,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13857,
											"end": 13866,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13851,
											"end": 13855,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13847,
											"end": 13867,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13843,
											"end": 13844,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13841,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13828,
											"end": 13845,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13821,
											"end": 13868,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13885,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 14011,
											"end": 14015,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13885,
											"end": 14016,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "366"
										},
										{
											"begin": 13885,
											"end": 14016,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13885,
											"end": 14016,
											"name": "tag",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 13885,
											"end": 14016,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13877,
											"end": 14016,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13877,
											"end": 14016,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13604,
											"end": 14023,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13604,
											"end": 14023,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13604,
											"end": 14023,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13604,
											"end": 14023,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 14029,
											"end": 14209,
											"name": "tag",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 14029,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14077,
											"end": 14154,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14074,
											"end": 14075,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14067,
											"end": 14155,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14174,
											"end": 14178,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 14171,
											"end": 14172,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 14164,
											"end": 14179,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14198,
											"end": 14202,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 14195,
											"end": 14196,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14188,
											"end": 14203,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14215,
											"end": 14291,
											"name": "tag",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 14215,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14251,
											"end": 14258,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14280,
											"end": 14285,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14269,
											"end": 14285,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14269,
											"end": 14285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14215,
											"end": 14291,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14215,
											"end": 14291,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14215,
											"end": 14291,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14215,
											"end": 14291,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 14297,
											"end": 14412,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 14297,
											"end": 14412,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14382,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 14399,
											"end": 14404,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14382,
											"end": 14405,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "367"
										},
										{
											"begin": 14382,
											"end": 14405,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14382,
											"end": 14405,
											"name": "tag",
											"source": 19,
											"value": "528"
										},
										{
											"begin": 14382,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14377,
											"end": 14380,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14370,
											"end": 14406,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14297,
											"end": 14412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14297,
											"end": 14412,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14297,
											"end": 14412,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14537,
											"end": 14541,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14575,
											"end": 14577,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14564,
											"end": 14573,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14560,
											"end": 14578,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14578,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14578,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14588,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 14656,
											"end": 14657,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14645,
											"end": 14654,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14641,
											"end": 14658,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14632,
											"end": 14638,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14588,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 14588,
											"end": 14659,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14588,
											"end": 14659,
											"name": "tag",
											"source": 19,
											"value": "530"
										},
										{
											"begin": 14588,
											"end": 14659,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14669,
											"end": 14739,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 14735,
											"end": 14737,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14724,
											"end": 14733,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14720,
											"end": 14738,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14711,
											"end": 14717,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14669,
											"end": 14739,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 14669,
											"end": 14739,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14669,
											"end": 14739,
											"name": "tag",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 14669,
											"end": 14739,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14418,
											"end": 14746,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 14752,
											"end": 14937,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 14752,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14792,
											"end": 14793,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 14827,
											"end": 14828,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 14809,
											"end": 14829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14804,
											"end": 14829,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 14861,
											"end": 14862,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "337"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14838,
											"end": 14863,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14838,
											"end": 14863,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14882,
											"end": 14883,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14872,
											"end": 14907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 14872,
											"end": 14907,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "tag",
											"source": 19,
											"value": "536"
										},
										{
											"begin": 14887,
											"end": 14905,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14872,
											"end": 14907,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 14872,
											"end": 14907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14929,
											"end": 14930,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14926,
											"end": 14927,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14922,
											"end": 14931,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 14917,
											"end": 14931,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14917,
											"end": 14931,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14937,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14937,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14752,
											"end": 14937,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 14943,
											"end": 15123,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 14943,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14991,
											"end": 15068,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14988,
											"end": 14989,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14981,
											"end": 15069,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15088,
											"end": 15092,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 15085,
											"end": 15086,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 15078,
											"end": 15093,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15112,
											"end": 15116,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15102,
											"end": 15117,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 15129,
											"end": 15309,
											"name": "tag",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 15129,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15177,
											"end": 15254,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15174,
											"end": 15175,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15167,
											"end": 15255,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15274,
											"end": 15278,
											"name": "PUSH",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 15271,
											"end": 15272,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 15264,
											"end": 15279,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15298,
											"end": 15302,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 15295,
											"end": 15296,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15288,
											"end": 15303,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"LBPairImplementation()": "509ceb90",
							"MAX_FEE()": "bc063e1a",
							"addQuoteAsset(address)": "5a440923",
							"allLBPairs(uint256)": "72e47b8c",
							"becomeOwner()": "f9dca989",
							"createLBPair(address,address,uint24,bool)": "52e2cf8e",
							"creationUnlocked()": "5c779d6d",
							"feeRecipient()": "46904840",
							"flashLoanFee()": "4847cdc8",
							"getLBPairInformation(address,address)": "eaec42a4",
							"getNumberOfLBPairs()": "4e937c3a",
							"getNumberOfQuoteAssets()": "80c5061e",
							"getQuoteAsset(uint256)": "f89a4cd5",
							"isQuoteAsset(address)": "27721842",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"removeQuoteAsset(address)": "ddbfd941",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setFactoryLockedState(bool)": "22f3fe14",
							"setFeeRecipient(address)": "e74b981b",
							"setLBPairImplementation(address)": "b0384781",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BinHelper__IdOverflows\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LBFactory__AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LBFactory__FactoryLockIsAlreadyInTheSameState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LBFactory__FunctionIsLockedForUsers\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LBFactory__IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LBFactory__ImplementationNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_binStep\",\"type\":\"uint256\"}],\"name\":\"LBFactory__LBPairAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBFactory__LBPairSafetyCheckFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"LBFactory__QuoteAssetAlreadyWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"LBFactory__QuoteAssetNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"LBFactory__SameFeeRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBFactory__SameImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"Math128x128__PowerUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NoPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__PendingOwnerAlreadySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"name\":\"FactoryLockedStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"}],\"name\":\"FeeParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFlashLoanFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFee\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"LBPairCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"ignored\",\"type\":\"bool\"}],\"name\":\"LBPairIgnoredStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLBPairImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBPairImplementationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sampleLifetime\",\"type\":\"uint256\"}],\"name\":\"PresetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LBPairImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_quoteAsset\",\"type\":\"address\"}],\"name\":\"addQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allLBPairs\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenY\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_activeId\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"_vtokenFactional\",\"type\":\"bool\"}],\"name\":\"createLBPair\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"_LBPair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"getLBPairInformation\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"createdByOwner\",\"type\":\"bool\"}],\"internalType\":\"struct ILBFactory.LBPairInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfLBPairs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfQuoteAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getQuoteAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isQuoteAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_quoteAsset\",\"type\":\"address\"}],\"name\":\"removeQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_locked\",\"type\":\"bool\"}],\"name\":\"setFactoryLockedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LBPairImplementation\",\"type\":\"address\"}],\"name\":\"setLBPairImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"addQuoteAsset(address)\":{\"params\":{\"_quoteAsset\":\"The quote asset (e.g: AVAX, USDC...)\"}},\"constructor\":{\"params\":{\"_feeRecipient\":\"The address of the fee recipient\"}},\"createLBPair(address,address,uint24,bool)\":{\"params\":{\"_activeId\":\"The active id of the pair\",\"_tokenX\":\"The address of the first token\",\"_tokenY\":\"The address of the second token\"},\"returns\":{\"_LBPair\":\"The address of the newly created LBPair\"}},\"getLBPairInformation(address,address)\":{\"params\":{\"_tokenA\":\"The address of the first token of the pair\",\"_tokenB\":\"The address of the second token of the pair\"},\"returns\":{\"_0\":\"The LBPairInformation\"}},\"getNumberOfLBPairs()\":{\"returns\":{\"_0\":\"The number of LBPair\"}},\"getNumberOfQuoteAssets()\":{\"returns\":{\"_0\":\"The number of quote assets\"}},\"getQuoteAsset(uint256)\":{\"params\":{\"_index\":\"The index\"},\"returns\":{\"_0\":\"The address of the _quoteAsset at index `index`\"}},\"isQuoteAsset(address)\":{\"params\":{\"_token\":\"The address of the asset\"},\"returns\":{\"_0\":\"Whether the token is a quote asset or not\"}},\"owner()\":{\"returns\":{\"_0\":\"The address of the current owner\"}},\"pendingOwner()\":{\"returns\":{\"_0\":\"The address of the current pending owner\"}},\"removeQuoteAsset(address)\":{\"params\":{\"_quoteAsset\":\"The quote asset (e.g: AVAX, USDC...)\"}},\"setFactoryLockedState(bool)\":{\"params\":{\"_locked\":\"If the creation is restricted (true) or not (false)\"}},\"setFeeRecipient(address)\":{\"params\":{\"_feeRecipient\":\"The address of the recipient\"}},\"setLBPairImplementation(address)\":{\"details\":\"Needs to be called by the owner\",\"params\":{\"_LBPairImplementation\":\"The address of the implementation\"}}},\"stateVariables\":{\"_LBPairsInfo\":{\"details\":\"Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens\"},\"_availablePresets\":{\"details\":\"Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas\"}},\"title\":\"Liquidity Book Factory\",\"version\":1},\"userdoc\":{\"errors\":{\"LBFactory__IdenticalAddresses(address)\":[{\"notice\":\"LBFactory errors \"}],\"Math128x128__PowerUnderflow(uint256,int256)\":[{\"notice\":\"Math128x128 errors \"}],\"PendingOwnable__NotOwner()\":[{\"notice\":\"PendingOwnable errors \"}]},\"kind\":\"user\",\"methods\":{\"addQuoteAsset(address)\":{\"notice\":\"Function to add an asset to the whitelist of quote assets\"},\"becomeOwner()\":{\"notice\":\"Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner\"},\"constructor\":{\"notice\":\"Constructor\"},\"createLBPair(address,address,uint24,bool)\":{\"notice\":\"Create a liquidity bin LBPair for _tokenX and _tokenY\"},\"creationUnlocked()\":{\"notice\":\"Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)\"},\"getLBPairInformation(address,address)\":{\"notice\":\"Returns the LBPairInformation if it exists, if not, then the address 0 is returned. The order doesn't matter\"},\"getNumberOfLBPairs()\":{\"notice\":\"View function to return the number of LBPairs created\"},\"getNumberOfQuoteAssets()\":{\"notice\":\"View function to return the number of quote assets whitelisted\"},\"getQuoteAsset(uint256)\":{\"notice\":\"View function to return the quote asset whitelisted at index `index`\"},\"isQuoteAsset(address)\":{\"notice\":\"View function to return whether a token is a quotedAsset (true) or not (false)\"},\"owner()\":{\"notice\":\"Returns the address of the current owner\"},\"pendingOwner()\":{\"notice\":\"Returns the address of the current pending owner\"},\"removeQuoteAsset(address)\":{\"notice\":\"Function to remove an asset from the whitelist of quote assets\"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokePendingOwner()\":{\"notice\":\"Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner\"},\"setFactoryLockedState(bool)\":{\"notice\":\"Function to set the creation restriction of the Factory\"},\"setFeeRecipient(address)\":{\"notice\":\"Function to set the recipient of the fees. This address needs to be able to receive ERC20s\"},\"setLBPairImplementation(address)\":{\"notice\":\"Set the LBPair implementation address\"},\"setPendingOwner(address)\":{\"notice\":\"Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}\"}},\"notice\":\"Contract used to deploy and register new LBPairs. Enables setting fee parameters, flashloan fees and LBPair implementation. Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/LBFactory.sol\":\"LBFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/LBFactory.sol\":{\"keccak256\":\"0x2cbfc697e12935acebfd1c33af9e96ad5958b9550b2ad7696a68ba0f033bba56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2e854a88e34b13d7e922f02087bbad5e39f4aab33fdbd3dbc4066de93dc07\",\"dweb:/ipfs/QmWyufTyUq4LsF8SMT564kSLSARk8CDJ77v5mRtGnhfCy5\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/BinHelper.sol\":{\"keccak256\":\"0xe364497f7c55d363711aea744090c9e6e0270a62b6a350074f3db9d9b7f13aec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38ca88d51bbef9b3b26b629af0df9c9572599d6f6d8dfdf2111f4626b34a49f9\",\"dweb:/ipfs/QmamJBBBqh4D3LNg3cJLaiJdryMjfa8LTVuMPR2iwvpe81\"]},\"Midas/joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/Decoder.sol\":{\"keccak256\":\"0xe12ecacbd1d520251a148fb671f682fac728e48ec3e7bfcfdd8f9765fe2b5e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e63ed2ea395acf3a99ef623c94740ebf4b1b2fff1913b6cff3b305950862210\",\"dweb:/ipfs/QmfPcMVaAwJ7nGhhgpNg7bxXHPKPi4NeShtzuy1wX8n9MZ\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/Math128x128.sol\":{\"keccak256\":\"0x33202d8738fe0334bff67f2ad4568f2669ef00b86ad252803a217cd9a913921f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e32450665cc7ae8c0b9907ea0451dbe5ea29aea21f3967ccb764729d54bff30\",\"dweb:/ipfs/QmPh5GkHYYCqf2328usjFpGi3BLKgKakjsFHBKjp7regK1\"]},\"Midas/joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":{\"keccak256\":\"0x6799fef60252b959af4ecd5b7caebe67e227c90c35d4e23a2c44544579df4c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51ed31c79d3108fba21d2af4c39113d3f1dea711570c6945c9e53d04a776054\",\"dweb:/ipfs/QmVg1jaA3Jt9H28BZNytmxxdNo8soSBCD3NSvphzKdNDaD\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3726,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3728,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1346,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "LBPairImplementation",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1349,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1353,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "creationUnlocked",
								"offset": 20,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 1356,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "flashLoanFee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1361,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "allLBPairs",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_contract(ILBPair)2405)dyn_storage"
							},
							{
								"astId": 1371,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_LBPairsInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_contract(IERC20)157,t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1908_storage))"
							},
							{
								"astId": 1374,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_availablePresets",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 1378,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_presets",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_bytes32)"
							},
							{
								"astId": 1381,
								"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_quoteAssetWhitelist",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(AddressSet)483_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_contract(ILBPair)2405)dyn_storage": {
								"base": "t_contract(ILBPair)2405",
								"encoding": "dynamic_array",
								"label": "contract ILBPair[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)157": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ILBPair)2405": {
								"encoding": "inplace",
								"label": "contract ILBPair",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_contract(IERC20)157,t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1908_storage))": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)157",
								"label": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1908_storage)"
							},
							"t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1908_storage)": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)157",
								"label": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation)",
								"numberOfBytes": "32",
								"value": "t_struct(LBPairInformation)1908_storage"
							},
							"t_mapping(t_uint256,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_struct(AddressSet)483_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 482,
										"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)168_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(LBPairInformation)1908_storage": {
								"encoding": "inplace",
								"label": "struct ILBFactory.LBPairInformation",
								"members": [
									{
										"astId": 1905,
										"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "LBPair",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(ILBPair)2405"
									},
									{
										"astId": 1907,
										"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "createdByOwner",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Set)168_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 163,
										"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 167,
										"contract": "Midas/joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"LBFactory__IdenticalAddresses(address)": [
								{
									"notice": "LBFactory errors "
								}
							],
							"Math128x128__PowerUnderflow(uint256,int256)": [
								{
									"notice": "Math128x128 errors "
								}
							],
							"PendingOwnable__NotOwner()": [
								{
									"notice": "PendingOwnable errors "
								}
							]
						},
						"kind": "user",
						"methods": {
							"addQuoteAsset(address)": {
								"notice": "Function to add an asset to the whitelist of quote assets"
							},
							"becomeOwner()": {
								"notice": "Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner"
							},
							"constructor": {
								"notice": "Constructor"
							},
							"createLBPair(address,address,uint24,bool)": {
								"notice": "Create a liquidity bin LBPair for _tokenX and _tokenY"
							},
							"creationUnlocked()": {
								"notice": "Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)"
							},
							"getLBPairInformation(address,address)": {
								"notice": "Returns the LBPairInformation if it exists, if not, then the address 0 is returned. The order doesn't matter"
							},
							"getNumberOfLBPairs()": {
								"notice": "View function to return the number of LBPairs created"
							},
							"getNumberOfQuoteAssets()": {
								"notice": "View function to return the number of quote assets whitelisted"
							},
							"getQuoteAsset(uint256)": {
								"notice": "View function to return the quote asset whitelisted at index `index`"
							},
							"isQuoteAsset(address)": {
								"notice": "View function to return whether a token is a quotedAsset (true) or not (false)"
							},
							"owner()": {
								"notice": "Returns the address of the current owner"
							},
							"pendingOwner()": {
								"notice": "Returns the address of the current pending owner"
							},
							"removeQuoteAsset(address)": {
								"notice": "Function to remove an asset from the whitelist of quote assets"
							},
							"renounceOwnership()": {
								"notice": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"revokePendingOwner()": {
								"notice": "Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner"
							},
							"setFactoryLockedState(bool)": {
								"notice": "Function to set the creation restriction of the Factory"
							},
							"setFeeRecipient(address)": {
								"notice": "Function to set the recipient of the fees. This address needs to be able to receive ERC20s"
							},
							"setLBPairImplementation(address)": {
								"notice": "Set the LBPair implementation address"
							},
							"setPendingOwner(address)": {
								"notice": "Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}"
							}
						},
						"notice": "Contract used to deploy and register new LBPairs. Enables setting fee parameters, flashloan fees and LBPair implementation. Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs.",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/interfaces/ILBFactory.sol": {
				"ILBFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"name": "FactoryLockedStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								}
							],
							"name": "FeeParametersSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFlashLoanFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFlashLoanFee",
									"type": "uint256"
								}
							],
							"name": "FlashLoanFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								}
							],
							"name": "LBPairCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "ignored",
									"type": "bool"
								}
							],
							"name": "LBPairIgnoredStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldLBPairImplementation",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBPairImplementationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresetRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sampleLifetime",
									"type": "uint256"
								}
							],
							"name": "PresetSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LBPairImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "addQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "allLBPairs",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "activeId",
									"type": "uint24"
								},
								{
									"internalType": "bool",
									"name": "_vtokenFactional",
									"type": "bool"
								}
							],
							"name": "createLBPair",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creationUnlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashLoanFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								}
							],
							"name": "getLBPairInformation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract ILBPair",
											"name": "LBPair",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "createdByOwner",
											"type": "bool"
										}
									],
									"internalType": "struct ILBFactory.LBPairInformation",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfLBPairs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfQuoteAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getQuoteAsset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isQuoteAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "removeQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "locked",
									"type": "bool"
								}
							],
							"name": "setFactoryLockedState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "feeRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "setLBPairImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Factory Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"LBPairImplementation()": "509ceb90",
							"MAX_FEE()": "bc063e1a",
							"addQuoteAsset(address)": "5a440923",
							"allLBPairs(uint256)": "72e47b8c",
							"becomeOwner()": "f9dca989",
							"createLBPair(address,address,uint24,bool)": "52e2cf8e",
							"creationUnlocked()": "5c779d6d",
							"feeRecipient()": "46904840",
							"flashLoanFee()": "4847cdc8",
							"getLBPairInformation(address,address)": "eaec42a4",
							"getNumberOfLBPairs()": "4e937c3a",
							"getNumberOfQuoteAssets()": "80c5061e",
							"getQuoteAsset(uint256)": "f89a4cd5",
							"isQuoteAsset(address)": "27721842",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"removeQuoteAsset(address)": "ddbfd941",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setFactoryLockedState(bool)": "22f3fe14",
							"setFeeRecipient(address)": "e74b981b",
							"setLBPairImplementation(address)": "b0384781",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"name\":\"FactoryLockedStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"}],\"name\":\"FeeParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFlashLoanFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFee\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"LBPairCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"ignored\",\"type\":\"bool\"}],\"name\":\"LBPairIgnoredStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLBPairImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBPairImplementationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sampleLifetime\",\"type\":\"uint256\"}],\"name\":\"PresetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LBPairImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"addQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allLBPairs\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"_vtokenFactional\",\"type\":\"bool\"}],\"name\":\"createLBPair\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"}],\"name\":\"getLBPairInformation\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"createdByOwner\",\"type\":\"bool\"}],\"internalType\":\"struct ILBFactory.LBPairInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfLBPairs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfQuoteAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getQuoteAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isQuoteAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"removeQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setFactoryLockedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"setLBPairImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Factory Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface of LBFactory contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":\"ILBFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface of LBFactory contract",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol": {
				"ILBFlashLoanCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "LBFlashLoanCallback",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Flashloan Callback Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"LBFlashLoanCallback(address,address,uint256,uint256,bytes)": "5dbacec5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LBFlashLoanCallback\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Flashloan Callback Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface to interact with LB flash loans\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":\"ILBFlashLoanCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface to interact with LB flash loans",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/interfaces/ILBPair.sol": {
				"ILBPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feesX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feesY",
									"type": "uint256"
								}
							],
							"name": "CompositionFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "DepositedToBin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "FeesCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousSize",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSize",
									"type": "uint256"
								}
							],
							"name": "OracleSizeIncreased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "ProtocolFeesCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "swapForY",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fees",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "WithdrawnFromBin",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectProtocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountY",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract ILBFactory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeParameters",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint128",
											"name": "rate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "protocolShare",
											"type": "uint128"
										}
									],
									"internalType": "struct FeeHelper.FeeParameters",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "id_",
									"type": "uint24"
								},
								{
									"internalType": "bool",
									"name": "sentTokenY",
									"type": "bool"
								}
							],
							"name": "findFirstNonEmptyBinId",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "id",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "id",
									"type": "uint24"
								}
							],
							"name": "getBin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserveX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveY",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGlobalFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "feesYTotal",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "feesYProtocol",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesAndId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserveX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "activeId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "activeId",
									"type": "uint24"
								},
								{
									"internalType": "bool",
									"name": "_vtokenFactional",
									"type": "bool"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "distributionX",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "distributionY",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountXAddedToPair",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountYAddedToPair",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "liquidityMinted",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "pendingFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "sentTokenY",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountXOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountYOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenX",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenY",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Pair Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256[],uint256[],address)": "0acd451d",
							"collectFees(address,uint256[])": "225b20b9",
							"collectProtocolFees()": "a1af5b9a",
							"factory()": "c45a0155",
							"feeParameters()": "98c7adf3",
							"findFirstNonEmptyBinId(uint24,bool)": "8f919a83",
							"getBin(uint24)": "0abe9688",
							"getGlobalFees()": "a582cdaa",
							"getReservesAndId()": "1b05b83e",
							"initialize(address,address,uint24,bool)": "8c6abc0f",
							"mint(uint256[],uint256[],uint256[],address)": "714c8592",
							"pendingFees(address,uint256[])": "f7cff1f8",
							"swap(bool,address)": "53c059a0",
							"tokenX()": "16dc165b",
							"tokenY()": "b7d19fc4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesY\",\"type\":\"uint256\"}],\"name\":\"CompositionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"DepositedToBin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"FeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSize\",\"type\":\"uint256\"}],\"name\":\"OracleSizeIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"swapForY\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"WithdrawnFromBin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountY\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract ILBFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeParameters\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"protocolShare\",\"type\":\"uint128\"}],\"internalType\":\"struct FeeHelper.FeeParameters\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"id_\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"sentTokenY\",\"type\":\"bool\"}],\"name\":\"findFirstNonEmptyBinId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"id\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"id\",\"type\":\"uint24\"}],\"name\":\"getBin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveY\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"feesYTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"feesYProtocol\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesAndId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"_vtokenFactional\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"distributionX\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"distributionY\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountXAddedToPair\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountYAddedToPair\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"liquidityMinted\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"pendingFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"sentTokenY\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountXOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountYOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenY\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Pair Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface of LBPair contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":\"ILBPair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface of LBPair contract",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol": {
				"IPendingOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Pending Ownable Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"becomeOwner()": "f9dca989",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Pending Ownable Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface of Pending Ownable contract used for LBFactory\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":\"IPendingOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface of Pending Ownable contract used for LBFactory",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/BinHelper.sol": {
				"BinHelper": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Bin Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":243:2202  library BinHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/BinHelper.sol\":243:2202  library BinHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfb0a6eab2e65f319309c63d1d96dd0cc2d80ccb2a6f0d895c83a42d52c8ca6b64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfb0a6eab2e65f319309c63d1d96dd0cc2d80ccb2a6f0d895c83a42d52c8ca6b64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xB0 0xA6 0xEA 0xB2 0xE6 0x5F BALANCE SWAP4 MULMOD 0xC6 RETURNDATASIZE SAR SWAP7 0xDD 0xC 0xC2 0xD8 0xC 0xCB 0x2A PUSH16 0xD895C83A42D52C8CA6B64736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "243:1959:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dfb0a6eab2e65f319309c63d1d96dd0cc2d80ccb2a6f0d895c83a42d52c8ca6b64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xB0 0xA6 0xEA 0xB2 0xE6 0x5F BALANCE SWAP4 MULMOD 0xC6 RETURNDATASIZE SAR SWAP7 0xDD 0xC 0xC2 0xD8 0xC 0xCB 0x2A PUSH16 0xD895C83A42D52C8CA6B64736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "243:1959:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_getBPValue()": "infinite",
								"getIdFromPrice(uint256)": "infinite",
								"getPriceFromId(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfb0a6eab2e65f319309c63d1d96dd0cc2d80ccb2a6f0d895c83a42d52c8ca6b64736f6c634300080a0033",
									".code": [
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Bin Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract used to convert bin ID to price and back\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/BinHelper.sol\":\"BinHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/BinHelper.sol\":{\"keccak256\":\"0xe364497f7c55d363711aea744090c9e6e0270a62b6a350074f3db9d9b7f13aec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38ca88d51bbef9b3b26b629af0df9c9572599d6f6d8dfdf2111f4626b34a49f9\",\"dweb:/ipfs/QmamJBBBqh4D3LNg3cJLaiJdryMjfa8LTVuMPR2iwvpe81\"]},\"Midas/joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/Math128x128.sol\":{\"keccak256\":\"0x33202d8738fe0334bff67f2ad4568f2669ef00b86ad252803a217cd9a913921f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e32450665cc7ae8c0b9907ea0451dbe5ea29aea21f3967ccb764729d54bff30\",\"dweb:/ipfs/QmPh5GkHYYCqf2328usjFpGi3BLKgKakjsFHBKjp7regK1\"]},\"Midas/joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contract used to convert bin ID to price and back",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Bit Math Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/BitMath.sol\":178:4698  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/BitMath.sol\":178:4698  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220269dee3c55b43d46715d7cba2cecce55b66cc3e5acd91a8be735af96f3b36cce64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220269dee3c55b43d46715d7cba2cecce55b66cc3e5acd91a8be735af96f3b36cce64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 SWAP14 0xEE EXTCODECOPY SSTORE 0xB4 RETURNDATASIZE CHAINID PUSH18 0x5D7CBA2CECCE55B66CC3E5ACD91A8BE735AF SWAP7 RETURN 0xB3 PUSH13 0xCE64736F6C634300080A003300 ",
							"sourceMap": "178:4520:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220269dee3c55b43d46715d7cba2cecce55b66cc3e5acd91a8be735af96f3b36cce64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 SWAP14 0xEE EXTCODECOPY SSTORE 0xB4 RETURNDATASIZE CHAINID PUSH18 0x5D7CBA2CECCE55B66CC3E5ACD91A8BE735AF SWAP7 RETURN 0xB3 PUSH13 0xCE64736F6C634300080A003300 ",
							"sourceMap": "178:4520:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"closestBit(uint256,uint8,bool)": "infinite",
								"closestBitLeft(uint256,uint8)": "infinite",
								"closestBitRight(uint256,uint8)": "infinite",
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite",
								"significantBit(uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220269dee3c55b43d46715d7cba2cecce55b66cc3e5acd91a8be735af96f3b36cce64736f6c634300080a0033",
									".code": [
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Bit Math Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for bit calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Midas/joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for bit calculations",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/Constants.sol": {
				"Constants": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"CALLBACK_SUCCESS": {
								"details": "The expected return after a successful flash loan"
							}
						},
						"title": "Liquidity Book Constants Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":183:576  library Constants {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/Constants.sol\":183:576  library Constants {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220af53191cb9378f68776fd21d91001a41101cad70dcab21d6c4347cc4a443b46764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af53191cb9378f68776fd21d91001a41101cad70dcab21d6c4347cc4a443b46764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF MSTORE8 NOT SHR 0xB9 CALLDATACOPY DUP16 PUSH9 0x776FD21D91001A4110 SHR 0xAD PUSH17 0xDCAB21D6C4347CC4A443B46764736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "183:393:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af53191cb9378f68776fd21d91001a41101cad70dcab21d6c4347cc4a443b46764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF MSTORE8 NOT SHR 0xB9 CALLDATACOPY DUP16 PUSH9 0x776FD21D91001A4110 SHR 0xAD PUSH17 0xDCAB21D6C4347CC4A443B46764736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "183:393:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af53191cb9378f68776fd21d91001a41101cad70dcab21d6c4347cc4a443b46764736f6c634300080a0033",
									".code": [
										{
											"begin": 183,
											"end": 576,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"CALLBACK_SUCCESS\":{\"details\":\"The expected return after a successful flash loan\"}},\"title\":\"Liquidity Book Constants Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Set of constants for Liquidity Book contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Set of constants for Liquidity Book contracts",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/Decoder.sol": {
				"Decoder": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Decoder Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/Decoder.sol\":184:708  library Decoder {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/Decoder.sol\":184:708  library Decoder {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eac4a85566aba1c5f0113f7b2ac0f7f072bcd81639b669c417f0d69993174e8964736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eac4a85566aba1c5f0113f7b2ac0f7f072bcd81639b669c417f0d69993174e8964736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC4 0xA8 SSTORE PUSH7 0xABA1C5F0113F7B 0x2A 0xC0 0xF7 CREATE PUSH19 0xBCD81639B669C417F0D69993174E8964736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "184:524:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eac4a85566aba1c5f0113f7b2ac0f7f072bcd81639b669c417f0d69993174e8964736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xC4 0xA8 SSTORE PUSH7 0xABA1C5F0113F7B 0x2A 0xC0 0xF7 CREATE PUSH19 0xBCD81639B669C417F0D69993174E8964736F6C PUSH4 0x4300080A STOP CALLER ",
							"sourceMap": "184:524:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decode(bytes32,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eac4a85566aba1c5f0113f7b2ac0f7f072bcd81639b669c417f0d69993174e8964736f6c634300080a0033",
									".code": [
										{
											"begin": 184,
											"end": 708,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 708,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 708,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 708,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Decoder Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for decoding bytes32 sample\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/Decoder.sol\":\"Decoder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Midas/joe-v2-main/src/libraries/Decoder.sol\":{\"keccak256\":\"0xe12ecacbd1d520251a148fb671f682fac728e48ec3e7bfcfdd8f9765fe2b5e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e63ed2ea395acf3a99ef623c94740ebf4b1b2fff1913b6cff3b305950862210\",\"dweb:/ipfs/QmfPcMVaAwJ7nGhhgpNg7bxXHPKPi4NeShtzuy1wX8n9MZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for decoding bytes32 sample",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/FeeHelper.sol": {
				"FeeHelper": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Fee Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":257:3516  library FeeHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":257:3516  library FeeHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220520c89bf74fdde80ff3dd840ac9470341ccad8f90b2d2c7814cc8669b0d18bd564736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220520c89bf74fdde80ff3dd840ac9470341ccad8f90b2d2c7814cc8669b0d18bd564736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xC DUP10 0xBF PUSH21 0xFDDE80FF3DD840AC9470341CCAD8F90B2D2C7814CC DUP7 PUSH10 0xB0D18BD564736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "257:3259:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220520c89bf74fdde80ff3dd840ac9470341ccad8f90b2d2c7814cc8669b0d18bd564736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xC DUP10 0xBF PUSH21 0xFDDE80FF3DD840AC9470341CCAD8F90B2D2C7814CC DUP7 PUSH10 0xB0D18BD564736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "257:3259:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getFeeAmount(struct FeeHelper.FeeParameters memory,uint256)": "infinite",
								"getFeeAmountDistribution(struct FeeHelper.FeeParameters memory,uint256)": "infinite",
								"getFeeAmountFrom(struct FeeHelper.FeeParameters memory,uint256)": "infinite",
								"getTotalFee(struct FeeHelper.FeeParameters memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220520c89bf74fdde80ff3dd840ac9470341ccad8f90b2d2c7814cc8669b0d18bd564736f6c634300080a0033",
									".code": [
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Fee Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for fees calculation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":\"FeeHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for fees calculation",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/Math128x128.sol": {
				"Math128x128": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Math Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":296:8096  library Math128x128 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/Math128x128.sol\":296:8096  library Math128x128 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201ec41c7c38bd80c4697565ef078ffe16388b730e3aa74e95655a3206a1fcd5e664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ec41c7c38bd80c4697565ef078ffe16388b730e3aa74e95655a3206a1fcd5e664736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xC4 SHR PUSH29 0x38BD80C4697565EF078FFE16388B730E3AA74E95655A3206A1FCD5E664 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
							"sourceMap": "296:7800:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ec41c7c38bd80c4697565ef078ffe16388b730e3aa74e95655a3206a1fcd5e664736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xC4 SHR PUSH29 0x38BD80C4697565EF078FFE16388B730E3AA74E95655A3206A1FCD5E664 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
							"sourceMap": "296:7800:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"log2(uint256)": "infinite",
								"power(uint256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201ec41c7c38bd80c4697565ef078ffe16388b730e3aa74e95655a3206a1fcd5e664736f6c634300080a0033",
									".code": [
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Math Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for power and log calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/Math128x128.sol\":\"Math128x128\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/Math128x128.sol\":{\"keccak256\":\"0x33202d8738fe0334bff67f2ad4568f2669ef00b86ad252803a217cd9a913921f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e32450665cc7ae8c0b9907ea0451dbe5ea29aea21f3967ccb764729d54bff30\",\"dweb:/ipfs/QmPh5GkHYYCqf2328usjFpGi3BLKgKakjsFHBKjp7regK1\"]},\"Midas/joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for power and log calculations",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/Math512Bits.sol": {
				"Math512Bits": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Math Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/Math512Bits.sol\":243:10227  library Math512Bits {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/Math512Bits.sol\":243:10227  library Math512Bits {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208b555b499bf0fd107f967500729ad79bd58ebbcb2198d041d8f9b2d17c80cb4d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b555b499bf0fd107f967500729ad79bd58ebbcb2198d041d8f9b2d17c80cb4d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 SSTORE JUMPDEST 0x49 SWAP12 CREATE REVERT LT PUSH32 0x967500729AD79BD58EBBCB2198D041D8F9B2D17C80CB4D64736F6C634300080A STOP CALLER ",
							"sourceMap": "243:9984:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b555b499bf0fd107f967500729ad79bd58ebbcb2198d041d8f9b2d17c80cb4d64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 SSTORE JUMPDEST 0x49 SWAP12 CREATE REVERT LT PUSH32 0x967500729AD79BD58EBBCB2198D041D8F9B2D17C80CB4D64736F6C634300080A STOP CALLER ",
							"sourceMap": "243:9984:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_getEndOfDivRoundDown(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_getMulProds(uint256,uint256)": "infinite",
								"mulDivRoundDown(uint256,uint256,uint256)": "infinite",
								"mulShiftRoundDown(uint256,uint256,uint256)": "infinite",
								"mulShiftRoundUp(uint256,uint256,uint256)": "infinite",
								"shiftDivRoundDown(uint256,uint256,uint256)": "infinite",
								"shiftDivRoundUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208b555b499bf0fd107f967500729ad79bd58ebbcb2198d041d8f9b2d17c80cb4d64736f6c634300080a0033",
									".code": [
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Math Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for full precision calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/Math512Bits.sol\":\"Math512Bits\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for full precision calculations",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/PendingOwnable.sol": {
				"PendingOwnable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__AddressZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NoPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__PendingOwnerAlreadySet",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner_",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "The address of the current owner"
								}
							},
							"pendingOwner()": {
								"returns": {
									"_0": "The address of the current pending owner"
								}
							}
						},
						"title": "Pending Ownable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1628:1689  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  tag_4\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1671:1681  msg.sender */\n  caller\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1670  _transferOwnership */\n  shl(0x20, tag_5)\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\n  jump(tag_6)\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\ntag_5:\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n  0x00\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3888  address _oldOwner = _owner */\n  swap1\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3907:3916  _newOwner */\n  dup2\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3904  _owner */\n  0x00\n  dup1\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3950:3951  0 */\n  0x00\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3939  _pendingOwner */\n  0x01\n  0x00\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3999:4008  _newOwner */\n  dup2\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3988:3997  _oldOwner */\n  dup2\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n  pop\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67ab8a4e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc42069ec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf9dca989\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n    tag_7:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_8:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_10:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_27\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_27:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2836:2837  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2838  _pendingOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2824  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2838  _pendingOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n      iszero\n      tag_29\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2847:2879  PendingOwnable__NoPendingOwner() */\n      mload(0x40)\n      0xecfad6bf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n    tag_29:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      tag_30\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2914:2915  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2905  _setPendingOwner */\n      tag_31\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      jump\t// in\n    tag_30:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_12:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_33\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_33:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      tag_35\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3581:3582  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3572  _transferOwnership */\n      tag_36\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_35:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n    tag_14:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1848:1855  address */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1874:1880  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1867:1880  return _owner */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_20:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_39\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      0x9f216c1300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_39:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2378:2379  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2380  pendingOwner_ == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2366  pendingOwner_ */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2380  pendingOwner_ == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n      iszero\n      tag_41\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2389:2418  PendingOwnable__AddressZero() */\n      mload(0x40)\n      0x91f3851500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n    tag_41:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2457:2458  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2459  _pendingOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2445  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2459  _pendingOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n      tag_42\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2468:2508  PendingOwnable__PendingOwnerAlreadySet() */\n      mload(0x40)\n      0x716b1fbf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n    tag_42:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      tag_43\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2535:2548  pendingOwner_ */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2534  _setPendingOwner */\n      tag_31\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      jump\t// in\n    tag_43:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n    tag_22:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2069:2076  address */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2095:2108  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2088:2108  return _pendingOwner */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_25:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1438:1451  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1451  msg.sender != _pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1434  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1451  msg.sender != _pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n      dup1\n      tag_46\n      jumpi\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1477:1478  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1479  msg.sender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1465  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1479  msg.sender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n    tag_46:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n      iszero\n      tag_47\n      jumpi\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1488:1521  PendingOwnable__NotPendingOwner() */\n      mload(0x40)\n      0x7304d01200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n    tag_47:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      tag_49\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3137:3147  msg.sender */\n      caller\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3136  _transferOwnership */\n      tag_36\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      jump\t// in\n    tag_49:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n    tag_31:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4309:4322  pendingOwner_ */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4306  _pendingOwner */\n      0x01\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4322  _pendingOwner = pendingOwner_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4353:4366  pendingOwner_ */\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4337:4367  PendingOwnerSet(pendingOwner_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n    tag_36:\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3888  address _oldOwner = _owner */\n      swap1\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3907:3916  _newOwner */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3904  _owner */\n      0x00\n      dup1\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3950:3951  0 */\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3939  _pendingOwner */\n      0x01\n      0x00\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3999:4008  _newOwner */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3988:3997  _oldOwner */\n      dup2\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n      pop\n        /* \"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_52:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_53:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_63\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_52\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_54:\n        /* \"#utility.yul\":328:352   */\n      tag_65\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_53\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_67\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_54\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_56:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_58:\n        /* \"#utility.yul\":993:1017   */\n      tag_72\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_53\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_73:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_59:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_75\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_58\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_19:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_78\n      tag_56\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1269:1388   */\n    tag_77:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_79\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_59\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122021c895fcf496167c7dc0d872168b19fa2bd3518baa55f9c6a9251b1d15de034f64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3772": {
									"entryPoint": null,
									"id": 3772,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_3906": {
									"entryPoint": 37,
									"id": 3906,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100203361002560201b60201c565b61012b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107a38061013a6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806367ab8a4e14610067578063715018a6146100715780638da5cb5b1461007b578063c42069ec14610099578063e30c3978146100b5578063f9dca989146100d3575b600080fd5b61006f6100dd565b005b6100796101f7565b005b610083610288565b60405161009091906106f4565b60405180910390f35b6100b360048036038101906100ae9190610740565b6102b1565b005b6100bd610431565b6040516100ca91906106f4565b60405180910390f35b6100db61045b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610162576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101eb576040517fecfad6bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f56000610526565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027c576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61028660006105ad565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610336576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039d576040517f91f3851500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610425576040517f716b1fbf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042e81610526565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806104e45750600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1561051b576040517f7304d01200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610524336105ad565b565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f560405160405180910390a250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106de826106b3565b9050919050565b6106ee816106d3565b82525050565b600060208201905061070960008301846106e5565b92915050565b600080fd5b61071d816106d3565b811461072857600080fd5b50565b60008135905061073a81610714565b92915050565b6000602082840312156107565761075561070f565b5b60006107648482850161072b565b9150509291505056fea264697066735822122021c895fcf496167c7dc0d872168b19fa2bd3518baa55f9c6a9251b1d15de034f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20 CALLER PUSH2 0x25 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x7A3 DUP1 PUSH2 0x13A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x1F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83 PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x45B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F5 PUSH1 0x0 PUSH2 0x526 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x286 PUSH1 0x0 PUSH2 0x5AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42E DUP2 PUSH2 0x526 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x4E4 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x524 CALLER PUSH2 0x5AD JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x6B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EE DUP2 PUSH2 0x6D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x709 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x6D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x73A DUP2 PUSH2 0x714 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x756 JUMPI PUSH2 0x755 PUSH2 0x70F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x764 DUP5 DUP3 DUP6 ADD PUSH2 0x72B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xC8 SWAP6 0xFC DELEGATECALL SWAP7 AND PUSH29 0x7DC0D872168B19FA2BD3518BAA55F9C6A9251B1D15DE034F64736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1007:3369:16:-:0;;;1628:61;;;;;;;;;;1652:30;1671:10;1652:18;;;:30;;:::i;:::-;1007:3369;;3788:228;3862:17;3882:6;;;;;;;;;;;3862:26;;3907:9;3898:6;;:18;;;;;;;;;;;;;;;;;;3950:1;3926:13;;:26;;;;;;;;;;;;;;;;;;3999:9;3967:42;;3988:9;3967:42;;;;;;;;;;;;3852:164;3788:228;:::o;1007:3369::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_setPendingOwner_3921": {
									"entryPoint": 1318,
									"id": 3921,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_3906": {
									"entryPoint": 1453,
									"id": 3906,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@becomeOwner_3864": {
									"entryPoint": 1115,
									"id": 3864,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_3782": {
									"entryPoint": 648,
									"id": 3782,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_3792": {
									"entryPoint": 1073,
									"id": 3792,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_3879": {
									"entryPoint": 503,
									"id": 3879,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokePendingOwner_3851": {
									"entryPoint": 221,
									"id": 3851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPendingOwner_3826": {
									"entryPoint": 689,
									"id": 3826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1525:19",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:19",
														"type": ""
													}
												],
												"src": "7:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:19",
														"type": ""
													}
												],
												"src": "139:96:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:19",
														"type": ""
													}
												],
												"src": "241:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:19",
														"type": ""
													}
												],
												"src": "365:222:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:19",
														"type": ""
													}
												],
												"src": "593:75:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:19"
															},
															"nodeType": "YulIf",
															"src": "973:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:19",
														"type": ""
													}
												],
												"src": "920:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:19",
														"type": ""
													}
												],
												"src": "1048:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:19"
															},
															"nodeType": "YulIf",
															"src": "1269:119:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:19",
														"type": ""
													}
												],
												"src": "1193:329:19"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806367ab8a4e14610067578063715018a6146100715780638da5cb5b1461007b578063c42069ec14610099578063e30c3978146100b5578063f9dca989146100d3575b600080fd5b61006f6100dd565b005b6100796101f7565b005b610083610288565b60405161009091906106f4565b60405180910390f35b6100b360048036038101906100ae9190610740565b6102b1565b005b6100bd610431565b6040516100ca91906106f4565b60405180910390f35b6100db61045b565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610162576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101eb576040517fecfad6bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f56000610526565b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027c576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61028660006105ad565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610336576040517f9f216c1300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561039d576040517f91f3851500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610425576040517f716b1fbf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042e81610526565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806104e45750600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1561051b576040517f7304d01200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610524336105ad565b565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f560405160405180910390a250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106de826106b3565b9050919050565b6106ee816106d3565b82525050565b600060208201905061070960008301846106e5565b92915050565b600080fd5b61071d816106d3565b811461072857600080fd5b50565b60008135905061073a81610714565b92915050565b6000602082840312156107565761075561070f565b5b60006107648482850161072b565b9150509291505056fea264697066735822122021c895fcf496167c7dc0d872168b19fa2bd3518baa55f9c6a9251b1d15de034f64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x1F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83 PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0x45B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x162 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F5 PUSH1 0x0 PUSH2 0x526 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27C JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x286 PUSH1 0x0 PUSH2 0x5AD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9F216C1300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x425 JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42E DUP2 PUSH2 0x526 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x4E4 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x524 CALLER PUSH2 0x5AD JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x6B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EE DUP2 PUSH2 0x6D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x709 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71D DUP2 PUSH2 0x6D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x73A DUP2 PUSH2 0x714 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x756 JUMPI PUSH2 0x755 PUSH2 0x70F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x764 DUP5 DUP3 DUP6 ADD PUSH2 0x72B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xC8 SWAP6 0xFC DELEGATECALL SWAP7 AND PUSH29 0x7DC0D872168B19FA2BD3518BAA55F9C6A9251B1D15DE034F64736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1007:3369:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2741:183;;;:::i;:::-;;3489:102;;;:::i;:::-;;1801:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2265:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2015:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3052:103;;;:::i;:::-;;2741:183;1239:6;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;2836:1:::1;2811:27;;:13;;;;;;;;;;;:27;;;2807:72;;;2847:32;;;;;;;;;;;;;;2807:72;2889:28;2914:1;2889:16;:28::i;:::-;2741:183::o:0;3489:102::-;1239:6;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;3554:30:::1;3581:1;3554:18;:30::i;:::-;3489:102::o:0;1801:86::-;1848:7;1874:6;;;;;;;;;;;1867:13;;1801:86;:::o;2265:291::-;1239:6;;;;;;;;;;1225:20;;:10;:20;;;1221:59;;1254:26;;;;;;;;;;;;;;1221:59;2378:1:::1;2353:27;;:13;:27;;;2349:69;;;2389:29;;;;;;;;;;;;;;2349:69;2457:1;2432:27;;:13;;;;;;;;;;;:27;;;2428:80;;2468:40;;;;;;;;;;;;;;2428:80;2518:31;2535:13;2518:16;:31::i;:::-;2265:291:::0;:::o;2015:100::-;2069:7;2095:13;;;;;;;;;;;2088:20;;2015:100;:::o;3052:103::-;1438:13;;;;;;;;;;;1424:27;;:10;:27;;;;:55;;;;1477:1;1455:24;;:10;:24;;;1424:55;1420:101;;;1488:33;;;;;;;;;;;;;;1420:101;3118:30:::1;3137:10;3118:18;:30::i;:::-;3052:103::o:0;4217:157::-;4309:13;4293;;:29;;;;;;;;;;;;;;;;;;4353:13;4337:30;;;;;;;;;;;;4217:157;:::o;3788:228::-;3862:17;3882:6;;;;;;;;;;;3862:26;;3907:9;3898:6;;:18;;;;;;;;;;;;;;;;;;3950:1;3926:13;;:26;;;;;;;;;;;;;;;;;;3999:9;3967:42;;3988:9;3967:42;;;;;;;;;;;;3852:164;3788:228;:::o;7:126:19:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "391000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"becomeOwner()": "54703",
								"owner()": "2544",
								"pendingOwner()": "2588",
								"renounceOwnership()": "54568",
								"revokePendingOwner()": "29920",
								"setPendingOwner(address)": "30332"
							},
							"internal": {
								"_setPendingOwner(address)": "25448",
								"_transferOwnership(address)": "52248"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1681,
									"name": "CALLER",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "tag",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "tag",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3879,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3888,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3907,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3904,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3898,
									"end": 3904,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 3939,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 3939,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3999,
									"end": 4008,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3988,
									"end": 3997,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "LOG3",
									"source": 16
								},
								{
									"begin": 3852,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "tag",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122021c895fcf496167c7dc0d872168b19fa2bd3518baa55f9c6a9251b1d15de034f64736f6c634300080a0033",
									".code": [
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "67AB8A4E"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "C42069EC"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "E30C3978"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "F9DCA989"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2838,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "ECFAD6BF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1867,
											"end": 1880,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "9F216C1300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2366,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "91F3851500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "716B1FBF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2088,
											"end": 2108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1477,
											"end": 1478,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1465,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "7304D01200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4309,
											"end": 4322,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4306,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4293,
											"end": 4306,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4353,
											"end": 4366,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3879,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3888,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 3904,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3950,
											"end": 3951,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3939,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3939,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3988,
											"end": 3997,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 19,
											"value": "65"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "72"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 19,
											"value": "72"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 19,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "75"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 19,
											"value": "75"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "77"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 19,
											"value": "78"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 19,
											"value": "77"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "59"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"becomeOwner()": "f9dca989",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PendingOwnable__AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NoPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__PendingOwnerAlreadySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"The address of the current owner\"}},\"pendingOwner()\":{\"returns\":{\"_0\":\"The address of the current pending owner\"}}},\"title\":\"Pending Ownable\",\"version\":1},\"userdoc\":{\"errors\":{\"PendingOwnable__NotOwner()\":[{\"notice\":\"PendingOwnable errors \"}]},\"kind\":\"user\",\"methods\":{\"becomeOwner()\":{\"notice\":\"Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner\"},\"constructor\":{\"notice\":\"Initializes the contract setting the deployer as the initial owner\"},\"owner()\":{\"notice\":\"Returns the address of the current owner\"},\"pendingOwner()\":{\"notice\":\"Returns the address of the current pending owner\"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokePendingOwner()\":{\"notice\":\"Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner\"},\"setPendingOwner(address)\":{\"notice\":\"Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}\"}},\"notice\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The ownership of this contract is transferred using the push and pull pattern, the current owner set a `pendingOwner` using {setPendingOwner} and that address can then call {becomeOwner} to become the owner of that contract. The main logic and comments comes from OpenZeppelin's Ownable contract. By default, the owner account will be the one that deploys the contract. This can later be changed with {setPendingOwner} and {becomeOwner}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":\"PendingOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/PendingOwnable.sol\":{\"keccak256\":\"0x6799fef60252b959af4ecd5b7caebe67e227c90c35d4e23a2c44544579df4c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51ed31c79d3108fba21d2af4c39113d3f1dea711570c6945c9e53d04a776054\",\"dweb:/ipfs/QmVg1jaA3Jt9H28BZNytmxxdNo8soSBCD3NSvphzKdNDaD\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3726,
								"contract": "Midas/joe-v2-main/src/libraries/PendingOwnable.sol:PendingOwnable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3728,
								"contract": "Midas/joe-v2-main/src/libraries/PendingOwnable.sol:PendingOwnable",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"errors": {
							"PendingOwnable__NotOwner()": [
								{
									"notice": "PendingOwnable errors "
								}
							]
						},
						"kind": "user",
						"methods": {
							"becomeOwner()": {
								"notice": "Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner"
							},
							"constructor": {
								"notice": "Initializes the contract setting the deployer as the initial owner"
							},
							"owner()": {
								"notice": "Returns the address of the current owner"
							},
							"pendingOwner()": {
								"notice": "Returns the address of the current pending owner"
							},
							"renounceOwnership()": {
								"notice": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"revokePendingOwner()": {
								"notice": "Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner"
							},
							"setPendingOwner(address)": {
								"notice": "Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}"
							}
						},
						"notice": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The ownership of this contract is transferred using the push and pull pattern, the current owner set a `pendingOwner` using {setPendingOwner} and that address can then call {becomeOwner} to become the owner of that contract. The main logic and comments comes from OpenZeppelin's Ownable contract. By default, the owner account will be the one that deploys the contract. This can later be changed with {setPendingOwner} and {becomeOwner}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Safe Cast Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/SafeCast.sol\":219:9522  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/SafeCast.sol\":219:9522  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209bce09895175c96f83c6ad982a7e58a84f6a7dc49ef75818c26c9a2fa4a24eb064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bce09895175c96f83c6ad982a7e58a84f6a7dc49ef75818c26c9a2fa4a24eb064736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xCE MULMOD DUP10 MLOAD PUSH22 0xC96F83C6AD982A7E58A84F6A7DC49EF75818C26C9A2F LOG4 LOG2 0x4E 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "219:9303:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bce09895175c96f83c6ad982a7e58a84f6a7dc49ef75818c26c9a2fa4a24eb064736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xCE MULMOD DUP10 MLOAD PUSH22 0xC96F83C6AD982A7E58A84F6A7DC49EF75818C26C9A2F LOG4 LOG2 0x4E 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "219:9303:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safe104(uint256)": "infinite",
								"safe112(uint256)": "infinite",
								"safe120(uint256)": "infinite",
								"safe128(uint256)": "infinite",
								"safe136(uint256)": "infinite",
								"safe144(uint256)": "infinite",
								"safe152(uint256)": "infinite",
								"safe16(uint256)": "infinite",
								"safe160(uint256)": "infinite",
								"safe168(uint256)": "infinite",
								"safe176(uint256)": "infinite",
								"safe184(uint256)": "infinite",
								"safe192(uint256)": "infinite",
								"safe200(uint256)": "infinite",
								"safe208(uint256)": "infinite",
								"safe216(uint256)": "infinite",
								"safe224(uint256)": "infinite",
								"safe232(uint256)": "infinite",
								"safe24(uint256)": "infinite",
								"safe240(uint256)": "infinite",
								"safe248(uint256)": "infinite",
								"safe32(uint256)": "infinite",
								"safe40(uint256)": "infinite",
								"safe48(uint256)": "infinite",
								"safe56(uint256)": "infinite",
								"safe64(uint256)": "infinite",
								"safe72(uint256)": "infinite",
								"safe8(uint256)": "infinite",
								"safe80(uint256)": "infinite",
								"safe88(uint256)": "infinite",
								"safe96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bce09895175c96f83c6ad982a7e58a84f6a7dc49ef75818c26c9a2fa4a24eb064736f6c634300080a0033",
									".code": [
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Safe Cast Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for converting uint values safely\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"Midas/joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"Midas/joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xa2b6a52dec3f4cce79575283d97ce03192339fc80810d740c205a31c06bea178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7980944c8854174915651de5fe043af84cebfc402f4784ca336156d01e53976d\",\"dweb:/ipfs/QmTv1Ct9LdjZEzaW8YE9fRRxHgyisz7iPyVMZZyQjhkRNu\"]},\"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"Midas/joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0x4e8e8f5c9f9be4499e1658f87c69c47ef02e86d66b38d863d891cded6ef50953\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42659b7ef325d061de0350216646b0237a0a09f9b3bc5614294c31c9d0959e8a\",\"dweb:/ipfs/QmSAhHjQHG9atCRg95upjqz8YiEUTef2jL4WxFEEHqQkKV\"]},\"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"Midas/joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"Midas/joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"Midas/joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for converting uint values safely",
						"version": 1
					}
				}
			},
			"Midas/joe-v2-main/src/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Safe Math Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Midas/joe-v2-main/src/libraries/SafeMath.sol\":203:537  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Midas/joe-v2-main/src/libraries/SafeMath.sol\":203:537  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220818bdfd7493d973154fcbe6cc8f9fc958bb4e0b104faeee35a6a21b87640a97364736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220818bdfd7493d973154fcbe6cc8f9fc958bb4e0b104faeee35a6a21b87640a97364736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP12 0xDF 0xD7 0x49 RETURNDATASIZE SWAP8 BALANCE SLOAD 0xFC 0xBE PUSH13 0xC8F9FC958BB4E0B104FAEEE35A PUSH11 0x21B87640A97364736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "203:334:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220818bdfd7493d973154fcbe6cc8f9fc958bb4e0b104faeee35a6a21b87640a97364736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 DUP12 0xDF 0xD7 0x49 RETURNDATASIZE SWAP8 BALANCE SLOAD 0xFC 0xBE PUSH13 0xC8F9FC958BB4E0B104FAEEE35A PUSH11 0x21B87640A97364736F6C63 NUMBER STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "203:334:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"absSub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220818bdfd7493d973154fcbe6cc8f9fc958bb4e0b104faeee35a6a21b87640a97364736f6c634300080a0033",
									".code": [
										{
											"begin": 203,
											"end": 537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 537,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 537,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Safe Math Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for calculating absolute value safely\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Midas/joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for calculating absolute value safely",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "125:629:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "Clones",
							"nameLocation": "763:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1048:684:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1110:549:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1328:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1338:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "1344:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1334:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1334:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1324:36:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1321:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1321:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:104:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1533:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1546:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "1552:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1542:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1542:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1539:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:77:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:77:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:33:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:21:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1616:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1344:14:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1552:14:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "1616:8:0",
														"valueSize": 1
													}
												],
												"id": 10,
												"nodeType": "InlineAssembly",
												"src": "1101:558:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 12,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1676:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 15,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 13,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1688:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1688:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1676:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1700:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1668:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "1668:57:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "776:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "996:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "988:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:24:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1038:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1030:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:18:0"
									},
									"scope": 79,
									"src": "973:759:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2209:692:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2271:556:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2489:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2499:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "2505:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2495:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2495:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "2485:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2485:36:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2523:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2482:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2482:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:104:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2707:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "2713:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2703:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2703:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2730:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:77:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2687:77:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2777:40:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2812:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2789:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:28:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2777:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2505:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2713:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2777:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2812:4:0",
														"valueSize": 1
													}
												],
												"id": 32,
												"nodeType": "InlineAssembly",
												"src": "2262:565:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 34,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "2844:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2856:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 35,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2856:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2856:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2844:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2868:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2836:58:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1738:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2116:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2143:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2135:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2159:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:38:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2199:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2191:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:18:0"
									},
									"scope": 79,
									"src": "2107:794:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "3176:515:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3238:447:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "3256:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3298:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3294:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3294:14:0"
																	},
																	{
																		"name": "deployer",
																		"nodeType": "YulIdentifier",
																		"src": "3310:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:32:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3343:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3348:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3339:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:58:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3332:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:14:0"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "3426:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:55:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3533:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:14:0"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3545:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3574:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "3600:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3605:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3596:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3596:14:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3612:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3586:9:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:55:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3563:55:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3631:44:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3658:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3663:4:0",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:0",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3644:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:31:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3631:9:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "3310:8:0",
														"valueSize": 1
													},
													{
														"declaration": 47,
														"isOffset": false,
														"isSlot": false,
														"src": "3426:14:0",
														"valueSize": 1
													},
													{
														"declaration": 54,
														"isOffset": false,
														"isSlot": false,
														"src": "3631:9:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "3545:4:0",
														"valueSize": 1
													}
												],
												"id": 56,
												"nodeType": "InlineAssembly",
												"src": "3229:456:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2907:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3020:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3065:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3057:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3097:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3089:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:86:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3165:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:19:0"
									},
									"scope": 79,
									"src": "3011:680:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3946:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3991:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 70,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "4007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 73,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4021:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$79",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$79",
																		"typeString": "library Clones"
																	}
																],
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 71,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4013:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4013:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58,
															78
														],
														"referencedDeclaration": 58,
														"src": "3963:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3963:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 67,
												"id": 76,
												"nodeType": "Return",
												"src": "3956:71:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3697:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3810:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3846:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3838:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3870:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3862:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:38:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3931:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3923:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:19:0"
									},
									"scope": 79,
									"src": "3801:233:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 80,
							"src": "755:3281:0",
							"usedErrors": []
						}
					],
					"src": "100:3937:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							157
						]
					},
					"id": 158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 81,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 91,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 100,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 157,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 157,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 157,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 157,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 157,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 157,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 158,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							770
						]
					},
					"id": 771,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 159,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "205:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 160,
								"nodeType": "StructuredDocumentation",
								"src": "230:1090:2",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 770,
							"linearizedBaseContracts": [
								770
							],
							"name": "EnumerableSet",
							"nameLocation": "1329:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 168,
									"members": [
										{
											"constant": false,
											"id": 163,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1853:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "1843:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 162,
												"nodeType": "ArrayTypeName",
												"src": "1843:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 167,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "2021:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "1993:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 166,
												"keyType": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1993:27:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1796:3:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "1789:247:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2275:335:2",
										"statements": [
											{
												"condition": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2289:22:2",
													"subExpression": {
														"arguments": [
															{
																"id": 180,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "2300:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "2305:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 179,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2290:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2290:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "2567:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2588:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 178,
															"id": 206,
															"nodeType": "Return",
															"src": "2581:12:2"
														}
													]
												},
												"id": 208,
												"nodeType": "IfStatement",
												"src": "2285:319:2",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "2313:248:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 189,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "2344:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 184,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "2327:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 187,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "2327:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2327:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2327:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 191,
															"nodeType": "ExpressionStatement",
															"src": "2327:23:2"
														},
														{
															"expression": {
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 192,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "2485:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "2485:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 196,
																	"indexExpression": {
																		"id": 194,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "2498:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2485:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 197,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "2507:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 198,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "2507:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2507:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2485:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "2485:40:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 178,
															"id": 203,
															"nodeType": "Return",
															"src": "2539:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2042:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2215:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2232:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2220:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "2220:3:2"
													},
													"referencedDeclaration": 168,
													"src": "2220:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2245:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2237:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:32:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2269:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2269:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:6:2"
									},
									"scope": 770,
									"src": "2206:404:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2850:1316:2",
										"statements": [
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2968:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 293,
														"src": "2960:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2960:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 223,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2981:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "2981:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 226,
													"indexExpression": {
														"id": 225,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2994:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2981:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2960:40:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 228,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3015:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3029:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3015:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "4123:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4144:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 220,
															"id": 290,
															"nodeType": "Return",
															"src": "4137:12:2"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "3011:1149:2",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "3032:1085:2",
													"statements": [
														{
															"assignments": [
																232
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 232,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3392:13:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 288,
																	"src": "3384:21:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 231,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3384:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 236,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 233,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3408:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3421:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3408:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3384:38:2"
														},
														{
															"assignments": [
																238
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 238,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3444:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 288,
																	"src": "3436:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 237,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3436:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 244,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 239,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3456:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "3456:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3456:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3477:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3456:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3436:42:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 245,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "3497:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 246,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3510:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3497:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "3493:398:2",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "3525:366:2",
																"statements": [
																	{
																		"assignments": [
																			249
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 249,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 271,
																				"src": "3543:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 248,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 254,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 250,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 214,
																					"src": "3563:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 251,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 163,
																				"src": "3563:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 253,
																			"indexExpression": {
																				"id": 252,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 238,
																				"src": "3575:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:2"
																	},
																	{
																		"expression": {
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 255,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 214,
																						"src": "3685:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 258,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 163,
																					"src": "3685:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 259,
																				"indexExpression": {
																					"id": 257,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 232,
																					"src": "3697:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3685:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 260,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "3714:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3685:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 262,
																		"nodeType": "ExpressionStatement",
																		"src": "3685:38:2"
																	},
																	{
																		"expression": {
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 263,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 214,
																						"src": "3797:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 167,
																					"src": "3797:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 267,
																				"indexExpression": {
																					"id": 265,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "3810:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3797:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 268,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "3823:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3797:36:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "3797:36:2"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 273,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3969:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "3969:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3969:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3969:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "3969:17:2"
														},
														{
															"expression": {
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4054:26:2",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 280,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "4061:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "4061:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 283,
																	"indexExpression": {
																		"id": 282,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "4074:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4061:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "4054:26:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 220,
															"id": 287,
															"nodeType": "Return",
															"src": "4095:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2616:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2787:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2807:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2795:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 213,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 212,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "2795:3:2"
													},
													"referencedDeclaration": 168,
													"src": "2795:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2820:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2812:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:6:2"
									},
									"scope": 770,
									"src": "2778:1388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4326:48:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 305,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "4343:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "4343:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 308,
														"indexExpression": {
															"id": 307,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4356:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4343:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4366:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4343:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 304,
												"id": 311,
												"nodeType": "Return",
												"src": "4336:31:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4172:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4278:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4266:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4266:3:2"
													},
													"referencedDeclaration": 168,
													"src": "4266:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4291:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4283:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:32:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4320:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4320:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4319:6:2"
									},
									"scope": 770,
									"src": "4247:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4520:42:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 322,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4537:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "4537:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4537:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 321,
												"id": 325,
												"nodeType": "Return",
												"src": "4530:25:2"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4380:70:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4464:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4484:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4472:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 315,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4472:3:2"
													},
													"referencedDeclaration": 168,
													"src": "4472:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4471:17:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4511:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4510:9:2"
									},
									"scope": 770,
									"src": "4455:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "4980:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 338,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4997:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "4997:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 341,
													"indexExpression": {
														"id": 340,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "5009:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4997:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 337,
												"id": 342,
												"nodeType": "Return",
												"src": "4990:25:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4568:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4913:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4929:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4917:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4917:3:2"
													},
													"referencedDeclaration": 168,
													"src": "4917:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4942:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4934:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:32:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4970:9:2"
									},
									"scope": 770,
									"src": "4904:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5636:35:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 354,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "5653:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 163,
													"src": "5653:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 353,
												"id": 356,
												"nodeType": "Return",
												"src": "5646:18:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5028:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5571:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5591:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5579:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 346,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "5579:3:2"
													},
													"referencedDeclaration": 168,
													"src": "5579:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5578:17:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5618:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 350,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5618:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 351,
													"nodeType": "ArrayTypeName",
													"src": "5618:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:18:2"
									},
									"scope": 770,
									"src": "5562:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 362,
									"members": [
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5728:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 362,
											"src": "5724:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 360,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 359,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 168,
													"src": "5724:3:2"
												},
												"referencedDeclaration": 168,
												"src": "5724:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5703:10:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "5696:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "5987:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 374,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6009:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6009:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 376,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6021:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 373,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "6004:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6004:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 372,
												"id": 378,
												"nodeType": "Return",
												"src": "5997:30:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "5747:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5920:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5943:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5924:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "5924:10:2"
													},
													"referencedDeclaration": 362,
													"src": "5924:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5956:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5948:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5923:39:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5981:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5981:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5980:6:2"
									},
									"scope": 770,
									"src": "5911:123:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "6281:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 392,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "6306:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6306:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 394,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6318:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 391,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6298:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6298:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "6291:33:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "6040:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6211:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6237:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6218:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 382,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "6218:10:2"
													},
													"referencedDeclaration": 362,
													"src": "6218:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6250:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6242:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6217:39:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6275:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6275:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:6:2"
									},
									"scope": 770,
									"src": "6202:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "6498:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 410,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "6525:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6525:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "6537:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 409,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "6515:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 408,
												"id": 414,
												"nodeType": "Return",
												"src": "6508:35:2"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "6337:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6421:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6449:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6430:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 401,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 400,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "6430:10:2"
													},
													"referencedDeclaration": 362,
													"src": "6430:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6462:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6454:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6429:39:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6491:6:2"
									},
									"scope": 770,
									"src": "6412:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "6703:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 426,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6728:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6728:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 425,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "6720:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6720:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 429,
												"nodeType": "Return",
												"src": "6713:26:2"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "6556:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6640:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6666:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6647:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 418,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "6647:10:2"
													},
													"referencedDeclaration": 362,
													"src": "6647:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:24:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6694:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:9:2"
									},
									"scope": 770,
									"src": "6631:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "7171:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 443,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "7192:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "7192:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 445,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7204:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 442,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "7188:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7188:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 441,
												"id": 447,
												"nodeType": "Return",
												"src": "7181:29:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "6752:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7097:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7119:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7100:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 433,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "7100:10:2"
													},
													"referencedDeclaration": 362,
													"src": "7100:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7132:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7124:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7124:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:39:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7162:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 439,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7161:9:2"
									},
									"scope": 770,
									"src": "7088:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "7838:219:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7865:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "7848:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 461,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7848:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 462,
															"nodeType": "ArrayTypeName",
															"src": "7848:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 465,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7881:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "7881:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 464,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "7873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7873:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7848:44:2"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7919:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "7902:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 471,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7902:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 472,
															"nodeType": "ArrayTypeName",
															"src": "7902:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"nodeType": "VariableDeclarationStatement",
												"src": "7902:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7988:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8002:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "8012:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 473,
														"isOffset": false,
														"isSlot": false,
														"src": "8002:6:2",
														"valueSize": 1
													},
													{
														"declaration": 463,
														"isOffset": false,
														"isSlot": false,
														"src": "8012:5:2",
														"valueSize": 1
													}
												],
												"id": 475,
												"nodeType": "InlineAssembly",
												"src": "7979:48:2"
											},
											{
												"expression": {
													"id": 476,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "8044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 458,
												"id": 477,
												"nodeType": "Return",
												"src": "8037:13:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "7223:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7766:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7792:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7773:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 452,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 451,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "7773:10:2"
													},
													"referencedDeclaration": 362,
													"src": "7773:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7772:24:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7820:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7820:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "7820:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7819:18:2"
									},
									"scope": 770,
									"src": "7757:300:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 483,
									"members": [
										{
											"constant": false,
											"id": 482,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8114:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 483,
											"src": "8110:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 481,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 480,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 168,
													"src": "8110:3:2"
												},
												"referencedDeclaration": 168,
												"src": "8110:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8089:10:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "8082:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "8373:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 495,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "8395:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "8395:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 503,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "8431:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 501,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8423:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8423:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8415:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 499,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8415:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8415:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8407:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 497,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8407:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8407:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 494,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "8390:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8390:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 493,
												"id": 508,
												"nodeType": "Return",
												"src": "8383:57:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "8133:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8306:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8329:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8310:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "8310:10:2"
													},
													"referencedDeclaration": 483,
													"src": "8310:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8342:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8334:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8334:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:39:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8367:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8367:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8366:6:2"
									},
									"scope": 770,
									"src": "8297:150:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "8694:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 522,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "8719:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "8719:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 530,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 516,
																					"src": "8755:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8747:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 528,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8747:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8747:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8739:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8739:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8739:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8731:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 524,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8731:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8731:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 521,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "8711:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 520,
												"id": 535,
												"nodeType": "Return",
												"src": "8704:60:2"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "8453:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8650:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "8631:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "8631:10:2"
													},
													"referencedDeclaration": 483,
													"src": "8631:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "8655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8630:39:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "8688:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8688:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8687:6:2"
									},
									"scope": 770,
									"src": "8615:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "8938:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 549,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "8965:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "8965:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 557,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "9001:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8993:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 555,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8993:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8993:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8985:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8985:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8985:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8977:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 551,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8977:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8977:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 548,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "8955:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8955:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 562,
												"nodeType": "Return",
												"src": "8948:62:2"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "8777:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8861:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8889:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8870:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 539,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "8870:10:2"
													},
													"referencedDeclaration": 483,
													"src": "8870:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8902:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8894:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8869:39:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8932:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8932:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8931:6:2"
									},
									"scope": 770,
									"src": "8852:165:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "9170:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 574,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "9195:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "9195:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 573,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "9187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9187:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 572,
												"id": 577,
												"nodeType": "Return",
												"src": "9180:26:2"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "9023:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9107:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9133:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9114:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 566,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "9114:10:2"
													},
													"referencedDeclaration": 483,
													"src": "9114:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9113:24:2"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9161:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9160:9:2"
									},
									"scope": 770,
									"src": "9098:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "9638:73:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 597,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 583,
																						"src": "9683:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 598,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 482,
																					"src": "9683:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$168_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 599,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "9695:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$168_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 596,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "9679:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9679:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9671:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 594,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9671:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9671:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9663:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 592,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9663:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9663:40:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9655:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 590,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9655:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9655:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 589,
												"id": 604,
												"nodeType": "Return",
												"src": "9648:56:2"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "9219:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9567:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 581,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "9567:10:2"
													},
													"referencedDeclaration": 483,
													"src": "9567:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9591:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:2"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9629:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:2"
									},
									"scope": 770,
									"src": "9555:156:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "10332:219:2",
										"statements": [
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10359:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10342:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 618,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10342:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 619,
															"nodeType": "ArrayTypeName",
															"src": "10342:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 622,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "10375:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "10375:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 621,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "10367:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10367:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10342:44:2"
											},
											{
												"assignments": [
													630
												],
												"declarations": [
													{
														"constant": false,
														"id": 630,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10413:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10396:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 628,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10396:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 629,
															"nodeType": "ArrayTypeName",
															"src": "10396:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"nodeType": "VariableDeclarationStatement",
												"src": "10396:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10482:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10496:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10506:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10496:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 630,
														"isOffset": false,
														"isSlot": false,
														"src": "10496:6:2",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "10506:5:2",
														"valueSize": 1
													}
												],
												"id": 632,
												"nodeType": "InlineAssembly",
												"src": "10473:48:2"
											},
											{
												"expression": {
													"id": 633,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 630,
													"src": "10538:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 634,
												"nodeType": "Return",
												"src": "10531:13:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "9717:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10260:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10286:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10267:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "10267:10:2"
													},
													"referencedDeclaration": 483,
													"src": "10267:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10266:24:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10314:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 612,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10314:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 613,
													"nodeType": "ArrayTypeName",
													"src": "10314:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10313:18:2"
									},
									"scope": 770,
									"src": "10251:300:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 640,
									"members": [
										{
											"constant": false,
											"id": 639,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10602:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 640,
											"src": "10598:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 638,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 637,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 168,
													"src": "10598:3:2"
												},
												"referencedDeclaration": 168,
												"src": "10598:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10580:7:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "10573:42:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "10858:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 652,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "10880:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "10880:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "10900:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 654,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10892:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10892:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 651,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "10875:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10875:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 650,
												"id": 659,
												"nodeType": "Return",
												"src": "10868:39:2"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "10621:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10794:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10814:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "10798:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 642,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "10798:7:2"
													},
													"referencedDeclaration": 640,
													"src": "10798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10827:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "10819:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10797:36:2"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "10852:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10851:6:2"
									},
									"scope": 770,
									"src": "10785:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "11158:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 673,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "11183:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "11183:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 677,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "11203:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11195:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 675,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11195:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11195:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 672,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "11175:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11175:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 671,
												"id": 680,
												"nodeType": "Return",
												"src": "11168:42:2"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "10920:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11091:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11114:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11098:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11098:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11098:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11127:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11119:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11119:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11097:36:2"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11152:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11152:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11151:6:2"
									},
									"scope": 770,
									"src": "11082:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "11381:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 694,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "11408:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "11408:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "11428:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11420:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 696,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11420:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11420:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 693,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "11398:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 692,
												"id": 701,
												"nodeType": "Return",
												"src": "11391:44:2"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "11223:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11307:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11332:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11316:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 684,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11316:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11345:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11337:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11337:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11315:36:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:6:2"
									},
									"scope": 770,
									"src": "11298:144:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "11592:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 713,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "11617:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "11617:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 712,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "11609:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11609:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 716,
												"nodeType": "Return",
												"src": "11602:26:2"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "11448:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11532:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11555:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "11539:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11539:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11538:21:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "11583:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11583:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11582:9:2"
									},
									"scope": 770,
									"src": "11523:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "12057:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 732,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "12086:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 639,
																	"src": "12086:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$168_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 734,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "12098:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$168_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 731,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "12082:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12082:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12074:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12074:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 737,
												"nodeType": "Return",
												"src": "12067:38:2"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "11641:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11986:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12005:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "11989:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11989:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12018:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "12010:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12010:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11988:36:2"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "12048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12047:9:2"
									},
									"scope": 770,
									"src": "11977:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "12730:219:2",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12757:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "12740:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 751,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12740:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 752,
															"nodeType": "ArrayTypeName",
															"src": "12740:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 755,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "12773:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "12773:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 754,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "12765:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12765:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12740:44:2"
											},
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12811:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "12794:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 761,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12794:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 762,
															"nodeType": "ArrayTypeName",
															"src": "12794:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"nodeType": "VariableDeclarationStatement",
												"src": "12794:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12880:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12894:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12904:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12894:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 763,
														"isOffset": false,
														"isSlot": false,
														"src": "12894:6:2",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "12904:5:2",
														"valueSize": 1
													}
												],
												"id": 765,
												"nodeType": "InlineAssembly",
												"src": "12871:48:2"
											},
											{
												"expression": {
													"id": 766,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 763,
													"src": "12936:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 748,
												"id": 767,
												"nodeType": "Return",
												"src": "12929:13:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "12118:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12661:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12684:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "12668:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 741,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "12668:7:2"
													},
													"referencedDeclaration": 640,
													"src": "12668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12667:21:2"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "12712:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12712:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "12712:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12711:18:2"
									},
									"scope": 770,
									"src": "12652:297:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 771,
							"src": "1321:11630:2",
							"usedErrors": []
						}
					],
					"src": "205:12747:2"
				},
				"id": 2
			},
			"Midas/joe-v2-main/src/LBErrors.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/LBErrors.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2971
						],
						"FeeHelper": [
							3128
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBFlashLoanCallback": [
							2137
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 1314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 772,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBPair.sol",
							"file": "./interfaces/ILBPair.sol",
							"id": 773,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 2406,
							"src": "58:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 774,
								"nodeType": "StructuredDocumentation",
								"src": "94:22:3",
								"text": "LBRouter errors "
							},
							"id": 776,
							"name": "LBRouter__SenderIsNotWAVAX",
							"nameLocation": "124:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 775,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "150:2:3"
							},
							"src": "118:35:3"
						},
						{
							"id": 784,
							"name": "LBRouter__PairNotCreated",
							"nameLocation": "160:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 783,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 778,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "193:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 784,
										"src": "185:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 777,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "185:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 780,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "209:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 784,
										"src": "201:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 779,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "201:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 782,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "225:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 784,
										"src": "217:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 781,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "217:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "184:49:3"
							},
							"src": "154:80:3"
						},
						{
							"id": 790,
							"name": "LBRouter__WrongAmounts",
							"nameLocation": "241:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 789,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 786,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "272:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 790,
										"src": "264:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 785,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "264:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 788,
										"mutability": "mutable",
										"name": "reserve",
										"nameLocation": "288:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 790,
										"src": "280:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 787,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "280:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "263:33:3"
							},
							"src": "235:62:3"
						},
						{
							"id": 794,
							"name": "LBRouter__SwapOverflows",
							"nameLocation": "304:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 793,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 792,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "336:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 794,
										"src": "328:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 791,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "328:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "327:12:3"
							},
							"src": "298:42:3"
						},
						{
							"id": 796,
							"name": "LBRouter__BrokenSwapSafetyCheck",
							"nameLocation": "347:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 795,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "378:2:3"
							},
							"src": "341:40:3"
						},
						{
							"id": 798,
							"name": "LBRouter__NotFactoryOwner",
							"nameLocation": "388:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 797,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "413:2:3"
							},
							"src": "382:34:3"
						},
						{
							"id": 802,
							"name": "LBRouter__TooMuchTokensIn",
							"nameLocation": "423:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 801,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 800,
										"mutability": "mutable",
										"name": "excess",
										"nameLocation": "457:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 802,
										"src": "449:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 799,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "449:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "448:16:3"
							},
							"src": "417:48:3"
						},
						{
							"id": 806,
							"name": "LBRouter__BinReserveOverflows",
							"nameLocation": "472:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 805,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 804,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "510:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 806,
										"src": "502:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 803,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "502:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "501:12:3"
							},
							"src": "466:48:3"
						},
						{
							"id": 810,
							"name": "LBRouter__IdOverflows",
							"nameLocation": "521:21:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 809,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 808,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "550:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 810,
										"src": "543:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 807,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "543:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "542:11:3"
							},
							"src": "515:39:3"
						},
						{
							"id": 812,
							"name": "LBRouter__LengthsMismatch",
							"nameLocation": "561:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 811,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "586:2:3"
							},
							"src": "555:34:3"
						},
						{
							"id": 814,
							"name": "LBRouter__WrongTokenOrder",
							"nameLocation": "596:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 813,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "621:2:3"
							},
							"src": "590:34:3"
						},
						{
							"id": 822,
							"name": "LBRouter__IdSlippageCaught",
							"nameLocation": "631:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 821,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 816,
										"mutability": "mutable",
										"name": "activeIdDesired",
										"nameLocation": "666:15:3",
										"nodeType": "VariableDeclaration",
										"scope": 822,
										"src": "658:23:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 815,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "658:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 818,
										"mutability": "mutable",
										"name": "idSlippage",
										"nameLocation": "691:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 822,
										"src": "683:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 817,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "683:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 820,
										"mutability": "mutable",
										"name": "activeId",
										"nameLocation": "711:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 822,
										"src": "703:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 819,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "703:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "657:63:3"
							},
							"src": "625:96:3"
						},
						{
							"id": 832,
							"name": "LBRouter__AmountSlippageCaught",
							"nameLocation": "728:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 831,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 824,
										"mutability": "mutable",
										"name": "amountXMin",
										"nameLocation": "767:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "759:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 823,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "759:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 826,
										"mutability": "mutable",
										"name": "amountX",
										"nameLocation": "787:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "779:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 825,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "779:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 828,
										"mutability": "mutable",
										"name": "amountYMin",
										"nameLocation": "804:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "796:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 827,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "796:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 830,
										"mutability": "mutable",
										"name": "amountY",
										"nameLocation": "824:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "816:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 829,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "758:74:3"
							},
							"src": "722:111:3"
						},
						{
							"id": 838,
							"name": "LBRouter__IdDesiredOverflows",
							"nameLocation": "840:28:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 837,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 834,
										"mutability": "mutable",
										"name": "idDesired",
										"nameLocation": "877:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 838,
										"src": "869:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 833,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "869:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 836,
										"mutability": "mutable",
										"name": "idSlippage",
										"nameLocation": "896:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 838,
										"src": "888:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 835,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "868:39:3"
							},
							"src": "834:74:3"
						},
						{
							"id": 844,
							"name": "LBRouter__FailedToSendAVAX",
							"nameLocation": "915:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 843,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 840,
										"mutability": "mutable",
										"name": "recipient",
										"nameLocation": "950:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 844,
										"src": "942:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 839,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 842,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "969:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 844,
										"src": "961:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 841,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "941:35:3"
							},
							"src": "909:68:3"
						},
						{
							"id": 850,
							"name": "LBRouter__DeadlineExceeded",
							"nameLocation": "984:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 849,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 846,
										"mutability": "mutable",
										"name": "deadline",
										"nameLocation": "1019:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 850,
										"src": "1011:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 845,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 848,
										"mutability": "mutable",
										"name": "currentTimestamp",
										"nameLocation": "1037:16:3",
										"nodeType": "VariableDeclaration",
										"scope": 850,
										"src": "1029:24:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 847,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1029:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1010:44:3"
							},
							"src": "978:77:3"
						},
						{
							"id": 854,
							"name": "LBRouter__AmountSlippageBPTooBig",
							"nameLocation": "1062:32:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 853,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 852,
										"mutability": "mutable",
										"name": "amountSlippage",
										"nameLocation": "1103:14:3",
										"nodeType": "VariableDeclaration",
										"scope": 854,
										"src": "1095:22:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 851,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1095:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1094:24:3"
							},
							"src": "1056:63:3"
						},
						{
							"id": 860,
							"name": "LBRouter__InsufficientAmountOut",
							"nameLocation": "1126:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 859,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 856,
										"mutability": "mutable",
										"name": "amountOutMin",
										"nameLocation": "1166:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 860,
										"src": "1158:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 855,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1158:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 858,
										"mutability": "mutable",
										"name": "amountOut",
										"nameLocation": "1188:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 860,
										"src": "1180:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 857,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1180:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1157:41:3"
							},
							"src": "1120:79:3"
						},
						{
							"id": 866,
							"name": "LBRouter__MaxAmountInExceeded",
							"nameLocation": "1206:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 865,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 862,
										"mutability": "mutable",
										"name": "amountInMax",
										"nameLocation": "1244:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 866,
										"src": "1236:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 861,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1236:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 864,
										"mutability": "mutable",
										"name": "amountIn",
										"nameLocation": "1265:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 866,
										"src": "1257:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 863,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1257:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1235:39:3"
							},
							"src": "1200:75:3"
						},
						{
							"id": 870,
							"name": "LBRouter__InvalidTokenPath",
							"nameLocation": "1282:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 869,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 868,
										"mutability": "mutable",
										"name": "wrongToken",
										"nameLocation": "1317:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 870,
										"src": "1309:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 867,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1309:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1308:20:3"
							},
							"src": "1276:53:3"
						},
						{
							"id": 874,
							"name": "LBRouter__InvalidVersion",
							"nameLocation": "1336:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 873,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 872,
										"mutability": "mutable",
										"name": "version",
										"nameLocation": "1369:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 874,
										"src": "1361:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 871,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1361:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1360:17:3"
							},
							"src": "1330:48:3"
						},
						{
							"id": 886,
							"name": "LBRouter__WrongAvaxLiquidityParameters",
							"nameLocation": "1385:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 885,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 876,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "1437:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1429:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 875,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1429:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 878,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "1457:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1449:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 877,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1449:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 880,
										"mutability": "mutable",
										"name": "amountX",
										"nameLocation": "1477:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1469:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1469:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 882,
										"mutability": "mutable",
										"name": "amountY",
										"nameLocation": "1498:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1490:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 881,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1490:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 884,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "1519:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1511:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 883,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1511:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1423:106:3"
							},
							"src": "1379:151:3"
						},
						{
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "1532:21:3",
								"text": "LBToken errors "
							},
							"id": 893,
							"name": "LBToken__SpenderNotApproved",
							"nameLocation": "1561:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 892,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 889,
										"mutability": "mutable",
										"name": "owner",
										"nameLocation": "1597:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 893,
										"src": "1589:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 888,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1589:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 891,
										"mutability": "mutable",
										"name": "spender",
										"nameLocation": "1612:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 893,
										"src": "1604:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 890,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1604:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1588:32:3"
							},
							"src": "1555:66:3"
						},
						{
							"id": 895,
							"name": "LBToken__TransferFromOrToAddress0",
							"nameLocation": "1628:33:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 894,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1661:2:3"
							},
							"src": "1622:42:3"
						},
						{
							"id": 897,
							"name": "LBToken__MintToAddress0",
							"nameLocation": "1671:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 896,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1694:2:3"
							},
							"src": "1665:32:3"
						},
						{
							"id": 899,
							"name": "LBToken__BurnFromAddress0",
							"nameLocation": "1704:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 898,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1729:2:3"
							},
							"src": "1698:34:3"
						},
						{
							"id": 907,
							"name": "LBToken__BurnExceedsBalance",
							"nameLocation": "1739:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 906,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 901,
										"mutability": "mutable",
										"name": "from",
										"nameLocation": "1775:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 907,
										"src": "1767:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 900,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1767:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 903,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "1789:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 907,
										"src": "1781:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 902,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1781:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 905,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "1801:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 907,
										"src": "1793:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 904,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1793:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1766:42:3"
							},
							"src": "1733:76:3"
						},
						{
							"id": 913,
							"name": "LBToken__LengthMismatch",
							"nameLocation": "1816:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 912,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 909,
										"mutability": "mutable",
										"name": "accountsLength",
										"nameLocation": "1848:14:3",
										"nodeType": "VariableDeclaration",
										"scope": 913,
										"src": "1840:22:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 908,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1840:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 911,
										"mutability": "mutable",
										"name": "idsLength",
										"nameLocation": "1872:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 913,
										"src": "1864:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 910,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1864:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1839:43:3"
							},
							"src": "1810:73:3"
						},
						{
							"id": 917,
							"name": "LBToken__SelfApproval",
							"nameLocation": "1890:21:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 916,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 915,
										"mutability": "mutable",
										"name": "owner",
										"nameLocation": "1920:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 917,
										"src": "1912:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 914,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1912:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1911:15:3"
							},
							"src": "1884:43:3"
						},
						{
							"id": 925,
							"name": "LBToken__TransferExceedsBalance",
							"nameLocation": "1934:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 924,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 919,
										"mutability": "mutable",
										"name": "from",
										"nameLocation": "1974:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 925,
										"src": "1966:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 918,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1966:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 921,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "1988:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 925,
										"src": "1980:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 920,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1980:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 923,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "2000:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 925,
										"src": "1992:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 922,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1992:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1965:42:3"
							},
							"src": "1928:80:3"
						},
						{
							"id": 927,
							"name": "LBToken__TransferToSelf",
							"nameLocation": "2015:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 926,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "2038:2:3"
							},
							"src": "2009:32:3"
						},
						{
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "2043:23:3",
								"text": "LBFactory errors "
							},
							"id": 933,
							"name": "LBFactory__IdenticalAddresses",
							"nameLocation": "2074:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 932,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 931,
										"mutability": "mutable",
										"name": "token",
										"nameLocation": "2111:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 933,
										"src": "2104:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 930,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 929,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2104:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2104:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2103:14:3"
							},
							"src": "2068:50:3"
						},
						{
							"id": 938,
							"name": "LBFactory__QuoteAssetNotWhitelisted",
							"nameLocation": "2125:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 937,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 936,
										"mutability": "mutable",
										"name": "quoteAsset",
										"nameLocation": "2168:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 938,
										"src": "2161:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 935,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 934,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2161:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2161:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2160:19:3"
							},
							"src": "2119:61:3"
						},
						{
							"id": 943,
							"name": "LBFactory__QuoteAssetAlreadyWhitelisted",
							"nameLocation": "2187:39:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 942,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 941,
										"mutability": "mutable",
										"name": "quoteAsset",
										"nameLocation": "2234:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 943,
										"src": "2227:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 940,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 939,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2227:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2227:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2226:19:3"
							},
							"src": "2181:65:3"
						},
						{
							"id": 945,
							"name": "LBFactory__AddressZero",
							"nameLocation": "2253:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 944,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "2275:2:3"
							},
							"src": "2247:31:3"
						},
						{
							"id": 955,
							"name": "LBFactory__LBPairAlreadyExists",
							"nameLocation": "2285:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 954,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 948,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "2323:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 955,
										"src": "2316:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 947,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 946,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2316:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2316:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 951,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "2338:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 955,
										"src": "2331:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 950,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 949,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2331:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2331:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 953,
										"mutability": "mutable",
										"name": "_binStep",
										"nameLocation": "2354:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 955,
										"src": "2346:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 952,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2346:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2315:48:3"
							},
							"src": "2279:85:3"
						},
						{
							"id": 965,
							"name": "LBFactory__LBPairNotCreated",
							"nameLocation": "2371:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 964,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 958,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "2406:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 965,
										"src": "2399:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 957,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 956,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2399:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2399:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 961,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "2421:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 965,
										"src": "2414:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 960,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 959,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2414:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2414:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 963,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "2437:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 965,
										"src": "2429:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 962,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2429:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2398:47:3"
							},
							"src": "2365:81:3"
						},
						{
							"id": 971,
							"name": "LBFactory__DecreasingPeriods",
							"nameLocation": "2453:28:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 970,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 967,
										"mutability": "mutable",
										"name": "filterPeriod",
										"nameLocation": "2489:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 971,
										"src": "2482:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 966,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2482:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 969,
										"mutability": "mutable",
										"name": "decayPeriod",
										"nameLocation": "2510:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 971,
										"src": "2503:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 968,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2503:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2481:41:3"
							},
							"src": "2447:76:3"
						},
						{
							"id": 977,
							"name": "LBFactory__ReductionFactorOverflows",
							"nameLocation": "2530:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 976,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 973,
										"mutability": "mutable",
										"name": "reductionFactor",
										"nameLocation": "2573:15:3",
										"nodeType": "VariableDeclaration",
										"scope": 977,
										"src": "2566:22:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 972,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2566:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 975,
										"mutability": "mutable",
										"name": "max",
										"nameLocation": "2598:3:3",
										"nodeType": "VariableDeclaration",
										"scope": 977,
										"src": "2590:11:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 974,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2590:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2565:37:3"
							},
							"src": "2524:79:3"
						},
						{
							"id": 983,
							"name": "LBFactory__VariableFeeControlOverflows",
							"nameLocation": "2610:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 982,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 979,
										"mutability": "mutable",
										"name": "variableFeeControl",
										"nameLocation": "2656:18:3",
										"nodeType": "VariableDeclaration",
										"scope": 983,
										"src": "2649:25:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 978,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2649:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 981,
										"mutability": "mutable",
										"name": "max",
										"nameLocation": "2684:3:3",
										"nodeType": "VariableDeclaration",
										"scope": 983,
										"src": "2676:11:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 980,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2676:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2648:40:3"
							},
							"src": "2604:85:3"
						},
						{
							"id": 989,
							"name": "LBFactory__BaseFeesBelowMin",
							"nameLocation": "2696:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 988,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 985,
										"mutability": "mutable",
										"name": "baseFees",
										"nameLocation": "2732:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 989,
										"src": "2724:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 984,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2724:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 987,
										"mutability": "mutable",
										"name": "minBaseFees",
										"nameLocation": "2750:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 989,
										"src": "2742:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 986,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2742:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2723:39:3"
							},
							"src": "2690:73:3"
						},
						{
							"id": 995,
							"name": "LBFactory__FeesAboveMax",
							"nameLocation": "2770:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 994,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 991,
										"mutability": "mutable",
										"name": "fees",
										"nameLocation": "2802:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 995,
										"src": "2794:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 990,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2794:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 993,
										"mutability": "mutable",
										"name": "maxFees",
										"nameLocation": "2816:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 995,
										"src": "2808:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 992,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2808:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2793:31:3"
							},
							"src": "2764:61:3"
						},
						{
							"id": 1001,
							"name": "LBFactory__FlashLoanFeeAboveMax",
							"nameLocation": "2832:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1000,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 997,
										"mutability": "mutable",
										"name": "fees",
										"nameLocation": "2872:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 1001,
										"src": "2864:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 996,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2864:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 999,
										"mutability": "mutable",
										"name": "maxFees",
										"nameLocation": "2886:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1001,
										"src": "2878:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 998,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2878:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2863:31:3"
							},
							"src": "2826:69:3"
						},
						{
							"id": 1009,
							"name": "LBFactory__BinStepRequirementsBreached",
							"nameLocation": "2902:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1008,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1003,
										"mutability": "mutable",
										"name": "lowerBound",
										"nameLocation": "2949:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 1009,
										"src": "2941:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1002,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2941:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1005,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "2968:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1009,
										"src": "2961:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 1004,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2961:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1007,
										"mutability": "mutable",
										"name": "higherBound",
										"nameLocation": "2985:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 1009,
										"src": "2977:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1006,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2977:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2940:57:3"
							},
							"src": "2896:102:3"
						},
						{
							"id": 1015,
							"name": "LBFactory__ProtocolShareOverflows",
							"nameLocation": "3005:33:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1014,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1011,
										"mutability": "mutable",
										"name": "protocolShare",
										"nameLocation": "3046:13:3",
										"nodeType": "VariableDeclaration",
										"scope": 1015,
										"src": "3039:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 1010,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "3039:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1013,
										"mutability": "mutable",
										"name": "max",
										"nameLocation": "3069:3:3",
										"nodeType": "VariableDeclaration",
										"scope": 1015,
										"src": "3061:11:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1012,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3061:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3038:35:3"
							},
							"src": "2999:75:3"
						},
						{
							"id": 1019,
							"name": "LBFactory__FunctionIsLockedForUsers",
							"nameLocation": "3081:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1018,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1017,
										"mutability": "mutable",
										"name": "user",
										"nameLocation": "3125:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 1019,
										"src": "3117:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1016,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3117:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3116:14:3"
							},
							"src": "3075:56:3"
						},
						{
							"id": 1021,
							"name": "LBFactory__FactoryLockIsAlreadyInTheSameState",
							"nameLocation": "3138:45:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1020,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3183:2:3"
							},
							"src": "3132:54:3"
						},
						{
							"id": 1023,
							"name": "LBFactory__LBPairIgnoredIsAlreadyInTheSameState",
							"nameLocation": "3193:47:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1022,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3240:2:3"
							},
							"src": "3187:56:3"
						},
						{
							"id": 1027,
							"name": "LBFactory__BinStepHasNoPreset",
							"nameLocation": "3250:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1026,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1025,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "3288:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1027,
										"src": "3280:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1024,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3280:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3279:17:3"
							},
							"src": "3244:53:3"
						},
						{
							"id": 1031,
							"name": "LBFactory__SameFeeRecipient",
							"nameLocation": "3304:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1030,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1029,
										"mutability": "mutable",
										"name": "feeRecipient",
										"nameLocation": "3340:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 1031,
										"src": "3332:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1028,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3332:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3331:22:3"
							},
							"src": "3298:56:3"
						},
						{
							"id": 1035,
							"name": "LBFactory__SameFlashLoanFee",
							"nameLocation": "3361:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1034,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1033,
										"mutability": "mutable",
										"name": "flashLoanFee",
										"nameLocation": "3397:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 1035,
										"src": "3389:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1032,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3389:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3388:22:3"
							},
							"src": "3355:56:3"
						},
						{
							"id": 1039,
							"name": "LBFactory__LBPairSafetyCheckFailed",
							"nameLocation": "3418:34:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1038,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1037,
										"mutability": "mutable",
										"name": "LBPairImplementation",
										"nameLocation": "3461:20:3",
										"nodeType": "VariableDeclaration",
										"scope": 1039,
										"src": "3453:28:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1036,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3453:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3452:30:3"
							},
							"src": "3412:71:3"
						},
						{
							"id": 1043,
							"name": "LBFactory__SameImplementation",
							"nameLocation": "3490:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1042,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1041,
										"mutability": "mutable",
										"name": "LBPairImplementation",
										"nameLocation": "3528:20:3",
										"nodeType": "VariableDeclaration",
										"scope": 1043,
										"src": "3520:28:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1040,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3520:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3519:30:3"
							},
							"src": "3484:66:3"
						},
						{
							"id": 1045,
							"name": "LBFactory__ImplementationNotSet",
							"nameLocation": "3557:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1044,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3588:2:3"
							},
							"src": "3551:40:3"
						},
						{
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "3593:20:3",
								"text": "LBPair errors "
							},
							"id": 1048,
							"name": "LBPair__InsufficientAmounts",
							"nameLocation": "3621:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1047,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3648:2:3"
							},
							"src": "3615:36:3"
						},
						{
							"id": 1050,
							"name": "LBPair__AddressZero",
							"nameLocation": "3658:19:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1049,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3677:2:3"
							},
							"src": "3652:28:3"
						},
						{
							"id": 1052,
							"name": "LBPair__AddressZeroOrThis",
							"nameLocation": "3687:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1051,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3712:2:3"
							},
							"src": "3681:34:3"
						},
						{
							"id": 1056,
							"name": "LBPair__CompositionFactorFlawed",
							"nameLocation": "3722:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1055,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1054,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "3762:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1056,
										"src": "3754:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1053,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3754:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3753:12:3"
							},
							"src": "3716:50:3"
						},
						{
							"id": 1060,
							"name": "LBPair__InsufficientLiquidityMinted",
							"nameLocation": "3773:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1059,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1058,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "3817:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1060,
										"src": "3809:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1057,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3809:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3808:12:3"
							},
							"src": "3767:54:3"
						},
						{
							"id": 1064,
							"name": "LBPair__InsufficientLiquidityBurned",
							"nameLocation": "3828:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1063,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1062,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "3872:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1064,
										"src": "3864:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1061,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3864:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3863:12:3"
							},
							"src": "3822:54:3"
						},
						{
							"id": 1066,
							"name": "LBPair__WrongLengths",
							"nameLocation": "3883:20:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1065,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3903:2:3"
							},
							"src": "3877:29:3"
						},
						{
							"id": 1068,
							"name": "LBPair__OnlyStrictlyIncreasingId",
							"nameLocation": "3913:32:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1067,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3945:2:3"
							},
							"src": "3907:41:3"
						},
						{
							"id": 1070,
							"name": "LBPair__OnlyFactory",
							"nameLocation": "3955:19:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1069,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3974:2:3"
							},
							"src": "3949:28:3"
						},
						{
							"id": 1072,
							"name": "LBPair__DistributionsOverflow",
							"nameLocation": "3984:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1071,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4013:2:3"
							},
							"src": "3978:38:3"
						},
						{
							"id": 1078,
							"name": "LBPair__OnlyFeeRecipient",
							"nameLocation": "4023:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1077,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1074,
										"mutability": "mutable",
										"name": "feeRecipient",
										"nameLocation": "4056:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 1078,
										"src": "4048:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1073,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4048:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1076,
										"mutability": "mutable",
										"name": "sender",
										"nameLocation": "4078:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1078,
										"src": "4070:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1075,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4070:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4047:38:3"
							},
							"src": "4017:69:3"
						},
						{
							"id": 1080,
							"name": "LBPair__OracleNotEnoughSample",
							"nameLocation": "4093:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1079,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4122:2:3"
							},
							"src": "4087:38:3"
						},
						{
							"id": 1082,
							"name": "LBPair__AlreadyInitialized",
							"nameLocation": "4132:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1081,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4158:2:3"
							},
							"src": "4126:35:3"
						},
						{
							"id": 1088,
							"name": "LBPair__OracleNewSizeTooSmall",
							"nameLocation": "4168:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1087,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1084,
										"mutability": "mutable",
										"name": "newSize",
										"nameLocation": "4206:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1088,
										"src": "4198:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1083,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4198:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1086,
										"mutability": "mutable",
										"name": "oracleSize",
										"nameLocation": "4223:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 1088,
										"src": "4215:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1085,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4215:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4197:37:3"
							},
							"src": "4162:73:3"
						},
						{
							"id": 1090,
							"name": "LBPair__FlashLoanCallbackFailed",
							"nameLocation": "4242:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1089,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4273:2:3"
							},
							"src": "4236:40:3"
						},
						{
							"id": 1092,
							"name": "LBPair__FlashLoanInvalidBalance",
							"nameLocation": "4283:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1091,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4314:2:3"
							},
							"src": "4277:40:3"
						},
						{
							"id": 1094,
							"name": "LBPair__FlashLoanInvalidToken",
							"nameLocation": "4324:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1093,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4353:2:3"
							},
							"src": "4318:38:3"
						},
						{
							"documentation": {
								"id": 1095,
								"nodeType": "StructuredDocumentation",
								"src": "4358:23:3",
								"text": "BinHelper errors "
							},
							"id": 1099,
							"name": "BinHelper__BinStepOverflows",
							"nameLocation": "4389:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1098,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1097,
										"mutability": "mutable",
										"name": "bp",
										"nameLocation": "4425:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1099,
										"src": "4417:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1096,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4417:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4416:12:3"
							},
							"src": "4383:46:3"
						},
						{
							"id": 1101,
							"name": "BinHelper__IdOverflows",
							"nameLocation": "4436:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1100,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4458:2:3"
							},
							"src": "4430:31:3"
						},
						{
							"documentation": {
								"id": 1102,
								"nodeType": "StructuredDocumentation",
								"src": "4463:25:3",
								"text": "Math128x128 errors "
							},
							"id": 1108,
							"name": "Math128x128__PowerUnderflow",
							"nameLocation": "4496:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1107,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1104,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "4532:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1108,
										"src": "4524:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4524:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1106,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "4542:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1108,
										"src": "4535:8:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 1105,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "4535:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4523:21:3"
							},
							"src": "4490:55:3"
						},
						{
							"id": 1110,
							"name": "Math128x128__LogUnderflow",
							"nameLocation": "4552:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1109,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4577:2:3"
							},
							"src": "4546:34:3"
						},
						{
							"documentation": {
								"id": 1111,
								"nodeType": "StructuredDocumentation",
								"src": "4582:25:3",
								"text": "Math512Bits errors "
							},
							"id": 1117,
							"name": "Math512Bits__MulDivOverflow",
							"nameLocation": "4615:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1116,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1113,
										"mutability": "mutable",
										"name": "prod1",
										"nameLocation": "4651:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 1117,
										"src": "4643:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1112,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4643:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1115,
										"mutability": "mutable",
										"name": "denominator",
										"nameLocation": "4666:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 1117,
										"src": "4658:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1114,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4658:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4642:36:3"
							},
							"src": "4609:70:3"
						},
						{
							"id": 1123,
							"name": "Math512Bits__ShiftDivOverflow",
							"nameLocation": "4686:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1122,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1119,
										"mutability": "mutable",
										"name": "prod1",
										"nameLocation": "4724:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 1123,
										"src": "4716:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4716:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1121,
										"mutability": "mutable",
										"name": "denominator",
										"nameLocation": "4739:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 1123,
										"src": "4731:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1120,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4731:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4715:36:3"
							},
							"src": "4680:72:3"
						},
						{
							"id": 1129,
							"name": "Math512Bits__MulShiftOverflow",
							"nameLocation": "4759:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1128,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1125,
										"mutability": "mutable",
										"name": "prod1",
										"nameLocation": "4797:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 1129,
										"src": "4789:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1124,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4789:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1127,
										"mutability": "mutable",
										"name": "offset",
										"nameLocation": "4812:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1129,
										"src": "4804:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4804:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4788:31:3"
							},
							"src": "4753:67:3"
						},
						{
							"id": 1133,
							"name": "Math512Bits__OffsetOverflows",
							"nameLocation": "4827:28:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1132,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1131,
										"mutability": "mutable",
										"name": "offset",
										"nameLocation": "4864:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1133,
										"src": "4856:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1130,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4856:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4855:16:3"
							},
							"src": "4821:51:3"
						},
						{
							"documentation": {
								"id": 1134,
								"nodeType": "StructuredDocumentation",
								"src": "4874:20:3",
								"text": "Oracle errors "
							},
							"id": 1138,
							"name": "Oracle__AlreadyInitialized",
							"nameLocation": "4902:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1137,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1136,
										"mutability": "mutable",
										"name": "_index",
										"nameLocation": "4937:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1138,
										"src": "4929:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1135,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4929:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4928:16:3"
							},
							"src": "4896:49:3"
						},
						{
							"id": 1144,
							"name": "Oracle__LookUpTimestampTooOld",
							"nameLocation": "4952:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1143,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1140,
										"mutability": "mutable",
										"name": "_minTimestamp",
										"nameLocation": "4990:13:3",
										"nodeType": "VariableDeclaration",
										"scope": 1144,
										"src": "4982:21:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1139,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4982:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1142,
										"mutability": "mutable",
										"name": "_lookUpTimestamp",
										"nameLocation": "5013:16:3",
										"nodeType": "VariableDeclaration",
										"scope": 1144,
										"src": "5005:24:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1141,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5005:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4981:49:3"
							},
							"src": "4946:85:3"
						},
						{
							"id": 1146,
							"name": "Oracle__NotInitialized",
							"nameLocation": "5038:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1145,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5060:2:3"
							},
							"src": "5032:31:3"
						},
						{
							"documentation": {
								"id": 1147,
								"nodeType": "StructuredDocumentation",
								"src": "5065:28:3",
								"text": "PendingOwnable errors "
							},
							"id": 1149,
							"name": "PendingOwnable__NotOwner",
							"nameLocation": "5101:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1148,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5125:2:3"
							},
							"src": "5095:33:3"
						},
						{
							"id": 1151,
							"name": "PendingOwnable__NotPendingOwner",
							"nameLocation": "5135:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1150,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5166:2:3"
							},
							"src": "5129:40:3"
						},
						{
							"id": 1153,
							"name": "PendingOwnable__PendingOwnerAlreadySet",
							"nameLocation": "5176:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1152,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5214:2:3"
							},
							"src": "5170:47:3"
						},
						{
							"id": 1155,
							"name": "PendingOwnable__NoPendingOwner",
							"nameLocation": "5224:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1154,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5254:2:3"
							},
							"src": "5218:39:3"
						},
						{
							"id": 1157,
							"name": "PendingOwnable__AddressZero",
							"nameLocation": "5264:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1156,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5291:2:3"
							},
							"src": "5258:36:3"
						},
						{
							"documentation": {
								"id": 1158,
								"nodeType": "StructuredDocumentation",
								"src": "5296:40:3",
								"text": "ReentrancyGuardUpgradeable errors "
							},
							"id": 1160,
							"name": "ReentrancyGuardUpgradeable__ReentrantCall",
							"nameLocation": "5344:41:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1159,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5385:2:3"
							},
							"src": "5338:50:3"
						},
						{
							"id": 1162,
							"name": "ReentrancyGuardUpgradeable__AlreadyInitialized",
							"nameLocation": "5395:46:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1161,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5441:2:3"
							},
							"src": "5389:55:3"
						},
						{
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "5446:22:3",
								"text": "SafeCast errors "
							},
							"id": 1167,
							"name": "SafeCast__Exceeds256Bits",
							"nameLocation": "5476:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1166,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1165,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5509:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1167,
										"src": "5501:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1164,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5501:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5500:11:3"
							},
							"src": "5470:42:3"
						},
						{
							"id": 1171,
							"name": "SafeCast__Exceeds248Bits",
							"nameLocation": "5519:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1170,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1169,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5552:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1171,
										"src": "5544:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1168,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5544:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5543:11:3"
							},
							"src": "5513:42:3"
						},
						{
							"id": 1175,
							"name": "SafeCast__Exceeds240Bits",
							"nameLocation": "5562:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1174,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1173,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5595:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1175,
										"src": "5587:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5587:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5586:11:3"
							},
							"src": "5556:42:3"
						},
						{
							"id": 1179,
							"name": "SafeCast__Exceeds232Bits",
							"nameLocation": "5605:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1178,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1177,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5638:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1179,
										"src": "5630:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1176,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5630:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5629:11:3"
							},
							"src": "5599:42:3"
						},
						{
							"id": 1183,
							"name": "SafeCast__Exceeds224Bits",
							"nameLocation": "5648:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1182,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1181,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5681:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1183,
										"src": "5673:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5673:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5672:11:3"
							},
							"src": "5642:42:3"
						},
						{
							"id": 1187,
							"name": "SafeCast__Exceeds216Bits",
							"nameLocation": "5691:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1186,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1185,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5724:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1187,
										"src": "5716:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1184,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5716:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5715:11:3"
							},
							"src": "5685:42:3"
						},
						{
							"id": 1191,
							"name": "SafeCast__Exceeds208Bits",
							"nameLocation": "5734:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1190,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1189,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5767:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1191,
										"src": "5759:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5759:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5758:11:3"
							},
							"src": "5728:42:3"
						},
						{
							"id": 1195,
							"name": "SafeCast__Exceeds200Bits",
							"nameLocation": "5777:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1194,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1193,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5810:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1195,
										"src": "5802:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1192,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5802:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5801:11:3"
							},
							"src": "5771:42:3"
						},
						{
							"id": 1199,
							"name": "SafeCast__Exceeds192Bits",
							"nameLocation": "5820:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1198,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1197,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5853:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1199,
										"src": "5845:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1196,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5845:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5844:11:3"
							},
							"src": "5814:42:3"
						},
						{
							"id": 1203,
							"name": "SafeCast__Exceeds184Bits",
							"nameLocation": "5863:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1202,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1201,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5896:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1203,
										"src": "5888:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5888:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5887:11:3"
							},
							"src": "5857:42:3"
						},
						{
							"id": 1207,
							"name": "SafeCast__Exceeds176Bits",
							"nameLocation": "5906:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1206,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1205,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5939:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1207,
										"src": "5931:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1204,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5931:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5930:11:3"
							},
							"src": "5900:42:3"
						},
						{
							"id": 1211,
							"name": "SafeCast__Exceeds168Bits",
							"nameLocation": "5949:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1210,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1209,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5982:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1211,
										"src": "5974:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1208,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5974:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5973:11:3"
							},
							"src": "5943:42:3"
						},
						{
							"id": 1215,
							"name": "SafeCast__Exceeds160Bits",
							"nameLocation": "5992:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1214,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1213,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6025:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1215,
										"src": "6017:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6017:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6016:11:3"
							},
							"src": "5986:42:3"
						},
						{
							"id": 1219,
							"name": "SafeCast__Exceeds152Bits",
							"nameLocation": "6035:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1218,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1217,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6068:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1219,
										"src": "6060:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1216,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6060:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6059:11:3"
							},
							"src": "6029:42:3"
						},
						{
							"id": 1223,
							"name": "SafeCast__Exceeds144Bits",
							"nameLocation": "6078:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1222,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1221,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6111:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1223,
										"src": "6103:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1220,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6103:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6102:11:3"
							},
							"src": "6072:42:3"
						},
						{
							"id": 1227,
							"name": "SafeCast__Exceeds136Bits",
							"nameLocation": "6121:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1226,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1225,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6154:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1227,
										"src": "6146:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6146:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6145:11:3"
							},
							"src": "6115:42:3"
						},
						{
							"id": 1231,
							"name": "SafeCast__Exceeds128Bits",
							"nameLocation": "6164:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1230,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1229,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6197:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1231,
										"src": "6189:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1228,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6189:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6188:11:3"
							},
							"src": "6158:42:3"
						},
						{
							"id": 1235,
							"name": "SafeCast__Exceeds120Bits",
							"nameLocation": "6207:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1234,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1233,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6240:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1235,
										"src": "6232:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1232,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6232:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6231:11:3"
							},
							"src": "6201:42:3"
						},
						{
							"id": 1239,
							"name": "SafeCast__Exceeds112Bits",
							"nameLocation": "6250:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1238,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1237,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6283:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1239,
										"src": "6275:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1236,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6275:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6274:11:3"
							},
							"src": "6244:42:3"
						},
						{
							"id": 1243,
							"name": "SafeCast__Exceeds104Bits",
							"nameLocation": "6293:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1242,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1241,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6326:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1243,
										"src": "6318:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1240,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6318:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6317:11:3"
							},
							"src": "6287:42:3"
						},
						{
							"id": 1247,
							"name": "SafeCast__Exceeds96Bits",
							"nameLocation": "6336:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1246,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1245,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6368:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1247,
										"src": "6360:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1244,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6360:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6359:11:3"
							},
							"src": "6330:41:3"
						},
						{
							"id": 1251,
							"name": "SafeCast__Exceeds88Bits",
							"nameLocation": "6378:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1250,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1249,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6410:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1251,
										"src": "6402:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1248,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6402:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6401:11:3"
							},
							"src": "6372:41:3"
						},
						{
							"id": 1255,
							"name": "SafeCast__Exceeds80Bits",
							"nameLocation": "6420:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1254,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1253,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6452:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1255,
										"src": "6444:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1252,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6444:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6443:11:3"
							},
							"src": "6414:41:3"
						},
						{
							"id": 1259,
							"name": "SafeCast__Exceeds72Bits",
							"nameLocation": "6462:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1258,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1257,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6494:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1259,
										"src": "6486:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1256,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6486:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6485:11:3"
							},
							"src": "6456:41:3"
						},
						{
							"id": 1263,
							"name": "SafeCast__Exceeds64Bits",
							"nameLocation": "6504:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1262,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1261,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6536:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1263,
										"src": "6528:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1260,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6528:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6527:11:3"
							},
							"src": "6498:41:3"
						},
						{
							"id": 1267,
							"name": "SafeCast__Exceeds56Bits",
							"nameLocation": "6546:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1266,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1265,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6578:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1267,
										"src": "6570:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1264,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6570:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6569:11:3"
							},
							"src": "6540:41:3"
						},
						{
							"id": 1271,
							"name": "SafeCast__Exceeds48Bits",
							"nameLocation": "6588:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1270,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1269,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6620:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1271,
										"src": "6612:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1268,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6612:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6611:11:3"
							},
							"src": "6582:41:3"
						},
						{
							"id": 1275,
							"name": "SafeCast__Exceeds40Bits",
							"nameLocation": "6630:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1274,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1273,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6662:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1275,
										"src": "6654:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1272,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6654:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6653:11:3"
							},
							"src": "6624:41:3"
						},
						{
							"id": 1279,
							"name": "SafeCast__Exceeds32Bits",
							"nameLocation": "6672:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1278,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1277,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6704:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1279,
										"src": "6696:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6696:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6695:11:3"
							},
							"src": "6666:41:3"
						},
						{
							"id": 1283,
							"name": "SafeCast__Exceeds24Bits",
							"nameLocation": "6714:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1282,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1281,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6746:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1283,
										"src": "6738:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1280,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6738:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6737:11:3"
							},
							"src": "6708:41:3"
						},
						{
							"id": 1287,
							"name": "SafeCast__Exceeds16Bits",
							"nameLocation": "6756:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1286,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1285,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6788:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1287,
										"src": "6780:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1284,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6780:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6779:11:3"
							},
							"src": "6750:41:3"
						},
						{
							"id": 1291,
							"name": "SafeCast__Exceeds8Bits",
							"nameLocation": "6798:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1290,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1289,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6829:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1291,
										"src": "6821:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1288,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6821:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6820:11:3"
							},
							"src": "6792:40:3"
						},
						{
							"documentation": {
								"id": 1292,
								"nodeType": "StructuredDocumentation",
								"src": "6834:22:3",
								"text": "TreeMath errors "
							},
							"id": 1294,
							"name": "TreeMath__ErrorDepthSearch",
							"nameLocation": "6864:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1293,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "6890:2:3"
							},
							"src": "6858:35:3"
						},
						{
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "6895:24:3",
								"text": "JoeLibrary errors "
							},
							"id": 1297,
							"name": "JoeLibrary__IdenticalAddresses",
							"nameLocation": "6927:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1296,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "6957:2:3"
							},
							"src": "6921:39:3"
						},
						{
							"id": 1299,
							"name": "JoeLibrary__AddressZero",
							"nameLocation": "6967:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1298,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "6990:2:3"
							},
							"src": "6961:32:3"
						},
						{
							"id": 1301,
							"name": "JoeLibrary__InsufficientAmount",
							"nameLocation": "7000:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1300,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7030:2:3"
							},
							"src": "6994:39:3"
						},
						{
							"id": 1303,
							"name": "JoeLibrary__InsufficientLiquidity",
							"nameLocation": "7040:33:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1302,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7073:2:3"
							},
							"src": "7034:42:3"
						},
						{
							"documentation": {
								"id": 1304,
								"nodeType": "StructuredDocumentation",
								"src": "7078:25:3",
								"text": "TokenHelper errors "
							},
							"id": 1306,
							"name": "TokenHelper__NonContract",
							"nameLocation": "7111:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1305,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7135:2:3"
							},
							"src": "7105:33:3"
						},
						{
							"id": 1308,
							"name": "TokenHelper__CallFailed",
							"nameLocation": "7145:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1307,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7168:2:3"
							},
							"src": "7139:32:3"
						},
						{
							"id": 1310,
							"name": "TokenHelper__TransferFailed",
							"nameLocation": "7178:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1309,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7205:2:3"
							},
							"src": "7172:36:3"
						},
						{
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "7210:22:3",
								"text": "LBQuoter errors "
							},
							"id": 1313,
							"name": "LBQuoter_InvalidLength",
							"nameLocation": "7240:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1312,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7262:2:3"
							},
							"src": "7234:31:3"
						}
					],
					"src": "33:7233:3"
				},
				"id": 3
			},
			"Midas/joe-v2-main/src/LBFactory.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/LBFactory.sol",
					"exportedSymbols": {
						"BinHelper": [
							2569
						],
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2947
						],
						"Clones": [
							79
						],
						"Constants": [
							2971
						],
						"Decoder": [
							2989
						],
						"EnumerableSet": [
							770
						],
						"FeeHelper": [
							3128
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBFlashLoanCallback": [
							2137
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory": [
							1894
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128": [
							3349
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3717
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable": [
							3922
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 1895,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1315,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 80,
							"src": "58:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 771,
							"src": "109:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/LBErrors.sol",
							"file": "./LBErrors.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 1314,
							"src": "176:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/BinHelper.sol",
							"file": "./libraries/BinHelper.sol",
							"id": 1319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 2570,
							"src": "201:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/Constants.sol",
							"file": "./libraries/Constants.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 2972,
							"src": "237:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/Decoder.sol",
							"file": "./libraries/Decoder.sol",
							"id": 1321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 2990,
							"src": "273:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/PendingOwnable.sol",
							"file": "./libraries/PendingOwnable.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 3923,
							"src": "307:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/SafeCast.sol",
							"file": "./libraries/SafeCast.sol",
							"id": 1323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 4641,
							"src": "348:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBFactory.sol",
							"file": "./interfaces/ILBFactory.sol",
							"id": 1324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1895,
							"sourceUnit": 2117,
							"src": "383:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1326,
										"name": "PendingOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3922,
										"src": "734:14:4"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "734:14:4"
								},
								{
									"baseName": {
										"id": 1328,
										"name": "ILBFactory",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2116,
										"src": "750:10:4"
									},
									"id": 1329,
									"nodeType": "InheritanceSpecifier",
									"src": "750:10:4"
								}
							],
							"canonicalName": "LBFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1325,
								"nodeType": "StructuredDocumentation",
								"src": "422:290:4",
								"text": "@title Liquidity Book Factory\n @author Trader Joe\n @notice Contract used to deploy and register new LBPairs.\n Enables setting fee parameters, flashloan fees and LBPair implementation.\n Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs."
							},
							"fullyImplemented": true,
							"id": 1894,
							"linearizedBaseContracts": [
								1894,
								2116,
								3922,
								2443
							],
							"name": "LBFactory",
							"nameLocation": "721:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1332,
									"libraryName": {
										"id": 1330,
										"name": "SafeCast",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4640,
										"src": "773:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "767:27:4",
									"typeName": {
										"id": 1331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1335,
									"libraryName": {
										"id": 1333,
										"name": "Decoder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2989,
										"src": "805:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "799:26:4",
									"typeName": {
										"id": 1334,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"id": 1339,
									"libraryName": {
										"id": 1336,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 770,
										"src": "836:13:4"
									},
									"nodeType": "UsingForDirective",
									"src": "830:49:4",
									"typeName": {
										"id": 1338,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1337,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 483,
											"src": "854:24:4"
										},
										"referencedDeclaration": 483,
										"src": "854:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"baseFunctions": [
										2006
									],
									"constant": true,
									"functionSelector": "bc063e1a",
									"id": 1343,
									"mutability": "constant",
									"name": "MAX_FEE",
									"nameLocation": "918:7:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1341,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "909:8:4"
									},
									"scope": 1894,
									"src": "885:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e31653138",
										"id": 1342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "928:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"value": "0.1e18"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2011
									],
									"constant": false,
									"functionSelector": "509ceb90",
									"id": 1346,
									"mutability": "mutable",
									"name": "LBPairImplementation",
									"nameLocation": "972:20:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "963:8:4"
									},
									"scope": 1894,
									"src": "948:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1344,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2037
									],
									"constant": false,
									"functionSelector": "46904840",
									"id": 1349,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "1023:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1348,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1014:8:4"
									},
									"scope": 1894,
									"src": "999:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1347,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "999:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2047
									],
									"constant": false,
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "1042:117:4",
										"text": "@notice Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)"
									},
									"functionSelector": "5c779d6d",
									"id": 1353,
									"mutability": "mutable",
									"name": "creationUnlocked",
									"nameLocation": "1185:16:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1176:8:4"
									},
									"scope": 1894,
									"src": "1164:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1351,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1164:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2042
									],
									"constant": false,
									"functionSelector": "4847cdc8",
									"id": 1356,
									"mutability": "mutable",
									"name": "flashLoanFee",
									"nameLocation": "1232:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1223:8:4"
									},
									"scope": 1894,
									"src": "1208:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2055
									],
									"constant": false,
									"functionSelector": "72e47b8c",
									"id": 1361,
									"mutability": "mutable",
									"name": "allLBPairs",
									"nameLocation": "1277:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1268:8:4"
									},
									"scope": 1894,
									"src": "1251:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_ILBPair_$2405_$dyn_storage",
										"typeString": "contract ILBPair[]"
									},
									"typeName": {
										"baseType": {
											"id": 1358,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1357,
												"name": "ILBPair",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2405,
												"src": "1251:7:4"
											},
											"referencedDeclaration": 2405,
											"src": "1251:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ILBPair_$2405",
												"typeString": "contract ILBPair"
											}
										},
										"id": 1359,
										"nodeType": "ArrayTypeName",
										"src": "1251:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_ILBPair_$2405_$dyn_storage_ptr",
											"typeString": "contract ILBPair[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "1294:244:4",
										"text": "@dev Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be\n in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens"
									},
									"id": 1371,
									"mutability": "mutable",
									"name": "_LBPairsInfo",
									"nameLocation": "1607:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "1543:76:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$_$",
										"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation))"
									},
									"typeName": {
										"id": 1370,
										"keyType": {
											"id": 1364,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1363,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "1551:6:4"
											},
											"referencedDeclaration": 157,
											"src": "1551:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Mapping",
										"src": "1543:55:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$_$",
											"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation))"
										},
										"valueType": {
											"id": 1369,
											"keyType": {
												"id": 1366,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1365,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 157,
													"src": "1569:6:4"
												},
												"referencedDeclaration": 157,
												"src": "1569:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												}
											},
											"nodeType": "Mapping",
											"src": "1561:36:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$",
												"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation)"
											},
											"valueType": {
												"id": 1368,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1367,
													"name": "LBPairInformation",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1908,
													"src": "1579:17:4"
												},
												"referencedDeclaration": 1908,
												"src": "1579:17:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1626:223:4",
										"text": "@dev Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set\n The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas"
									},
									"id": 1374,
									"mutability": "mutable",
									"name": "_availablePresets",
									"nameLocation": "1870:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "1854:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1373,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1854:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1378,
									"mutability": "mutable",
									"name": "_presets",
									"nameLocation": "1960:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "1924:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 1377,
										"keyType": {
											"id": 1375,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1932:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1924:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueType": {
											"id": 1376,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1943:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1381,
									"mutability": "mutable",
									"name": "_quoteAssetWhitelist",
									"nameLocation": "2008:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1894,
									"src": "1975:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$483_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 1380,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1379,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 483,
											"src": "1975:24:4"
										},
										"referencedDeclaration": 483,
										"src": "1975:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "2161:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "_feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "2188:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1387,
														"name": "_setFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "2171:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "2171:31:4"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "2036:85:4",
										"text": "@notice Constructor\n @param _feeRecipient The address of the fee recipient"
									},
									"id": 1392,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "2146:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "2138:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:23:4"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:0:4"
									},
									"scope": 1894,
									"src": "2126:83:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2060
									],
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "2393:41:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1399,
														"name": "allLBPairs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "2410:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_ILBPair_$2405_$dyn_storage",
															"typeString": "contract ILBPair[] storage ref"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2410:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1401,
												"nodeType": "Return",
												"src": "2403:24:4"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "2215:102:4",
										"text": "@notice View function to return the number of LBPairs created\n @return The number of LBPair"
									},
									"functionSelector": "4e937c3a",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfLBPairs",
									"nameLocation": "2331:18:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2366:8:4"
									},
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2349:2:4"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2384:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:9:4"
									},
									"scope": 1894,
									"src": "2322:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2016
									],
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2637:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1410,
															"name": "_quoteAssetWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "2654:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 579,
														"src": "2654:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2654:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1413,
												"nodeType": "Return",
												"src": "2647:36:4"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "2440:117:4",
										"text": "@notice View function to return the number of quote assets whitelisted\n @return The number of quote assets"
									},
									"functionSelector": "80c5061e",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfQuoteAssets",
									"nameLocation": "2571:22:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1406,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2610:8:4"
									},
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2593:2:4"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2628:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:9:4"
									},
									"scope": 1894,
									"src": "2562:128:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2024
									],
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "2956:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1428,
																	"name": "_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "3004:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1426,
																	"name": "_quoteAssetWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "2980:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "at",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 606,
																"src": "2980:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2980:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1425,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2973:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$157_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2973:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1431,
												"nodeType": "Return",
												"src": "2966:46:4"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "2696:176:4",
										"text": "@notice View function to return the quote asset whitelisted at index `index`\n @param _index The index\n @return The address of the _quoteAsset at index `index`"
									},
									"functionSelector": "f89a4cd5",
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAsset",
									"nameLocation": "2886:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2930:8:4"
									},
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "2908:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2900:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:16:4"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2948:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1421,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2948:6:4"
													},
													"referencedDeclaration": 157,
													"src": "2948:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2947:8:4"
									},
									"scope": 1894,
									"src": "2877:142:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2032
									],
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "3300:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1447,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "3355:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3347:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1445,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3347:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3347:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1443,
															"name": "_quoteAssetWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "3317:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 564,
														"src": "3317:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3317:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1450,
												"nodeType": "Return",
												"src": "3310:53:4"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "3025:195:4",
										"text": "@notice View function to return whether a token is a quotedAsset (true) or not (false)\n @param _token The address of the asset\n @return Whether the token is a quote asset or not"
									},
									"functionSelector": "27721842",
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isQuoteAsset",
									"nameLocation": "3234:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1439,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3276:8:4"
									},
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3254:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3247:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1435,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3247:6:4"
													},
													"referencedDeclaration": 157,
													"src": "3247:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:15:4"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3294:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3294:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:6:4"
									},
									"scope": 1894,
									"src": "3225:145:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2072
									],
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "3822:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1467,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "3861:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1468,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "3870:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1466,
														"name": "_getLBPairInformation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "3839:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$returns$_t_struct$_LBPairInformation_$1908_memory_ptr_$",
															"typeString": "function (contract IERC20,contract IERC20) view returns (struct ILBFactory.LBPairInformation memory)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3839:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1908_memory_ptr",
														"typeString": "struct ILBFactory.LBPairInformation memory"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1470,
												"nodeType": "Return",
												"src": "3832:46:4"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "3376:299:4",
										"text": "@notice Returns the LBPairInformation if it exists,\n if not, then the address 0 is returned. The order doesn't matter\n @param _tokenA The address of the first token of the pair\n @param _tokenB The address of the second token of the pair\n @return The LBPairInformation"
									},
									"functionSelector": "eaec42a4",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLBPairInformation",
									"nameLocation": "3689:20:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3778:8:4"
									},
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "3726:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1454,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3719:6:4"
													},
													"referencedDeclaration": 157,
													"src": "3719:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "3750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3743:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1458,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1457,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3743:6:4"
													},
													"referencedDeclaration": 157,
													"src": "3743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:54:4"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3796:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1908_memory_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												},
												"typeName": {
													"id": 1463,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1462,
														"name": "LBPairInformation",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1908,
														"src": "3796:17:4"
													},
													"referencedDeclaration": 1908,
													"src": "3796:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage_ptr",
														"typeString": "struct ILBFactory.LBPairInformation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:26:4"
									},
									"scope": 1894,
									"src": "3680:205:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2077
									],
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "4153:492:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_ILBFactory_$2116",
														"typeString": "contract ILBFactory"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1482,
																		"name": "_LBPairImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "4175:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1481,
																	"name": "ILBPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2405,
																	"src": "4167:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ILBPair_$2405_$",
																		"typeString": "type(contract ILBPair)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4167:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILBPair_$2405",
																	"typeString": "contract ILBPair"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "factory",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2279,
															"src": "4167:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILBFactory_$2116_$",
																"typeString": "function () view external returns (contract ILBFactory)"
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4167:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILBFactory_$2116",
															"typeString": "contract ILBFactory"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1486,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967268,
														"src": "4211:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LBFactory_$1894",
															"typeString": "contract LBFactory"
														}
													},
													"src": "4167:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"nodeType": "IfStatement",
												"src": "4163:130:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1489,
																"name": "_LBPairImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "4271:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1488,
															"name": "LBFactory__LBPairSafetyCheckFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "4236:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4236:57:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1491,
													"nodeType": "RevertStatement",
													"src": "4229:64:4"
												}
											},
											{
												"assignments": [
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "_oldLBPairImplementation",
														"nameLocation": "4312:24:4",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "4304:32:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1493,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4304:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"id": 1495,
													"name": "LBPairImplementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1346,
													"src": "4339:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4304:55:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "_oldLBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "4373:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1498,
														"name": "_LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "4401:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4373:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "4369:126:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1501,
																"name": "_LBPairImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "4473:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1500,
															"name": "LBFactory__SameImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "4443:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4443:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1503,
													"nodeType": "RevertStatement",
													"src": "4436:59:4"
												}
											},
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1505,
														"name": "LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4506:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1506,
														"name": "_LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "4529:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4506:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "4506:44:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1510,
															"name": "_oldLBPairImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4590:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1511,
															"name": "_LBPairImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4616:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1509,
														"name": "LBPairImplementationSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1964,
														"src": "4566:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4566:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "EmitStatement",
												"src": "4561:77:4"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "3891:165:4",
										"text": "@notice Set the LBPair implementation address\n @dev Needs to be called by the owner\n @param _LBPairImplementation The address of the implementation"
									},
									"functionSelector": "b0384781",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1478,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "4143:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4143:9:4"
										}
									],
									"name": "setLBPairImplementation",
									"nameLocation": "4070:23:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4134:8:4"
									},
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "_LBPairImplementation",
												"nameLocation": "4102:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4094:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:31:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4153:0:4"
									},
									"scope": 1894,
									"src": "4061:584:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2093
									],
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "5122:2051:4",
										"statements": [
											{
												"assignments": [
													1534
												],
												"declarations": [
													{
														"constant": false,
														"id": 1534,
														"mutability": "mutable",
														"name": "_owner",
														"nameLocation": "5140:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "5132:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1533,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5132:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1537,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1535,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3782,
														"src": "5149:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:7:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5132:24:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5170:17:4",
														"subExpression": {
															"id": 1538,
															"name": "creationUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "5171:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5191:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5191:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1542,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "5205:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5191:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5170:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "5166:101:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1546,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5256:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5256:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1545,
															"name": "LBFactory__FunctionIsLockedForUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "5220:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5220:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1549,
													"nodeType": "RevertStatement",
													"src": "5213:54:4"
												}
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "_LBPairImplementation",
														"nameLocation": "5286:21:4",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "5278:29:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1551,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5278:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"id": 1553,
													"name": "LBPairImplementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1346,
													"src": "5310:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5278:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1555,
														"name": "_LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "5345:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5378:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1556,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5370:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5370:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5345:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1564,
												"nodeType": "IfStatement",
												"src": "5341:81:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1561,
															"name": "LBFactory__ImplementationNotSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "5389:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5389:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1563,
													"nodeType": "RevertStatement",
													"src": "5382:40:4"
												}
											},
											{
												"condition": {
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5437:48:4",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1569,
																		"name": "_tokenY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "5476:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5468:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1567,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5468:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5468:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1565,
																"name": "_quoteAssetWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "5438:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																	"typeString": "struct EnumerableSet.AddressSet storage ref"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 564,
															"src": "5438:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5438:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1577,
												"nodeType": "IfStatement",
												"src": "5433:105:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1574,
																"name": "_tokenY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "5530:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1573,
															"name": "LBFactory__QuoteAssetNotWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "5494:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5494:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1576,
													"nodeType": "RevertStatement",
													"src": "5487:51:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1578,
														"name": "_tokenX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "5553:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1579,
														"name": "_tokenY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "5564:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"src": "5553:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "IfStatement",
												"src": "5549:69:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1582,
																"name": "_tokenX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "5610:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1581,
															"name": "LBFactory__IdenticalAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "5580:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5580:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1584,
													"nodeType": "RevertStatement",
													"src": "5573:45:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1589,
															"name": "_activeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "5724:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 1586,
															"name": "BinHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "5699:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BinHelper_$2569_$",
																"typeString": "type(library BinHelper)"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFromId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2548,
														"src": "5699:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5699:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1591,
												"nodeType": "ExpressionStatement",
												"src": "5699:35:4"
											},
											{
												"assignments": [
													1594,
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "_tokenA",
														"nameLocation": "5860:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "5853:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1593,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1592,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 157,
																"src": "5853:6:4"
															},
															"referencedDeclaration": 157,
															"src": "5853:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "_tokenB",
														"nameLocation": "5876:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "5869:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1596,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1595,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 157,
																"src": "5869:6:4"
															},
															"referencedDeclaration": 157,
															"src": "5869:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1602,
												"initialValue": {
													"arguments": [
														{
															"id": 1599,
															"name": "_tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "5899:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1600,
															"name": "_tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "5908:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1598,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "5887:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$returns$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
															"typeString": "function (contract IERC20,contract IERC20) pure returns (contract IERC20,contract IERC20)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5887:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
														"typeString": "tuple(contract IERC20,contract IERC20)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5852:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1605,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "5976:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5968:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1603,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5968:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5968:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5996:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5988:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1607,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5988:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5988:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5968:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1615,
												"nodeType": "IfStatement",
												"src": "5964:67:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1612,
															"name": "LBFactory__AddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "6007:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6007:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1614,
													"nodeType": "RevertStatement",
													"src": "6000:31:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1618,
																			"name": "_LBPairsInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "6053:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$_$",
																				"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref))"
																			}
																		},
																		"id": 1620,
																		"indexExpression": {
																			"id": 1619,
																			"name": "_tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1594,
																			"src": "6066:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$157",
																				"typeString": "contract IERC20"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6053:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$",
																			"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref)"
																		}
																	},
																	"id": 1622,
																	"indexExpression": {
																		"id": 1621,
																		"name": "_tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "6075:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6053:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage",
																		"typeString": "struct ILBFactory.LBPairInformation storage ref"
																	}
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "LBPair",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1905,
																"src": "6053:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILBPair_$2405",
																	"typeString": "contract ILBPair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ILBPair_$2405",
																	"typeString": "contract ILBPair"
																}
															],
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6045:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6045:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6045:46:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6103:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6095:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6095:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6095:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6045:60:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1636,
												"nodeType": "IfStatement",
												"src": "6041:136:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1631,
																"name": "_tokenX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "6157:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1632,
																"name": "_tokenY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "6166:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"hexValue": "31",
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6175:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 1630,
															"name": "LBFactory__LBPairAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6126:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$_t_uint256_$returns$__$",
																"typeString": "function (contract IERC20,contract IERC20,uint256) pure"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6126:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1635,
													"nodeType": "RevertStatement",
													"src": "6119:58:4"
												}
											},
											{
												"assignments": [
													1638
												],
												"declarations": [
													{
														"constant": false,
														"id": 1638,
														"mutability": "mutable",
														"name": "_salt",
														"nameLocation": "6196:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "6188:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1637,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6188:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1646,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1642,
																	"name": "_tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "6225:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1643,
																	"name": "_tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "6234:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																],
																"expression": {
																	"id": 1640,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6214:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "6214:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6214:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1639,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "6204:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6204:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6188:55:4"
											},
											{
												"expression": {
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1647,
														"name": "_LBPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "6253:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILBPair_$2405",
															"typeString": "contract ILBPair"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1651,
																		"name": "_LBPairImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "6297:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1652,
																		"name": "_salt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "6320:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1649,
																		"name": "Clones",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "6271:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Clones_$79_$",
																			"typeString": "type(library Clones)"
																		}
																	},
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "cloneDeterministic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "6271:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (address,bytes32) returns (address)"
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6271:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1648,
															"name": "ILBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2405,
															"src": "6263:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILBPair_$2405_$",
																"typeString": "type(contract ILBPair)"
															}
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6263:64:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILBPair_$2405",
															"typeString": "contract ILBPair"
														}
													},
													"src": "6253:74:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2405",
														"typeString": "contract ILBPair"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "6253:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1660,
															"name": "_tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "6357:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1661,
															"name": "_tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "6366:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1662,
															"name": "_activeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "6375:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 1663,
															"name": "_vtokenFactional",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "6386:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 1657,
															"name": "_LBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "6338:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILBPair_$2405",
																"typeString": "contract ILBPair"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2404,
														"src": "6338:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$_t_uint24_$_t_bool_$returns$__$",
															"typeString": "function (contract IERC20,contract IERC20,uint24,bool) external"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6338:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "6338:65:4"
											},
											{
												"expression": {
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1666,
																"name": "_LBPairsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "6414:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$_$",
																	"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref))"
																}
															},
															"id": 1669,
															"indexExpression": {
																"id": 1667,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "6427:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6414:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$",
																"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref)"
															}
														},
														"id": 1670,
														"indexExpression": {
															"id": 1668,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "6436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6414:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage",
															"typeString": "struct ILBFactory.LBPairInformation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1672,
																"name": "_LBPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "6487:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILBPair_$2405",
																	"typeString": "contract ILBPair"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1673,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6524:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6524:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1675,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1534,
																	"src": "6538:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6524:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ILBPair_$2405",
																	"typeString": "contract ILBPair"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1671,
															"name": "LBPairInformation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1908,
															"src": "6447:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_LBPairInformation_$1908_storage_ptr_$",
																"typeString": "type(struct ILBFactory.LBPairInformation storage pointer)"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"LBPair",
															"createdByOwner"
														],
														"nodeType": "FunctionCall",
														"src": "6447:108:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LBPairInformation_$1908_memory_ptr",
															"typeString": "struct ILBFactory.LBPairInformation memory"
														}
													},
													"src": "6414:141:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage",
														"typeString": "struct ILBFactory.LBPairInformation storage ref"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "6414:141:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1683,
															"name": "_LBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "6582:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILBPair_$2405",
																"typeString": "contract ILBPair"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ILBPair_$2405",
																"typeString": "contract ILBPair"
															}
														],
														"expression": {
															"id": 1680,
															"name": "allLBPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "6566:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_ILBPair_$2405_$dyn_storage",
																"typeString": "contract ILBPair[] storage ref"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6566:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ILBPair_$2405_$dyn_storage_ptr_$_t_contract$_ILBPair_$2405_$returns$__$bound_to$_t_array$_t_contract$_ILBPair_$2405_$dyn_storage_ptr_$",
															"typeString": "function (contract ILBPair[] storage pointer,contract ILBPair)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6566:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "6566:24:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1687,
															"name": "_tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "6620:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1688,
															"name": "_tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "6629:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1689,
															"name": "_LBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "6638:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILBPair_$2405",
																"typeString": "contract ILBPair"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1690,
																	"name": "allLBPairs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "6647:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_ILBPair_$2405_$dyn_storage",
																		"typeString": "contract ILBPair[] storage ref"
																	}
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6647:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6667:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6647:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_ILBPair_$2405",
																"typeString": "contract ILBPair"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1686,
														"name": "LBPairCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "6606:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$_t_contract$_ILBPair_$2405_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,contract IERC20,contract ILBPair,uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6606:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "EmitStatement",
												"src": "6601:68:4"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "4651:289:4",
										"text": "@notice Create a liquidity bin LBPair for _tokenX and _tokenY\n @param _tokenX The address of the first token\n @param _tokenY The address of the second token\n @param _activeId The active id of the pair\n @return _LBPair The address of the newly created LBPair"
									},
									"functionSelector": "52e2cf8e",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createLBPair",
									"nameLocation": "4954:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1528,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5087:8:4"
									},
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "_tokenX",
												"nameLocation": "4983:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "4976:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1517,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "4976:6:4"
													},
													"referencedDeclaration": 157,
													"src": "4976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "_tokenY",
												"nameLocation": "5007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1520,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "5000:6:4"
													},
													"referencedDeclaration": 157,
													"src": "5000:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "_activeId",
												"nameLocation": "5031:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5024:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1523,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5024:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "_vtokenFactional",
												"nameLocation": "5055:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5050:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5050:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:111:4"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_LBPair",
												"nameLocation": "5113:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "5105:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2405",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1529,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2405,
														"src": "5105:7:4"
													},
													"referencedDeclaration": 2405,
													"src": "5105:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2405",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5104:17:4"
									},
									"scope": 1894,
									"src": "4945:2228:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2098
									],
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "7420:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1707,
															"name": "_feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "7447:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1706,
														"name": "_setFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "7430:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7430:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "7430:31:4"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "7179:160:4",
										"text": "@notice Function to set the recipient of the fees. This address needs to be able to receive ERC20s\n @param _feeRecipient The address of the recipient"
									},
									"functionSelector": "e74b981b",
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1704,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1703,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "7410:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7410:9:4"
										}
									],
									"name": "setFeeRecipient",
									"nameLocation": "7353:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1702,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7401:8:4"
									},
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "7377:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "7369:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7369:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7368:23:4"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7420:0:4"
									},
									"scope": 1894,
									"src": "7344:124:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2103
									],
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "7695:191:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1720,
														"name": "creationUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "7709:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1721,
														"name": "_locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "7729:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7709:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1726,
												"nodeType": "IfStatement",
												"src": "7705:87:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1723,
															"name": "LBFactory__FactoryLockIsAlreadyInTheSameState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "7745:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7745:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1725,
													"nodeType": "RevertStatement",
													"src": "7738:54:4"
												}
											},
											{
												"expression": {
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1727,
														"name": "creationUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "7802:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7821:8:4",
														"subExpression": {
															"id": 1728,
															"name": "_locked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "7822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7802:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "7802:27:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1733,
															"name": "_locked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "7871:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1732,
														"name": "FactoryLockedStatusUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "7844:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7844:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "EmitStatement",
												"src": "7839:40:4"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "7475:142:4",
										"text": "@notice Function to set the creation restriction of the Factory\n @param _locked If the creation is restricted (true) or not (false)"
									},
									"functionSelector": "22f3fe14",
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1718,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1717,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "7685:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7685:9:4"
										}
									],
									"name": "setFactoryLockedState",
									"nameLocation": "7631:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1716,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7676:8:4"
									},
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "_locked",
												"nameLocation": "7658:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "7653:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7653:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7652:14:4"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7695:0:4"
									},
									"scope": 1894,
									"src": "7622:264:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2109
									],
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "8101:185:4",
										"statements": [
											{
												"condition": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8115:47:4",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1751,
																		"name": "_quoteAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1741,
																		"src": "8149:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8141:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1749,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8141:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8141:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1747,
																"name": "_quoteAssetWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "8116:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																	"typeString": "struct EnumerableSet.AddressSet storage ref"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 510,
															"src": "8116:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8116:46:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1759,
												"nodeType": "IfStatement",
												"src": "8111:124:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1756,
																"name": "_quoteAsset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "8223:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1755,
															"name": "LBFactory__QuoteAssetAlreadyWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "8183:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8183:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1758,
													"nodeType": "RevertStatement",
													"src": "8176:59:4"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1761,
															"name": "_quoteAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "8267:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1760,
														"name": "QuoteAssetAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "8251:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$157_$returns$__$",
															"typeString": "function (contract IERC20)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8251:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "EmitStatement",
												"src": "8246:33:4"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "7892:133:4",
										"text": "@notice Function to add an asset to the whitelist of quote assets\n @param _quoteAsset The quote asset (e.g: AVAX, USDC...)"
									},
									"functionSelector": "5a440923",
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1745,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1744,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "8091:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8091:9:4"
										}
									],
									"name": "addQuoteAsset",
									"nameLocation": "8039:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1743,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8082:8:4"
									},
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "_quoteAsset",
												"nameLocation": "8060:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "8053:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1739,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "8053:6:4"
													},
													"referencedDeclaration": 157,
													"src": "8053:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8052:20:4"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8101:0:4"
									},
									"scope": 1894,
									"src": "8030:256:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2115
									],
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "8509:174:4",
										"statements": [
											{
												"condition": {
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8523:50:4",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1779,
																		"name": "_quoteAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1769,
																		"src": "8560:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8552:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1777,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8552:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8552:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1775,
																"name": "_quoteAssetWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "8524:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																	"typeString": "struct EnumerableSet.AddressSet storage ref"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "remove",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 537,
															"src": "8524:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8524:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1787,
												"nodeType": "IfStatement",
												"src": "8519:111:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1784,
																"name": "_quoteAsset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "8618:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1783,
															"name": "LBFactory__QuoteAssetNotWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8582:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8582:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1786,
													"nodeType": "RevertStatement",
													"src": "8575:55:4"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1789,
															"name": "_quoteAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "8664:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1788,
														"name": "QuoteAssetRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "8646:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$157_$returns$__$",
															"typeString": "function (contract IERC20)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8646:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "EmitStatement",
												"src": "8641:35:4"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "8292:138:4",
										"text": "@notice Function to remove an asset from the whitelist of quote assets\n @param _quoteAsset The quote asset (e.g: AVAX, USDC...)"
									},
									"functionSelector": "ddbfd941",
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1773,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1772,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "8499:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8499:9:4"
										}
									],
									"name": "removeQuoteAsset",
									"nameLocation": "8444:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1771,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8490:8:4"
									},
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "_quoteAsset",
												"nameLocation": "8468:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "8461:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1767,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "8461:6:4"
													},
													"referencedDeclaration": 157,
													"src": "8461:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:20:4"
									},
									"returnParameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:0:4"
									},
									"scope": 1894,
									"src": "8435:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "8871:331:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1799,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "8885:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8910:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8902:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8902:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8902:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8885:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1808,
												"nodeType": "IfStatement",
												"src": "8881:64:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1805,
															"name": "LBFactory__AddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "8921:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8921:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1807,
													"nodeType": "RevertStatement",
													"src": "8914:31:4"
												}
											},
											{
												"assignments": [
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "_oldFeeRecipient",
														"nameLocation": "8964:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1830,
														"src": "8956:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1809,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8956:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1812,
												"initialValue": {
													"id": 1811,
													"name": "feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1349,
													"src": "8983:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8956:39:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1813,
														"name": "_oldFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "9009:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1814,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "9029:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9009:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1820,
												"nodeType": "IfStatement",
												"src": "9005:88:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1817,
																"name": "_feeRecipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "9079:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1816,
															"name": "LBFactory__SameFeeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "9051:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9051:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1819,
													"nodeType": "RevertStatement",
													"src": "9044:49:4"
												}
											},
											{
												"expression": {
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1821,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "9104:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1822,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "9119:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9104:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "9104:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1826,
															"name": "_oldFeeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "9163:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1827,
															"name": "_feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "9181:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1825,
														"name": "FeeRecipientSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "9147:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9147:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "EmitStatement",
												"src": "9142:53:4"
											}
										]
									},
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "8689:119:4",
										"text": "@notice Internal function to set the recipient of the fee\n @param _feeRecipient The address of the recipient"
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setFeeRecipient",
									"nameLocation": "8822:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "8847:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "8839:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8839:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8838:23:4"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8871:0:4"
									},
									"scope": 1894,
									"src": "8813:389:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "9651:114:4",
										"statements": [
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1844,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "9662:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1845,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "9671:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"id": 1846,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9661:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1848,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "9694:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1849,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "9703:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1847,
															"name": "_sortTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "9682:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$returns$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
																"typeString": "function (contract IERC20,contract IERC20) pure returns (contract IERC20,contract IERC20)"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9682:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"src": "9661:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "9661:50:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1853,
															"name": "_LBPairsInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "9728:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$_$",
																"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref))"
															}
														},
														"id": 1855,
														"indexExpression": {
															"id": 1854,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "9741:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9728:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1908_storage_$",
															"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref)"
														}
													},
													"id": 1857,
													"indexExpression": {
														"id": 1856,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "9750:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9728:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage",
														"typeString": "struct ILBFactory.LBPairInformation storage ref"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1858,
												"nodeType": "Return",
												"src": "9721:37:4"
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "9214:299:4",
										"text": "@notice Returns the LBPairInformation if it exists,\n if not, then the address 0 is returned. The order doesn't matter\n @param _tokenA The address of the first token of the pair\n @param _tokenB The address of the second token of the pair\n @return The LBPairInformation"
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getLBPairInformation",
									"nameLocation": "9527:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "9565:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "9558:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1833,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "9558:6:4"
													},
													"referencedDeclaration": 157,
													"src": "9558:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "9589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "9582:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1836,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "9582:6:4"
													},
													"referencedDeclaration": 157,
													"src": "9582:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9548:54:4"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "9625:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1908_memory_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												},
												"typeName": {
													"id": 1841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1840,
														"name": "LBPairInformation",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1908,
														"src": "9625:17:4"
													},
													"referencedDeclaration": 1908,
													"src": "9625:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage_ptr",
														"typeString": "struct ILBFactory.LBPairInformation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:26:4"
									},
									"scope": 1894,
									"src": "9518:247:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "10094:114:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1876,
														"name": "_tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "10108:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1877,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "10118:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"src": "10108:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1887,
												"nodeType": "IfStatement",
												"src": "10104:62:4",
												"trueBody": {
													"expression": {
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1879,
																	"name": "_tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "10128:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1880,
																	"name": "_tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "10137:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"id": 1881,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "10127:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
																"typeString": "tuple(contract IERC20,contract IERC20)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1882,
																	"name": "_tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "10149:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1883,
																	"name": "_tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "10158:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"id": 1884,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10148:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
																"typeString": "tuple(contract IERC20,contract IERC20)"
															}
														},
														"src": "10127:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1886,
													"nodeType": "ExpressionStatement",
													"src": "10127:39:4"
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1888,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "10184:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1889,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "10193:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"id": 1890,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10183:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
														"typeString": "tuple(contract IERC20,contract IERC20)"
													}
												},
												"functionReturnParameters": 1875,
												"id": 1891,
												"nodeType": "Return",
												"src": "10176:25:4"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "9771:227:4",
										"text": "@notice Private view function to sort 2 tokens in ascending order\n @param _tokenA The first token\n @param _tokenB The second token\n @return The sorted first token\n @return The sorted second token"
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sortTokens",
									"nameLocation": "10012:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "10031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "10024:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1862,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "10024:6:4"
													},
													"referencedDeclaration": 157,
													"src": "10024:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "10047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "10040:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1866,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1865,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "10040:6:4"
													},
													"referencedDeclaration": 157,
													"src": "10040:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10023:32:4"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "10078:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "10078:6:4"
													},
													"referencedDeclaration": 157,
													"src": "10078:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "10086:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1872,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "10086:6:4"
													},
													"referencedDeclaration": 157,
													"src": "10086:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10077:16:4"
									},
									"scope": 1894,
									"src": "10003:205:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1895,
							"src": "712:9498:4",
							"usedErrors": [
								933,
								938,
								943,
								945,
								955,
								1019,
								1021,
								1031,
								1039,
								1043,
								1045,
								1101,
								1108,
								1149,
								1151,
								1153,
								1155,
								1157
							]
						}
					],
					"src": "33:10178:4"
				},
				"id": 4
			},
			"Midas/joe-v2-main/src/interfaces/ILBFactory.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBFactory.sol",
					"exportedSymbols": {
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						]
					},
					"id": 2117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1896,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2117,
							"sourceUnit": 158,
							"src": "58:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBPair.sol",
							"file": "./ILBPair.sol",
							"id": 1898,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2117,
							"sourceUnit": 2406,
							"src": "116:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol",
							"file": "./IPendingOwnable.sol",
							"id": 1899,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2117,
							"sourceUnit": 2444,
							"src": "140:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1901,
										"name": "IPendingOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2443,
										"src": "317:15:5"
									},
									"id": 1902,
									"nodeType": "InheritanceSpecifier",
									"src": "317:15:5"
								}
							],
							"canonicalName": "ILBFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1900,
								"nodeType": "StructuredDocumentation",
								"src": "173:120:5",
								"text": "@title Liquidity Book Factory Interface\n @author Trader Joe\n @notice Required interface of LBFactory contract"
							},
							"fullyImplemented": false,
							"id": 2116,
							"linearizedBaseContracts": [
								2116,
								2443
							],
							"name": "ILBFactory",
							"nameLocation": "303:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ILBFactory.LBPairInformation",
									"id": 1908,
									"members": [
										{
											"constant": false,
											"id": 1905,
											"mutability": "mutable",
											"name": "LBPair",
											"nameLocation": "756:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1908,
											"src": "748:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ILBPair_$2405",
												"typeString": "contract ILBPair"
											},
											"typeName": {
												"id": 1904,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1903,
													"name": "ILBPair",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2405,
													"src": "748:7:5"
												},
												"referencedDeclaration": 2405,
												"src": "748:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2405",
													"typeString": "contract ILBPair"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1907,
											"mutability": "mutable",
											"name": "createdByOwner",
											"nameLocation": "777:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 1908,
											"src": "772:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1906,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "772:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LBPairInformation",
									"nameLocation": "720:17:5",
									"nodeType": "StructDefinition",
									"scope": 2116,
									"src": "713:85:5",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1921,
									"name": "LBPairCreated",
									"nameLocation": "810:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "848:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "833:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1909,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "833:6:5"
													},
													"referencedDeclaration": 157,
													"src": "833:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "879:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "864:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1912,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "864:6:5"
													},
													"referencedDeclaration": 157,
													"src": "864:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1917,
												"indexed": false,
												"mutability": "mutable",
												"name": "LBPair",
												"nameLocation": "903:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "895:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2405",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1916,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1915,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2405,
														"src": "895:7:5"
													},
													"referencedDeclaration": 2405,
													"src": "895:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2405",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"indexed": false,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "927:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "919:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:113:5"
									},
									"src": "804:133:5"
								},
								{
									"anonymous": false,
									"id": 1927,
									"name": "FeeRecipientSet",
									"nameLocation": "949:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldRecipient",
												"nameLocation": "973:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "965:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRecipient",
												"nameLocation": "995:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "987:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:44:5"
									},
									"src": "943:66:5"
								},
								{
									"anonymous": false,
									"id": 1933,
									"name": "FlashLoanFeeSet",
									"nameLocation": "1021:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFlashLoanFee",
												"nameLocation": "1045:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "1037:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFlashLoanFee",
												"nameLocation": "1070:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "1062:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:50:5"
									},
									"src": "1015:72:5"
								},
								{
									"anonymous": false,
									"id": 1954,
									"name": "FeeParametersSet",
									"nameLocation": "1099:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1141:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1125:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"indexed": true,
												"mutability": "mutable",
												"name": "LBPair",
												"nameLocation": "1173:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1157:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2405",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1936,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2405,
														"src": "1157:7:5"
													},
													"referencedDeclaration": 2405,
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2405",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseFactor",
												"nameLocation": "1197:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1189:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"indexed": false,
												"mutability": "mutable",
												"name": "filterPeriod",
												"nameLocation": "1225:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1217:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"indexed": false,
												"mutability": "mutable",
												"name": "decayPeriod",
												"nameLocation": "1255:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1247:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"indexed": false,
												"mutability": "mutable",
												"name": "reductionFactor",
												"nameLocation": "1284:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1276:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1948,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableFeeControl",
												"nameLocation": "1317:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1309:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolShare",
												"nameLocation": "1353:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1345:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxVolatilityAccumulated",
												"nameLocation": "1384:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "1376:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:299:5"
									},
									"src": "1093:322:5"
								},
								{
									"anonymous": false,
									"id": 1958,
									"name": "FactoryLockedStatusUpdated",
									"nameLocation": "1427:26:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1459:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "1454:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1454:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:15:5"
									},
									"src": "1421:48:5"
								},
								{
									"anonymous": false,
									"id": 1964,
									"name": "LBPairImplementationSet",
									"nameLocation": "1481:23:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldLBPairImplementation",
												"nameLocation": "1513:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1505:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"indexed": false,
												"mutability": "mutable",
												"name": "LBPairImplementation",
												"nameLocation": "1546:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "1538:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:63:5"
									},
									"src": "1475:93:5"
								},
								{
									"anonymous": false,
									"id": 1971,
									"name": "LBPairIgnoredStateChanged",
									"nameLocation": "1580:25:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"indexed": true,
												"mutability": "mutable",
												"name": "LBPair",
												"nameLocation": "1622:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "1606:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2405",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1965,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2405,
														"src": "1606:7:5"
													},
													"referencedDeclaration": 2405,
													"src": "1606:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2405",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"indexed": false,
												"mutability": "mutable",
												"name": "ignored",
												"nameLocation": "1635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "1630:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1630:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:38:5"
									},
									"src": "1574:70:5"
								},
								{
									"anonymous": false,
									"id": 1989,
									"name": "PresetSet",
									"nameLocation": "1656:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseFactor",
												"nameLocation": "1683:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1675:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"indexed": false,
												"mutability": "mutable",
												"name": "filterPeriod",
												"nameLocation": "1711:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1703:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"indexed": false,
												"mutability": "mutable",
												"name": "decayPeriod",
												"nameLocation": "1741:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1733:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"indexed": false,
												"mutability": "mutable",
												"name": "reductionFactor",
												"nameLocation": "1770:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1762:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableFeeControl",
												"nameLocation": "1803:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1795:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolShare",
												"nameLocation": "1839:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1831:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxVolatilityAccumulated",
												"nameLocation": "1870:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1862:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"indexed": false,
												"mutability": "mutable",
												"name": "sampleLifetime",
												"nameLocation": "1912:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "1904:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:267:5"
									},
									"src": "1650:283:5"
								},
								{
									"anonymous": false,
									"id": 1991,
									"name": "PresetRemoved",
									"nameLocation": "1945:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:2:5"
									},
									"src": "1939:22:5"
								},
								{
									"anonymous": false,
									"id": 1996,
									"name": "QuoteAssetAdded",
									"nameLocation": "1973:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"indexed": true,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "2004:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "1989:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1992,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "1989:6:5"
													},
													"referencedDeclaration": 157,
													"src": "1989:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:27:5"
									},
									"src": "1967:49:5"
								},
								{
									"anonymous": false,
									"id": 2001,
									"name": "QuoteAssetRemoved",
									"nameLocation": "2028:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"indexed": true,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "2061:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2046:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1997,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2046:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2046:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:27:5"
									},
									"src": "2022:51:5"
								},
								{
									"functionSelector": "bc063e1a",
									"id": 2006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_FEE",
									"nameLocation": "2088:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:2:5"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "2121:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:9:5"
									},
									"scope": 2116,
									"src": "2079:51:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "509ceb90",
									"id": 2011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "LBPairImplementation",
									"nameLocation": "2346:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:2:5"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "2392:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:9:5"
									},
									"scope": 2116,
									"src": "2337:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "80c5061e",
									"id": 2016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfQuoteAssets",
									"nameLocation": "2416:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:2:5"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "2464:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:9:5"
									},
									"scope": 2116,
									"src": "2407:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f89a4cd5",
									"id": 2024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAsset",
									"nameLocation": "2488:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2510:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "2502:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:15:5"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "2540:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2021,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2020,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:8:5"
									},
									"scope": 2116,
									"src": "2479:69:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27721842",
									"id": 2032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isQuoteAsset",
									"nameLocation": "2563:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2583:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2576:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2576:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2576:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2575:14:5"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "2613:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2613:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:6:5"
									},
									"scope": 2116,
									"src": "2554:65:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46904840",
									"id": 2037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeRecipient",
									"nameLocation": "2634:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2646:2:5"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "2672:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:9:5"
									},
									"scope": 2116,
									"src": "2625:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4847cdc8",
									"id": 2042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoanFee",
									"nameLocation": "2696:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:2:5"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2734:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:9:5"
									},
									"scope": 2116,
									"src": "2687:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c779d6d",
									"id": 2047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "creationUnlocked",
									"nameLocation": "2758:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2774:2:5"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "2800:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2800:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2799:6:5"
									},
									"scope": 2116,
									"src": "2749:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "72e47b8c",
									"id": 2055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allLBPairs",
									"nameLocation": "2821:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2840:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "2832:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:12:5"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2055,
												"src": "2862:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2405",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 2052,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2051,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2405,
														"src": "2862:7:5"
													},
													"referencedDeclaration": 2405,
													"src": "2862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2405",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:9:5"
									},
									"scope": 2116,
									"src": "2812:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e937c3a",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfLBPairs",
									"nameLocation": "2886:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2904:2:5"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "2930:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2930:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2929:9:5"
									},
									"scope": 2116,
									"src": "2877:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eaec42a4",
									"id": 2072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLBPairInformation",
									"nameLocation": "2954:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "2991:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "2984:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2061,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2984:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "3014:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "3007:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2064,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3007:6:5"
													},
													"referencedDeclaration": 157,
													"src": "3007:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:52:5"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "3050:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1908_memory_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												},
												"typeName": {
													"id": 2069,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2068,
														"name": "LBPairInformation",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1908,
														"src": "3050:17:5"
													},
													"referencedDeclaration": 1908,
													"src": "3050:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1908_storage_ptr",
														"typeString": "struct ILBFactory.LBPairInformation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:26:5"
									},
									"scope": 2116,
									"src": "2945:131:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b0384781",
									"id": 2077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLBPairImplementation",
									"nameLocation": "3707:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "LBPairImplementation",
												"nameLocation": "3739:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "3731:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:30:5"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3769:0:5"
									},
									"scope": 2116,
									"src": "3698:72:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52e2cf8e",
									"id": 2093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createLBPair",
									"nameLocation": "3785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "3814:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3807:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2078,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3807:6:5"
													},
													"referencedDeclaration": 157,
													"src": "3807:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "3837:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3830:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3830:6:5"
													},
													"referencedDeclaration": 157,
													"src": "3830:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "activeId",
												"nameLocation": "3860:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2084,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3853:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "_vtokenFactional",
												"nameLocation": "3883:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3878:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3878:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:108:5"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "3932:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3924:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2405",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 2090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2089,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2405,
														"src": "3924:7:5"
													},
													"referencedDeclaration": 2405,
													"src": "3924:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2405",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:14:5"
									},
									"scope": 2116,
									"src": "3776:162:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e74b981b",
									"id": 2098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeRecipient",
									"nameLocation": "4805:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "feeRecipient",
												"nameLocation": "4829:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "4821:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4821:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4820:22:5"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4851:0:5"
									},
									"scope": 2116,
									"src": "4796:56:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "22f3fe14",
									"id": 2103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFactoryLockedState",
									"nameLocation": "4932:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "locked",
												"nameLocation": "4959:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2103,
												"src": "4954:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4954:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:13:5"
									},
									"returnParameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4975:0:5"
									},
									"scope": 2116,
									"src": "4923:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a440923",
									"id": 2109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addQuoteAsset",
									"nameLocation": "4991:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "5012:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "5005:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2105,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2104,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "5005:6:5"
													},
													"referencedDeclaration": 157,
													"src": "5005:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5004:19:5"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5032:0:5"
									},
									"scope": 2116,
									"src": "4982:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddbfd941",
									"id": 2115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeQuoteAsset",
									"nameLocation": "5048:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "5072:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "5065:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2110,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "5065:6:5"
													},
													"referencedDeclaration": 157,
													"src": "5065:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5064:19:5"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5092:0:5"
									},
									"scope": 2116,
									"src": "5039:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2117,
							"src": "293:4856:5",
							"usedErrors": []
						}
					],
					"src": "33:5117:5"
				},
				"id": 5
			},
			"Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol",
					"exportedSymbols": {
						"IERC20": [
							157
						],
						"ILBFlashLoanCallback": [
							2137
						]
					},
					"id": 2138,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2118,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2119,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2138,
							"sourceUnit": 158,
							"src": "58:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILBFlashLoanCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2120,
								"nodeType": "StructuredDocumentation",
								"src": "116:141:6",
								"text": "@title Liquidity Book Flashloan Callback Interface\n @author Trader Joe\n @notice Required interface to interact with LB flash loans"
							},
							"fullyImplemented": false,
							"id": 2137,
							"linearizedBaseContracts": [
								2137
							],
							"name": "ILBFlashLoanCallback",
							"nameLocation": "267:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5dbacec5",
									"id": 2136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "LBFlashLoanCallback",
									"nameLocation": "303:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "340:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "332:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "363:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "356:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2123,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "356:6:6"
													},
													"referencedDeclaration": 157,
													"src": "356:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "386:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "378:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "410:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "402:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "438:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "423:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "423:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:126:6"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "467:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:9:6"
									},
									"scope": 2137,
									"src": "294:182:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2138,
							"src": "257:221:6",
							"usedErrors": []
						}
					],
					"src": "33:446:6"
				},
				"id": 6
			},
			"Midas/joe-v2-main/src/interfaces/ILBPair.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBPair.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2971
						],
						"FeeHelper": [
							3128
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBFlashLoanCallback": [
							2137
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 2406,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2139,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2406,
							"sourceUnit": 158,
							"src": "58:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/FeeHelper.sol",
							"file": "../libraries/FeeHelper.sol",
							"id": 2141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2406,
							"sourceUnit": 3129,
							"src": "116:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBFactory.sol",
							"file": "./ILBFactory.sol",
							"id": 2142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2406,
							"sourceUnit": 2117,
							"src": "153:26:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol",
							"file": "./ILBFlashLoanCallback.sol",
							"id": 2143,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2406,
							"sourceUnit": 2138,
							"src": "180:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILBPair",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2144,
								"nodeType": "StructuredDocumentation",
								"src": "218:114:7",
								"text": "@title Liquidity Book Pair Interface\n @author Trader Joe\n @notice Required interface of LBPair contract"
							},
							"fullyImplemented": false,
							"id": 2405,
							"linearizedBaseContracts": [
								2405
							],
							"name": "ILBPair",
							"nameLocation": "342:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ILBPair.Bin",
									"id": 2153,
									"members": [
										{
											"constant": false,
											"id": 2146,
											"mutability": "mutable",
											"name": "reserveX",
											"nameLocation": "561:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2153,
											"src": "553:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 2145,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "553:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2148,
											"mutability": "mutable",
											"name": "reserveY",
											"nameLocation": "587:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2153,
											"src": "579:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 2147,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2150,
											"mutability": "mutable",
											"name": "accTokenXPerShare",
											"nameLocation": "613:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 2153,
											"src": "605:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2149,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2152,
											"mutability": "mutable",
											"name": "accTokenYPerShare",
											"nameLocation": "648:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 2153,
											"src": "640:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2151,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "640:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bin",
									"nameLocation": "539:3:7",
									"nodeType": "StructDefinition",
									"scope": 2405,
									"src": "532:140:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ILBPair.PairInformation",
									"id": 2163,
									"members": [
										{
											"constant": false,
											"id": 2155,
											"mutability": "mutable",
											"name": "activeId",
											"nameLocation": "1645:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2163,
											"src": "1638:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2154,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1638:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2157,
											"mutability": "mutable",
											"name": "reserveX",
											"nameLocation": "1671:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2163,
											"src": "1663:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint136",
												"typeString": "uint136"
											},
											"typeName": {
												"id": 2156,
												"name": "uint136",
												"nodeType": "ElementaryTypeName",
												"src": "1663:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2159,
											"mutability": "mutable",
											"name": "reserveY",
											"nameLocation": "1697:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2163,
											"src": "1689:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint136",
												"typeString": "uint136"
											},
											"typeName": {
												"id": 2158,
												"name": "uint136",
												"nodeType": "ElementaryTypeName",
												"src": "1689:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2162,
											"mutability": "mutable",
											"name": "feesY",
											"nameLocation": "1742:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 2163,
											"src": "1715:32:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeesDistribution_$3011_storage_ptr",
												"typeString": "struct FeeHelper.FeesDistribution"
											},
											"typeName": {
												"id": 2161,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2160,
													"name": "FeeHelper.FeesDistribution",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3011,
													"src": "1715:26:7"
												},
												"referencedDeclaration": 3011,
												"src": "1715:26:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeesDistribution_$3011_storage_ptr",
													"typeString": "struct FeeHelper.FeesDistribution"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PairInformation",
									"nameLocation": "1612:15:7",
									"nodeType": "StructDefinition",
									"scope": 2405,
									"src": "1605:149:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ILBPair.Fees",
									"id": 2168,
									"members": [
										{
											"constant": false,
											"id": 2165,
											"mutability": "mutable",
											"name": "tokenX",
											"nameLocation": "2129:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 2168,
											"src": "2121:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2164,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2121:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2167,
											"mutability": "mutable",
											"name": "tokenY",
											"nameLocation": "2153:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 2168,
											"src": "2145:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2166,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2145:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Fees",
									"nameLocation": "2106:4:7",
									"nodeType": "StructDefinition",
									"scope": 2405,
									"src": "2099:67:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ILBPair.MintInfo",
									"id": 2183,
									"members": [
										{
											"constant": false,
											"id": 2170,
											"mutability": "mutable",
											"name": "amountXIn",
											"nameLocation": "3199:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 2183,
											"src": "3191:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2169,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3191:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2172,
											"mutability": "mutable",
											"name": "amountYIn",
											"nameLocation": "3226:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 2183,
											"src": "3218:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3218:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2174,
											"mutability": "mutable",
											"name": "amountXAddedToPair",
											"nameLocation": "3253:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 2183,
											"src": "3245:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2173,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3245:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2176,
											"mutability": "mutable",
											"name": "amountYAddedToPair",
											"nameLocation": "3289:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 2183,
											"src": "3281:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3281:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2178,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "3325:2:7",
											"nodeType": "VariableDeclaration",
											"scope": 2183,
											"src": "3317:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3317:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2180,
											"mutability": "mutable",
											"name": "amountX",
											"nameLocation": "3345:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 2183,
											"src": "3337:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3337:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2182,
											"mutability": "mutable",
											"name": "amountY",
											"nameLocation": "3370:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 2183,
											"src": "3362:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2181,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3362:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintInfo",
									"nameLocation": "3172:8:7",
									"nodeType": "StructDefinition",
									"scope": 2405,
									"src": "3165:219:7",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 2199,
									"name": "Swap",
									"nameLocation": "3396:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3426:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3410:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3458:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3442:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3493:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3477:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"indexed": false,
												"mutability": "mutable",
												"name": "swapForY",
												"nameLocation": "3510:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3505:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3536:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3528:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3562:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3554:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3554:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"indexed": false,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "3589:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "3581:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3400:199:7"
									},
									"src": "3390:210:7"
								},
								{
									"anonymous": false,
									"id": 2211,
									"name": "CompositionFee",
									"nameLocation": "3613:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3653:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3637:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3685:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3669:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3720:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3704:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"indexed": false,
												"mutability": "mutable",
												"name": "feesX",
												"nameLocation": "3740:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3732:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"indexed": false,
												"mutability": "mutable",
												"name": "feesY",
												"nameLocation": "3763:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "3755:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:147:7"
									},
									"src": "3607:168:7"
								},
								{
									"anonymous": false,
									"id": 2223,
									"name": "DepositedToBin",
									"nameLocation": "3787:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3827:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "3811:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3811:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3859:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "3843:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3894:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "3878:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "3914:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "3906:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "3939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2223,
												"src": "3931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:151:7"
									},
									"src": "3781:172:7"
								},
								{
									"anonymous": false,
									"id": 2235,
									"name": "WithdrawnFromBin",
									"nameLocation": "3965:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4007:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "3991:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4039:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "4023:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4074:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "4058:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4058:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "4094:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "4086:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "4119:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "4111:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4111:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:151:7"
									},
									"src": "3959:174:7"
								},
								{
									"anonymous": false,
									"id": 2245,
									"name": "FeesCollected",
									"nameLocation": "4145:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4175:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4159:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4199:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4183:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "4218:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4210:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4210:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "4235:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4227:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4227:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:85:7"
									},
									"src": "4139:105:7"
								},
								{
									"anonymous": false,
									"id": 2255,
									"name": "ProtocolFeesCollected",
									"nameLocation": "4256:21:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4294:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "4278:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2249,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4318:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "4302:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4302:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "4337:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "4329:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "4354:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "4346:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4277:85:7"
									},
									"src": "4250:113:7"
								},
								{
									"anonymous": false,
									"id": 2261,
									"name": "OracleSizeIncreased",
									"nameLocation": "4375:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousSize",
												"nameLocation": "4403:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "4395:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4395:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSize",
												"nameLocation": "4425:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "4417:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4394:39:7"
									},
									"src": "4369:65:7"
								},
								{
									"functionSelector": "16dc165b",
									"id": 2267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenX",
									"nameLocation": "4449:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4455:2:7"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "4481:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2263,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "4481:6:7"
													},
													"referencedDeclaration": 157,
													"src": "4481:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4480:8:7"
									},
									"scope": 2405,
									"src": "4440:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b7d19fc4",
									"id": 2273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenY",
									"nameLocation": "4504:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4510:2:7"
									},
									"returnParameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2273,
												"src": "4536:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2269,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "4536:6:7"
													},
													"referencedDeclaration": 157,
													"src": "4536:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:8:7"
									},
									"scope": 2405,
									"src": "4495:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 2279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "4559:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4566:2:7"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2279,
												"src": "4592:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBFactory_$2116",
													"typeString": "contract ILBFactory"
												},
												"typeName": {
													"id": 2276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2275,
														"name": "ILBFactory",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2116,
														"src": "4592:10:7"
													},
													"referencedDeclaration": 2116,
													"src": "4592:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBFactory_$2116",
														"typeString": "contract ILBFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:12:7"
									},
									"scope": 2405,
									"src": "4550:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1b05b83e",
									"id": 2288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesAndId",
									"nameLocation": "4619:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4635:2:7"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "reserveX",
												"nameLocation": "4706:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "4698:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2284,
												"mutability": "mutable",
												"name": "reserveY",
												"nameLocation": "4736:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "4728:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "activeId",
												"nameLocation": "4766:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "4758:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4684:100:7"
									},
									"scope": 2405,
									"src": "4610:175:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a582cdaa",
									"id": 2295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGlobalFees",
									"nameLocation": "4800:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4813:2:7"
									},
									"returnParameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "feesYTotal",
												"nameLocation": "4886:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "4878:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2290,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "feesYProtocol",
												"nameLocation": "4919:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "4911:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2292,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:80:7"
									},
									"scope": 2405,
									"src": "4791:152:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "98c7adf3",
									"id": 2301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeParameters",
									"nameLocation": "4959:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4972:2:7"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "4998:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 2298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2297,
														"name": "FeeHelper.FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3006,
														"src": "4998:23:7"
													},
													"referencedDeclaration": 3006,
													"src": "4998:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$3006_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4997:32:7"
									},
									"scope": 2405,
									"src": "4950:80:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f919a83",
									"id": 2310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "findFirstNonEmptyBinId",
									"nameLocation": "5045:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "id_",
												"nameLocation": "5075:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "5068:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2302,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5068:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "sentTokenY",
												"nameLocation": "5085:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "5080:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5080:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5067:29:7"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5127:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "5120:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2307,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5120:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:11:7"
									},
									"scope": 2405,
									"src": "5036:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0abe9688",
									"id": 2319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBin",
									"nameLocation": "5146:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5160:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "5153:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2311,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5153:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5152:11:7"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "reserveX",
												"nameLocation": "5195:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "5187:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5187:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "reserveY",
												"nameLocation": "5213:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "5205:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5186:36:7"
									},
									"scope": 2405,
									"src": "5137:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f7cff1f8",
									"id": 2329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingFees",
									"nameLocation": "5238:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5258:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "5250:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5284:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "5267:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2322,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5267:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2323,
													"nodeType": "ArrayTypeName",
													"src": "5267:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:39:7"
									},
									"returnParameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "5344:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "5336:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:17:7"
									},
									"scope": 2405,
									"src": "5229:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53c059a0",
									"id": 2340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "5368:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "sentTokenY",
												"nameLocation": "5378:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "5373:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5373:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5398:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "5390:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:29:7"
									},
									"returnParameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "amountXOut",
												"nameLocation": "5428:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "5420:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "amountYOut",
												"nameLocation": "5448:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "5440:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:40:7"
									},
									"scope": 2405,
									"src": "5359:101:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "714c8592",
									"id": 2361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5476:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5509:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5490:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2341,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5490:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2342,
													"nodeType": "ArrayTypeName",
													"src": "5490:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "distributionX",
												"nameLocation": "5541:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5522:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2344,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5522:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2345,
													"nodeType": "ArrayTypeName",
													"src": "5522:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "distributionY",
												"nameLocation": "5583:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5564:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2347,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5564:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2348,
													"nodeType": "ArrayTypeName",
													"src": "5564:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5614:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5606:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5606:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:142:7"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "amountXAddedToPair",
												"nameLocation": "5678:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5670:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5670:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "amountYAddedToPair",
												"nameLocation": "5718:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5710:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "liquidityMinted",
												"nameLocation": "5767:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "5750:32:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2357,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5750:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2358,
													"nodeType": "ArrayTypeName",
													"src": "5750:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:136:7"
									},
									"scope": 2405,
									"src": "5467:326:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0acd451d",
									"id": 2376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "5808:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5841:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "5822:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2362,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5822:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2363,
													"nodeType": "ArrayTypeName",
													"src": "5822:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "5873:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "5854:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2365,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5854:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2366,
													"nodeType": "ArrayTypeName",
													"src": "5854:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5898:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "5890:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:94:7"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "5933:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "5925:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "5950:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "5942:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5924:34:7"
									},
									"scope": 2405,
									"src": "5799:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "225b20b9",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectFees",
									"nameLocation": "5975:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5995:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "5987:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5987:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6023:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "6004:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2379,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6004:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2380,
													"nodeType": "ArrayTypeName",
													"src": "6004:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5986:41:7"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "6054:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "6046:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6045:17:7"
									},
									"scope": 2405,
									"src": "5966:97:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1af5b9a",
									"id": 2391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocolFees",
									"nameLocation": "6078:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6097:2:7"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "6126:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "6118:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2388,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:17:7"
									},
									"scope": 2405,
									"src": "6069:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8c6abc0f",
									"id": 2404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "6154:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "6181:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6174:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2392,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "6174:6:7"
													},
													"referencedDeclaration": 157,
													"src": "6174:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "6204:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6197:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2395,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "6197:6:7"
													},
													"referencedDeclaration": 157,
													"src": "6197:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "activeId",
												"nameLocation": "6227:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6220:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2398,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "6220:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "_vtokenFactional",
												"nameLocation": "6250:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6245:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6245:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:108:7"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6281:0:7"
									},
									"scope": 2405,
									"src": "6145:137:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2406,
							"src": "332:5952:7",
							"usedErrors": []
						}
					],
					"src": "33:6252:7"
				},
				"id": 7
			},
			"Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol",
					"exportedSymbols": {
						"IPendingOwnable": [
							2443
						]
					},
					"id": 2444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2407,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPendingOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2408,
								"nodeType": "StructuredDocumentation",
								"src": "58:153:8",
								"text": "@title Liquidity Book Pending Ownable Interface\n @author Trader Joe\n @notice Required interface of Pending Ownable contract used for LBFactory"
							},
							"fullyImplemented": false,
							"id": 2443,
							"linearizedBaseContracts": [
								2443
							],
							"name": "IPendingOwnable",
							"nameLocation": "221:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 2412,
									"name": "PendingOwnerSet",
									"nameLocation": "249:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"indexed": true,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "281:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "265:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:30:8"
									},
									"src": "243:52:8"
								},
								{
									"anonymous": false,
									"id": 2418,
									"name": "OwnershipTransferred",
									"nameLocation": "306:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "343:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "327:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "374:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "358:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:57:8"
									},
									"src": "300:84:8"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 2423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "399:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:8"
									},
									"returnParameters": {
										"id": 2422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "430:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:9:8"
									},
									"scope": 2443,
									"src": "390:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e30c3978",
									"id": 2428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "454:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:8"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2428,
												"src": "492:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:9:8"
									},
									"scope": 2443,
									"src": "445:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c42069ec",
									"id": 2433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPendingOwner",
									"nameLocation": "516:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "540:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "532:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:22:8"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:8"
									},
									"scope": 2443,
									"src": "507:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "67ab8a4e",
									"id": 2436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokePendingOwner",
									"nameLocation": "578:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:2:8"
									},
									"returnParameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:8"
									},
									"scope": 2443,
									"src": "569:39:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f9dca989",
									"id": 2439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "becomeOwner",
									"nameLocation": "623:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:8"
									},
									"returnParameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:8"
									},
									"scope": 2443,
									"src": "614:32:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "715018a6",
									"id": 2442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceOwnership",
									"nameLocation": "661:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:2:8"
									},
									"returnParameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:8"
									},
									"scope": 2443,
									"src": "652:38:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2444,
							"src": "211:481:8",
							"usedErrors": []
						}
					],
					"src": "33:660:8"
				},
				"id": 8
			},
			"Midas/joe-v2-main/src/libraries/BinHelper.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/BinHelper.sol",
					"exportedSymbols": {
						"BinHelper": [
							2569
						],
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2947
						],
						"Constants": [
							2971
						],
						"FeeHelper": [
							3128
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBFlashLoanCallback": [
							2137
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128": [
							3349
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3717
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 2570,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2445,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 2446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2570,
							"sourceUnit": 1314,
							"src": "58:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/Math128x128.sol",
							"file": "./Math128x128.sol",
							"id": 2447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2570,
							"sourceUnit": 3350,
							"src": "84:27:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BinHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2448,
								"nodeType": "StructuredDocumentation",
								"src": "113:130:9",
								"text": "@title Liquidity Book Bin Helper Library\n @author Trader Joe\n @notice Contract used to convert bin ID to price and back"
							},
							"fullyImplemented": true,
							"id": 2569,
							"linearizedBaseContracts": [
								2569
							],
							"name": "BinHelper",
							"nameLocation": "251:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2451,
									"libraryName": {
										"id": 2449,
										"name": "Math128x128",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3349,
										"src": "273:11:9"
									},
									"nodeType": "UsingForDirective",
									"src": "267:30:9",
									"typeName": {
										"id": 2450,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2456,
									"mutability": "constant",
									"name": "REAL_ID_SHIFT",
									"nameLocation": "327:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2569,
									"src": "303:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2452,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "303:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_8388608_by_1",
											"typeString": "int_const 8388608"
										},
										"id": 2455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 2453,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "343:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "3233",
											"id": 2454,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "348:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_23_by_1",
												"typeString": "int_const 23"
											},
											"value": "23"
										},
										"src": "343:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8388608_by_1",
											"typeString": "int_const 8388608"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "750:390:9",
										"statements": [
											{
												"id": 2507,
												"nodeType": "UncheckedBlock",
												"src": "760:374:9",
												"statements": [
													{
														"assignments": [
															2465
														],
														"declarations": [
															{
																"constant": false,
																"id": 2465,
																"mutability": "mutable",
																"name": "_binStepValue",
																"nameLocation": "792:13:9",
																"nodeType": "VariableDeclaration",
																"scope": 2507,
																"src": "784:21:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2464,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "784:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2468,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2466,
																"name": "_getBPValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "808:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																	"typeString": "function () pure returns (uint256)"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "808:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "784:37:9"
													},
													{
														"assignments": [
															2470
														],
														"declarations": [
															{
																"constant": false,
																"id": 2470,
																"mutability": "mutable",
																"name": "_id",
																"nameLocation": "930:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 2507,
																"src": "923:10:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2469,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "923:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2480,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2471,
																"name": "REAL_ID_SHIFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "936:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2472,
																			"name": "_price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2459,
																			"src": "952:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "log2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3292,
																		"src": "952:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (int256)"
																		}
																	},
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "952:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2475,
																			"name": "_binStepValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2465,
																			"src": "968:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "log2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3292,
																		"src": "968:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (int256)"
																		}
																	},
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "968:20:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "952:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "936:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "923:65:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2481,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "1007:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1013:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1007:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2486,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2470,
																			"src": "1026:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1018:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2484,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1018:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1018:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1038:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint24_$",
																					"typeString": "type(uint24)"
																				},
																				"typeName": {
																					"id": 2489,
																					"name": "uint24",
																					"nodeType": "ElementaryTypeName",
																					"src": "1038:6:9",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint24_$",
																					"typeString": "type(uint24)"
																				}
																			],
																			"id": 2488,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "1033:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1033:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint24",
																			"typeString": "type(uint24)"
																		}
																	},
																	"id": 2492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "1033:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "1018:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1007:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2498,
														"nodeType": "IfStatement",
														"src": "1003:79:9",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2495,
																	"name": "BinHelper__IdOverflows",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "1058:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1058:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2497,
															"nodeType": "RevertStatement",
															"src": "1051:31:9"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2503,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2470,
																			"src": "1118:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1110:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2501,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1110:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1110:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1103:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint24_$",
																	"typeString": "type(uint24)"
																},
																"typeName": {
																	"id": 2499,
																	"name": "uint24",
																	"nodeType": "ElementaryTypeName",
																	"src": "1103:6:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"functionReturnParameters": 2463,
														"id": 2506,
														"nodeType": "Return",
														"src": "1096:27:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2457,
										"nodeType": "StructuredDocumentation",
										"src": "357:317:9",
										"text": "@notice Returns the id corresponding to the given price\n @dev The id may be inaccurate due to rounding issues, always trust getPriceFromId rather than\n getIdFromPrice\n @param _price The price of y per x as a 128.128-binary fixed-point number\n @return The id corresponding to this price"
									},
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIdFromPrice",
									"nameLocation": "688:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "711:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "703:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:16:9"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "742:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2461,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:8:9"
									},
									"scope": 2569,
									"src": "679:461:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2547,
										"nodeType": "Block",
										"src": "1531:223:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2517,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "1545:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1564:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 2521,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1564:6:9",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			}
																		],
																		"id": 2520,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1559:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1559:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint24",
																		"typeString": "type(uint24)"
																	}
																},
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1559:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1551:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2518,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1551:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1551:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1545:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2530,
												"nodeType": "IfStatement",
												"src": "1541:68:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2527,
															"name": "BinHelper__IdOverflows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "1585:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1585:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2529,
													"nodeType": "RevertStatement",
													"src": "1578:31:9"
												}
											},
											{
												"id": 2546,
												"nodeType": "UncheckedBlock",
												"src": "1619:129:9",
												"statements": [
													{
														"assignments": [
															2532
														],
														"declarations": [
															{
																"constant": false,
																"id": 2532,
																"mutability": "mutable",
																"name": "_realId",
																"nameLocation": "1650:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 2546,
																"src": "1643:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2531,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1643:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2539,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2535,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2512,
																		"src": "1667:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1660:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 2533,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1660:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1660:11:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2537,
																"name": "REAL_ID_SHIFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "1674:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1660:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1643:44:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2543,
																	"name": "_realId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2532,
																	"src": "1729:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2540,
																		"name": "_getBPValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2568,
																		"src": "1709:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 2541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1709:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3348,
																"src": "1709:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,int256) pure returns (uint256)"
																}
															},
															"id": 2544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1709:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2516,
														"id": 2545,
														"nodeType": "Return",
														"src": "1702:35:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "1146:311:9",
										"text": "@notice Returns the price corresponding to the given ID, as a 128.128-binary fixed-point number\n @dev This is the trusted function to link id to price, the other way may be inaccurate\n @param _id The id\n @return The price corresponding to this id, as a 128.128-binary fixed-point number"
									},
									"id": 2548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFromId",
									"nameLocation": "1471:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1494:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "1486:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:13:9"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "1522:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1521:9:9"
									},
									"scope": 2569,
									"src": "1462:292:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "1971:229:9",
										"statements": [
											{
												"id": 2566,
												"nodeType": "UncheckedBlock",
												"src": "1981:213:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2554,
																	"name": "Constants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2971,
																	"src": "2108:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																		"typeString": "type(library Constants)"
																	}
																},
																"id": 2555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "SCALE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2958,
																"src": "2108:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2127:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"expression": {
																					"id": 2557,
																					"name": "Constants",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2971,
																					"src": "2132:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																						"typeString": "type(library Constants)"
																					}
																				},
																				"id": 2558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "SCALE_OFFSET",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2953,
																				"src": "2132:22:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2127:27:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2560,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2126:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 2561,
																		"name": "Constants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2971,
																		"src": "2158:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																			"typeString": "type(library Constants)"
																		}
																	},
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "BASIS_POINT_MAX",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2964,
																	"src": "2158:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2126:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2553,
														"id": 2565,
														"nodeType": "Return",
														"src": "2101:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2549,
										"nodeType": "StructuredDocumentation",
										"src": "1760:151:9",
										"text": "@notice Returns the (1 + bp) value as a 128.128-decimal fixed-point number\n @return The (1+bp) value as a 128.128-decimal fixed-point number"
									},
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBPValue",
									"nameLocation": "1925:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1936:2:9"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "1962:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:9:9"
									},
									"scope": 2569,
									"src": "1916:284:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2570,
							"src": "243:1959:9",
							"usedErrors": []
						}
					],
					"src": "33:2170:9"
				},
				"id": 9
			},
			"Midas/joe-v2-main/src/libraries/BitMath.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							2947
						]
					},
					"id": 2948,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2571,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2572,
								"nodeType": "StructuredDocumentation",
								"src": "58:120:10",
								"text": "@title Liquidity Book Bit Math Library\n @author Trader Joe\n @notice Helper contract used for bit calculations"
							},
							"fullyImplemented": true,
							"id": 2947,
							"linearizedBaseContracts": [
								2947
							],
							"name": "BitMath",
							"nameLocation": "186:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "752:109:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 2584,
														"name": "_rightSide",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "769:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2592,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2575,
																"src": "835:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2593,
																	"name": "_bit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "845:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "852:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "845:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 2591,
															"name": "closestBitLeft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "820:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 2596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "820:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "769:85:10",
													"trueExpression": {
														"arguments": [
															{
																"id": 2586,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2575,
																"src": "798:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2587,
																	"name": "_bit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2577,
																	"src": "808:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "815:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "808:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 2585,
															"name": "closestBitRight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "782:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 2590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "782:35:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2583,
												"id": 2598,
												"nodeType": "Return",
												"src": "762:92:10"
											}
										]
									},
									"documentation": {
										"id": 2573,
										"nodeType": "StructuredDocumentation",
										"src": "200:418:10",
										"text": "@notice Returns the closest non-zero bit of `integer` to the right (of left) of the `bit` bits that is not `bit`\n @param _integer The integer as a uint256\n @param _bit The bit index\n @param _rightSide Whether we're searching in the right side of the tree (true) or the left side (false)\n @return The index of the closest non-zero bit. If there is no closest bit, it returns max(uint256)"
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closestBit",
									"nameLocation": "632:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "_integer",
												"nameLocation": "660:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "652:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2577,
												"mutability": "mutable",
												"name": "_bit",
												"nameLocation": "684:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "678:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2576,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "678:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "_rightSide",
												"nameLocation": "703:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "698:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:77:10"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "743:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:9:10"
									},
									"scope": 2947,
									"src": "623:238:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "1242:105:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 2610,
														"name": "_isMostSignificant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "1259:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2615,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "1331:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2614,
															"name": "leastSignificantBit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "1311:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																"typeString": "function (uint256) pure returns (uint8)"
															}
														},
														"id": 2616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1311:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1259:81:10",
													"trueExpression": {
														"arguments": [
															{
																"id": 2612,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2603,
																"src": "1299:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2611,
															"name": "mostSignificantBit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "1280:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																"typeString": "function (uint256) pure returns (uint8)"
															}
														},
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1280:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2609,
												"id": 2618,
												"nodeType": "Return",
												"src": "1252:88:10"
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "867:273:10",
										"text": "@notice Returns the most (or least) significant bit of `_integer`\n @param _integer The integer\n @param _isMostSignificant Whether we want the most (true) or the least (false) significant bit\n @return The index of the most (or least) significant bit"
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "significantBit",
									"nameLocation": "1154:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "_integer",
												"nameLocation": "1177:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "1169:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "_isMostSignificant",
												"nameLocation": "1192:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "1187:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2604,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1187:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:43:10"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "1235:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2607,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1235:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:7:10"
									},
									"scope": 2947,
									"src": "1145:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2657,
										"nodeType": "Block",
										"src": "1761:263:10",
										"statements": [
											{
												"id": 2656,
												"nodeType": "UncheckedBlock",
												"src": "1771:247:10",
												"statements": [
													{
														"assignments": [
															2631
														],
														"declarations": [
															{
																"constant": false,
																"id": 2631,
																"mutability": "mutable",
																"name": "_shift",
																"nameLocation": "1803:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2656,
																"src": "1795:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2630,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1795:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2635,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "323535",
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2633,
																"name": "bit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "1818:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "1812:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1795:26:10"
													},
													{
														"expression": {
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2636,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "1835:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "<<=",
															"rightHandSide": {
																"id": 2637,
																"name": "_shift",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2631,
																"src": "1841:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1835:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2639,
														"nodeType": "ExpressionStatement",
														"src": "1835:12:10"
													},
													{
														"expression": {
															"condition": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2640,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "1947:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1952:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1947:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2643,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1946:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2650,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2623,
																			"src": "1996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2649,
																		"name": "mostSignificantBit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2816,
																		"src": "1977:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																			"typeString": "function (uint256) pure returns (uint8)"
																		}
																	},
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1977:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2652,
																	"name": "_shift",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2631,
																	"src": "2001:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1977:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1946:61:10",
															"trueExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1962:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2645,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1962:7:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2644,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1957:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1957:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1957:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2629,
														"id": 2655,
														"nodeType": "Return",
														"src": "1939:68:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "1353:321:10",
										"text": "@notice Returns the index of the closest bit on the right of x that is non null\n @param x The value as a uint256\n @param bit The index of the bit to start searching at\n @return id The index of the closest non null bit on the right of x.\n If there is no closest bit, it returns max(uint256)"
									},
									"id": 2658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closestBitRight",
									"nameLocation": "1688:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1712:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "1704:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "bit",
												"nameLocation": "1721:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "1715:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2624,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1715:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:22:10"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1757:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2658,
												"src": "1749:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:12:10"
									},
									"scope": 2947,
									"src": "1679:345:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2689,
										"nodeType": "Block",
										"src": "2435:141:10",
										"statements": [
											{
												"id": 2688,
												"nodeType": "UncheckedBlock",
												"src": "2445:125:10",
												"statements": [
													{
														"expression": {
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2668,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2661,
																"src": "2469:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2669,
																"name": "bit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2663,
																"src": "2475:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2469:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2671,
														"nodeType": "ExpressionStatement",
														"src": "2469:9:10"
													},
													{
														"expression": {
															"condition": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2672,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2661,
																			"src": "2501:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2506:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2501:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2500:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2682,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2661,
																			"src": "2551:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2681,
																		"name": "leastSignificantBit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2946,
																		"src": "2531:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																			"typeString": "function (uint256) pure returns (uint8)"
																		}
																	},
																	"id": 2683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2531:22:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2684,
																	"name": "bit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2663,
																	"src": "2556:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2531:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2500:59:10",
															"trueExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2516:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2677,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2516:7:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2676,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2511:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2511:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2511:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2667,
														"id": 2687,
														"nodeType": "Return",
														"src": "2493:66:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2659,
										"nodeType": "StructuredDocumentation",
										"src": "2030:319:10",
										"text": "@notice Returns the index of the closest bit on the left of x that is non null\n @param x The value as a uint256\n @param bit The index of the bit to start searching at\n @return id The index of the closest non null bit on the left of x.\n If there is no closest bit, it returns max(uint256)"
									},
									"id": 2690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closestBitLeft",
									"nameLocation": "2363:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2386:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "2378:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "bit",
												"nameLocation": "2395:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "2389:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2662,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2389:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:22:10"
									},
									"returnParameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2431:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "2423:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:12:10"
									},
									"scope": 2947,
									"src": "2354:222:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2815,
										"nodeType": "Block",
										"src": "2825:794:10",
										"statements": [
											{
												"id": 2814,
												"nodeType": "UncheckedBlock",
												"src": "2835:778:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2698,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "2863:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"id": 2701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2868:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2873:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2868:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "2863:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2712,
														"nodeType": "IfStatement",
														"src": "2859:88:10",
														"trueBody": {
															"id": 2711,
															"nodeType": "Block",
															"src": "2878:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 2705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2703,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "2896:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2902:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "2896:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2706,
																	"nodeType": "ExpressionStatement",
																	"src": "2896:9:10"
																},
																{
																	"expression": {
																		"id": 2709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2707,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "2923:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2929:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "2923:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2710,
																	"nodeType": "ExpressionStatement",
																	"src": "2923:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2713,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "2964:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2969:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2974:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2969:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "2964:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2727,
														"nodeType": "IfStatement",
														"src": "2960:86:10",
														"trueBody": {
															"id": 2726,
															"nodeType": "Block",
															"src": "2978:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "2996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3002:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "2996:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "2996:8:10"
																},
																{
																	"expression": {
																		"id": 2724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2722,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "3022:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3029:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "3022:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2725,
																	"nodeType": "ExpressionStatement",
																	"src": "3022:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2728,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "3063:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 2731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3068:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3073:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3068:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "3063:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2742,
														"nodeType": "IfStatement",
														"src": "3059:86:10",
														"trueBody": {
															"id": 2741,
															"nodeType": "Block",
															"src": "3077:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "3095:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3101:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "3095:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "3095:8:10"
																},
																{
																	"expression": {
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2737,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "3121:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3128:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "3121:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2740,
																	"nodeType": "ExpressionStatement",
																	"src": "3121:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2743,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "3162:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3172:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "3167:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "3162:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2757,
														"nodeType": "IfStatement",
														"src": "3158:86:10",
														"trueBody": {
															"id": 2756,
															"nodeType": "Block",
															"src": "3176:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "3194:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3200:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "3194:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "3194:8:10"
																},
																{
																	"expression": {
																		"id": 2754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2752,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "3220:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3227:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "3220:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2755,
																	"nodeType": "ExpressionStatement",
																	"src": "3220:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2758,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "3261:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3266:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3271:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3266:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "3261:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2772,
														"nodeType": "IfStatement",
														"src": "3257:83:10",
														"trueBody": {
															"id": 2771,
															"nodeType": "Block",
															"src": "3274:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "3292:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3298:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "3292:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "3292:7:10"
																},
																{
																	"expression": {
																		"id": 2769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2767,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "3317:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3324:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "3317:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2770,
																	"nodeType": "ExpressionStatement",
																	"src": "3317:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2773,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "3357:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"id": 2776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3362:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3367:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3362:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "3357:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2787,
														"nodeType": "IfStatement",
														"src": "3353:83:10",
														"trueBody": {
															"id": 2786,
															"nodeType": "Block",
															"src": "3370:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2778,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "3388:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3394:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "3388:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2781,
																	"nodeType": "ExpressionStatement",
																	"src": "3388:7:10"
																},
																{
																	"expression": {
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2782,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "3413:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3420:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "3413:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2785,
																	"nodeType": "ExpressionStatement",
																	"src": "3413:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2788,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "3453:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"id": 2791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3458:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3463:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "3458:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "3453:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2802,
														"nodeType": "IfStatement",
														"src": "3449:83:10",
														"trueBody": {
															"id": 2801,
															"nodeType": "Block",
															"src": "3466:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2793,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2693,
																			"src": "3484:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3490:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3484:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2796,
																	"nodeType": "ExpressionStatement",
																	"src": "3484:7:10"
																},
																{
																	"expression": {
																		"id": 2799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2797,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "3509:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3509:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2800,
																	"nodeType": "ExpressionStatement",
																	"src": "3509:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2803,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2693,
																"src": "3549:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"id": 2806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3554:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3559:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3554:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															},
															"src": "3549:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2813,
														"nodeType": "IfStatement",
														"src": "3545:58:10",
														"trueBody": {
															"id": 2812,
															"nodeType": "Block",
															"src": "3562:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2808,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2696,
																			"src": "3580:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3587:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3580:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2811,
																	"nodeType": "ExpressionStatement",
																	"src": "3580:8:10"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2691,
										"nodeType": "StructuredDocumentation",
										"src": "2582:165:10",
										"text": "@notice Returns the index of the most significant bit of x\n @param x The value as a uint256\n @return msb The index of the most significant bit of x"
									},
									"id": 2816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "2761:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2788:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "2780:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:11:10"
									},
									"returnParameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "msb",
												"nameLocation": "2820:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2816,
												"src": "2814:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2695,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2814:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:11:10"
									},
									"scope": 2947,
									"src": "2752:867:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "3871:825:10",
										"statements": [
											{
												"id": 2944,
												"nodeType": "UncheckedBlock",
												"src": "3881:809:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2824,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "3909:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3914:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "3909:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3921:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3909:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2838,
														"nodeType": "IfStatement",
														"src": "3905:88:10",
														"trueBody": {
															"id": 2837,
															"nodeType": "Block",
															"src": "3924:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2829,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2819,
																			"src": "3942:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3948:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "3942:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2832,
																	"nodeType": "ExpressionStatement",
																	"src": "3942:9:10"
																},
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2833,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "3969:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3975:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "3969:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "3969:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2839,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "4010:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4015:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "4010:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4021:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4010:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2853,
														"nodeType": "IfStatement",
														"src": "4006:86:10",
														"trueBody": {
															"id": 2852,
															"nodeType": "Block",
															"src": "4024:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2844,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2819,
																			"src": "4042:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4048:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "4042:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2847,
																	"nodeType": "ExpressionStatement",
																	"src": "4042:8:10"
																},
																{
																	"expression": {
																		"id": 2850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2848,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "4068:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4075:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "4068:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2851,
																	"nodeType": "ExpressionStatement",
																	"src": "4068:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2854,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "4109:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4114:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "4109:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4120:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4109:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2868,
														"nodeType": "IfStatement",
														"src": "4105:86:10",
														"trueBody": {
															"id": 2867,
															"nodeType": "Block",
															"src": "4123:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2859,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2819,
																			"src": "4141:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4147:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "4141:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2862,
																	"nodeType": "ExpressionStatement",
																	"src": "4141:8:10"
																},
																{
																	"expression": {
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2863,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "4167:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4174:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "4167:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2866,
																	"nodeType": "ExpressionStatement",
																	"src": "4167:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2869,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "4208:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4213:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "4208:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4219:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4208:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2883,
														"nodeType": "IfStatement",
														"src": "4204:86:10",
														"trueBody": {
															"id": 2882,
															"nodeType": "Block",
															"src": "4222:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2874,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2819,
																			"src": "4240:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4246:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "4240:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2877,
																	"nodeType": "ExpressionStatement",
																	"src": "4240:8:10"
																},
																{
																	"expression": {
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2878,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "4266:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4273:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "4266:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2881,
																	"nodeType": "ExpressionStatement",
																	"src": "4266:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2884,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "4307:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "4307:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4317:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4307:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2898,
														"nodeType": "IfStatement",
														"src": "4303:83:10",
														"trueBody": {
															"id": 2897,
															"nodeType": "Block",
															"src": "4320:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2889,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2819,
																			"src": "4338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4344:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "4338:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "4338:7:10"
																},
																{
																	"expression": {
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2893,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "4363:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4370:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "4363:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2896,
																	"nodeType": "ExpressionStatement",
																	"src": "4363:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2899,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "4403:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4408:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "4403:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4413:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4403:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2913,
														"nodeType": "IfStatement",
														"src": "4399:83:10",
														"trueBody": {
															"id": 2912,
															"nodeType": "Block",
															"src": "4416:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2904,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2819,
																			"src": "4434:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4440:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "4434:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2907,
																	"nodeType": "ExpressionStatement",
																	"src": "4434:7:10"
																},
																{
																	"expression": {
																		"id": 2910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2908,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "4459:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4466:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "4459:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2911,
																	"nodeType": "ExpressionStatement",
																	"src": "4459:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2914,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "4499:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4504:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "4499:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4509:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4499:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2928,
														"nodeType": "IfStatement",
														"src": "4495:83:10",
														"trueBody": {
															"id": 2927,
															"nodeType": "Block",
															"src": "4512:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2919,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2819,
																			"src": "4530:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4536:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "4530:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "4530:7:10"
																},
																{
																	"expression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2923,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "4555:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4562:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "4555:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2926,
																	"nodeType": "ExpressionStatement",
																	"src": "4555:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2929,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2819,
																	"src": "4595:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4600:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4595:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2939,
														"nodeType": "IfStatement",
														"src": "4591:58:10",
														"trueBody": {
															"id": 2938,
															"nodeType": "Block",
															"src": "4608:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2934,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2822,
																			"src": "4626:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4633:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4626:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2937,
																	"nodeType": "ExpressionStatement",
																	"src": "4626:8:10"
																}
															]
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "323535",
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4670:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2941,
																"name": "lsb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2822,
																"src": "4676:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4670:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"functionReturnParameters": 2823,
														"id": 2943,
														"nodeType": "Return",
														"src": "4663:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2817,
										"nodeType": "StructuredDocumentation",
										"src": "3625:167:10",
										"text": "@notice Returns the index of the least significant bit of x\n @param x The value as a uint256\n @return lsb The index of the least significant bit of x"
									},
									"id": 2946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nameLocation": "3806:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3834:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "3826:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3826:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3825:11:10"
									},
									"returnParameters": {
										"id": 2823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2822,
												"mutability": "mutable",
												"name": "lsb",
												"nameLocation": "3866:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "3860:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2821,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3860:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:11:10"
									},
									"scope": 2947,
									"src": "3797:899:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2948,
							"src": "178:4520:10",
							"usedErrors": []
						}
					],
					"src": "33:4666:10"
				},
				"id": 10
			},
			"Midas/joe-v2-main/src/libraries/Constants.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/Constants.sol",
					"exportedSymbols": {
						"Constants": [
							2971
						]
					},
					"id": 2972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2949,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Constants",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2950,
								"nodeType": "StructuredDocumentation",
								"src": "58:125:11",
								"text": "@title Liquidity Book Constants Library\n @author Trader Joe\n @notice Set of constants for Liquidity Book contracts"
							},
							"fullyImplemented": true,
							"id": 2971,
							"linearizedBaseContracts": [
								2971
							],
							"name": "Constants",
							"nameLocation": "191:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2953,
									"mutability": "constant",
									"name": "SCALE_OFFSET",
									"nameLocation": "233:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "207:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2951,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "207:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 2952,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "248:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2958,
									"mutability": "constant",
									"name": "SCALE",
									"nameLocation": "283:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "257:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "257:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 2957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 2955,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "291:1:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"id": 2956,
											"name": "SCALE_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2953,
											"src": "296:12:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "291:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2961,
									"mutability": "constant",
									"name": "PRECISION",
									"nameLocation": "341:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "315:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2959,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "315:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 2960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "353:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2964,
									"mutability": "constant",
									"name": "BASIS_POINT_MAX",
									"nameLocation": "389:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "363:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2962,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 2963,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "407:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2965,
										"nodeType": "StructuredDocumentation",
										"src": "420:58:11",
										"text": "@dev The expected return after a successful flash loan"
									},
									"id": 2970,
									"mutability": "constant",
									"name": "CALLBACK_SUCCESS",
									"nameLocation": "509:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 2971,
									"src": "483:90:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2966,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
												"id": 2968,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "538:34:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
													"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
												},
												"value": "ERC3156FlashBorrower.onFlashLoan"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
													"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
												}
											],
											"id": 2967,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "528:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2969,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "528:45:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 2972,
							"src": "183:393:11",
							"usedErrors": []
						}
					],
					"src": "33:544:11"
				},
				"id": 11
			},
			"Midas/joe-v2-main/src/libraries/Decoder.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/Decoder.sol",
					"exportedSymbols": {
						"Decoder": [
							2989
						]
					},
					"id": 2990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2973,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Decoder",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2974,
								"nodeType": "StructuredDocumentation",
								"src": "58:126:12",
								"text": "@title Liquidity Book Decoder Library\n @author Trader Joe\n @notice Helper contract used for decoding bytes32 sample"
							},
							"fullyImplemented": true,
							"id": 2989,
							"linearizedBaseContracts": [
								2989
							],
							"name": "Decoder",
							"nameLocation": "192:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2987,
										"nodeType": "Block",
										"src": "615:91:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "634:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_offset",
																				"nodeType": "YulIdentifier",
																				"src": "665:7:12"
																			},
																			{
																				"name": "_sample",
																				"nodeType": "YulIdentifier",
																				"src": "674:7:12"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:21:12"
																	},
																	{
																		"name": "_mask",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "657:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:33:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2979,
														"isOffset": false,
														"isSlot": false,
														"src": "684:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2981,
														"isOffset": false,
														"isSlot": false,
														"src": "665:7:12",
														"valueSize": 1
													},
													{
														"declaration": 2977,
														"isOffset": false,
														"isSlot": false,
														"src": "674:7:12",
														"valueSize": 1
													},
													{
														"declaration": 2984,
														"isOffset": false,
														"isSlot": false,
														"src": "648:5:12",
														"valueSize": 1
													}
												],
												"id": 2986,
												"nodeType": "InlineAssembly",
												"src": "625:75:12"
											}
										]
									},
									"documentation": {
										"id": 2975,
										"nodeType": "StructuredDocumentation",
										"src": "206:271:12",
										"text": "@notice Internal function to decode a bytes32 sample using a mask and offset\n @dev This function can overflow\n @param _sample The sample as a bytes32\n @param _mask The mask\n @param _offset The offset\n @return value The decoded value"
									},
									"id": 2988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decode",
									"nameLocation": "491:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "_sample",
												"nameLocation": "515:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "507:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2976,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2979,
												"mutability": "mutable",
												"name": "_mask",
												"nameLocation": "540:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "532:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "_offset",
												"nameLocation": "563:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "555:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:79:12"
									},
									"returnParameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "608:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2988,
												"src": "600:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:12"
									},
									"scope": 2989,
									"src": "482:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2990,
							"src": "184:524:12",
							"usedErrors": []
						}
					],
					"src": "33:676:12"
				},
				"id": 12
			},
			"Midas/joe-v2-main/src/libraries/FeeHelper.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/FeeHelper.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2971
						],
						"FeeHelper": [
							3128
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2991,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/Constants.sol",
							"file": "./Constants.sol",
							"id": 2992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 2972,
							"src": "58:25:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 2993,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 4641,
							"src": "84:24:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2994,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3129,
							"sourceUnit": 4668,
							"src": "109:24:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FeeHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2995,
								"nodeType": "StructuredDocumentation",
								"src": "135:122:13",
								"text": "@title Liquidity Book Fee Helper Library\n @author Trader Joe\n @notice Helper contract used for fees calculation"
							},
							"fullyImplemented": true,
							"id": 3128,
							"linearizedBaseContracts": [
								3128
							],
							"name": "FeeHelper",
							"nameLocation": "265:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2998,
									"libraryName": {
										"id": 2996,
										"name": "SafeCast",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4640,
										"src": "287:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "281:27:13",
									"typeName": {
										"id": 2997,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "300:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3001,
									"libraryName": {
										"id": 2999,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4667,
										"src": "319:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "313:27:13",
									"typeName": {
										"id": 3000,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "FeeHelper.FeeParameters",
									"id": 3006,
									"members": [
										{
											"constant": false,
											"id": 3003,
											"mutability": "mutable",
											"name": "rate",
											"nameLocation": "1228:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 3006,
											"src": "1220:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3002,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1220:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3005,
											"mutability": "mutable",
											"name": "protocolShare",
											"nameLocation": "1250:13:13",
											"nodeType": "VariableDeclaration",
											"scope": 3006,
											"src": "1242:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3004,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1242:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeParameters",
									"nameLocation": "1196:13:13",
									"nodeType": "StructDefinition",
									"scope": 3128,
									"src": "1189:81:13",
									"visibility": "public"
								},
								{
									"canonicalName": "FeeHelper.FeesDistribution",
									"id": 3011,
									"members": [
										{
											"constant": false,
											"id": 3008,
											"mutability": "mutable",
											"name": "total",
											"nameLocation": "1487:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 3011,
											"src": "1479:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3007,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1479:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3010,
											"mutability": "mutable",
											"name": "protocol",
											"nameLocation": "1510:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 3011,
											"src": "1502:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3009,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1502:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeesDistribution",
									"nameLocation": "1452:16:13",
									"nodeType": "StructDefinition",
									"scope": 3128,
									"src": "1445:80:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3038,
										"nodeType": "Block",
										"src": "1954:110:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3022,
																			"name": "_amountWithFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3017,
																			"src": "1972:15:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3024,
																					"name": "_fp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3015,
																					"src": "2002:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
																						"typeString": "struct FeeHelper.FeeParameters memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
																						"typeString": "struct FeeHelper.FeeParameters memory"
																					}
																				],
																				"id": 3023,
																				"name": "getTotalFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3127,
																				"src": "1990:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_FeeParameters_$3006_memory_ptr_$returns$_t_uint256_$",
																					"typeString": "function (struct FeeHelper.FeeParameters memory) pure returns (uint256)"
																				}
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1990:16:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1972:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 3027,
																			"name": "Constants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2971,
																			"src": "2009:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																				"typeString": "type(library Constants)"
																			}
																		},
																		"id": 3028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "PRECISION",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2961,
																		"src": "2009:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1972:56:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2031:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1972:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3032,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1971:62:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"expression": {
																	"id": 3033,
																	"name": "Constants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2971,
																	"src": "2037:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																		"typeString": "type(library Constants)"
																	}
																},
																"id": 3034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "PRECISION",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2961,
																"src": "2037:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3035,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2036:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1971:86:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3021,
												"id": 3037,
												"nodeType": "Return",
												"src": "1964:93:13"
											}
										]
									},
									"documentation": {
										"id": 3012,
										"nodeType": "StructuredDocumentation",
										"src": "1531:309:13",
										"text": "@notice Return the amount of fees from an amount\n @dev Rounds amount up, follows `amount = amountWithFees - getFeeAmountFrom(fp, amountWithFees)`\n @param _fp The current fee parameter\n @param _amountWithFees The amount of token sent\n @return The fee amount from the amount sent"
									},
									"id": 3039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeAmountFrom",
									"nameLocation": "1854:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "1892:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "1871:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3013,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3006,
														"src": "1871:13:13"
													},
													"referencedDeclaration": 3006,
													"src": "1871:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$3006_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "_amountWithFees",
												"nameLocation": "1905:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "1897:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:51:13"
									},
									"returnParameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3039,
												"src": "1945:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:9:13"
									},
									"scope": 3128,
									"src": "1845:219:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3074,
										"nodeType": "Block",
										"src": "2456:174:13",
										"statements": [
											{
												"assignments": [
													3051
												],
												"declarations": [
													{
														"constant": false,
														"id": 3051,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "2474:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 3074,
														"src": "2466:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2466:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3055,
												"initialValue": {
													"arguments": [
														{
															"id": 3053,
															"name": "_fp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "2493:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
																"typeString": "struct FeeHelper.FeeParameters memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
																"typeString": "struct FeeHelper.FeeParameters memory"
															}
														],
														"id": 3052,
														"name": "getTotalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "2481:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_FeeParameters_$3006_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct FeeHelper.FeeParameters memory) pure returns (uint256)"
														}
													},
													"id": 3054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2481:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2466:31:13"
											},
											{
												"assignments": [
													3057
												],
												"declarations": [
													{
														"constant": false,
														"id": 3057,
														"mutability": "mutable",
														"name": "_denominator",
														"nameLocation": "2515:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 3074,
														"src": "2507:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3056,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2507:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3062,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3058,
															"name": "Constants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2971,
															"src": "2530:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																"typeString": "type(library Constants)"
															}
														},
														"id": 3059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "PRECISION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2961,
														"src": "2530:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3060,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3051,
														"src": "2552:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2530:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2507:49:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3063,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3045,
																			"src": "2574:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3064,
																			"name": "_fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3051,
																			"src": "2584:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2574:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3066,
																		"name": "_denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3057,
																		"src": "2591:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2574:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2606:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2574:33:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3070,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2573:35:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3071,
														"name": "_denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3057,
														"src": "2611:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2573:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3049,
												"id": 3073,
												"nodeType": "Return",
												"src": "2566:57:13"
											}
										]
									},
									"documentation": {
										"id": 3040,
										"nodeType": "StructuredDocumentation",
										"src": "2070:284:13",
										"text": "@notice Return the fees to add to an amount\n @dev Rounds amount up, follows `amountWithFees = amount + getFeeAmount(fp, amount)`\n @param _fp The current fee parameter\n @param _amount The amount of token sent\n @return The fee amount to add to the amount"
									},
									"id": 3075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeAmount",
									"nameLocation": "2368:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "2402:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "2381:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3041,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3006,
														"src": "2381:13:13"
													},
													"referencedDeclaration": 3006,
													"src": "2381:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$3006_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2415:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "2407:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:43:13"
									},
									"returnParameters": {
										"id": 3049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "2447:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:9:13"
									},
									"scope": 3128,
									"src": "2359:271:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3112,
										"nodeType": "Block",
										"src": "2980:226:13",
										"statements": [
											{
												"expression": {
													"id": 3093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3087,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3085,
															"src": "2990:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeesDistribution_$3011_memory_ptr",
																"typeString": "struct FeeHelper.FeesDistribution memory"
															}
														},
														"id": 3089,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3008,
														"src": "2990:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3090,
																"name": "_fees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3081,
																"src": "3003:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safe128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4294,
															"src": "3003:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint128)"
															}
														},
														"id": 3092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3003:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "2990:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 3094,
												"nodeType": "ExpressionStatement",
												"src": "2990:28:13"
											},
											{
												"id": 3111,
												"nodeType": "UncheckedBlock",
												"src": "3085:115:13",
												"statements": [
													{
														"expression": {
															"id": 3109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3095,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3085,
																	"src": "3109:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeesDistribution_$3011_memory_ptr",
																		"typeString": "struct FeeHelper.FeesDistribution memory"
																	}
																},
																"id": 3097,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "protocol",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3010,
																"src": "3109:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3103,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3100,
																						"name": "_fees",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3081,
																						"src": "3134:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"expression": {
																							"id": 3101,
																							"name": "_fp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3079,
																							"src": "3142:3:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
																								"typeString": "struct FeeHelper.FeeParameters memory"
																							}
																						},
																						"id": 3102,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "protocolShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3005,
																						"src": "3142:17:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "3134:25:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3104,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3133:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"expression": {
																				"id": 3105,
																				"name": "Constants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2971,
																				"src": "3163:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																					"typeString": "type(library Constants)"
																				}
																			},
																			"id": 3106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "BASIS_POINT_MAX",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2964,
																			"src": "3163:25:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3133:55:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3125:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3098,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "3125:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3125:64:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3109:80:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 3110,
														"nodeType": "ExpressionStatement",
														"src": "3109:80:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3076,
										"nodeType": "StructuredDocumentation",
										"src": "2637:182:13",
										"text": "@notice Return the fees distribution added to an amount\n @param _fp The current fee parameter\n @param _fees The fee amount\n @return fees The fee distribution"
									},
									"id": 3113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeAmountDistribution",
									"nameLocation": "2833:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "2879:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2858:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3077,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3006,
														"src": "2858:13:13"
													},
													"referencedDeclaration": 3006,
													"src": "2858:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$3006_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "_fees",
												"nameLocation": "2892:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2884:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:41:13"
									},
									"returnParameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "2970:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2946:28:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeesDistribution_$3011_memory_ptr",
													"typeString": "struct FeeHelper.FeesDistribution"
												},
												"typeName": {
													"id": 3084,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3083,
														"name": "FeesDistribution",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3011,
														"src": "2946:16:13"
													},
													"referencedDeclaration": 3011,
													"src": "2946:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeesDistribution_$3011_storage_ptr",
														"typeString": "struct FeeHelper.FeesDistribution"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2945:30:13"
									},
									"scope": 3128,
									"src": "2824:382:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3126,
										"nodeType": "Block",
										"src": "3448:66:13",
										"statements": [
											{
												"id": 3125,
												"nodeType": "UncheckedBlock",
												"src": "3458:50:13",
												"statements": [
													{
														"expression": {
															"expression": {
																"id": 3122,
																"name": "_fp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3117,
																"src": "3489:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
																	"typeString": "struct FeeHelper.FeeParameters memory"
																}
															},
															"id": 3123,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3003,
															"src": "3489:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"functionReturnParameters": 3121,
														"id": 3124,
														"nodeType": "Return",
														"src": "3482:15:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3114,
										"nodeType": "StructuredDocumentation",
										"src": "3212:153:13",
										"text": "@notice Return the total fee, i.e. baseFee + variableFee\n @param _fp The current fee parameter\n @return The total fee, with 18 decimals"
									},
									"id": 3127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalFee",
									"nameLocation": "3379:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "3412:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "3391:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$3006_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3115,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3006,
														"src": "3391:13:13"
													},
													"referencedDeclaration": 3006,
													"src": "3391:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$3006_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:26:13"
									},
									"returnParameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "3439:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:9:13"
									},
									"scope": 3128,
									"src": "3370:144:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3129,
							"src": "257:3259:13",
							"usedErrors": []
						}
					],
					"src": "33:3484:13"
				},
				"id": 13
			},
			"Midas/joe-v2-main/src/libraries/Math128x128.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/Math128x128.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2947
						],
						"Constants": [
							2971
						],
						"FeeHelper": [
							3128
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBFlashLoanCallback": [
							2137
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128": [
							3349
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3717
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3130,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3350,
							"sourceUnit": 1314,
							"src": "58:25:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 3132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3350,
							"sourceUnit": 2948,
							"src": "84:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/Constants.sol",
							"file": "./Constants.sol",
							"id": 3133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3350,
							"sourceUnit": 2972,
							"src": "108:25:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/Math512Bits.sol",
							"file": "./Math512Bits.sol",
							"id": 3134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3350,
							"sourceUnit": 3718,
							"src": "134:27:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math128x128",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3135,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:14",
								"text": "@title Liquidity Book Math Helper Library\n @author Trader Joe\n @notice Helper contract used for power and log calculations"
							},
							"fullyImplemented": true,
							"id": 3349,
							"linearizedBaseContracts": [
								3349
							],
							"name": "Math128x128",
							"nameLocation": "304:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3138,
									"libraryName": {
										"id": 3136,
										"name": "Math512Bits",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3717,
										"src": "328:11:14"
									},
									"nodeType": "UsingForDirective",
									"src": "322:30:14",
									"typeName": {
										"id": 3137,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3141,
									"libraryName": {
										"id": 3139,
										"name": "BitMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2947,
										"src": "363:7:14"
									},
									"nodeType": "UsingForDirective",
									"src": "357:26:14",
									"typeName": {
										"id": 3140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "375:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 3144,
									"mutability": "constant",
									"name": "LOG_SCALE_OFFSET",
									"nameLocation": "406:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 3349,
									"src": "389:39:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "389:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313237",
										"id": 3143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "425:3:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_127_by_1",
											"typeString": "int_const 127"
										},
										"value": "127"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3149,
									"mutability": "constant",
									"name": "LOG_SCALE",
									"nameLocation": "451:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3349,
									"src": "434:50:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3145,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "434:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 3148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 3146,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "463:1:14",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"id": 3147,
											"name": "LOG_SCALE_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3144,
											"src": "468:16:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "463:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3154,
									"mutability": "constant",
									"name": "LOG_SCALE_SQUARED",
									"nameLocation": "507:17:14",
									"nodeType": "VariableDeclaration",
									"scope": 3349,
									"src": "490:58:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 3153,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 3151,
											"name": "LOG_SCALE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3149,
											"src": "527:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 3152,
											"name": "LOG_SCALE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3149,
											"src": "539:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "527:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3291,
										"nodeType": "Block",
										"src": "1387:2303:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3162,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "1783:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1788:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1783:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3168,
												"nodeType": "IfStatement",
												"src": "1779:23:14",
												"trueBody": {
													"expression": {
														"id": 3166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "1798:4:14",
														"subExpression": {
															"hexValue": "313238",
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1799:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_128_by_1",
															"typeString": "int_const -128"
														}
													},
													"functionReturnParameters": 3161,
													"id": 3167,
													"nodeType": "Return",
													"src": "1791:11:14"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3169,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "1816:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1816:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3175,
												"nodeType": "IfStatement",
												"src": "1812:46:14",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3172,
															"name": "Math128x128__LogUnderflow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1831:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1831:27:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3174,
													"nodeType": "RevertStatement",
													"src": "1824:34:14"
												}
											},
											{
												"expression": {
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3176,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "1869:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": ">>=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1875:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1869:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3179,
												"nodeType": "ExpressionStatement",
												"src": "1869:7:14"
											},
											{
												"id": 3290,
												"nodeType": "UncheckedBlock",
												"src": "1887:1797:14",
												"statements": [
													{
														"assignments": [
															3181
														],
														"declarations": [
															{
																"constant": false,
																"id": 3181,
																"mutability": "mutable",
																"name": "sign",
																"nameLocation": "1974:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 3290,
																"src": "1967:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 3180,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1967:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3182,
														"nodeType": "VariableDeclarationStatement",
														"src": "1967:11:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3183,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "1996:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3184,
																"name": "LOG_SCALE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3149,
																"src": "2001:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1996:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 3202,
															"nodeType": "Block",
															"src": "2059:152:14",
															"statements": [
																{
																	"expression": {
																		"id": 3194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3191,
																			"name": "sign",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3181,
																			"src": "2077:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 3193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2084:2:14",
																			"subExpression": {
																				"hexValue": "31",
																				"id": 3192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2085:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		},
																		"src": "2077:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3195,
																	"nodeType": "ExpressionStatement",
																	"src": "2077:9:14"
																},
																{
																	"expression": {
																		"id": 3200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3196,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3157,
																			"src": "2171:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3197,
																				"name": "LOG_SCALE_SQUARED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3154,
																				"src": "2175:17:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3198,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3157,
																				"src": "2195:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2175:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2171:25:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3201,
																	"nodeType": "ExpressionStatement",
																	"src": "2171:25:14"
																}
															]
														},
														"id": 3203,
														"nodeType": "IfStatement",
														"src": "1992:219:14",
														"trueBody": {
															"id": 3190,
															"nodeType": "Block",
															"src": "2012:41:14",
															"statements": [
																{
																	"expression": {
																		"id": 3188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3186,
																			"name": "sign",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3181,
																			"src": "2030:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2037:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2030:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3189,
																	"nodeType": "ExpressionStatement",
																	"src": "2030:8:14"
																}
															]
														}
													},
													{
														"assignments": [
															3205
														],
														"declarations": [
															{
																"constant": false,
																"id": 3205,
																"mutability": "mutable",
																"name": "n",
																"nameLocation": "2355:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 3290,
																"src": "2347:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3204,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3212,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3206,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3157,
																				"src": "2360:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 3207,
																				"name": "LOG_SCALE_OFFSET",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3144,
																				"src": "2365:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2360:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3209,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2359:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mostSignificantBit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2816,
																"src": "2359:42:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint8)"
																}
															},
															"id": 3211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2359:44:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2347:56:14"
													},
													{
														"expression": {
															"id": 3220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3213,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3160,
																"src": "2641:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3216,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3205,
																			"src": "2657:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2650:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3214,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2650:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2650:9:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 3218,
																	"name": "LOG_SCALE_OFFSET",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3144,
																	"src": "2663:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2650:29:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "2641:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3221,
														"nodeType": "ExpressionStatement",
														"src": "2641:38:14"
													},
													{
														"assignments": [
															3223
														],
														"declarations": [
															{
																"constant": false,
																"id": 3223,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "2741:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 3290,
																"src": "2733:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3222,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2733:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3227,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3224,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "2745:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 3225,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3205,
																"src": "2750:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2745:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2733:18:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3228,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3223,
																"src": "2824:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3229,
																"name": "LOG_SCALE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3149,
																"src": "2829:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2824:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3280,
														"nodeType": "IfStatement",
														"src": "2820:735:14",
														"trueBody": {
															"id": 3279,
															"nodeType": "Block",
															"src": "2840:715:14",
															"statements": [
																{
																	"body": {
																		"id": 3277,
																		"nodeType": "Block",
																		"src": "3123:418:14",
																		"statements": [
																			{
																				"expression": {
																					"id": 3257,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 3250,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3223,
																						"src": "3145:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3253,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3251,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3223,
																										"src": "3150:1:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"id": 3252,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3223,
																										"src": "3154:1:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "3150:5:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3254,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3149:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"id": 3255,
																							"name": "LOG_SCALE_OFFSET",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3144,
																							"src": "3160:16:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3149:27:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3145:31:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3258,
																				"nodeType": "ExpressionStatement",
																				"src": "3145:31:14"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3259,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3223,
																						"src": "3264:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3265,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3269:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3263,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3261,
																										"name": "LOG_SCALE_OFFSET",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3144,
																										"src": "3275:16:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"hexValue": "31",
																										"id": 3262,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3294:1:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"src": "3275:20:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3264,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3274:22:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3269:27:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3264:32:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3276,
																				"nodeType": "IfStatement",
																				"src": "3260:263:14",
																				"trueBody": {
																					"id": 3275,
																					"nodeType": "Block",
																					"src": "3298:225:14",
																					"statements": [
																						{
																							"expression": {
																								"id": 3269,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 3267,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3160,
																									"src": "3391:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "+=",
																								"rightHandSide": {
																									"id": 3268,
																									"name": "delta",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3232,
																									"src": "3401:5:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								},
																								"src": "3391:15:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							"id": 3270,
																							"nodeType": "ExpressionStatement",
																							"src": "3391:15:14"
																						},
																						{
																							"expression": {
																								"id": 3273,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 3271,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3223,
																									"src": "3493:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": ">>=",
																								"rightHandSide": {
																									"hexValue": "31",
																									"id": 3272,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3499:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3493:7:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3274,
																							"nodeType": "ExpressionStatement",
																							"src": "3493:7:14"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3243,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3232,
																			"src": "3099:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3107:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3099:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3278,
																	"initializationExpression": {
																		"assignments": [
																			3232
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3232,
																				"mutability": "mutable",
																				"name": "delta",
																				"nameLocation": "3054:5:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 3278,
																				"src": "3047:12:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"typeName": {
																					"id": 3231,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3047:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3242,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3235,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3069:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3238,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3236,
																									"name": "LOG_SCALE_OFFSET",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3144,
																									"src": "3075:16:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 3237,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3094:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3075:20:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3239,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3074:22:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3069:27:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3062:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 3233,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3062:6:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3062:35:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3047:50:14"
																	},
																	"loopExpression": {
																		"expression": {
																			"id": 3248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3246,
																				"name": "delta",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3232,
																				"src": "3110:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": ">>=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3120:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3110:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 3249,
																		"nodeType": "ExpressionStatement",
																		"src": "3110:11:14"
																	},
																	"nodeType": "ForStatement",
																	"src": "3042:499:14"
																}
															]
														}
													},
													{
														"expression": {
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3281,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3160,
																"src": "3644:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3282,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3160,
																				"src": "3654:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3283,
																				"name": "sign",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3181,
																				"src": "3663:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "3654:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3285,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3653:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3672:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3653:20:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3644:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3289,
														"nodeType": "ExpressionStatement",
														"src": "3644:29:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3155,
										"nodeType": "StructuredDocumentation",
										"src": "555:764:14",
										"text": "@notice Calculates the binary logarithm of x.\n @dev Based on the iterative approximation algorithm.\n https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n Requirements:\n - x must be greater than zero.\n Caveats:\n - The results are not perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation\n Also because x is converted to an unsigned 129.127-binary fixed-point number during the operation to optimize the multiplication\n @param x The unsigned 128.128-binary fixed-point number for which to calculate the binary logarithm.\n @return result The binary logarithm as a signed 128.128-binary fixed-point number."
									},
									"id": 3292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "1333:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1346:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "1338:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:11:14"
									},
									"returnParameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1379:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "1372:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3159,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:15:14"
									},
									"scope": 3349,
									"src": "1324:2366:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3347,
										"nodeType": "Block",
										"src": "4169:3925:14",
										"statements": [
											{
												"assignments": [
													3303
												],
												"declarations": [
													{
														"constant": false,
														"id": 3303,
														"mutability": "mutable",
														"name": "invert",
														"nameLocation": "4184:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3347,
														"src": "4179:11:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4179:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3304,
												"nodeType": "VariableDeclarationStatement",
												"src": "4179:11:14"
											},
											{
												"assignments": [
													3306
												],
												"declarations": [
													{
														"constant": false,
														"id": 3306,
														"mutability": "mutable",
														"name": "absY",
														"nameLocation": "4208:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3347,
														"src": "4200:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4200:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3307,
												"nodeType": "VariableDeclarationStatement",
												"src": "4200:12:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3308,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3297,
														"src": "4227:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4232:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4227:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3314,
												"nodeType": "IfStatement",
												"src": "4223:34:14",
												"trueBody": {
													"expression": {
														"expression": {
															"id": 3311,
															"name": "Constants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2971,
															"src": "4242:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																"typeString": "type(library Constants)"
															}
														},
														"id": 3312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "SCALE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2958,
														"src": "4242:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 3301,
													"id": 3313,
													"nodeType": "Return",
													"src": "4235:22:14"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4277:155:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4291:9:14",
															"value": {
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "4299:1:14"
															},
															"variableNames": [
																{
																	"name": "absY",
																	"nodeType": "YulIdentifier",
																	"src": "4291:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4329:93:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4347:20:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4359:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "4362:4:14"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "4355:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4355:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "absY",
																				"nodeType": "YulIdentifier",
																				"src": "4347:4:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4384:24:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "invert",
																					"nodeType": "YulIdentifier",
																					"src": "4401:6:14"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "4394:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4394:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "invert",
																				"nodeType": "YulIdentifier",
																				"src": "4384:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "absY",
																		"nodeType": "YulIdentifier",
																		"src": "4320:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4326:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:12:14"
															},
															"nodeType": "YulIf",
															"src": "4313:109:14"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3306,
														"isOffset": false,
														"isSlot": false,
														"src": "4291:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3306,
														"isOffset": false,
														"isSlot": false,
														"src": "4320:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3306,
														"isOffset": false,
														"isSlot": false,
														"src": "4347:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3306,
														"isOffset": false,
														"isSlot": false,
														"src": "4362:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3303,
														"isOffset": false,
														"isSlot": false,
														"src": "4384:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3303,
														"isOffset": false,
														"isSlot": false,
														"src": "4401:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3297,
														"isOffset": false,
														"isSlot": false,
														"src": "4299:1:14",
														"valueSize": 1
													}
												],
												"id": 3315,
												"nodeType": "InlineAssembly",
												"src": "4268:164:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3316,
														"name": "absY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3306,
														"src": "4446:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3078313030303030",
														"id": 3317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4453:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1048576_by_1",
															"typeString": "int_const 1048576"
														},
														"value": "0x100000"
													},
													"src": "4446:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3326,
												"nodeType": "IfStatement",
												"src": "4442:3460:14",
												"trueBody": {
													"id": 3325,
													"nodeType": "Block",
													"src": "4463:3439:14",
													"statements": [
														{
															"expression": {
																"id": 3322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3319,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3300,
																	"src": "4477:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3320,
																		"name": "Constants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2971,
																		"src": "4486:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Constants_$2971_$",
																			"typeString": "type(library Constants)"
																		}
																	},
																	"id": 3321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "SCALE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2958,
																	"src": "4486:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4477:24:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3323,
															"nodeType": "ExpressionStatement",
															"src": "4477:24:14"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "4524:3368:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4542:12:14",
																		"value": {
																			"name": "x",
																			"nodeType": "YulIdentifier",
																			"src": "4553:1:14"
																		},
																		"variables": [
																			{
																				"name": "pow",
																				"nodeType": "YulTypedName",
																				"src": "4546:3:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4616:108:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4638:23:14",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4653:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "4649:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4649:6:14"
																							},
																							{
																								"name": "pow",
																								"nodeType": "YulIdentifier",
																								"src": "4657:3:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4645:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4645:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "4638:3:14"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "4682:24:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "invert",
																								"nodeType": "YulIdentifier",
																								"src": "4699:6:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4692:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4692:14:14"
																					},
																					"variableNames": [
																						{
																							"name": "invert",
																							"nodeType": "YulIdentifier",
																							"src": "4682:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "x",
																					"nodeType": "YulIdentifier",
																					"src": "4577:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4580:34:14",
																					"type": "",
																					"value": "0xffffffffffffffffffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4574:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4574:41:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4571:153:14"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4760:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4782:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4796:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "4805:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "4813:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "4801:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4801:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "4792:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4792:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "4782:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "4749:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4755:3:14",
																					"type": "",
																					"value": "0x1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4745:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4745:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4742:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4853:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4864:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "4873:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "4878:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "4869:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4869:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "4860:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4860:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "4853:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4918:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4940:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4954:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "4963:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "4971:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "4959:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4959:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "4950:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4950:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "4940:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "4907:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4913:3:14",
																					"type": "",
																					"value": "0x2"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4903:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4903:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4900:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5011:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5022:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5031:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5036:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5027:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5027:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5018:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5018:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5011:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5076:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5098:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5112:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5121:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5129:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5117:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5117:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5108:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5108:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5098:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5065:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5071:3:14",
																					"type": "",
																					"value": "0x4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5061:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5061:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5058:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5169:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5180:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5189:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5194:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5185:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5185:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5176:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5176:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5169:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5234:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5256:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5270:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5279:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5287:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5275:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5275:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5266:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5266:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5256:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5223:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5229:3:14",
																					"type": "",
																					"value": "0x8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5219:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5219:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5216:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5327:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5338:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5347:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5352:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5343:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5343:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5334:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5334:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5327:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5393:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5415:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5429:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5438:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5446:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5434:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5434:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5425:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5425:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5415:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5381:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5387:4:14",
																					"type": "",
																					"value": "0x10"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5377:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5377:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5374:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5486:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5497:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5506:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5511:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5502:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5502:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5493:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5493:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5486:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5552:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5574:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5588:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5597:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5605:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5593:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5593:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5584:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5584:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5574:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5540:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5546:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5536:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5536:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5533:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5645:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5656:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5665:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5670:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5661:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5661:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5652:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5652:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5645:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5711:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5733:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5747:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5756:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5764:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5752:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5752:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5743:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5743:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5733:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5699:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:4:14",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5695:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5695:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5692:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5804:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5815:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5824:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5829:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5820:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5820:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5811:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5811:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5804:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5870:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5892:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5906:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5915:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5923:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5911:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5911:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5902:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5902:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5892:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5858:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5864:4:14",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5854:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5854:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5851:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5963:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5974:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5983:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5988:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5979:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5979:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5970:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5970:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5963:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6030:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6052:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6066:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6075:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6083:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6071:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6071:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6062:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6062:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6052:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6017:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6023:5:14",
																					"type": "",
																					"value": "0x100"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6013:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6013:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6010:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6123:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6134:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6143:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6148:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6139:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6139:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6130:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6123:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6190:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6212:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6226:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6235:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6243:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6231:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6231:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6222:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6222:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6212:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6177:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6183:5:14",
																					"type": "",
																					"value": "0x200"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6173:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6173:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6170:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6283:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6294:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6303:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6308:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6299:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6299:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6290:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6290:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6283:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6350:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6372:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6386:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6395:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6403:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6391:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6391:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6382:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6382:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6372:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6337:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6343:5:14",
																					"type": "",
																					"value": "0x400"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6333:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6333:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6330:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6443:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6454:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6463:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6468:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6459:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6459:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6450:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6450:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6443:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6510:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6532:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6546:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6555:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6563:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6551:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6551:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6542:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6542:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6532:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6497:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6503:5:14",
																					"type": "",
																					"value": "0x800"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6493:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6493:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6490:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6603:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6614:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6623:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6628:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6619:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6619:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6610:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6610:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6603:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6671:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6693:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6707:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6716:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6724:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6712:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6712:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6703:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6703:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6693:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6657:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6663:6:14",
																					"type": "",
																					"value": "0x1000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6653:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6653:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6650:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6764:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6775:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6784:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6789:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6780:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6780:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6771:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6771:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6764:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6832:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6854:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6868:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6877:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6885:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6873:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6873:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6864:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6864:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6854:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6818:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6824:6:14",
																					"type": "",
																					"value": "0x2000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6814:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6814:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6811:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6925:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6936:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6945:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6950:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6941:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6941:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6932:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6932:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6925:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6993:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7015:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7029:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7038:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7046:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7034:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7034:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7025:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7025:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7015:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6979:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6985:6:14",
																					"type": "",
																					"value": "0x4000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6975:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6975:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6972:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7086:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7097:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7106:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7111:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7102:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7102:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7093:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7093:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7086:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7154:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7176:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7190:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7199:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7207:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7195:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7195:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7186:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7186:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7176:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7140:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7146:6:14",
																					"type": "",
																					"value": "0x8000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7136:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7136:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7133:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7247:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7258:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7267:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7272:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7263:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7263:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7254:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7254:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7247:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7316:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7338:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7352:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7361:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7369:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7357:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7357:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7348:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7348:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7338:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7301:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7307:7:14",
																					"type": "",
																					"value": "0x10000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7297:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7297:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7294:98:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7409:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7420:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7429:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7434:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7425:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7425:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7416:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7416:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7409:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7478:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7500:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7514:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7523:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7531:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7519:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7519:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7510:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7510:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7500:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7463:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7469:7:14",
																					"type": "",
																					"value": "0x20000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7459:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7459:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7456:98:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7571:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7582:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7591:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7596:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7587:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7587:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7578:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7578:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7571:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7640:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7662:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7676:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7685:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7693:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7681:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7681:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7672:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7672:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7662:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7625:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7631:7:14",
																					"type": "",
																					"value": "0x40000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7621:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7621:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7618:98:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7733:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7744:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7753:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7758:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7749:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7749:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7740:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7740:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7733:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7802:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7824:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7838:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7847:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7855:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7843:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7843:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7834:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7834:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7824:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7787:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7793:7:14",
																					"type": "",
																					"value": "0x80000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7783:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7783:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7780:98:14"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4749:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4907:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5065:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5223:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5381:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5540:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5699:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5858:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6017:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6177:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6337:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6497:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6657:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6818:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6979:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7140:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7301:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7463:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7625:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3306,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7787:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3303,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4682:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3303,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4699:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4782:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4805:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4940:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4963:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5098:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5121:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5256:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5279:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5415:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5438:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5574:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5597:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5733:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5756:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5892:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5915:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6052:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6075:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6212:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6235:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6372:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6395:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6532:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6555:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6693:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6716:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6854:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6877:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7015:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7038:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7176:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7199:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7338:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7361:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7500:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7523:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7662:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7685:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7824:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3300,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7847:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3295,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4553:1:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3295,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4577:1:14",
																	"valueSize": 1
																}
															],
															"id": 3324,
															"nodeType": "InlineAssembly",
															"src": "4515:3377:14"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3327,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3300,
														"src": "7972:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7982:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7972:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3335,
												"nodeType": "IfStatement",
												"src": "7968:57:14",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3331,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3295,
																"src": "8020:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3332,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3297,
																"src": "8023:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3330,
															"name": "Math128x128__PowerUnderflow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "7992:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_int256_$returns$__$",
																"typeString": "function (uint256,int256) pure"
															}
														},
														"id": 3333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7992:33:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3334,
													"nodeType": "RevertStatement",
													"src": "7985:40:14"
												}
											},
											{
												"expression": {
													"condition": {
														"id": 3336,
														"name": "invert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3303,
														"src": "8043:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3344,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3300,
														"src": "8081:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8043:44:14",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 3339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8057:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3338,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8057:7:14",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 3337,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "8052:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8052:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 3341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "8052:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 3342,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3300,
															"src": "8072:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8052:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3301,
												"id": 3346,
												"nodeType": "Return",
												"src": "8036:51:14"
											}
										]
									},
									"documentation": {
										"id": 3293,
										"nodeType": "StructuredDocumentation",
										"src": "3696:393:14",
										"text": "@notice Returns the value of x^y. It calculates `1 / x^abs(y)` if x is bigger than 2^128.\n At the end of the operations, we invert the result if needed.\n @param x The unsigned 128.128-binary fixed-point number for which to calculate the power\n @param y A relative number without any decimals, needs to be between ]2^20; 2^20[\n @return result The result of `x^y`"
									},
									"id": 3348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "power",
									"nameLocation": "4103:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4117:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "4109:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4127:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "4120:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3296,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:21:14"
									},
									"returnParameters": {
										"id": 3301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3300,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4161:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3348,
												"src": "4153:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4152:16:14"
									},
									"scope": 3349,
									"src": "4094:4000:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3350,
							"src": "296:7800:14",
							"usedErrors": []
						}
					],
					"src": "33:8064:14"
				},
				"id": 14
			},
			"Midas/joe-v2-main/src/libraries/Math512Bits.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/Math512Bits.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2947
						],
						"Constants": [
							2971
						],
						"FeeHelper": [
							3128
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBFlashLoanCallback": [
							2137
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3717
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3718,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3351,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3352,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3718,
							"sourceUnit": 1314,
							"src": "58:25:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 3353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3718,
							"sourceUnit": 2948,
							"src": "84:23:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math512Bits",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3354,
								"nodeType": "StructuredDocumentation",
								"src": "109:134:15",
								"text": "@title Liquidity Book Math Helper Library\n @author Trader Joe\n @notice Helper contract used for full precision calculations"
							},
							"fullyImplemented": true,
							"id": 3717,
							"linearizedBaseContracts": [
								3717
							],
							"name": "Math512Bits",
							"nameLocation": "251:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3357,
									"libraryName": {
										"id": 3355,
										"name": "BitMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2947,
										"src": "275:7:15"
									},
									"nodeType": "UsingForDirective",
									"src": "269:26:15",
									"typeName": {
										"id": 3356,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 3386,
										"nodeType": "Block",
										"src": "1051:140:15",
										"statements": [
											{
												"assignments": [
													3370,
													3372
												],
												"declarations": [
													{
														"constant": false,
														"id": 3370,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "1070:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3386,
														"src": "1062:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1062:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3372,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "1085:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3386,
														"src": "1077:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1077:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3377,
												"initialValue": {
													"arguments": [
														{
															"id": 3374,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3360,
															"src": "1107:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3375,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3362,
															"src": "1110:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3373,
														"name": "_getMulProds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3592,
														"src": "1094:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 3376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1061:51:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3379,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3360,
															"src": "1152:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3380,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3362,
															"src": "1155:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3381,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3364,
															"src": "1158:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3382,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3370,
															"src": "1171:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3383,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3372,
															"src": "1178:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3378,
														"name": "_getEndOfDivRoundDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3716,
														"src": "1130:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:54:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3368,
												"id": 3385,
												"nodeType": "Return",
												"src": "1123:61:15"
											}
										]
									},
									"documentation": {
										"id": 3358,
										"nodeType": "StructuredDocumentation",
										"src": "301:608:15",
										"text": "@notice Calculates floor(x*y÷denominator) with full precision\n The result will be rounded down\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The denominator cannot be zero\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param denominator The divisor as an uint256\n @return result The result as an uint256"
									},
									"id": 3387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundDown",
									"nameLocation": "923:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3360,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "956:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "948:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "975:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "967:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3364,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "994:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "986:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:73:15"
									},
									"returnParameters": {
										"id": 3368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1043:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "1035:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:16:15"
									},
									"scope": 3717,
									"src": "914:277:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3452,
										"nodeType": "Block",
										"src": "1973:464:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3399,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3394,
														"src": "1987:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323535",
														"id": 3400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1996:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "1987:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3406,
												"nodeType": "IfStatement",
												"src": "1983:61:15",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3403,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3394,
																"src": "2037:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3402,
															"name": "Math512Bits__OffsetOverflows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2008:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2008:36:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3405,
													"nodeType": "RevertStatement",
													"src": "2001:43:15"
												}
											},
											{
												"assignments": [
													3408,
													3410
												],
												"declarations": [
													{
														"constant": false,
														"id": 3408,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "2064:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3452,
														"src": "2056:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3407,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2056:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3410,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "2079:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3452,
														"src": "2071:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2071:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3415,
												"initialValue": {
													"arguments": [
														{
															"id": 3412,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3390,
															"src": "2101:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3413,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3392,
															"src": "2104:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3411,
														"name": "_getMulProds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3592,
														"src": "2088:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 3414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2088:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2055:51:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3416,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3408,
														"src": "2121:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2130:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2121:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3425,
												"nodeType": "IfStatement",
												"src": "2117:40:15",
												"trueBody": {
													"expression": {
														"id": 3423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3419,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3397,
															"src": "2133:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3420,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3408,
																"src": "2142:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 3421,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3394,
																"src": "2151:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2142:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2133:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3424,
													"nodeType": "ExpressionStatement",
													"src": "2133:24:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3426,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3410,
														"src": "2171:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2180:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2171:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3451,
												"nodeType": "IfStatement",
												"src": "2167:264:15",
												"trueBody": {
													"id": 3450,
													"nodeType": "Block",
													"src": "2183:248:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3429,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3410,
																	"src": "2257:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "31",
																		"id": 3430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2266:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 3431,
																		"name": "offset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3394,
																		"src": "2271:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2266:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2257:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3439,
															"nodeType": "IfStatement",
															"src": "2253:77:15",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 3435,
																			"name": "prod1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3410,
																			"src": "2316:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 3436,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3394,
																			"src": "2323:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3434,
																		"name": "Math512Bits__MulShiftOverflow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "2286:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256) pure"
																		}
																	},
																	"id": 3437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2286:44:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3438,
																"nodeType": "RevertStatement",
																"src": "2279:51:15"
															}
														},
														{
															"id": 3449,
															"nodeType": "UncheckedBlock",
															"src": "2345:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 3447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3440,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3397,
																			"src": "2373:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3441,
																				"name": "prod1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3410,
																				"src": "2383:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "323536",
																							"id": 3442,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2393:3:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"value": "256"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 3443,
																							"name": "offset",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3394,
																							"src": "2399:6:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2393:12:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3445,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2392:14:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2383:23:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2373:33:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3448,
																	"nodeType": "ExpressionStatement",
																	"src": "2373:33:15"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3388,
										"nodeType": "StructuredDocumentation",
										"src": "1197:637:15",
										"text": "@notice Calculates x * y >> offset with full precision\n The result will be rounded down\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param offset The offset as an uint256, can't be greater than 256\n @return result The result as an uint256"
									},
									"id": 3453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShiftRoundDown",
									"nameLocation": "1848:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1883:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "1875:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1902:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "1894:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3394,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "1921:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "1913:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:68:15"
									},
									"returnParameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1965:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3453,
												"src": "1957:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:16:15"
									},
									"scope": 3717,
									"src": "1839:598:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3488,
										"nodeType": "Block",
										"src": "3215:152:15",
										"statements": [
											{
												"id": 3487,
												"nodeType": "UncheckedBlock",
												"src": "3225:136:15",
												"statements": [
													{
														"expression": {
															"id": 3471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3465,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3463,
																"src": "3249:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 3467,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "3276:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3468,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3458,
																		"src": "3279:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3469,
																		"name": "offset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3460,
																		"src": "3282:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3466,
																	"name": "mulShiftRoundDown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3453,
																	"src": "3258:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3258:31:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3249:40:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3472,
														"nodeType": "ExpressionStatement",
														"src": "3249:40:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3474,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "3314:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3475,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3458,
																		"src": "3317:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3320:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 3477,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3460,
																			"src": "3325:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3320:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3473,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967280,
																	"src": "3307:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3307:25:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3336:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3307:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3486,
														"nodeType": "IfStatement",
														"src": "3303:47:15",
														"trueBody": {
															"expression": {
																"id": 3484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3482,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3463,
																	"src": "3339:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3349:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3339:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3485,
															"nodeType": "ExpressionStatement",
															"src": "3339:11:15"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3454,
										"nodeType": "StructuredDocumentation",
										"src": "2443:635:15",
										"text": "@notice Calculates x * y >> offset with full precision\n The result will be rounded up\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param offset The offset as an uint256, can't be greater than 256\n @return result The result as an uint256"
									},
									"id": 3489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShiftRoundUp",
									"nameLocation": "3092:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3125:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "3117:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3117:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3144:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "3136:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "3163:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "3155:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:68:15"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3207:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3489,
												"src": "3199:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:16:15"
									},
									"scope": 3717,
									"src": "3083:284:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3541,
										"nodeType": "Block",
										"src": "4157:396:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3501,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3494,
														"src": "4171:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323535",
														"id": 3502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4180:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "4171:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3508,
												"nodeType": "IfStatement",
												"src": "4167:61:15",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3505,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3494,
																"src": "4221:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3504,
															"name": "Math512Bits__OffsetOverflows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4192:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4192:36:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3507,
													"nodeType": "RevertStatement",
													"src": "4185:43:15"
												}
											},
											{
												"assignments": [
													3510
												],
												"declarations": [
													{
														"constant": false,
														"id": 3510,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "4246:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3541,
														"src": "4238:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3509,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4238:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3511,
												"nodeType": "VariableDeclarationStatement",
												"src": "4238:13:15"
											},
											{
												"assignments": [
													3513
												],
												"declarations": [
													{
														"constant": false,
														"id": 3513,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "4269:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3541,
														"src": "4261:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4261:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3514,
												"nodeType": "VariableDeclarationStatement",
												"src": "4261:13:15"
											},
											{
												"expression": {
													"id": 3519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3515,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3510,
														"src": "4285:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3516,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "4293:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"id": 3517,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3494,
															"src": "4298:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4293:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4285:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3520,
												"nodeType": "ExpressionStatement",
												"src": "4285:19:15"
											},
											{
												"id": 3530,
												"nodeType": "UncheckedBlock",
												"src": "4359:106:15",
												"statements": [
													{
														"expression": {
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3521,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3513,
																"src": "4383:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3522,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3492,
																	"src": "4391:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "323536",
																				"id": 3523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4397:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				},
																				"value": "256"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3524,
																				"name": "offset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3494,
																				"src": "4403:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4397:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3526,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4396:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4391:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4383:27:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3529,
														"nodeType": "ExpressionStatement",
														"src": "4383:27:15"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3532,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "4504:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 3533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4507:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"id": 3534,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3494,
																"src": "4512:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4507:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3536,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3496,
															"src": "4520:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3537,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3510,
															"src": "4533:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3538,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3513,
															"src": "4540:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3531,
														"name": "_getEndOfDivRoundDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3716,
														"src": "4482:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4482:64:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3500,
												"id": 3540,
												"nodeType": "Return",
												"src": "4475:71:15"
											}
										]
									},
									"documentation": {
										"id": 3490,
										"nodeType": "StructuredDocumentation",
										"src": "3373:635:15",
										"text": "@notice Calculates x << offset / y with full precision\n The result will be rounded down\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param offset The number of bit to shift x as an uint256\n @param denominator The divisor as an uint256\n @return result The result as an uint256"
									},
									"id": 3542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shiftDivRoundDown",
									"nameLocation": "4022:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4057:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3542,
												"src": "4049:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "4076:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3542,
												"src": "4068:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4068:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3496,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4100:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3542,
												"src": "4092:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:78:15"
									},
									"returnParameters": {
										"id": 3500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3499,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4149:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3542,
												"src": "4141:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:16:15"
									},
									"scope": 3717,
									"src": "4013:540:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3577,
										"nodeType": "Block",
										"src": "5339:168:15",
										"statements": [
											{
												"expression": {
													"id": 3560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3554,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3552,
														"src": "5349:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3556,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3545,
																"src": "5376:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3557,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3547,
																"src": "5379:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3558,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3549,
																"src": "5387:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3555,
															"name": "shiftDivRoundDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3542,
															"src": "5358:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5358:41:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5349:50:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3561,
												"nodeType": "ExpressionStatement",
												"src": "5349:50:15"
											},
											{
												"id": 3576,
												"nodeType": "UncheckedBlock",
												"src": "5409:92:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3563,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3545,
																		"src": "5444:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5447:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 3565,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3547,
																			"src": "5452:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5447:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3567,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3549,
																		"src": "5460:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3562,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967280,
																	"src": "5437:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5437:35:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5476:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5437:40:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3575,
														"nodeType": "IfStatement",
														"src": "5433:57:15",
														"trueBody": {
															"expression": {
																"id": 3573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3571,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3552,
																	"src": "5479:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5489:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5479:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3574,
															"nodeType": "ExpressionStatement",
															"src": "5479:11:15"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3543,
										"nodeType": "StructuredDocumentation",
										"src": "4559:633:15",
										"text": "@notice Calculates x << offset / y with full precision\n The result will be rounded up\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param offset The number of bit to shift x as an uint256\n @param denominator The divisor as an uint256\n @return result The result as an uint256"
									},
									"id": 3578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shiftDivRoundUp",
									"nameLocation": "5206:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5239:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5231:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3547,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "5258:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5250:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3549,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5282:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5274:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:78:15"
									},
									"returnParameters": {
										"id": 3553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3552,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5331:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3578,
												"src": "5323:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5323:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5322:16:15"
									},
									"scope": 3717,
									"src": "5197:310:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3591,
										"nodeType": "Block",
										"src": "5915:451:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6219:141:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6233:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6250:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6253:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6260:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6256:6:15"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "6243:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:20:15"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "6237:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6276:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6289:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6292:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6285:9:15"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6307:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "6324:2:15"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6328:5:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6320:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6320:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "6339:2:15"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6343:5:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6336:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6336:13:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6316:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:34:15"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "6307:5:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3586,
														"isOffset": false,
														"isSlot": false,
														"src": "6276:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3586,
														"isOffset": false,
														"isSlot": false,
														"src": "6328:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3586,
														"isOffset": false,
														"isSlot": false,
														"src": "6343:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3588,
														"isOffset": false,
														"isSlot": false,
														"src": "6307:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3581,
														"isOffset": false,
														"isSlot": false,
														"src": "6250:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3581,
														"isOffset": false,
														"isSlot": false,
														"src": "6289:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3583,
														"isOffset": false,
														"isSlot": false,
														"src": "6253:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3583,
														"isOffset": false,
														"isSlot": false,
														"src": "6292:1:15",
														"valueSize": 1
													}
												],
												"id": 3590,
												"nodeType": "InlineAssembly",
												"src": "6210:150:15"
											}
										]
									},
									"documentation": {
										"id": 3579,
										"nodeType": "StructuredDocumentation",
										"src": "5513:301:15",
										"text": "@notice Helper function to return the result of `x * y` as 2 uint256\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @return prod0 The least significant 256 bits of the product\n @return prod1 The most significant 256 bits of the product"
									},
									"id": 3592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getMulProds",
									"nameLocation": "5828:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5849:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "5841:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3583,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5860:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "5852:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5852:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5840:22:15"
									},
									"returnParameters": {
										"id": 3589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3586,
												"mutability": "mutable",
												"name": "prod0",
												"nameLocation": "5893:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "5885:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "prod1",
												"nameLocation": "5908:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "5900:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:30:15"
									},
									"scope": 3717,
									"src": "5819:547:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3715,
										"nodeType": "Block",
										"src": "6986:3239:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3608,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3603,
														"src": "7058:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7067:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7058:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3713,
													"nodeType": "Block",
													"src": "7171:3048:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3619,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3603,
																	"src": "7276:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 3620,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3599,
																	"src": "7285:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7276:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3627,
															"nodeType": "IfStatement",
															"src": "7272:80:15",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 3623,
																			"name": "prod1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3603,
																			"src": "7333:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 3624,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3599,
																			"src": "7340:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3622,
																		"name": "Math512Bits__MulDivOverflow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "7305:27:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256) pure"
																		}
																	},
																	"id": 3625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7305:47:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3626,
																"nodeType": "RevertStatement",
																"src": "7298:54:15"
															}
														},
														{
															"assignments": [
																3629
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3629,
																	"mutability": "mutable",
																	"name": "remainder",
																	"nameLocation": "7459:9:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 3713,
																	"src": "7451:17:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3628,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7451:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3630,
															"nodeType": "VariableDeclarationStatement",
															"src": "7451:17:15"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7491:291:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7560:38:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "x",
																					"nodeType": "YulIdentifier",
																					"src": "7580:1:15"
																				},
																				{
																					"name": "y",
																					"nodeType": "YulIdentifier",
																					"src": "7583:1:15"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "7586:11:15"
																				}
																			],
																			"functionName": {
																				"name": "mulmod",
																				"nodeType": "YulIdentifier",
																				"src": "7573:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7573:25:15"
																		},
																		"variableNames": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "7560:9:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7680:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod1",
																					"nodeType": "YulIdentifier",
																					"src": "7693:5:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "remainder",
																							"nodeType": "YulIdentifier",
																							"src": "7703:9:15"
																						},
																						{
																							"name": "prod0",
																							"nodeType": "YulIdentifier",
																							"src": "7714:5:15"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7700:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7700:20:15"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "7689:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7689:32:15"
																		},
																		"variableNames": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "7680:5:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7738:30:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "7751:5:15"
																				},
																				{
																					"name": "remainder",
																					"nodeType": "YulIdentifier",
																					"src": "7758:9:15"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7747:21:15"
																		},
																		"variableNames": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "7738:5:15"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 3599,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7586:11:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3601,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7714:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3601,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7738:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3601,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7751:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3603,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7680:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3603,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7693:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3629,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7560:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3629,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7703:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3629,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7758:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3595,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7580:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3597,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7583:1:15",
																	"valueSize": 1
																}
															],
															"id": 3631,
															"nodeType": "InlineAssembly",
															"src": "7482:300:15"
														},
														{
															"id": 3712,
															"nodeType": "UncheckedBlock",
															"src": "7983:2226:15",
															"statements": [
																{
																	"assignments": [
																		3633
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3633,
																			"mutability": "mutable",
																			"name": "lpotdod",
																			"nameLocation": "8125:7:15",
																			"nodeType": "VariableDeclaration",
																			"scope": 3712,
																			"src": "8117:15:15",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3632,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3641,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3634,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3599,
																			"src": "8135:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "~",
																						"prefix": true,
																						"src": "8150:12:15",
																						"subExpression": {
																							"id": 3635,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3599,
																							"src": "8151:11:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3637,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8165:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "8150:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3639,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8149:18:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8135:32:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8117:50:15"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "8194:419:15",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "8270:40:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "denominator",
																							"nodeType": "YulIdentifier",
																							"src": "8289:11:15"
																						},
																						{
																							"name": "lpotdod",
																							"nodeType": "YulIdentifier",
																							"src": "8302:7:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "8285:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8285:25:15"
																				},
																				"variableNames": [
																					{
																						"name": "denominator",
																						"nodeType": "YulIdentifier",
																						"src": "8270:11:15"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8388:28:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "prod0",
																							"nodeType": "YulIdentifier",
																							"src": "8401:5:15"
																						},
																						{
																							"name": "lpotdod",
																							"nodeType": "YulIdentifier",
																							"src": "8408:7:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "8397:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8397:19:15"
																				},
																				"variableNames": [
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "8388:5:15"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8547:48:15",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8570:1:15",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"name": "lpotdod",
																											"nodeType": "YulIdentifier",
																											"src": "8573:7:15"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "8566:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8566:15:15"
																								},
																								{
																									"name": "lpotdod",
																									"nodeType": "YulIdentifier",
																									"src": "8583:7:15"
																								}
																							],
																							"functionName": {
																								"name": "div",
																								"nodeType": "YulIdentifier",
																								"src": "8562:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8562:29:15"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8593:1:15",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8558:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8558:37:15"
																				},
																				"variableNames": [
																					{
																						"name": "lpotdod",
																						"nodeType": "YulIdentifier",
																						"src": "8547:7:15"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 3599,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8270:11:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3599,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8289:11:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3633,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8302:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3633,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8408:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3633,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8547:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3633,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8573:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3633,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8583:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3601,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8388:5:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3601,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8401:5:15",
																			"valueSize": 1
																		}
																	],
																	"id": 3642,
																	"nodeType": "InlineAssembly",
																	"src": "8185:428:15"
																},
																{
																	"expression": {
																		"id": 3647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3643,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3601,
																			"src": "8686:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "|=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3644,
																				"name": "prod1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3603,
																				"src": "8695:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3645,
																				"name": "lpotdod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3633,
																				"src": "8703:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8695:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8686:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3648,
																	"nodeType": "ExpressionStatement",
																	"src": "8686:24:15"
																},
																{
																	"assignments": [
																		3650
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3650,
																			"mutability": "mutable",
																			"name": "inverse",
																			"nameLocation": "9051:7:15",
																			"nodeType": "VariableDeclaration",
																			"scope": 3712,
																			"src": "9043:15:15",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3649,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "9043:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3657,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "33",
																						"id": 3651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9062:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3652,
																						"name": "denominator",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3599,
																						"src": "9066:11:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9062:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3654,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9061:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "^",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 3655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9081:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9061:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "9043:39:15"
																},
																{
																	"expression": {
																		"id": 3664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3658,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3650,
																			"src": "9310:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3659,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9321:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3660,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3599,
																					"src": "9325:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3661,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3650,
																					"src": "9339:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9325:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9321:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9310:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3665,
																	"nodeType": "ExpressionStatement",
																	"src": "9310:36:15"
																},
																{
																	"expression": {
																		"id": 3672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3666,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3650,
																			"src": "9383:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9394:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3668,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3599,
																					"src": "9398:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3669,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3650,
																					"src": "9412:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9398:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9394:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9383:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3673,
																	"nodeType": "ExpressionStatement",
																	"src": "9383:36:15"
																},
																{
																	"expression": {
																		"id": 3680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3674,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3650,
																			"src": "9457:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9468:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3676,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3599,
																					"src": "9472:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3677,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3650,
																					"src": "9486:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9472:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9468:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9457:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3681,
																	"nodeType": "ExpressionStatement",
																	"src": "9457:36:15"
																},
																{
																	"expression": {
																		"id": 3688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3682,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3650,
																			"src": "9531:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9542:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3684,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3599,
																					"src": "9546:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3685,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3650,
																					"src": "9560:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9546:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9542:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9531:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3689,
																	"nodeType": "ExpressionStatement",
																	"src": "9531:36:15"
																},
																{
																	"expression": {
																		"id": 3696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3690,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3650,
																			"src": "9605:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3691,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9616:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3692,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3599,
																					"src": "9620:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3693,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3650,
																					"src": "9634:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9620:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9616:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9605:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3697,
																	"nodeType": "ExpressionStatement",
																	"src": "9605:36:15"
																},
																{
																	"expression": {
																		"id": 3704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3698,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3650,
																			"src": "9680:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9691:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3700,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3599,
																					"src": "9695:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3701,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3650,
																					"src": "9709:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9695:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9691:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9680:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3705,
																	"nodeType": "ExpressionStatement",
																	"src": "9680:36:15"
																},
																{
																	"expression": {
																		"id": 3710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3706,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3606,
																			"src": "10170:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3707,
																				"name": "prod0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3601,
																				"src": "10179:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3708,
																				"name": "inverse",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3650,
																				"src": "10187:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10179:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10170:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3711,
																	"nodeType": "ExpressionStatement",
																	"src": "10170:24:15"
																}
															]
														}
													]
												},
												"id": 3714,
												"nodeType": "IfStatement",
												"src": "7054:3165:15",
												"trueBody": {
													"id": 3618,
													"nodeType": "Block",
													"src": "7070:95:15",
													"statements": [
														{
															"id": 3617,
															"nodeType": "UncheckedBlock",
															"src": "7084:71:15",
															"statements": [
																{
																	"expression": {
																		"id": 3615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3611,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3606,
																			"src": "7112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3612,
																				"name": "prod0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3601,
																				"src": "7121:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3613,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3599,
																				"src": "7129:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7121:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7112:28:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3616,
																	"nodeType": "ExpressionStatement",
																	"src": "7112:28:15"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3593,
										"nodeType": "StructuredDocumentation",
										"src": "6372:421:15",
										"text": "@notice Helper function to return the result of `x * y / denominator` with full precision\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param denominator The divisor as an uint256\n @param prod0 The least significant 256 bits of the product\n @param prod1 The most significant 256 bits of the product\n @return result The result as an uint256"
									},
									"id": 3716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getEndOfDivRoundDown",
									"nameLocation": "6807:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3595,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3716,
												"src": "6838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3597,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6865:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3716,
												"src": "6857:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6884:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3716,
												"src": "6876:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3601,
												"mutability": "mutable",
												"name": "prod0",
												"nameLocation": "6913:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3716,
												"src": "6905:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "prod1",
												"nameLocation": "6936:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3716,
												"src": "6928:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6828:119:15"
									},
									"returnParameters": {
										"id": 3607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3606,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6978:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3716,
												"src": "6970:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6970:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6969:16:15"
									},
									"scope": 3717,
									"src": "6798:3427:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3718,
							"src": "243:9984:15",
							"usedErrors": []
						}
					],
					"src": "33:10195:15"
				},
				"id": 15
			},
			"Midas/joe-v2-main/src/libraries/PendingOwnable.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/PendingOwnable.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2971
						],
						"FeeHelper": [
							3128
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2116
						],
						"ILBFlashLoanCallback": [
							2137
						],
						"ILBPair": [
							2405
						],
						"IPendingOwnable": [
							2443
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable": [
							3922
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4667
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3923,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3719,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:16"
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3720,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3923,
							"sourceUnit": 1314,
							"src": "58:25:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/interfaces/IPendingOwnable.sol",
							"file": "../interfaces/IPendingOwnable.sol",
							"id": 3721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3923,
							"sourceUnit": 2444,
							"src": "84:43:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3723,
										"name": "IPendingOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2443,
										"src": "1034:15:16"
									},
									"id": 3724,
									"nodeType": "InheritanceSpecifier",
									"src": "1034:15:16"
								}
							],
							"canonicalName": "PendingOwnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3722,
								"nodeType": "StructuredDocumentation",
								"src": "129:878:16",
								"text": "@title Pending Ownable\n @author Trader Joe\n @notice Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions. The ownership of this contract is transferred using the\n push and pull pattern, the current owner set a `pendingOwner` using\n {setPendingOwner} and that address can then call {becomeOwner} to become the\n owner of that contract. The main logic and comments comes from OpenZeppelin's\n Ownable contract.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {setPendingOwner} and {becomeOwner}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner"
							},
							"fullyImplemented": true,
							"id": 3922,
							"linearizedBaseContracts": [
								3922,
								2443
							],
							"name": "PendingOwnable",
							"nameLocation": "1016:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3726,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1072:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 3922,
									"src": "1056:22:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3725,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1056:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3728,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "1100:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 3922,
									"src": "1084:29:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3727,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1084:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3740,
										"nodeType": "Block",
										"src": "1211:87:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3731,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1225:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1225:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3733,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3726,
														"src": "1239:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1225:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3738,
												"nodeType": "IfStatement",
												"src": "1221:59:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3735,
															"name": "PendingOwnable__NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "1254:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1254:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3737,
													"nodeType": "RevertStatement",
													"src": "1247:33:16"
												}
											},
											{
												"id": 3739,
												"nodeType": "PlaceholderStatement",
												"src": "1290:1:16"
											}
										]
									},
									"documentation": {
										"id": 3729,
										"nodeType": "StructuredDocumentation",
										"src": "1120:65:16",
										"text": "@notice Throws if called by any account other than the owner."
									},
									"id": 3741,
									"name": "onlyOwner",
									"nameLocation": "1199:9:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:2:16"
									},
									"src": "1190:108:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3761,
										"nodeType": "Block",
										"src": "1410:129:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3744,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1424:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1424:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 3746,
															"name": "_pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3728,
															"src": "1438:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1424:27:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3748,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1455:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1455:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1477:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1469:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1469:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1469:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1455:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1424:55:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3759,
												"nodeType": "IfStatement",
												"src": "1420:101:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3756,
															"name": "PendingOwnable__NotPendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "1488:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1488:33:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3758,
													"nodeType": "RevertStatement",
													"src": "1481:40:16"
												}
											},
											{
												"id": 3760,
												"nodeType": "PlaceholderStatement",
												"src": "1531:1:16"
											}
										]
									},
									"documentation": {
										"id": 3742,
										"nodeType": "StructuredDocumentation",
										"src": "1304:73:16",
										"text": "@notice Throws if called by any account other than the pending owner."
									},
									"id": 3762,
									"name": "onlyPendingOwner",
									"nameLocation": "1391:16:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:2:16"
									},
									"src": "1382:157:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3771,
										"nodeType": "Block",
										"src": "1642:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1671:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1671:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3766,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3906,
														"src": "1652:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1652:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3770,
												"nodeType": "ExpressionStatement",
												"src": "1652:30:16"
											}
										]
									},
									"documentation": {
										"id": 3763,
										"nodeType": "StructuredDocumentation",
										"src": "1545:78:16",
										"text": "@notice Initializes the contract setting the deployer as the initial owner"
									},
									"id": 3772,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:2:16"
									},
									"returnParameters": {
										"id": 3765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:0:16"
									},
									"scope": 3922,
									"src": "1628:61:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2423
									],
									"body": {
										"id": 3781,
										"nodeType": "Block",
										"src": "1857:30:16",
										"statements": [
											{
												"expression": {
													"id": 3779,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3726,
													"src": "1874:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3778,
												"id": 3780,
												"nodeType": "Return",
												"src": "1867:13:16"
											}
										]
									},
									"documentation": {
										"id": 3773,
										"nodeType": "StructuredDocumentation",
										"src": "1695:101:16",
										"text": "@notice Returns the address of the current owner\n @return The address of the current owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 3782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1810:5:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3775,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1830:8:16"
									},
									"parameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:2:16"
									},
									"returnParameters": {
										"id": 3778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3782,
												"src": "1848:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:16"
									},
									"scope": 3922,
									"src": "1801:86:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2428
									],
									"body": {
										"id": 3791,
										"nodeType": "Block",
										"src": "2078:37:16",
										"statements": [
											{
												"expression": {
													"id": 3789,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3728,
													"src": "2095:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3788,
												"id": 3790,
												"nodeType": "Return",
												"src": "2088:20:16"
											}
										]
									},
									"documentation": {
										"id": 3783,
										"nodeType": "StructuredDocumentation",
										"src": "1893:117:16",
										"text": "@notice Returns the address of the current pending owner\n @return The address of the current pending owner"
									},
									"functionSelector": "e30c3978",
									"id": 3792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "2024:12:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3785,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2051:8:16"
									},
									"parameters": {
										"id": 3784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:2:16"
									},
									"returnParameters": {
										"id": 3788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3792,
												"src": "2069:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:16"
									},
									"scope": 3922,
									"src": "2015:100:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2433
									],
									"body": {
										"id": 3825,
										"nodeType": "Block",
										"src": "2339:217:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3801,
														"name": "pendingOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3795,
														"src": "2353:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2378:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2370:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3802,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2370:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2370:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2353:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3810,
												"nodeType": "IfStatement",
												"src": "2349:69:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3807,
															"name": "PendingOwnable__AddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "2389:27:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2389:29:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3809,
													"nodeType": "RevertStatement",
													"src": "2382:36:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3811,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3728,
														"src": "2432:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2457:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2449:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3812,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2449:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2449:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2432:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3820,
												"nodeType": "IfStatement",
												"src": "2428:80:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3817,
															"name": "PendingOwnable__PendingOwnerAlreadySet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "2468:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2468:40:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3819,
													"nodeType": "RevertStatement",
													"src": "2461:47:16"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3822,
															"name": "pendingOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3795,
															"src": "2535:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3821,
														"name": "_setPendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3921,
														"src": "2518:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3824,
												"nodeType": "ExpressionStatement",
												"src": "2518:31:16"
											}
										]
									},
									"documentation": {
										"id": 3793,
										"nodeType": "StructuredDocumentation",
										"src": "2121:139:16",
										"text": "@notice Sets the pending owner address. This address will be able to become\n the owner of this contract by calling {becomeOwner}"
									},
									"functionSelector": "c42069ec",
									"id": 3826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3799,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3798,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "2329:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2329:9:16"
										}
									],
									"name": "setPendingOwner",
									"nameLocation": "2274:15:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3797,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2320:8:16"
									},
									"parameters": {
										"id": 3796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3795,
												"mutability": "mutable",
												"name": "pendingOwner_",
												"nameLocation": "2298:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3826,
												"src": "2290:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:23:16"
									},
									"returnParameters": {
										"id": 3800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:0:16"
									},
									"scope": 3922,
									"src": "2265:291:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2436
									],
									"body": {
										"id": 3850,
										"nodeType": "Block",
										"src": "2797:127:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3833,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3728,
														"src": "2811:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2836:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2828:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3834,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2828:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2828:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2811:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3842,
												"nodeType": "IfStatement",
												"src": "2807:72:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3839,
															"name": "PendingOwnable__NoPendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2847:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2847:32:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3841,
													"nodeType": "RevertStatement",
													"src": "2840:39:16"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2914:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2906:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2906:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2906:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3843,
														"name": "_setPendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3921,
														"src": "2889:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2889:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3849,
												"nodeType": "ExpressionStatement",
												"src": "2889:28:16"
											}
										]
									},
									"documentation": {
										"id": 3827,
										"nodeType": "StructuredDocumentation",
										"src": "2562:174:16",
										"text": "@notice Revoke the pending owner address. This address will not be able to\n call {becomeOwner} to become the owner anymore.\n Can only be called by the owner"
									},
									"functionSelector": "67ab8a4e",
									"id": 3851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3830,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "2787:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2787:9:16"
										}
									],
									"name": "revokePendingOwner",
									"nameLocation": "2750:18:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3829,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2778:8:16"
									},
									"parameters": {
										"id": 3828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2768:2:16"
									},
									"returnParameters": {
										"id": 3832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:0:16"
									},
									"scope": 3922,
									"src": "2741:183:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2439
									],
									"body": {
										"id": 3863,
										"nodeType": "Block",
										"src": "3108:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3859,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3137:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3137:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3858,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3906,
														"src": "3118:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3118:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3862,
												"nodeType": "ExpressionStatement",
												"src": "3118:30:16"
											}
										]
									},
									"documentation": {
										"id": 3852,
										"nodeType": "StructuredDocumentation",
										"src": "2930:117:16",
										"text": "@notice Transfers the ownership to the new owner (`pendingOwner).\n Can only be called by the pending owner"
									},
									"functionSelector": "f9dca989",
									"id": 3864,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3856,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3855,
												"name": "onlyPendingOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3762,
												"src": "3091:16:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3091:16:16"
										}
									],
									"name": "becomeOwner",
									"nameLocation": "3061:11:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3854,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3082:8:16"
									},
									"parameters": {
										"id": 3853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3072:2:16"
									},
									"returnParameters": {
										"id": 3857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:0:16"
									},
									"scope": 3922,
									"src": "3052:103:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2442
									],
									"body": {
										"id": 3878,
										"nodeType": "Block",
										"src": "3544:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3581:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3573:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3872,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3573:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3573:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3871,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3906,
														"src": "3554:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3877,
												"nodeType": "ExpressionStatement",
												"src": "3554:30:16"
											}
										]
									},
									"documentation": {
										"id": 3865,
										"nodeType": "StructuredDocumentation",
										"src": "3161:323:16",
										"text": "@notice Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 3879,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3869,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3868,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3741,
												"src": "3534:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3534:9:16"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3498:17:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3867,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3525:8:16"
									},
									"parameters": {
										"id": 3866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3515:2:16"
									},
									"returnParameters": {
										"id": 3870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3544:0:16"
									},
									"scope": 3922,
									"src": "3489:102:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3905,
										"nodeType": "Block",
										"src": "3852:164:16",
										"statements": [
											{
												"assignments": [
													3886
												],
												"declarations": [
													{
														"constant": false,
														"id": 3886,
														"mutability": "mutable",
														"name": "_oldOwner",
														"nameLocation": "3870:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 3905,
														"src": "3862:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3885,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3888,
												"initialValue": {
													"id": 3887,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3726,
													"src": "3882:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3862:26:16"
											},
											{
												"expression": {
													"id": 3891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3889,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3726,
														"src": "3898:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3890,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3882,
														"src": "3907:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3898:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3892,
												"nodeType": "ExpressionStatement",
												"src": "3898:18:16"
											},
											{
												"expression": {
													"id": 3898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3893,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3728,
														"src": "3926:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3950:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3942:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3894,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3942:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3942:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3926:26:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3899,
												"nodeType": "ExpressionStatement",
												"src": "3926:26:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3901,
															"name": "_oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3886,
															"src": "3988:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3902,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3882,
															"src": "3999:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3900,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "3967:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3967:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3904,
												"nodeType": "EmitStatement",
												"src": "3962:47:16"
											}
										]
									},
									"documentation": {
										"id": 3880,
										"nodeType": "StructuredDocumentation",
										"src": "3597:186:16",
										"text": "@notice Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction.\n @param _newOwner The address of the new owner"
									},
									"id": 3906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3797:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3882,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "3824:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3906,
												"src": "3816:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3815:19:16"
									},
									"returnParameters": {
										"id": 3884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3852:0:16"
									},
									"scope": 3922,
									"src": "3788:228:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3920,
										"nodeType": "Block",
										"src": "4283:91:16",
										"statements": [
											{
												"expression": {
													"id": 3914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3912,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3728,
														"src": "4293:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3913,
														"name": "pendingOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3909,
														"src": "4309:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4293:29:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3915,
												"nodeType": "ExpressionStatement",
												"src": "4293:29:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3917,
															"name": "pendingOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3909,
															"src": "4353:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3916,
														"name": "PendingOwnerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "4337:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4337:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3919,
												"nodeType": "EmitStatement",
												"src": "4332:35:16"
											}
										]
									},
									"documentation": {
										"id": 3907,
										"nodeType": "StructuredDocumentation",
										"src": "4022:190:16",
										"text": "@notice Push the new owner, it needs to be pulled to be effective.\n Internal function without access restriction.\n @param pendingOwner_ The address of the new pending owner"
									},
									"id": 3921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPendingOwner",
									"nameLocation": "4226:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3909,
												"mutability": "mutable",
												"name": "pendingOwner_",
												"nameLocation": "4251:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3921,
												"src": "4243:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:23:16"
									},
									"returnParameters": {
										"id": 3911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4283:0:16"
									},
									"scope": 3922,
									"src": "4217:157:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3923,
							"src": "1007:3369:16",
							"usedErrors": [
								1149,
								1151,
								1153,
								1155,
								1157
							]
						}
					],
					"src": "33:4344:16"
				},
				"id": 16
			},
			"Midas/joe-v2-main/src/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/SafeCast.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4640
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 4641,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3924,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "Midas/joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3925,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4641,
							"sourceUnit": 1314,
							"src": "58:25:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3926,
								"nodeType": "StructuredDocumentation",
								"src": "85:134:17",
								"text": "@title Liquidity Book Safe Cast Library\n @author Trader Joe\n @notice Helper contract used for converting uint values safely"
							},
							"fullyImplemented": true,
							"id": 4640,
							"linearizedBaseContracts": [
								4640
							],
							"name": "SafeCast",
							"nameLocation": "227:8:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3948,
										"nodeType": "Block",
										"src": "460:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 3939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3934,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3932,
																	"src": "475:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint248",
																		"typeString": "uint248"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3937,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3929,
																			"src": "487:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "479:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint248_$",
																			"typeString": "type(uint248)"
																		},
																		"typeName": {
																			"id": 3935,
																			"name": "uint248",
																			"nodeType": "ElementaryTypeName",
																			"src": "479:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "479:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint248",
																		"typeString": "uint248"
																	}
																},
																"src": "475:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint248",
																	"typeString": "uint248"
																}
															}
														],
														"id": 3940,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "474:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3941,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "494:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "474:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3947,
												"nodeType": "IfStatement",
												"src": "470:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3944,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3929,
																"src": "529:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3943,
															"name": "SafeCast__Exceeds248Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "504:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "504:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3946,
													"nodeType": "RevertStatement",
													"src": "497:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3927,
										"nodeType": "StructuredDocumentation",
										"src": "242:151:17",
										"text": "@notice Returns x on uint248 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint248"
									},
									"id": 3949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe248",
									"nameLocation": "407:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3929,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "423:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "415:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:11:17"
									},
									"returnParameters": {
										"id": 3933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3932,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "457:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "449:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 3931,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:11:17"
									},
									"scope": 4640,
									"src": "398:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3971,
										"nodeType": "Block",
										"src": "762:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 3962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3957,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3955,
																	"src": "777:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint240",
																		"typeString": "uint240"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3960,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3952,
																			"src": "789:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "781:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint240_$",
																			"typeString": "type(uint240)"
																		},
																		"typeName": {
																			"id": 3958,
																			"name": "uint240",
																			"nodeType": "ElementaryTypeName",
																			"src": "781:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "781:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint240",
																		"typeString": "uint240"
																	}
																},
																"src": "777:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint240",
																	"typeString": "uint240"
																}
															}
														],
														"id": 3963,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "776:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3964,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3952,
														"src": "796:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "776:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3970,
												"nodeType": "IfStatement",
												"src": "772:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3967,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3952,
																"src": "831:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3966,
															"name": "SafeCast__Exceeds240Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "806:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "806:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3969,
													"nodeType": "RevertStatement",
													"src": "799:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3950,
										"nodeType": "StructuredDocumentation",
										"src": "544:151:17",
										"text": "@notice Returns x on uint240 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint240"
									},
									"id": 3972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe240",
									"nameLocation": "709:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3952,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "725:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3972,
												"src": "717:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:11:17"
									},
									"returnParameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3955,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "759:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3972,
												"src": "751:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 3954,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:11:17"
									},
									"scope": 4640,
									"src": "700:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3994,
										"nodeType": "Block",
										"src": "1064:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 3985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3980,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3978,
																	"src": "1079:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint232",
																		"typeString": "uint232"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3983,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3975,
																			"src": "1091:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1083:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint232_$",
																			"typeString": "type(uint232)"
																		},
																		"typeName": {
																			"id": 3981,
																			"name": "uint232",
																			"nodeType": "ElementaryTypeName",
																			"src": "1083:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1083:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint232",
																		"typeString": "uint232"
																	}
																},
																"src": "1079:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint232",
																	"typeString": "uint232"
																}
															}
														],
														"id": 3986,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1078:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3987,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3975,
														"src": "1098:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1078:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3993,
												"nodeType": "IfStatement",
												"src": "1074:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3990,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3975,
																"src": "1133:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3989,
															"name": "SafeCast__Exceeds232Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "1108:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1108:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3992,
													"nodeType": "RevertStatement",
													"src": "1101:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3973,
										"nodeType": "StructuredDocumentation",
										"src": "846:151:17",
										"text": "@notice Returns x on uint232 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint232"
									},
									"id": 3995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe232",
									"nameLocation": "1011:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3975,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1027:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3995,
												"src": "1019:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:11:17"
									},
									"returnParameters": {
										"id": 3979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3978,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1061:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3995,
												"src": "1053:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 3977,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:11:17"
									},
									"scope": 4640,
									"src": "1002:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4017,
										"nodeType": "Block",
										"src": "1366:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4003,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4001,
																	"src": "1381:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint224",
																		"typeString": "uint224"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4006,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3998,
																			"src": "1393:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1385:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint224_$",
																			"typeString": "type(uint224)"
																		},
																		"typeName": {
																			"id": 4004,
																			"name": "uint224",
																			"nodeType": "ElementaryTypeName",
																			"src": "1385:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1385:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint224",
																		"typeString": "uint224"
																	}
																},
																"src": "1381:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															}
														],
														"id": 4009,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1380:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4010,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3998,
														"src": "1400:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1380:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4016,
												"nodeType": "IfStatement",
												"src": "1376:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4013,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3998,
																"src": "1435:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4012,
															"name": "SafeCast__Exceeds224Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1410:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1410:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4015,
													"nodeType": "RevertStatement",
													"src": "1403:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3996,
										"nodeType": "StructuredDocumentation",
										"src": "1148:151:17",
										"text": "@notice Returns x on uint224 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint224"
									},
									"id": 4018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe224",
									"nameLocation": "1313:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3998,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1329:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4018,
												"src": "1321:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:11:17"
									},
									"returnParameters": {
										"id": 4002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4001,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1363:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4018,
												"src": "1355:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 4000,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:11:17"
									},
									"scope": 4640,
									"src": "1304:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4040,
										"nodeType": "Block",
										"src": "1668:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4026,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4024,
																	"src": "1683:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint216",
																		"typeString": "uint216"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4029,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4021,
																			"src": "1695:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1687:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint216_$",
																			"typeString": "type(uint216)"
																		},
																		"typeName": {
																			"id": 4027,
																			"name": "uint216",
																			"nodeType": "ElementaryTypeName",
																			"src": "1687:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1687:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint216",
																		"typeString": "uint216"
																	}
																},
																"src": "1683:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint216",
																	"typeString": "uint216"
																}
															}
														],
														"id": 4032,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1682:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4033,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4021,
														"src": "1702:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1682:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4039,
												"nodeType": "IfStatement",
												"src": "1678:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4036,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4021,
																"src": "1737:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4035,
															"name": "SafeCast__Exceeds216Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "1712:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4038,
													"nodeType": "RevertStatement",
													"src": "1705:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4019,
										"nodeType": "StructuredDocumentation",
										"src": "1450:151:17",
										"text": "@notice Returns x on uint216 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint216"
									},
									"id": 4041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe216",
									"nameLocation": "1615:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4021,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1631:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4041,
												"src": "1623:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:11:17"
									},
									"returnParameters": {
										"id": 4025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4024,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1665:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4041,
												"src": "1657:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 4023,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:11:17"
									},
									"scope": 4640,
									"src": "1606:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4063,
										"nodeType": "Block",
										"src": "1970:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4049,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4047,
																	"src": "1985:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint208",
																		"typeString": "uint208"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4052,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4044,
																			"src": "1997:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1989:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint208_$",
																			"typeString": "type(uint208)"
																		},
																		"typeName": {
																			"id": 4050,
																			"name": "uint208",
																			"nodeType": "ElementaryTypeName",
																			"src": "1989:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1989:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint208",
																		"typeString": "uint208"
																	}
																},
																"src": "1985:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint208",
																	"typeString": "uint208"
																}
															}
														],
														"id": 4055,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1984:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4056,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4044,
														"src": "2004:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1984:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4062,
												"nodeType": "IfStatement",
												"src": "1980:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4059,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4044,
																"src": "2039:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4058,
															"name": "SafeCast__Exceeds208Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "2014:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4061,
													"nodeType": "RevertStatement",
													"src": "2007:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4042,
										"nodeType": "StructuredDocumentation",
										"src": "1752:151:17",
										"text": "@notice Returns x on uint208 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint208"
									},
									"id": 4064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe208",
									"nameLocation": "1917:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4044,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1933:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4064,
												"src": "1925:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:11:17"
									},
									"returnParameters": {
										"id": 4048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4047,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1967:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4064,
												"src": "1959:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 4046,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:11:17"
									},
									"scope": 4640,
									"src": "1908:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4086,
										"nodeType": "Block",
										"src": "2272:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4072,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4070,
																	"src": "2287:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint200",
																		"typeString": "uint200"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4075,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4067,
																			"src": "2299:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2291:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint200_$",
																			"typeString": "type(uint200)"
																		},
																		"typeName": {
																			"id": 4073,
																			"name": "uint200",
																			"nodeType": "ElementaryTypeName",
																			"src": "2291:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2291:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint200",
																		"typeString": "uint200"
																	}
																},
																"src": "2287:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint200",
																	"typeString": "uint200"
																}
															}
														],
														"id": 4078,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2286:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4079,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4067,
														"src": "2306:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2286:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4085,
												"nodeType": "IfStatement",
												"src": "2282:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4082,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4067,
																"src": "2341:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4081,
															"name": "SafeCast__Exceeds200Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "2316:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2316:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4084,
													"nodeType": "RevertStatement",
													"src": "2309:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4065,
										"nodeType": "StructuredDocumentation",
										"src": "2054:151:17",
										"text": "@notice Returns x on uint200 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint200"
									},
									"id": 4087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe200",
									"nameLocation": "2219:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4067,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2235:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4087,
												"src": "2227:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2227:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2226:11:17"
									},
									"returnParameters": {
										"id": 4071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4070,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2269:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4087,
												"src": "2261:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 4069,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:11:17"
									},
									"scope": 4640,
									"src": "2210:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4109,
										"nodeType": "Block",
										"src": "2574:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4095,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4093,
																	"src": "2589:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4098,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4090,
																			"src": "2601:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2593:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint192_$",
																			"typeString": "type(uint192)"
																		},
																		"typeName": {
																			"id": 4096,
																			"name": "uint192",
																			"nodeType": "ElementaryTypeName",
																			"src": "2593:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2593:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"src": "2589:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															}
														],
														"id": 4101,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2588:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4102,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4090,
														"src": "2608:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2588:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4108,
												"nodeType": "IfStatement",
												"src": "2584:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4105,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4090,
																"src": "2643:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4104,
															"name": "SafeCast__Exceeds192Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "2618:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2618:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4107,
													"nodeType": "RevertStatement",
													"src": "2611:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4088,
										"nodeType": "StructuredDocumentation",
										"src": "2356:151:17",
										"text": "@notice Returns x on uint192 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint192"
									},
									"id": 4110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe192",
									"nameLocation": "2521:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4090,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2537:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4110,
												"src": "2529:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:11:17"
									},
									"returnParameters": {
										"id": 4094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4093,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2571:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4110,
												"src": "2563:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 4092,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:11:17"
									},
									"scope": 4640,
									"src": "2512:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4132,
										"nodeType": "Block",
										"src": "2876:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4118,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4116,
																	"src": "2891:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint184",
																		"typeString": "uint184"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4121,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4113,
																			"src": "2903:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2895:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint184_$",
																			"typeString": "type(uint184)"
																		},
																		"typeName": {
																			"id": 4119,
																			"name": "uint184",
																			"nodeType": "ElementaryTypeName",
																			"src": "2895:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2895:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint184",
																		"typeString": "uint184"
																	}
																},
																"src": "2891:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint184",
																	"typeString": "uint184"
																}
															}
														],
														"id": 4124,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2890:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4125,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4113,
														"src": "2910:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2890:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4131,
												"nodeType": "IfStatement",
												"src": "2886:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4128,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4113,
																"src": "2945:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4127,
															"name": "SafeCast__Exceeds184Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "2920:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2920:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4130,
													"nodeType": "RevertStatement",
													"src": "2913:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4111,
										"nodeType": "StructuredDocumentation",
										"src": "2658:151:17",
										"text": "@notice Returns x on uint184 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint184"
									},
									"id": 4133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe184",
									"nameLocation": "2823:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4113,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2839:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "2831:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:11:17"
									},
									"returnParameters": {
										"id": 4117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4116,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2873:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "2865:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 4115,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:11:17"
									},
									"scope": 4640,
									"src": "2814:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4155,
										"nodeType": "Block",
										"src": "3178:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4141,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4139,
																	"src": "3193:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint176",
																		"typeString": "uint176"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4144,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4136,
																			"src": "3205:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3197:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint176_$",
																			"typeString": "type(uint176)"
																		},
																		"typeName": {
																			"id": 4142,
																			"name": "uint176",
																			"nodeType": "ElementaryTypeName",
																			"src": "3197:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3197:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint176",
																		"typeString": "uint176"
																	}
																},
																"src": "3193:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint176",
																	"typeString": "uint176"
																}
															}
														],
														"id": 4147,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3192:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4148,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4136,
														"src": "3212:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4154,
												"nodeType": "IfStatement",
												"src": "3188:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4151,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4136,
																"src": "3247:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4150,
															"name": "SafeCast__Exceeds176Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "3222:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3222:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4153,
													"nodeType": "RevertStatement",
													"src": "3215:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4134,
										"nodeType": "StructuredDocumentation",
										"src": "2960:151:17",
										"text": "@notice Returns x on uint176 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint176"
									},
									"id": 4156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe176",
									"nameLocation": "3125:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4136,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3141:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4156,
												"src": "3133:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:11:17"
									},
									"returnParameters": {
										"id": 4140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4139,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3175:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4156,
												"src": "3167:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 4138,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:11:17"
									},
									"scope": 4640,
									"src": "3116:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4178,
										"nodeType": "Block",
										"src": "3480:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4164,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4162,
																	"src": "3495:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint168",
																		"typeString": "uint168"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4167,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4159,
																			"src": "3507:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3499:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint168_$",
																			"typeString": "type(uint168)"
																		},
																		"typeName": {
																			"id": 4165,
																			"name": "uint168",
																			"nodeType": "ElementaryTypeName",
																			"src": "3499:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3499:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint168",
																		"typeString": "uint168"
																	}
																},
																"src": "3495:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint168",
																	"typeString": "uint168"
																}
															}
														],
														"id": 4170,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3494:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4171,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4159,
														"src": "3514:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3494:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4177,
												"nodeType": "IfStatement",
												"src": "3490:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4174,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4159,
																"src": "3549:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4173,
															"name": "SafeCast__Exceeds168Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3524:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3524:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4176,
													"nodeType": "RevertStatement",
													"src": "3517:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4157,
										"nodeType": "StructuredDocumentation",
										"src": "3262:151:17",
										"text": "@notice Returns x on uint168 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint168"
									},
									"id": 4179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe168",
									"nameLocation": "3427:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4159,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3443:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4179,
												"src": "3435:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3435:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3434:11:17"
									},
									"returnParameters": {
										"id": 4163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4162,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3477:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4179,
												"src": "3469:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 4161,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3468:11:17"
									},
									"scope": 4640,
									"src": "3418:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4201,
										"nodeType": "Block",
										"src": "3782:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4187,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4185,
																	"src": "3797:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4190,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4182,
																			"src": "3809:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3801:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 4188,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3801:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3801:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "3797:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"id": 4193,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3796:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4194,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4182,
														"src": "3816:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3796:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4200,
												"nodeType": "IfStatement",
												"src": "3792:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4197,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4182,
																"src": "3851:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4196,
															"name": "SafeCast__Exceeds160Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "3826:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3826:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4199,
													"nodeType": "RevertStatement",
													"src": "3819:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4180,
										"nodeType": "StructuredDocumentation",
										"src": "3564:151:17",
										"text": "@notice Returns x on uint160 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint160"
									},
									"id": 4202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe160",
									"nameLocation": "3729:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4182,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3745:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4202,
												"src": "3737:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3736:11:17"
									},
									"returnParameters": {
										"id": 4186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4185,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3779:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4202,
												"src": "3771:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4184,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:11:17"
									},
									"scope": 4640,
									"src": "3720:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4224,
										"nodeType": "Block",
										"src": "4084:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4210,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4208,
																	"src": "4099:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint152",
																		"typeString": "uint152"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4213,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4205,
																			"src": "4111:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4103:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint152_$",
																			"typeString": "type(uint152)"
																		},
																		"typeName": {
																			"id": 4211,
																			"name": "uint152",
																			"nodeType": "ElementaryTypeName",
																			"src": "4103:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4103:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint152",
																		"typeString": "uint152"
																	}
																},
																"src": "4099:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint152",
																	"typeString": "uint152"
																}
															}
														],
														"id": 4216,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4098:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4217,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4205,
														"src": "4118:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4098:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4223,
												"nodeType": "IfStatement",
												"src": "4094:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4220,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4205,
																"src": "4153:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4219,
															"name": "SafeCast__Exceeds152Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "4128:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4128:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4222,
													"nodeType": "RevertStatement",
													"src": "4121:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4203,
										"nodeType": "StructuredDocumentation",
										"src": "3866:151:17",
										"text": "@notice Returns x on uint152 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint152"
									},
									"id": 4225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe152",
									"nameLocation": "4031:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4205,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4047:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4225,
												"src": "4039:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4038:11:17"
									},
									"returnParameters": {
										"id": 4209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4208,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4081:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4225,
												"src": "4073:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 4207,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "4073:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:11:17"
									},
									"scope": 4640,
									"src": "4022:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4247,
										"nodeType": "Block",
										"src": "4386:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4233,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4231,
																	"src": "4401:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint144",
																		"typeString": "uint144"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4236,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4228,
																			"src": "4413:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4405:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint144_$",
																			"typeString": "type(uint144)"
																		},
																		"typeName": {
																			"id": 4234,
																			"name": "uint144",
																			"nodeType": "ElementaryTypeName",
																			"src": "4405:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4405:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint144",
																		"typeString": "uint144"
																	}
																},
																"src": "4401:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint144",
																	"typeString": "uint144"
																}
															}
														],
														"id": 4239,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4400:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4240,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4228,
														"src": "4420:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4246,
												"nodeType": "IfStatement",
												"src": "4396:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4243,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4228,
																"src": "4455:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4242,
															"name": "SafeCast__Exceeds144Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4430:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4430:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4245,
													"nodeType": "RevertStatement",
													"src": "4423:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4226,
										"nodeType": "StructuredDocumentation",
										"src": "4168:151:17",
										"text": "@notice Returns x on uint144 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint144"
									},
									"id": 4248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe144",
									"nameLocation": "4333:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4228,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4349:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4248,
												"src": "4341:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4341:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:11:17"
									},
									"returnParameters": {
										"id": 4232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4231,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4383:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4248,
												"src": "4375:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 4230,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4374:11:17"
									},
									"scope": 4640,
									"src": "4324:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4270,
										"nodeType": "Block",
										"src": "4688:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4256,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4254,
																	"src": "4703:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint136",
																		"typeString": "uint136"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4259,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4251,
																			"src": "4715:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4707:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint136_$",
																			"typeString": "type(uint136)"
																		},
																		"typeName": {
																			"id": 4257,
																			"name": "uint136",
																			"nodeType": "ElementaryTypeName",
																			"src": "4707:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4707:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint136",
																		"typeString": "uint136"
																	}
																},
																"src": "4703:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint136",
																	"typeString": "uint136"
																}
															}
														],
														"id": 4262,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4702:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4263,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4251,
														"src": "4722:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4702:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4269,
												"nodeType": "IfStatement",
												"src": "4698:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4266,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4251,
																"src": "4757:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4265,
															"name": "SafeCast__Exceeds136Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "4732:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4732:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4268,
													"nodeType": "RevertStatement",
													"src": "4725:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4249,
										"nodeType": "StructuredDocumentation",
										"src": "4470:151:17",
										"text": "@notice Returns x on uint136 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint136"
									},
									"id": 4271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe136",
									"nameLocation": "4635:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4251,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4651:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4271,
												"src": "4643:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:11:17"
									},
									"returnParameters": {
										"id": 4255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4254,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4685:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4271,
												"src": "4677:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 4253,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4676:11:17"
									},
									"scope": 4640,
									"src": "4626:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4293,
										"nodeType": "Block",
										"src": "4990:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4279,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4277,
																	"src": "5005:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4282,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4274,
																			"src": "5017:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5009:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 4280,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "5009:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5009:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "5005:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"id": 4285,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5004:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4286,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4274,
														"src": "5024:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5004:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4292,
												"nodeType": "IfStatement",
												"src": "5000:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4289,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4274,
																"src": "5059:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4288,
															"name": "SafeCast__Exceeds128Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "5034:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5034:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4291,
													"nodeType": "RevertStatement",
													"src": "5027:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4272,
										"nodeType": "StructuredDocumentation",
										"src": "4772:151:17",
										"text": "@notice Returns x on uint128 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint128"
									},
									"id": 4294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe128",
									"nameLocation": "4937:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4274,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4953:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4294,
												"src": "4945:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4945:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4944:11:17"
									},
									"returnParameters": {
										"id": 4278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4277,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4987:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4294,
												"src": "4979:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4276,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4979:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:11:17"
									},
									"scope": 4640,
									"src": "4928:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4316,
										"nodeType": "Block",
										"src": "5292:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4302,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4300,
																	"src": "5307:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint120",
																		"typeString": "uint120"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4305,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4297,
																			"src": "5319:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5311:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint120_$",
																			"typeString": "type(uint120)"
																		},
																		"typeName": {
																			"id": 4303,
																			"name": "uint120",
																			"nodeType": "ElementaryTypeName",
																			"src": "5311:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5311:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint120",
																		"typeString": "uint120"
																	}
																},
																"src": "5307:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint120",
																	"typeString": "uint120"
																}
															}
														],
														"id": 4308,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5306:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4309,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4297,
														"src": "5326:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5306:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4315,
												"nodeType": "IfStatement",
												"src": "5302:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4312,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4297,
																"src": "5361:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4311,
															"name": "SafeCast__Exceeds120Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "5336:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5336:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4314,
													"nodeType": "RevertStatement",
													"src": "5329:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4295,
										"nodeType": "StructuredDocumentation",
										"src": "5074:151:17",
										"text": "@notice Returns x on uint120 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint120"
									},
									"id": 4317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe120",
									"nameLocation": "5239:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4297,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5255:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4317,
												"src": "5247:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:11:17"
									},
									"returnParameters": {
										"id": 4301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4300,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5289:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4317,
												"src": "5281:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 4299,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "5281:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5280:11:17"
									},
									"scope": 4640,
									"src": "5230:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4339,
										"nodeType": "Block",
										"src": "5594:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4325,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4323,
																	"src": "5609:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4328,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4320,
																			"src": "5621:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5613:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 4326,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "5613:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5613:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "5609:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"id": 4331,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5608:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4332,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4320,
														"src": "5628:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5608:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4338,
												"nodeType": "IfStatement",
												"src": "5604:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4335,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4320,
																"src": "5663:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4334,
															"name": "SafeCast__Exceeds112Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "5638:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5638:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4337,
													"nodeType": "RevertStatement",
													"src": "5631:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4318,
										"nodeType": "StructuredDocumentation",
										"src": "5376:151:17",
										"text": "@notice Returns x on uint112 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint112"
									},
									"id": 4340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe112",
									"nameLocation": "5541:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4320,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5557:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4340,
												"src": "5549:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5549:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5548:11:17"
									},
									"returnParameters": {
										"id": 4324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4323,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5591:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4340,
												"src": "5583:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 4322,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5582:11:17"
									},
									"scope": 4640,
									"src": "5532:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4362,
										"nodeType": "Block",
										"src": "5896:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4348,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4346,
																	"src": "5911:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4351,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4343,
																			"src": "5923:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5915:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint104_$",
																			"typeString": "type(uint104)"
																		},
																		"typeName": {
																			"id": 4349,
																			"name": "uint104",
																			"nodeType": "ElementaryTypeName",
																			"src": "5915:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5915:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"src": "5911:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint104",
																	"typeString": "uint104"
																}
															}
														],
														"id": 4354,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5910:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4355,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4343,
														"src": "5930:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5910:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4361,
												"nodeType": "IfStatement",
												"src": "5906:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4358,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4343,
																"src": "5965:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4357,
															"name": "SafeCast__Exceeds104Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "5940:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5940:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4360,
													"nodeType": "RevertStatement",
													"src": "5933:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4341,
										"nodeType": "StructuredDocumentation",
										"src": "5678:151:17",
										"text": "@notice Returns x on uint104 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint104"
									},
									"id": 4363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe104",
									"nameLocation": "5843:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4343,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5859:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4363,
												"src": "5851:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5851:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5850:11:17"
									},
									"returnParameters": {
										"id": 4347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4346,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5893:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4363,
												"src": "5885:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 4345,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "5885:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:11:17"
									},
									"scope": 4640,
									"src": "5834:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4385,
										"nodeType": "Block",
										"src": "6194:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4371,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4369,
																	"src": "6209:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4374,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4366,
																			"src": "6220:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6213:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": {
																			"id": 4372,
																			"name": "uint96",
																			"nodeType": "ElementaryTypeName",
																			"src": "6213:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6213:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "6209:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"id": 4377,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6208:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4378,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4366,
														"src": "6227:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6208:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4384,
												"nodeType": "IfStatement",
												"src": "6204:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4381,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4366,
																"src": "6261:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4380,
															"name": "SafeCast__Exceeds96Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "6237:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6237:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4383,
													"nodeType": "RevertStatement",
													"src": "6230:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4364,
										"nodeType": "StructuredDocumentation",
										"src": "5980:149:17",
										"text": "@notice Returns x on uint96 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint96"
									},
									"id": 4386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nameLocation": "6143:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4366,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6158:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4386,
												"src": "6150:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6149:11:17"
									},
									"returnParameters": {
										"id": 4370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4369,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6191:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4386,
												"src": "6184:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4368,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "6184:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6183:10:17"
									},
									"scope": 4640,
									"src": "6134:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4408,
										"nodeType": "Block",
										"src": "6490:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4394,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4392,
																	"src": "6505:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint88",
																		"typeString": "uint88"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4397,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4389,
																			"src": "6516:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6509:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint88_$",
																			"typeString": "type(uint88)"
																		},
																		"typeName": {
																			"id": 4395,
																			"name": "uint88",
																			"nodeType": "ElementaryTypeName",
																			"src": "6509:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6509:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint88",
																		"typeString": "uint88"
																	}
																},
																"src": "6505:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint88",
																	"typeString": "uint88"
																}
															}
														],
														"id": 4400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6504:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4401,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4389,
														"src": "6523:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6504:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4407,
												"nodeType": "IfStatement",
												"src": "6500:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4404,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4389,
																"src": "6557:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4403,
															"name": "SafeCast__Exceeds88Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6533:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6533:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4406,
													"nodeType": "RevertStatement",
													"src": "6526:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4387,
										"nodeType": "StructuredDocumentation",
										"src": "6276:149:17",
										"text": "@notice Returns x on uint88 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint88"
									},
									"id": 4409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe88",
									"nameLocation": "6439:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4389,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6454:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4409,
												"src": "6446:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6446:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6445:11:17"
									},
									"returnParameters": {
										"id": 4393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6487:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4409,
												"src": "6480:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 4391,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "6480:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:10:17"
									},
									"scope": 4640,
									"src": "6430:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4431,
										"nodeType": "Block",
										"src": "6786:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4417,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4415,
																	"src": "6801:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4420,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4412,
																			"src": "6812:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6805:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint80_$",
																			"typeString": "type(uint80)"
																		},
																		"typeName": {
																			"id": 4418,
																			"name": "uint80",
																			"nodeType": "ElementaryTypeName",
																			"src": "6805:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6805:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"src": "6801:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																}
															}
														],
														"id": 4423,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6800:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4424,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4412,
														"src": "6819:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6800:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4430,
												"nodeType": "IfStatement",
												"src": "6796:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4427,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4412,
																"src": "6853:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4426,
															"name": "SafeCast__Exceeds80Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "6829:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6829:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4429,
													"nodeType": "RevertStatement",
													"src": "6822:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4410,
										"nodeType": "StructuredDocumentation",
										"src": "6572:149:17",
										"text": "@notice Returns x on uint80 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint80"
									},
									"id": 4432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe80",
									"nameLocation": "6735:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4412,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6750:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "6742:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6742:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6741:11:17"
									},
									"returnParameters": {
										"id": 4416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4415,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6783:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "6776:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 4414,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "6776:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:10:17"
									},
									"scope": 4640,
									"src": "6726:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4454,
										"nodeType": "Block",
										"src": "7082:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4440,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4438,
																	"src": "7097:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4443,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4435,
																			"src": "7108:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7101:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint72_$",
																			"typeString": "type(uint72)"
																		},
																		"typeName": {
																			"id": 4441,
																			"name": "uint72",
																			"nodeType": "ElementaryTypeName",
																			"src": "7101:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7101:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																},
																"src": "7097:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint72",
																	"typeString": "uint72"
																}
															}
														],
														"id": 4446,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7096:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4447,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4435,
														"src": "7115:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7096:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4453,
												"nodeType": "IfStatement",
												"src": "7092:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4450,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4435,
																"src": "7149:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4449,
															"name": "SafeCast__Exceeds72Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "7125:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7125:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4452,
													"nodeType": "RevertStatement",
													"src": "7118:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4433,
										"nodeType": "StructuredDocumentation",
										"src": "6868:149:17",
										"text": "@notice Returns x on uint72 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint72"
									},
									"id": 4455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe72",
									"nameLocation": "7031:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4435,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7046:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4455,
												"src": "7038:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7038:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7037:11:17"
									},
									"returnParameters": {
										"id": 4439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4438,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7079:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4455,
												"src": "7072:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 4437,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "7072:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7071:10:17"
									},
									"scope": 4640,
									"src": "7022:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4477,
										"nodeType": "Block",
										"src": "7378:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4463,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4461,
																	"src": "7393:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4466,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4458,
																			"src": "7404:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7397:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 4464,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "7397:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7397:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "7393:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"id": 4469,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7392:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4470,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4458,
														"src": "7411:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7392:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4476,
												"nodeType": "IfStatement",
												"src": "7388:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4473,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4458,
																"src": "7445:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4472,
															"name": "SafeCast__Exceeds64Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "7421:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7421:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4475,
													"nodeType": "RevertStatement",
													"src": "7414:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4456,
										"nodeType": "StructuredDocumentation",
										"src": "7164:149:17",
										"text": "@notice Returns x on uint64 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint64"
									},
									"id": 4478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe64",
									"nameLocation": "7327:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4458,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4478,
												"src": "7334:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7333:11:17"
									},
									"returnParameters": {
										"id": 4462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4461,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7375:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4478,
												"src": "7368:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4460,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7367:10:17"
									},
									"scope": 4640,
									"src": "7318:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4500,
										"nodeType": "Block",
										"src": "7674:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4486,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4484,
																	"src": "7689:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint56",
																		"typeString": "uint56"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4489,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4481,
																			"src": "7700:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7693:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint56_$",
																			"typeString": "type(uint56)"
																		},
																		"typeName": {
																			"id": 4487,
																			"name": "uint56",
																			"nodeType": "ElementaryTypeName",
																			"src": "7693:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7693:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint56",
																		"typeString": "uint56"
																	}
																},
																"src": "7689:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint56",
																	"typeString": "uint56"
																}
															}
														],
														"id": 4492,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7688:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4493,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4481,
														"src": "7707:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7688:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4499,
												"nodeType": "IfStatement",
												"src": "7684:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4496,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4481,
																"src": "7741:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4495,
															"name": "SafeCast__Exceeds56Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "7717:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7717:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4498,
													"nodeType": "RevertStatement",
													"src": "7710:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4479,
										"nodeType": "StructuredDocumentation",
										"src": "7460:149:17",
										"text": "@notice Returns x on uint56 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint56"
									},
									"id": 4501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe56",
									"nameLocation": "7623:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4481,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7638:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4501,
												"src": "7630:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7630:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7629:11:17"
									},
									"returnParameters": {
										"id": 4485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4484,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7671:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4501,
												"src": "7664:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 4483,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "7664:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7663:10:17"
									},
									"scope": 4640,
									"src": "7614:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4523,
										"nodeType": "Block",
										"src": "7970:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4509,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4507,
																	"src": "7985:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4512,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4504,
																			"src": "7996:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7989:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 4510,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "7989:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7989:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"src": "7985:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"id": 4515,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7984:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4516,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4504,
														"src": "8003:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7984:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4522,
												"nodeType": "IfStatement",
												"src": "7980:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4519,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4504,
																"src": "8037:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4518,
															"name": "SafeCast__Exceeds48Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "8013:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8013:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4521,
													"nodeType": "RevertStatement",
													"src": "8006:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4502,
										"nodeType": "StructuredDocumentation",
										"src": "7756:149:17",
										"text": "@notice Returns x on uint48 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint48"
									},
									"id": 4524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe48",
									"nameLocation": "7919:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4504,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7934:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4524,
												"src": "7926:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7926:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:11:17"
									},
									"returnParameters": {
										"id": 4508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4507,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7967:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4524,
												"src": "7960:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 4506,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "7960:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7959:10:17"
									},
									"scope": 4640,
									"src": "7910:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4546,
										"nodeType": "Block",
										"src": "8266:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4532,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4530,
																	"src": "8281:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4535,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4527,
																			"src": "8292:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8285:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint40_$",
																			"typeString": "type(uint40)"
																		},
																		"typeName": {
																			"id": 4533,
																			"name": "uint40",
																			"nodeType": "ElementaryTypeName",
																			"src": "8285:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8285:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"src": "8281:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint40",
																	"typeString": "uint40"
																}
															}
														],
														"id": 4538,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8280:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4539,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4527,
														"src": "8299:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8280:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4545,
												"nodeType": "IfStatement",
												"src": "8276:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4542,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4527,
																"src": "8333:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4541,
															"name": "SafeCast__Exceeds40Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "8309:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8309:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4544,
													"nodeType": "RevertStatement",
													"src": "8302:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4525,
										"nodeType": "StructuredDocumentation",
										"src": "8052:149:17",
										"text": "@notice Returns x on uint40 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint40"
									},
									"id": 4547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe40",
									"nameLocation": "8215:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4527,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8230:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4547,
												"src": "8222:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8222:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8221:11:17"
									},
									"returnParameters": {
										"id": 4531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4530,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8263:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4547,
												"src": "8256:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 4529,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "8256:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8255:10:17"
									},
									"scope": 4640,
									"src": "8206:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4569,
										"nodeType": "Block",
										"src": "8562:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4555,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4553,
																	"src": "8577:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4558,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4550,
																			"src": "8588:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8581:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 4556,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8581:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8581:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8577:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 4561,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8576:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4562,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4550,
														"src": "8595:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8576:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4568,
												"nodeType": "IfStatement",
												"src": "8572:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4565,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4550,
																"src": "8629:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4564,
															"name": "SafeCast__Exceeds32Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "8605:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8605:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4567,
													"nodeType": "RevertStatement",
													"src": "8598:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4548,
										"nodeType": "StructuredDocumentation",
										"src": "8348:149:17",
										"text": "@notice Returns x on uint32 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint32"
									},
									"id": 4570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nameLocation": "8511:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4550,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8526:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4570,
												"src": "8518:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8518:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8517:11:17"
									},
									"returnParameters": {
										"id": 4554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4553,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8559:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4570,
												"src": "8552:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4552,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8552:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8551:10:17"
									},
									"scope": 4640,
									"src": "8502:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4592,
										"nodeType": "Block",
										"src": "8858:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4578,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4576,
																	"src": "8873:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4581,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4573,
																			"src": "8884:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8877:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint24_$",
																			"typeString": "type(uint24)"
																		},
																		"typeName": {
																			"id": 4579,
																			"name": "uint24",
																			"nodeType": "ElementaryTypeName",
																			"src": "8877:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8877:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "8873:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"id": 4584,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8872:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4585,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4573,
														"src": "8891:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8872:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4591,
												"nodeType": "IfStatement",
												"src": "8868:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4588,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4573,
																"src": "8925:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4587,
															"name": "SafeCast__Exceeds24Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "8901:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8901:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4590,
													"nodeType": "RevertStatement",
													"src": "8894:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4571,
										"nodeType": "StructuredDocumentation",
										"src": "8644:149:17",
										"text": "@notice Returns x on uint24 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint24"
									},
									"id": 4593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe24",
									"nameLocation": "8807:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4573,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8822:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4593,
												"src": "8814:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8814:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8813:11:17"
									},
									"returnParameters": {
										"id": 4577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4576,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8855:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4593,
												"src": "8848:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 4575,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "8848:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8847:10:17"
									},
									"scope": 4640,
									"src": "8798:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4615,
										"nodeType": "Block",
										"src": "9154:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4601,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4599,
																	"src": "9169:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4604,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4596,
																			"src": "9180:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9173:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 4602,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "9173:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9173:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "9169:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"id": 4607,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9168:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4608,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4596,
														"src": "9187:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9168:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4614,
												"nodeType": "IfStatement",
												"src": "9164:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4611,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4596,
																"src": "9221:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4610,
															"name": "SafeCast__Exceeds16Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "9197:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9197:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4613,
													"nodeType": "RevertStatement",
													"src": "9190:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4594,
										"nodeType": "StructuredDocumentation",
										"src": "8940:149:17",
										"text": "@notice Returns x on uint16 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint16"
									},
									"id": 4616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe16",
									"nameLocation": "9103:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4596,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9118:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4616,
												"src": "9110:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9110:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9109:11:17"
									},
									"returnParameters": {
										"id": 4600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4599,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9151:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4616,
												"src": "9144:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4598,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9144:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9143:10:17"
									},
									"scope": 4640,
									"src": "9094:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4638,
										"nodeType": "Block",
										"src": "9446:74:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4624,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4622,
																	"src": "9461:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4627,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4619,
																			"src": "9471:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9465:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 4625,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "9465:5:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9465:8:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "9461:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 4630,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9460:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4631,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4619,
														"src": "9478:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9460:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4637,
												"nodeType": "IfStatement",
												"src": "9456:57:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4634,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4619,
																"src": "9511:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4633,
															"name": "SafeCast__Exceeds8Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "9488:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9488:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4636,
													"nodeType": "RevertStatement",
													"src": "9481:32:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4617,
										"nodeType": "StructuredDocumentation",
										"src": "9236:147:17",
										"text": "@notice Returns x on uint8 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint8"
									},
									"id": 4639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe8",
									"nameLocation": "9397:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4619,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9411:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4639,
												"src": "9403:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:11:17"
									},
									"returnParameters": {
										"id": 4623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4622,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9443:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4639,
												"src": "9437:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4621,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9437:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:9:17"
									},
									"scope": 4640,
									"src": "9388:132:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4641,
							"src": "219:9303:17",
							"usedErrors": []
						}
					],
					"src": "33:9490:17"
				},
				"id": 17
			},
			"Midas/joe-v2-main/src/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "Midas/joe-v2-main/src/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							4667
						]
					},
					"id": 4668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4642,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4643,
								"nodeType": "StructuredDocumentation",
								"src": "58:145:18",
								"text": "@title Liquidity Book Safe Math Helper Library\n @author Trader Joe\n @notice Helper contract used for calculating absolute value safely"
							},
							"fullyImplemented": true,
							"id": 4667,
							"linearizedBaseContracts": [
								4667
							],
							"name": "SafeMath",
							"nameLocation": "211:8:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4665,
										"nodeType": "Block",
										"src": "456:79:18",
										"statements": [
											{
												"id": 4664,
												"nodeType": "UncheckedBlock",
												"src": "466:63:18",
												"statements": [
													{
														"expression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4653,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4646,
																	"src": "497:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 4654,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4648,
																	"src": "501:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "497:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4659,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4648,
																	"src": "513:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 4660,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4646,
																	"src": "517:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "513:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "497:21:18",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4656,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4646,
																	"src": "505:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 4657,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4648,
																	"src": "509:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "505:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4652,
														"id": 4663,
														"nodeType": "Return",
														"src": "490:28:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4644,
										"nodeType": "StructuredDocumentation",
										"src": "226:155:18",
										"text": "@notice absSub, can't underflow or overflow\n @param x The first value\n @param y The second value\n @return The result of abs(x - y)"
									},
									"id": 4666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "absSub",
									"nameLocation": "395:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4646,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "410:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4666,
												"src": "402:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4648,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "421:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4666,
												"src": "413:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:22:18"
									},
									"returnParameters": {
										"id": 4652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4666,
												"src": "447:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:9:18"
									},
									"scope": 4667,
									"src": "386:149:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4668,
							"src": "203:334:18",
							"usedErrors": []
						}
					],
					"src": "33:505:18"
				},
				"id": 18
			}
		}
	}
}
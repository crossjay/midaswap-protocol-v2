{
	"id": "a4d72e699d03d07d6fd02ce094ba0fb6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"joe-v2-main/src/LBFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./LBErrors.sol\";\nimport \"./libraries/BinHelper.sol\";\nimport \"./libraries/Constants.sol\";\nimport \"./libraries/Decoder.sol\";\nimport \"./libraries/PendingOwnable.sol\";\nimport \"./libraries/SafeCast.sol\";\nimport \"./interfaces/ILBFactory.sol\";\n\n/// @title Liquidity Book Factory\n/// @author Trader Joe\n/// @notice Contract used to deploy and register new LBPairs.\n/// Enables setting fee parameters, flashloan fees and LBPair implementation.\n/// Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs.\ncontract LBFactory is PendingOwnable, ILBFactory {\n    using SafeCast for uint256;\n    using Decoder for bytes32;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    uint256 public constant override MAX_FEE = 0.1e18; // 10%\n\n    address public override LBPairImplementation;\n\n    address public override feeRecipient;\n\n    /// @notice Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)\n    bool public override creationUnlocked;\n\n    uint256 public override flashLoanFee;\n\n    ILBPair[] public override allLBPairs;\n\n    /// @dev Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be\n    /// in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens\n    mapping(IERC20 => mapping(IERC20 => LBPairInformation)) private _LBPairsInfo;\n\n    /// @dev Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set\n    /// The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas\n    bytes32 private _availablePresets;\n\n    // The parameters presets\n    mapping(uint256 => bytes32) private _presets;\n\n    EnumerableSet.AddressSet private _quoteAssetWhitelist;\n\n\n    /// @notice Constructor\n    /// @param _feeRecipient The address of the fee recipient\n    constructor(address _feeRecipient) {\n        _setFeeRecipient(_feeRecipient);\n    }\n\n    /// @notice View function to return the number of LBPairs created\n    /// @return The number of LBPair\n    function getNumberOfLBPairs() external view override returns (uint256) {\n        return allLBPairs.length;\n    }\n\n    /// @notice View function to return the number of quote assets whitelisted\n    /// @return The number of quote assets\n    function getNumberOfQuoteAssets() external view override returns (uint256) {\n        return _quoteAssetWhitelist.length();\n    }\n\n    /// @notice View function to return the quote asset whitelisted at index `index`\n    /// @param _index The index\n    /// @return The address of the _quoteAsset at index `index`\n    function getQuoteAsset(uint256 _index) external view override returns (IERC20) {\n        return IERC20(_quoteAssetWhitelist.at(_index));\n    }\n\n    /// @notice View function to return whether a token is a quotedAsset (true) or not (false)\n    /// @param _token The address of the asset\n    /// @return Whether the token is a quote asset or not\n    function isQuoteAsset(IERC20 _token) external view override returns (bool) {\n        return _quoteAssetWhitelist.contains(address(_token));\n    }\n\n    /// @notice Returns the LBPairInformation if it exists,\n    /// if not, then the address 0 is returned. The order doesn't matter\n    /// @param _tokenA The address of the first token of the pair\n    /// @param _tokenB The address of the second token of the pair\n    /// @return The LBPairInformation\n    function getLBPairInformation(\n        IERC20 _tokenA,\n        IERC20 _tokenB\n    ) external view override returns (LBPairInformation memory) {\n        return _getLBPairInformation(_tokenA, _tokenB);\n    }\n\n    /// @notice Set the LBPair implementation address\n    /// @dev Needs to be called by the owner\n    /// @param _LBPairImplementation The address of the implementation\n    function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {\n        if (ILBPair(_LBPairImplementation).factory() != this)\n            revert LBFactory__LBPairSafetyCheckFailed(_LBPairImplementation);\n\n        address _oldLBPairImplementation = LBPairImplementation;\n        if (_oldLBPairImplementation == _LBPairImplementation)\n            revert LBFactory__SameImplementation(_LBPairImplementation);\n\n        LBPairImplementation = _LBPairImplementation;\n\n        emit LBPairImplementationSet(_oldLBPairImplementation, _LBPairImplementation);\n    }\n\n    /// @notice Create a liquidity bin LBPair for _tokenX and _tokenY\n    /// @param _tokenX The address of the first token\n    /// @param _tokenY The address of the second token\n    /// @param _activeId The active id of the pair\n    /// @return _LBPair The address of the newly created LBPair\n    function createLBPair(\n        IERC20 _tokenX,\n        IERC20 _tokenY,\n        uint24 _activeId\n    ) external override returns (ILBPair _LBPair) {\n        address _owner = owner();\n        if (!creationUnlocked && msg.sender != _owner) revert LBFactory__FunctionIsLockedForUsers(msg.sender);\n\n        address _LBPairImplementation = LBPairImplementation;\n\n        if (_LBPairImplementation == address(0)) revert LBFactory__ImplementationNotSet();\n\n        if (!_quoteAssetWhitelist.contains(address(_tokenY))) revert LBFactory__QuoteAssetNotWhitelisted(_tokenY);\n\n        if (_tokenX == _tokenY) revert LBFactory__IdenticalAddresses(_tokenX);\n\n        // safety check, making sure that the price can be calculated\n        BinHelper.getPriceFromId(_activeId);\n\n        // We sort token for storage efficiency, only one input needs to be stored because they are sorted\n        (IERC20 _tokenA, IERC20 _tokenB) = _sortTokens(_tokenX, _tokenY);\n        // single check is sufficient\n        if (address(_tokenA) == address(0)) revert LBFactory__AddressZero();\n        if (address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0))\n            revert LBFactory__LBPairAlreadyExists(_tokenX, _tokenY, 1);\n\n        bytes32 _salt = keccak256(abi.encode(_tokenA, _tokenB));\n        _LBPair = ILBPair(Clones.cloneDeterministic(_LBPairImplementation, _salt));\n\n        _LBPair.initialize(_tokenX, _tokenY, _activeId);\n\n        _LBPairsInfo[_tokenA][_tokenB] = LBPairInformation({\n            LBPair: _LBPair,\n            createdByOwner: msg.sender == _owner\n        });\n\n        allLBPairs.push(_LBPair);\n\n        emit LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1);\n\n        // emit FeeParametersSet(\n        //     msg.sender,\n        //     _LBPair,\n        //     _binStep,\n        //     _preset.decode(type(uint16).max, 16),\n        //     _preset.decode(type(uint16).max, 32),\n        //     _preset.decode(type(uint16).max, 48),\n        //     _preset.decode(type(uint16).max, 64),\n        //     _preset.decode(type(uint24).max, 80),\n        //     _preset.decode(type(uint16).max, 104),\n        //     _preset.decode(type(uint24).max, 120)\n        // );\n    }\n\n    /// @notice Function to set the recipient of the fees. This address needs to be able to receive ERC20s\n    /// @param _feeRecipient The address of the recipient\n    function setFeeRecipient(address _feeRecipient) external override onlyOwner {\n        _setFeeRecipient(_feeRecipient);\n    }\n\n\n    /// @notice Function to set the creation restriction of the Factory\n    /// @param _locked If the creation is restricted (true) or not (false)\n    function setFactoryLockedState(bool _locked) external override onlyOwner {\n        if (creationUnlocked != _locked) revert LBFactory__FactoryLockIsAlreadyInTheSameState();\n        creationUnlocked = !_locked;\n        emit FactoryLockedStatusUpdated(_locked);\n    }\n\n    /// @notice Function to add an asset to the whitelist of quote assets\n    /// @param _quoteAsset The quote asset (e.g: AVAX, USDC...)\n    function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {\n        if (!_quoteAssetWhitelist.add(address(_quoteAsset)))\n            revert LBFactory__QuoteAssetAlreadyWhitelisted(_quoteAsset);\n\n        emit QuoteAssetAdded(_quoteAsset);\n    }\n\n    /// @notice Function to remove an asset from the whitelist of quote assets\n    /// @param _quoteAsset The quote asset (e.g: AVAX, USDC...)\n    function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {\n        if (!_quoteAssetWhitelist.remove(address(_quoteAsset))) revert LBFactory__QuoteAssetNotWhitelisted(_quoteAsset);\n\n        emit QuoteAssetRemoved(_quoteAsset);\n    }\n\n    /// @notice Internal function to set the recipient of the fee\n    /// @param _feeRecipient The address of the recipient\n    function _setFeeRecipient(address _feeRecipient) internal {\n        if (_feeRecipient == address(0)) revert LBFactory__AddressZero();\n\n        address _oldFeeRecipient = feeRecipient;\n        if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient);\n\n        feeRecipient = _feeRecipient;\n        emit FeeRecipientSet(_oldFeeRecipient, _feeRecipient);\n    }\n\n    \n\n    /// @notice Returns the LBPairInformation if it exists,\n    /// if not, then the address 0 is returned. The order doesn't matter\n    /// @param _tokenA The address of the first token of the pair\n    /// @param _tokenB The address of the second token of the pair\n    /// @return The LBPairInformation\n    function _getLBPairInformation(\n        IERC20 _tokenA,\n        IERC20 _tokenB\n    ) private view returns (LBPairInformation memory) {\n        (_tokenA, _tokenB) = _sortTokens(_tokenA, _tokenB);\n        return _LBPairsInfo[_tokenA][_tokenB];\n    }\n\n    /// @notice Private view function to sort 2 tokens in ascending order\n    /// @param _tokenA The first token\n    /// @param _tokenB The second token\n    /// @return The sorted first token\n    /// @return The sorted second token\n    function _sortTokens(IERC20 _tokenA, IERC20 _tokenB) private pure returns (IERC20, IERC20) {\n        if (_tokenA > _tokenB) (_tokenA, _tokenB) = (_tokenB, _tokenA);\n        return (_tokenA, _tokenB);\n    }\n}\n"
			},
			"joe-v2-main/src/interfaces/ILBFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./ILBPair.sol\";\nimport \"./IPendingOwnable.sol\";\n\n/// @title Liquidity Book Factory Interface\n/// @author Trader Joe\n/// @notice Required interface of LBFactory contract\ninterface ILBFactory is IPendingOwnable {\n    /// @dev Structure to store the LBPair information, such as:\n    /// - binStep: The bin step of the LBPair\n    /// - LBPair: The address of the LBPair\n    /// - createdByOwner: Whether the pair was created by the owner of the factory\n    /// - ignoredForRouting: Whether the pair is ignored for routing or not. An ignored pair will not be explored during routes finding\n    struct LBPairInformation {\n        ILBPair LBPair;\n        bool createdByOwner;\n    }\n\n    event LBPairCreated(\n        IERC20 indexed tokenX,\n        IERC20 indexed tokenY,\n        ILBPair LBPair,\n        uint256 pid\n    );\n\n    event FeeRecipientSet(address oldRecipient, address newRecipient);\n\n    event FlashLoanFeeSet(uint256 oldFlashLoanFee, uint256 newFlashLoanFee);\n\n    event FeeParametersSet(\n        address indexed sender,\n        ILBPair indexed LBPair,\n        uint256 baseFactor,\n        uint256 filterPeriod,\n        uint256 decayPeriod,\n        uint256 reductionFactor,\n        uint256 variableFeeControl,\n        uint256 protocolShare,\n        uint256 maxVolatilityAccumulated\n    );\n\n    event FactoryLockedStatusUpdated(bool unlocked);\n\n    event LBPairImplementationSet(address oldLBPairImplementation, address LBPairImplementation);\n\n    event LBPairIgnoredStateChanged(ILBPair indexed LBPair, bool ignored);\n\n    event PresetSet(\n        uint256 baseFactor,\n        uint256 filterPeriod,\n        uint256 decayPeriod,\n        uint256 reductionFactor,\n        uint256 variableFeeControl,\n        uint256 protocolShare,\n        uint256 maxVolatilityAccumulated,\n        uint256 sampleLifetime\n    );\n\n    event PresetRemoved();\n\n    event QuoteAssetAdded(IERC20 indexed quoteAsset);\n\n    event QuoteAssetRemoved(IERC20 indexed quoteAsset);\n\n    function MAX_FEE() external pure returns (uint256);\n\n    // function MIN_BIN_STEP() external pure returns (uint256);\n\n    // function MAX_BIN_STEP() external pure returns (uint256);\n\n    // function MAX_PROTOCOL_SHARE() external pure returns (uint256);\n\n    function LBPairImplementation() external view returns (address);\n\n    function getNumberOfQuoteAssets() external view returns (uint256);\n\n    function getQuoteAsset(uint256 index) external view returns (IERC20);\n\n    function isQuoteAsset(IERC20 token) external view returns (bool);\n\n    function feeRecipient() external view returns (address);\n\n    function flashLoanFee() external view returns (uint256);\n\n    function creationUnlocked() external view returns (bool);\n\n    function allLBPairs(uint256 id) external returns (ILBPair);\n\n    function getNumberOfLBPairs() external view returns (uint256);\n\n    function getLBPairInformation(\n        IERC20 tokenX,\n        IERC20 tokenY\n    ) external view returns (LBPairInformation memory);\n\n    // function getPreset()\n    //     external\n    //     view\n    //     returns (\n    //         uint256 baseFactor,\n    //         uint256 filterPeriod,\n    //         uint256 decayPeriod,\n    //         uint256 reductionFactor,\n    //         uint256 variableFeeControl,\n    //         uint256 protocolShare,\n    //         uint256 maxAccumulator,\n    //         uint256 sampleLifetime\n    //     );\n\n    // function getAllBinSteps() external view;\n\n    // function getAllLBPairs(IERC20 tokenX, IERC20 tokenY)\n    //     external\n    //     view\n    //     returns (LBPairInformation[] memory LBPairsBinStep);\n\n    function setLBPairImplementation(address LBPairImplementation) external;\n\n    function createLBPair(\n        IERC20 tokenX,\n        IERC20 tokenY,\n        uint24 activeId\n    ) external returns (ILBPair pair);\n\n    // function setLBPairIgnored(\n    //     IERC20 tokenX,\n    //     IERC20 tokenY,\n\n    //     bool ignored\n    // ) external;\n\n    // function setPreset(\n\n    //     uint16 baseFactor,\n    //     uint16 filterPeriod,\n    //     uint16 decayPeriod,\n    //     uint16 reductionFactor,\n    //     uint24 variableFeeControl,\n    //     uint16 protocolShare,\n    //     uint24 maxVolatilityAccumulated,\n    //     uint16 sampleLifetime\n    // ) external;\n\n    // function removePreset() external;\n\n    // function setFeesParametersOnPair(\n    //     IERC20 tokenX,\n    //     IERC20 tokenY,\n    //     uint16 baseFactor,\n    //     uint16 filterPeriod,\n    //     uint16 decayPeriod,\n    //     uint16 reductionFactor,\n    //     uint24 variableFeeControl,\n    //     uint16 protocolShare,\n    //     uint24 maxVolatilityAccumulated\n    // ) external;\n\n    function setFeeRecipient(address feeRecipient) external;\n\n    // function setFlashLoanFee(uint256 flashLoanFee) external;\n\n    function setFactoryLockedState(bool locked) external;\n\n    function addQuoteAsset(IERC20 quoteAsset) external;\n\n    function removeQuoteAsset(IERC20 quoteAsset) external;\n\n    // function forceDecay(ILBPair LBPair) external;\n}\n"
			},
			"joe-v2-main/src/libraries/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\n\n/// @title Liquidity Book Safe Cast Library\n/// @author Trader Joe\n/// @notice Helper contract used for converting uint values safely\nlibrary SafeCast {\n    /// @notice Returns x on uint248 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint248\n    function safe248(uint256 x) internal pure returns (uint248 y) {\n        if ((y = uint248(x)) != x) revert SafeCast__Exceeds248Bits(x);\n    }\n\n    /// @notice Returns x on uint240 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint240\n    function safe240(uint256 x) internal pure returns (uint240 y) {\n        if ((y = uint240(x)) != x) revert SafeCast__Exceeds240Bits(x);\n    }\n\n    /// @notice Returns x on uint232 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint232\n    function safe232(uint256 x) internal pure returns (uint232 y) {\n        if ((y = uint232(x)) != x) revert SafeCast__Exceeds232Bits(x);\n    }\n\n    /// @notice Returns x on uint224 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint224\n    function safe224(uint256 x) internal pure returns (uint224 y) {\n        if ((y = uint224(x)) != x) revert SafeCast__Exceeds224Bits(x);\n    }\n\n    /// @notice Returns x on uint216 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint216\n    function safe216(uint256 x) internal pure returns (uint216 y) {\n        if ((y = uint216(x)) != x) revert SafeCast__Exceeds216Bits(x);\n    }\n\n    /// @notice Returns x on uint208 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint208\n    function safe208(uint256 x) internal pure returns (uint208 y) {\n        if ((y = uint208(x)) != x) revert SafeCast__Exceeds208Bits(x);\n    }\n\n    /// @notice Returns x on uint200 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint200\n    function safe200(uint256 x) internal pure returns (uint200 y) {\n        if ((y = uint200(x)) != x) revert SafeCast__Exceeds200Bits(x);\n    }\n\n    /// @notice Returns x on uint192 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint192\n    function safe192(uint256 x) internal pure returns (uint192 y) {\n        if ((y = uint192(x)) != x) revert SafeCast__Exceeds192Bits(x);\n    }\n\n    /// @notice Returns x on uint184 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint184\n    function safe184(uint256 x) internal pure returns (uint184 y) {\n        if ((y = uint184(x)) != x) revert SafeCast__Exceeds184Bits(x);\n    }\n\n    /// @notice Returns x on uint176 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint176\n    function safe176(uint256 x) internal pure returns (uint176 y) {\n        if ((y = uint176(x)) != x) revert SafeCast__Exceeds176Bits(x);\n    }\n\n    /// @notice Returns x on uint168 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint168\n    function safe168(uint256 x) internal pure returns (uint168 y) {\n        if ((y = uint168(x)) != x) revert SafeCast__Exceeds168Bits(x);\n    }\n\n    /// @notice Returns x on uint160 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint160\n    function safe160(uint256 x) internal pure returns (uint160 y) {\n        if ((y = uint160(x)) != x) revert SafeCast__Exceeds160Bits(x);\n    }\n\n    /// @notice Returns x on uint152 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint152\n    function safe152(uint256 x) internal pure returns (uint152 y) {\n        if ((y = uint152(x)) != x) revert SafeCast__Exceeds152Bits(x);\n    }\n\n    /// @notice Returns x on uint144 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint144\n    function safe144(uint256 x) internal pure returns (uint144 y) {\n        if ((y = uint144(x)) != x) revert SafeCast__Exceeds144Bits(x);\n    }\n\n    /// @notice Returns x on uint136 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint136\n    function safe136(uint256 x) internal pure returns (uint136 y) {\n        if ((y = uint136(x)) != x) revert SafeCast__Exceeds136Bits(x);\n    }\n\n    /// @notice Returns x on uint128 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint128\n    function safe128(uint256 x) internal pure returns (uint128 y) {\n        if ((y = uint128(x)) != x) revert SafeCast__Exceeds128Bits(x);\n    }\n\n    /// @notice Returns x on uint120 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint120\n    function safe120(uint256 x) internal pure returns (uint120 y) {\n        if ((y = uint120(x)) != x) revert SafeCast__Exceeds120Bits(x);\n    }\n\n    /// @notice Returns x on uint112 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint112\n    function safe112(uint256 x) internal pure returns (uint112 y) {\n        if ((y = uint112(x)) != x) revert SafeCast__Exceeds112Bits(x);\n    }\n\n    /// @notice Returns x on uint104 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint104\n    function safe104(uint256 x) internal pure returns (uint104 y) {\n        if ((y = uint104(x)) != x) revert SafeCast__Exceeds104Bits(x);\n    }\n\n    /// @notice Returns x on uint96 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint96\n    function safe96(uint256 x) internal pure returns (uint96 y) {\n        if ((y = uint96(x)) != x) revert SafeCast__Exceeds96Bits(x);\n    }\n\n    /// @notice Returns x on uint88 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint88\n    function safe88(uint256 x) internal pure returns (uint88 y) {\n        if ((y = uint88(x)) != x) revert SafeCast__Exceeds88Bits(x);\n    }\n\n    /// @notice Returns x on uint80 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint80\n    function safe80(uint256 x) internal pure returns (uint80 y) {\n        if ((y = uint80(x)) != x) revert SafeCast__Exceeds80Bits(x);\n    }\n\n    /// @notice Returns x on uint72 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint72\n    function safe72(uint256 x) internal pure returns (uint72 y) {\n        if ((y = uint72(x)) != x) revert SafeCast__Exceeds72Bits(x);\n    }\n\n    /// @notice Returns x on uint64 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint64\n    function safe64(uint256 x) internal pure returns (uint64 y) {\n        if ((y = uint64(x)) != x) revert SafeCast__Exceeds64Bits(x);\n    }\n\n    /// @notice Returns x on uint56 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint56\n    function safe56(uint256 x) internal pure returns (uint56 y) {\n        if ((y = uint56(x)) != x) revert SafeCast__Exceeds56Bits(x);\n    }\n\n    /// @notice Returns x on uint48 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint48\n    function safe48(uint256 x) internal pure returns (uint48 y) {\n        if ((y = uint48(x)) != x) revert SafeCast__Exceeds48Bits(x);\n    }\n\n    /// @notice Returns x on uint40 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint40\n    function safe40(uint256 x) internal pure returns (uint40 y) {\n        if ((y = uint40(x)) != x) revert SafeCast__Exceeds40Bits(x);\n    }\n\n    /// @notice Returns x on uint32 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint32\n    function safe32(uint256 x) internal pure returns (uint32 y) {\n        if ((y = uint32(x)) != x) revert SafeCast__Exceeds32Bits(x);\n    }\n\n    /// @notice Returns x on uint24 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint24\n    function safe24(uint256 x) internal pure returns (uint24 y) {\n        if ((y = uint24(x)) != x) revert SafeCast__Exceeds24Bits(x);\n    }\n\n    /// @notice Returns x on uint16 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint16\n    function safe16(uint256 x) internal pure returns (uint16 y) {\n        if ((y = uint16(x)) != x) revert SafeCast__Exceeds16Bits(x);\n    }\n\n    /// @notice Returns x on uint8 and check that it does not overflow\n    /// @param x The value as an uint256\n    /// @return y The value as an uint8\n    function safe8(uint256 x) internal pure returns (uint8 y) {\n        if ((y = uint8(x)) != x) revert SafeCast__Exceeds8Bits(x);\n    }\n}\n"
			},
			"joe-v2-main/src/libraries/PendingOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"../interfaces/IPendingOwnable.sol\";\n\n/// @title Pending Ownable\n/// @author Trader Joe\n/// @notice Contract module which provides a basic access control mechanism, where\n/// there is an account (an owner) that can be granted exclusive access to\n/// specific functions. The ownership of this contract is transferred using the\n/// push and pull pattern, the current owner set a `pendingOwner` using\n/// {setPendingOwner} and that address can then call {becomeOwner} to become the\n/// owner of that contract. The main logic and comments comes from OpenZeppelin's\n/// Ownable contract.\n///\n/// By default, the owner account will be the one that deploys the contract. This\n/// can later be changed with {setPendingOwner} and {becomeOwner}.\n///\n/// This module is used through inheritance. It will make available the modifier\n/// `onlyOwner`, which can be applied to your functions to restrict their use to\n/// the owner\ncontract PendingOwnable is IPendingOwnable {\n    address private _owner;\n    address private _pendingOwner;\n\n    /// @notice Throws if called by any account other than the owner.\n    modifier onlyOwner() {\n        if (msg.sender != _owner) revert PendingOwnable__NotOwner();\n        _;\n    }\n\n    /// @notice Throws if called by any account other than the pending owner.\n    modifier onlyPendingOwner() {\n        if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner();\n        _;\n    }\n\n    /// @notice Initializes the contract setting the deployer as the initial owner\n    constructor() {\n        _transferOwnership(msg.sender);\n    }\n\n    /// @notice Returns the address of the current owner\n    /// @return The address of the current owner\n    function owner() public view override returns (address) {\n        return _owner;\n    }\n\n    /// @notice Returns the address of the current pending owner\n    /// @return The address of the current pending owner\n    function pendingOwner() public view override returns (address) {\n        return _pendingOwner;\n    }\n\n    /// @notice Sets the pending owner address. This address will be able to become\n    /// the owner of this contract by calling {becomeOwner}\n    function setPendingOwner(address pendingOwner_) public override onlyOwner {\n        if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero();\n        if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet();\n        _setPendingOwner(pendingOwner_);\n    }\n\n    /// @notice Revoke the pending owner address. This address will not be able to\n    /// call {becomeOwner} to become the owner anymore.\n    /// Can only be called by the owner\n    function revokePendingOwner() public override onlyOwner {\n        if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner();\n        _setPendingOwner(address(0));\n    }\n\n    /// @notice Transfers the ownership to the new owner (`pendingOwner).\n    /// Can only be called by the pending owner\n    function becomeOwner() public override onlyPendingOwner {\n        _transferOwnership(msg.sender);\n    }\n\n    /// @notice Leaves the contract without owner. It will not be possible to call\n    /// `onlyOwner` functions anymore. Can only be called by the current owner.\n    ///\n    /// NOTE: Renouncing ownership will leave the contract without an owner,\n    /// thereby removing any functionality that is only available to the owner.\n    function renounceOwnership() public override onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /// @notice Transfers ownership of the contract to a new account (`newOwner`).\n    /// Internal function without access restriction.\n    /// @param _newOwner The address of the new owner\n    function _transferOwnership(address _newOwner) internal virtual {\n        address _oldOwner = _owner;\n        _owner = _newOwner;\n        _pendingOwner = address(0);\n        emit OwnershipTransferred(_oldOwner, _newOwner);\n    }\n\n    /// @notice Push the new owner, it needs to be pulled to be effective.\n    /// Internal function without access restriction.\n    /// @param pendingOwner_ The address of the new pending owner\n    function _setPendingOwner(address pendingOwner_) internal virtual {\n        _pendingOwner = pendingOwner_;\n        emit PendingOwnerSet(pendingOwner_);\n    }\n}\n"
			},
			"joe-v2-main/src/libraries/Decoder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Decoder Library\n/// @author Trader Joe\n/// @notice Helper contract used for decoding bytes32 sample\nlibrary Decoder {\n    /// @notice Internal function to decode a bytes32 sample using a mask and offset\n    /// @dev This function can overflow\n    /// @param _sample The sample as a bytes32\n    /// @param _mask The mask\n    /// @param _offset The offset\n    /// @return value The decoded value\n    function decode(\n        bytes32 _sample,\n        uint256 _mask,\n        uint256 _offset\n    ) internal pure returns (uint256 value) {\n        assembly {\n            value := and(shr(_offset, _sample), _mask)\n        }\n    }\n}\n"
			},
			"joe-v2-main/src/libraries/Constants.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Constants Library\n/// @author Trader Joe\n/// @notice Set of constants for Liquidity Book contracts\nlibrary Constants {\n    uint256 internal constant SCALE_OFFSET = 128;\n    uint256 internal constant SCALE = 1 << SCALE_OFFSET;\n\n    uint256 internal constant PRECISION = 1e18;\n    uint256 internal constant BASIS_POINT_MAX = 10_000;\n\n    /// @dev The expected return after a successful flash loan\n    bytes32 internal constant CALLBACK_SUCCESS = keccak256(\"ERC3156FlashBorrower.onFlashLoan\");\n}\n"
			},
			"joe-v2-main/src/libraries/BinHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"./Math128x128.sol\";\n\n/// @title Liquidity Book Bin Helper Library\n/// @author Trader Joe\n/// @notice Contract used to convert bin ID to price and back\nlibrary BinHelper {\n    using Math128x128 for uint256;\n\n    int256 private constant REAL_ID_SHIFT = 1 << 23;\n\n    /// @notice Returns the id corresponding to the given price\n    /// @dev The id may be inaccurate due to rounding issues, always trust getPriceFromId rather than\n    /// getIdFromPrice\n    /// @param _price The price of y per x as a 128.128-binary fixed-point number\n    /// @return The id corresponding to this price\n    function getIdFromPrice(uint256 _price) internal pure returns (uint24) {\n        unchecked {\n            uint256 _binStepValue = _getBPValue();\n\n            // can't overflow as `2**23 + log2(price) < 2**23 + 2**128 < max(uint256)`\n            int256 _id = REAL_ID_SHIFT + _price.log2() / _binStepValue.log2();\n\n            if (_id < 0 || uint256(_id) > type(uint24).max) revert BinHelper__IdOverflows();\n            return uint24(uint256(_id));\n        }\n    }\n\n    /// @notice Returns the price corresponding to the given ID, as a 128.128-binary fixed-point number\n    /// @dev This is the trusted function to link id to price, the other way may be inaccurate\n    /// @param _id The id\n    /// @return The price corresponding to this id, as a 128.128-binary fixed-point number\n    function getPriceFromId(uint256 _id) internal pure returns (uint256) {\n        if (_id > uint256(type(uint24).max)) revert BinHelper__IdOverflows();\n        unchecked {\n            int256 _realId = int256(_id) - REAL_ID_SHIFT;\n\n            return _getBPValue().power(_realId);\n        }\n    }\n\n    /// @notice Returns the (1 + bp) value as a 128.128-decimal fixed-point number\n    /// @return The (1+bp) value as a 128.128-decimal fixed-point number\n    function _getBPValue() internal pure returns (uint256) {\n        unchecked {\n            // can't overflow as `max(result) = 2**128 + 10_000 << 128 / 10_000 < max(uint256)`\n            return Constants.SCALE + (1 << Constants.SCALE_OFFSET) / Constants.BASIS_POINT_MAX;\n        }\n    }\n}\n"
			},
			"joe-v2-main/src/LBErrors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"./interfaces/ILBPair.sol\";\n\n/** LBRouter errors */\n\nerror LBRouter__SenderIsNotWAVAX();\nerror LBRouter__PairNotCreated(address tokenX, address tokenY, uint256 binStep);\nerror LBRouter__WrongAmounts(uint256 amount, uint256 reserve);\nerror LBRouter__SwapOverflows(uint256 id);\nerror LBRouter__BrokenSwapSafetyCheck();\nerror LBRouter__NotFactoryOwner();\nerror LBRouter__TooMuchTokensIn(uint256 excess);\nerror LBRouter__BinReserveOverflows(uint256 id);\nerror LBRouter__IdOverflows(int256 id);\nerror LBRouter__LengthsMismatch();\nerror LBRouter__WrongTokenOrder();\nerror LBRouter__IdSlippageCaught(uint256 activeIdDesired, uint256 idSlippage, uint256 activeId);\nerror LBRouter__AmountSlippageCaught(uint256 amountXMin, uint256 amountX, uint256 amountYMin, uint256 amountY);\nerror LBRouter__IdDesiredOverflows(uint256 idDesired, uint256 idSlippage);\nerror LBRouter__FailedToSendAVAX(address recipient, uint256 amount);\nerror LBRouter__DeadlineExceeded(uint256 deadline, uint256 currentTimestamp);\nerror LBRouter__AmountSlippageBPTooBig(uint256 amountSlippage);\nerror LBRouter__InsufficientAmountOut(uint256 amountOutMin, uint256 amountOut);\nerror LBRouter__MaxAmountInExceeded(uint256 amountInMax, uint256 amountIn);\nerror LBRouter__InvalidTokenPath(address wrongToken);\nerror LBRouter__InvalidVersion(uint256 version);\nerror LBRouter__WrongAvaxLiquidityParameters(\n    address tokenX,\n    address tokenY,\n    uint256 amountX,\n    uint256 amountY,\n    uint256 msgValue\n);\n\n/** LBToken errors */\n\nerror LBToken__SpenderNotApproved(address owner, address spender);\nerror LBToken__TransferFromOrToAddress0();\nerror LBToken__MintToAddress0();\nerror LBToken__BurnFromAddress0();\nerror LBToken__BurnExceedsBalance(address from, uint256 id, uint256 amount);\nerror LBToken__LengthMismatch(uint256 accountsLength, uint256 idsLength);\nerror LBToken__SelfApproval(address owner);\nerror LBToken__TransferExceedsBalance(address from, uint256 id, uint256 amount);\nerror LBToken__TransferToSelf();\n\n/** LBFactory errors */\n\nerror LBFactory__IdenticalAddresses(IERC20 token);\nerror LBFactory__QuoteAssetNotWhitelisted(IERC20 quoteAsset);\nerror LBFactory__QuoteAssetAlreadyWhitelisted(IERC20 quoteAsset);\nerror LBFactory__AddressZero();\nerror LBFactory__LBPairAlreadyExists(IERC20 tokenX, IERC20 tokenY, uint256 _binStep);\nerror LBFactory__LBPairNotCreated(IERC20 tokenX, IERC20 tokenY, uint256 binStep);\nerror LBFactory__DecreasingPeriods(uint16 filterPeriod, uint16 decayPeriod);\nerror LBFactory__ReductionFactorOverflows(uint16 reductionFactor, uint256 max);\nerror LBFactory__VariableFeeControlOverflows(uint16 variableFeeControl, uint256 max);\nerror LBFactory__BaseFeesBelowMin(uint256 baseFees, uint256 minBaseFees);\nerror LBFactory__FeesAboveMax(uint256 fees, uint256 maxFees);\nerror LBFactory__FlashLoanFeeAboveMax(uint256 fees, uint256 maxFees);\nerror LBFactory__BinStepRequirementsBreached(uint256 lowerBound, uint16 binStep, uint256 higherBound);\nerror LBFactory__ProtocolShareOverflows(uint16 protocolShare, uint256 max);\nerror LBFactory__FunctionIsLockedForUsers(address user);\nerror LBFactory__FactoryLockIsAlreadyInTheSameState();\nerror LBFactory__LBPairIgnoredIsAlreadyInTheSameState();\nerror LBFactory__BinStepHasNoPreset(uint256 binStep);\nerror LBFactory__SameFeeRecipient(address feeRecipient);\nerror LBFactory__SameFlashLoanFee(uint256 flashLoanFee);\nerror LBFactory__LBPairSafetyCheckFailed(address LBPairImplementation);\nerror LBFactory__SameImplementation(address LBPairImplementation);\nerror LBFactory__ImplementationNotSet();\n\n/** LBPair errors */\n\nerror LBPair__InsufficientAmounts();\nerror LBPair__AddressZero();\nerror LBPair__AddressZeroOrThis();\nerror LBPair__CompositionFactorFlawed(uint256 id);\nerror LBPair__InsufficientLiquidityMinted(uint256 id);\nerror LBPair__InsufficientLiquidityBurned(uint256 id);\nerror LBPair__WrongLengths();\nerror LBPair__OnlyStrictlyIncreasingId();\nerror LBPair__OnlyFactory();\nerror LBPair__DistributionsOverflow();\nerror LBPair__OnlyFeeRecipient(address feeRecipient, address sender);\nerror LBPair__OracleNotEnoughSample();\nerror LBPair__AlreadyInitialized();\nerror LBPair__OracleNewSizeTooSmall(uint256 newSize, uint256 oracleSize);\nerror LBPair__FlashLoanCallbackFailed();\nerror LBPair__FlashLoanInvalidBalance();\nerror LBPair__FlashLoanInvalidToken();\n\n/** BinHelper errors */\n\nerror BinHelper__BinStepOverflows(uint256 bp);\nerror BinHelper__IdOverflows();\n\n/** Math128x128 errors */\n\nerror Math128x128__PowerUnderflow(uint256 x, int256 y);\nerror Math128x128__LogUnderflow();\n\n/** Math512Bits errors */\n\nerror Math512Bits__MulDivOverflow(uint256 prod1, uint256 denominator);\nerror Math512Bits__ShiftDivOverflow(uint256 prod1, uint256 denominator);\nerror Math512Bits__MulShiftOverflow(uint256 prod1, uint256 offset);\nerror Math512Bits__OffsetOverflows(uint256 offset);\n\n/** Oracle errors */\n\nerror Oracle__AlreadyInitialized(uint256 _index);\nerror Oracle__LookUpTimestampTooOld(uint256 _minTimestamp, uint256 _lookUpTimestamp);\nerror Oracle__NotInitialized();\n\n/** PendingOwnable errors */\n\nerror PendingOwnable__NotOwner();\nerror PendingOwnable__NotPendingOwner();\nerror PendingOwnable__PendingOwnerAlreadySet();\nerror PendingOwnable__NoPendingOwner();\nerror PendingOwnable__AddressZero();\n\n/** ReentrancyGuardUpgradeable errors */\n\nerror ReentrancyGuardUpgradeable__ReentrantCall();\nerror ReentrancyGuardUpgradeable__AlreadyInitialized();\n\n/** SafeCast errors */\n\nerror SafeCast__Exceeds256Bits(uint256 x);\nerror SafeCast__Exceeds248Bits(uint256 x);\nerror SafeCast__Exceeds240Bits(uint256 x);\nerror SafeCast__Exceeds232Bits(uint256 x);\nerror SafeCast__Exceeds224Bits(uint256 x);\nerror SafeCast__Exceeds216Bits(uint256 x);\nerror SafeCast__Exceeds208Bits(uint256 x);\nerror SafeCast__Exceeds200Bits(uint256 x);\nerror SafeCast__Exceeds192Bits(uint256 x);\nerror SafeCast__Exceeds184Bits(uint256 x);\nerror SafeCast__Exceeds176Bits(uint256 x);\nerror SafeCast__Exceeds168Bits(uint256 x);\nerror SafeCast__Exceeds160Bits(uint256 x);\nerror SafeCast__Exceeds152Bits(uint256 x);\nerror SafeCast__Exceeds144Bits(uint256 x);\nerror SafeCast__Exceeds136Bits(uint256 x);\nerror SafeCast__Exceeds128Bits(uint256 x);\nerror SafeCast__Exceeds120Bits(uint256 x);\nerror SafeCast__Exceeds112Bits(uint256 x);\nerror SafeCast__Exceeds104Bits(uint256 x);\nerror SafeCast__Exceeds96Bits(uint256 x);\nerror SafeCast__Exceeds88Bits(uint256 x);\nerror SafeCast__Exceeds80Bits(uint256 x);\nerror SafeCast__Exceeds72Bits(uint256 x);\nerror SafeCast__Exceeds64Bits(uint256 x);\nerror SafeCast__Exceeds56Bits(uint256 x);\nerror SafeCast__Exceeds48Bits(uint256 x);\nerror SafeCast__Exceeds40Bits(uint256 x);\nerror SafeCast__Exceeds32Bits(uint256 x);\nerror SafeCast__Exceeds24Bits(uint256 x);\nerror SafeCast__Exceeds16Bits(uint256 x);\nerror SafeCast__Exceeds8Bits(uint256 x);\n\n/** TreeMath errors */\n\nerror TreeMath__ErrorDepthSearch();\n\n/** JoeLibrary errors */\n\nerror JoeLibrary__IdenticalAddresses();\nerror JoeLibrary__AddressZero();\nerror JoeLibrary__InsufficientAmount();\nerror JoeLibrary__InsufficientLiquidity();\n\n/** TokenHelper errors */\n\nerror TokenHelper__NonContract();\nerror TokenHelper__CallFailed();\nerror TokenHelper__TransferFailed();\n\n/** LBQuoter errors */\n\nerror LBQuoter_InvalidLength();\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"joe-v2-main/src/interfaces/IPendingOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Pending Ownable Interface\n/// @author Trader Joe\n/// @notice Required interface of Pending Ownable contract used for LBFactory\ninterface IPendingOwnable {\n    event PendingOwnerSet(address indexed pendingOwner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function owner() external view returns (address);\n\n    function pendingOwner() external view returns (address);\n\n    function setPendingOwner(address pendingOwner) external;\n\n    function revokePendingOwner() external;\n\n    function becomeOwner() external;\n\n    function renounceOwnership() external;\n}\n"
			},
			"joe-v2-main/src/libraries/Math128x128.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"./BitMath.sol\";\nimport \"./Constants.sol\";\nimport \"./Math512Bits.sol\";\n\n/// @title Liquidity Book Math Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for power and log calculations\nlibrary Math128x128 {\n    using Math512Bits for uint256;\n    using BitMath for uint256;\n\n    uint256 constant LOG_SCALE_OFFSET = 127;\n    uint256 constant LOG_SCALE = 1 << LOG_SCALE_OFFSET;\n    uint256 constant LOG_SCALE_SQUARED = LOG_SCALE * LOG_SCALE;\n\n    /// @notice Calculates the binary logarithm of x.\n    ///\n    /// @dev Based on the iterative approximation algorithm.\n    /// https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n    ///\n    /// Requirements:\n    /// - x must be greater than zero.\n    ///\n    /// Caveats:\n    /// - The results are not perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation\n    /// Also because x is converted to an unsigned 129.127-binary fixed-point number during the operation to optimize the multiplication\n    ///\n    /// @param x The unsigned 128.128-binary fixed-point number for which to calculate the binary logarithm.\n    /// @return result The binary logarithm as a signed 128.128-binary fixed-point number.\n    function log2(uint256 x) internal pure returns (int256 result) {\n        // Convert x to a unsigned 129.127-binary fixed-point number to optimize the multiplication.\n        // If we use an offset of 128 bits, y would need 129 bits and y**2 would would overflow and we would have to\n        // use mulDiv, by reducing x to 129.127-binary fixed-point number we assert that y will use 128 bits, and we\n        // can use the regular multiplication\n\n        if (x == 1) return -128;\n        if (x == 0) revert Math128x128__LogUnderflow();\n\n        x >>= 1;\n\n        unchecked {\n            // This works because log2(x) = -log2(1/x).\n            int256 sign;\n            if (x >= LOG_SCALE) {\n                sign = 1;\n            } else {\n                sign = -1;\n                // Do the fixed-point inversion inline to save gas\n                x = LOG_SCALE_SQUARED / x;\n            }\n\n            // Calculate the integer part of the logarithm and add it to the result and finally calculate y = x * 2^(-n).\n            uint256 n = (x >> LOG_SCALE_OFFSET).mostSignificantBit();\n\n            // The integer part of the logarithm as a signed 129.127-binary fixed-point number. The operation can't overflow\n            // because n is maximum 255, LOG_SCALE_OFFSET is 127 bits and sign is either 1 or -1.\n            result = int256(n) << LOG_SCALE_OFFSET;\n\n            // This is y = x * 2^(-n).\n            uint256 y = x >> n;\n\n            // If y = 1, the fractional part is zero.\n            if (y != LOG_SCALE) {\n                // Calculate the fractional part via the iterative approximation.\n                // The \"delta >>= 1\" part is equivalent to \"delta /= 2\", but shifting bits is faster.\n                for (int256 delta = int256(1 << (LOG_SCALE_OFFSET - 1)); delta > 0; delta >>= 1) {\n                    y = (y * y) >> LOG_SCALE_OFFSET;\n\n                    // Is y^2 > 2 and so in the range [2,4)?\n                    if (y >= 1 << (LOG_SCALE_OFFSET + 1)) {\n                        // Add the 2^(-m) factor to the logarithm.\n                        result += delta;\n\n                        // Corresponds to z/2 on Wikipedia.\n                        y >>= 1;\n                    }\n                }\n            }\n            // Convert x back to unsigned 128.128-binary fixed-point number\n            result = (result * sign) << 1;\n        }\n    }\n\n    /// @notice Returns the value of x^y. It calculates `1 / x^abs(y)` if x is bigger than 2^128.\n    /// At the end of the operations, we invert the result if needed.\n    /// @param x The unsigned 128.128-binary fixed-point number for which to calculate the power\n    /// @param y A relative number without any decimals, needs to be between ]2^20; 2^20[\n    /// @return result The result of `x^y`\n    function power(uint256 x, int256 y) internal pure returns (uint256 result) {\n        bool invert;\n        uint256 absY;\n\n        if (y == 0) return Constants.SCALE;\n\n        assembly {\n            absY := y\n            if slt(absY, 0) {\n                absY := sub(0, absY)\n                invert := iszero(invert)\n            }\n        }\n\n        if (absY < 0x100000) {\n            result = Constants.SCALE;\n            assembly {\n                let pow := x\n                if gt(x, 0xffffffffffffffffffffffffffffffff) {\n                    pow := div(not(0), pow)\n                    invert := iszero(invert)\n                }\n\n                if and(absY, 0x1) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x2) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x4) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x8) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x10) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x20) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x40) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x80) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x100) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x200) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x400) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x800) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x1000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x2000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x4000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x8000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x10000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x20000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x40000) {\n                    result := shr(128, mul(result, pow))\n                }\n                pow := shr(128, mul(pow, pow))\n                if and(absY, 0x80000) {\n                    result := shr(128, mul(result, pow))\n                }\n            }\n        }\n\n        // revert if y is too big or if x^y underflowed\n        if (result == 0) revert Math128x128__PowerUnderflow(x, y);\n\n        return invert ? type(uint256).max / result : result;\n    }\n}\n"
			},
			"joe-v2-main/src/interfaces/ILBPair.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"../libraries/FeeHelper.sol\";\nimport \"./ILBFactory.sol\";\nimport \"./ILBFlashLoanCallback.sol\";\n\n/// @title Liquidity Book Pair Interface\n/// @author Trader Joe\n/// @notice Required interface of LBPair contract\ninterface ILBPair {\n    /// @dev Structure to store the reserves of bins:\n    /// - reserveX: The current reserve of tokenX of the bin\n    /// - reserveY: The current reserve of tokenY of the bin\n    struct Bin {\n        uint112 reserveX;\n        uint112 reserveY;\n        uint256 accTokenXPerShare;\n        uint256 accTokenYPerShare;\n    }\n\n    /// @dev Structure to store the information of the pair such as:\n    /// slot0:\n    /// - activeId: The current id used for swaps, this is also linked with the price\n    /// - reserveX: The sum of amounts of tokenX across all bins\n    /// slot1:\n    /// - reserveY: The sum of amounts of tokenY across all bins\n    /// - oracleSampleLifetime: The lifetime of an oracle sample\n    /// - oracleSize: The current size of the oracle, can be increase by users\n    /// - oracleActiveSize: The current active size of the oracle, composed only from non empty data sample\n    /// - oracleLastTimestamp: The current last timestamp at which a sample was added to the circular buffer\n    /// - oracleId: The current id of the oracle\n    /// slot2:\n    /// - feesX: The current amount of fees to distribute in tokenX (total, protocol)\n    /// slot3:\n    /// - feesY: The current amount of fees to distribute in tokenY (total, protocol)\n    struct PairInformation {\n        uint24 activeId;\n        uint136 reserveX;\n        uint136 reserveY;\n        FeeHelper.FeesDistribution feesY;\n    }\n\n    /// @dev Structure to store the debts of users\n    /// - debtX: The tokenX's debt\n    /// - debtY: The tokenY's debt\n    // struct Debts {\n    //     uint256 debtX;\n    //     uint256 debtY;\n    // }\n\n    /// @dev Structure to store fees:\n    /// - tokenX: The amount of fees of token X\n    /// - tokenY: The amount of fees of token Y\n    struct Fees {\n        uint128 tokenX;\n        uint128 tokenY;\n    }\n\n    /// @dev Structure to minting informations:\n    /// - amountXIn: The amount of token X sent\n    /// - amountYIn: The amount of token Y sent\n    /// - amountXAddedToPair: The amount of token X that have been actually added to the pair\n    /// - amountYAddedToPair: The amount of token Y that have been actually added to the pair\n    /// - activeFeeX: Fees X currently generated\n    /// - activeFeeY: Fees Y currently generated\n    /// - totalDistributionX: Total distribution of token X. Should be 1e18 (100%) or 0 (0%)\n    /// - totalDistributionY: Total distribution of token Y. Should be 1e18 (100%) or 0 (0%)\n    /// - id: Id of the current working bin when looping on the distribution array\n    /// - amountX: The amount of token X deposited in the current bin\n    /// - amountY: The amount of token Y deposited in the current bin\n    /// - distributionX: Distribution of token X for the current working bin\n    /// - distributionY: Distribution of token Y for the current working bin\n    struct MintInfo {\n        uint256 amountXIn;\n        uint256 amountYIn;\n        uint256 amountXAddedToPair;\n        uint256 amountYAddedToPair;\n        uint256 id;\n        uint256 amountX;\n        uint256 amountY;\n    }\n\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        bool swapForY,\n        uint256 amountIn,\n        uint256 amountOut,\n        uint256 fees\n    );\n\n\n    event CompositionFee(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        uint256 feesX,\n        uint256 feesY\n    );\n\n    event DepositedToBin(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        uint256 amountX,\n        uint256 amountY\n    );\n\n    event WithdrawnFromBin(\n        address indexed sender,\n        address indexed recipient,\n        uint256 indexed id,\n        uint256 amountX,\n        uint256 amountY\n    );\n\n    event FeesCollected(address indexed sender, address indexed recipient, uint256 amountX, uint256 amountY);\n\n    event ProtocolFeesCollected(address indexed sender, address indexed recipient, uint256 amountX, uint256 amountY);\n\n    event OracleSizeIncreased(uint256 previousSize, uint256 newSize);\n\n    function tokenX() external view returns (IERC20);\n\n    function tokenY() external view returns (IERC20);\n\n    function factory() external view returns (ILBFactory);\n\n    function getReservesAndId()\n        external\n        view\n        returns (\n            uint256 reserveX,\n            uint256 reserveY,\n            uint256 activeId\n        );\n\n    function getGlobalFees()\n        external\n        view\n        returns (\n \n            uint128 feesYTotal,\n\n            uint128 feesYProtocol\n        );\n\n\n    function feeParameters() external view returns (FeeHelper.FeeParameters memory);\n\n    function findFirstNonEmptyBinId(uint24 id_, bool sentTokenY) external view returns (uint24 id);\n\n    function getBin(uint24 id) external view returns (uint256 reserveX, uint256 reserveY);\n\n    function pendingFees(address account, uint256[] memory ids)\n        external\n        view\n        returns (uint256 amountY);\n\n    function swap(bool sentTokenY, address to) external returns (uint256 amountXOut, uint256 amountYOut);\n\n\n    function mint(\n        uint256[] calldata ids,\n        uint256[] calldata distributionX,\n        uint256[] calldata distributionY,\n        address to\n    )\n        external\n        returns (\n            uint256 amountXAddedToPair,\n            uint256 amountYAddedToPair,\n            uint256[] memory liquidityMinted\n        );\n\n    function burn(\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        address to\n    ) external returns (uint256 amountX, uint256 amountY);\n\n\n    function collectFees(address account, uint256[] calldata ids) external returns (uint256 amountY);\n\n    function collectProtocolFees() external returns (uint128 amountY);\n    \n    function initialize(\n        IERC20 tokenX,\n        IERC20 tokenY,\n        uint24 activeId\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"joe-v2-main/src/libraries/Math512Bits.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"../LBErrors.sol\";\nimport \"./BitMath.sol\";\n\n/// @title Liquidity Book Math Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for full precision calculations\nlibrary Math512Bits {\n    using BitMath for uint256;\n\n    /// @notice Calculates floor(x*y÷denominator) with full precision\n    /// The result will be rounded down\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The denominator cannot be zero\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @return result The result as an uint256\n    function mulDivRoundDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        (uint256 prod0, uint256 prod1) = _getMulProds(x, y);\n\n        return _getEndOfDivRoundDown(x, y, denominator, prod0, prod1);\n    }\n\n    /// @notice Calculates x * y >> offset with full precision\n    /// The result will be rounded down\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param offset The offset as an uint256, can't be greater than 256\n    /// @return result The result as an uint256\n    function mulShiftRoundDown(\n        uint256 x,\n        uint256 y,\n        uint256 offset\n    ) internal pure returns (uint256 result) {\n        if (offset > 255) revert Math512Bits__OffsetOverflows(offset);\n\n        (uint256 prod0, uint256 prod1) = _getMulProds(x, y);\n\n        if (prod0 != 0) result = prod0 >> offset;\n        if (prod1 != 0) {\n            // Make sure the result is less than 2^256.\n            if (prod1 >= 1 << offset) revert Math512Bits__MulShiftOverflow(prod1, offset);\n\n            unchecked {\n                result += prod1 << (256 - offset);\n            }\n        }\n    }\n\n    /// @notice Calculates x * y >> offset with full precision\n    /// The result will be rounded up\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param offset The offset as an uint256, can't be greater than 256\n    /// @return result The result as an uint256\n    function mulShiftRoundUp(\n        uint256 x,\n        uint256 y,\n        uint256 offset\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            result = mulShiftRoundDown(x, y, offset);\n            if (mulmod(x, y, 1 << offset) != 0) result += 1;\n        }\n    }\n\n    /// @notice Calculates x << offset / y with full precision\n    /// The result will be rounded down\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param offset The number of bit to shift x as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @return result The result as an uint256\n    function shiftDivRoundDown(\n        uint256 x,\n        uint256 offset,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        if (offset > 255) revert Math512Bits__OffsetOverflows(offset);\n        uint256 prod0;\n        uint256 prod1;\n\n        prod0 = x << offset; // Least significant 256 bits of the product\n        unchecked {\n            prod1 = x >> (256 - offset); // Most significant 256 bits of the product\n        }\n\n        return _getEndOfDivRoundDown(x, 1 << offset, denominator, prod0, prod1);\n    }\n\n    /// @notice Calculates x << offset / y with full precision\n    /// The result will be rounded up\n    ///\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    ///\n    /// Requirements:\n    /// - The offset needs to be strictly lower than 256\n    /// - The result must fit within uint256\n    ///\n    /// Caveats:\n    /// - This function does not work with fixed-point numbers\n    ///\n    /// @param x The multiplicand as an uint256\n    /// @param offset The number of bit to shift x as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @return result The result as an uint256\n    function shiftDivRoundUp(\n        uint256 x,\n        uint256 offset,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = shiftDivRoundDown(x, offset, denominator);\n        unchecked {\n            if (mulmod(x, 1 << offset, denominator) != 0) result += 1;\n        }\n    }\n\n    /// @notice Helper function to return the result of `x * y` as 2 uint256\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @return prod0 The least significant 256 bits of the product\n    /// @return prod1 The most significant 256 bits of the product\n    function _getMulProds(uint256 x, uint256 y) private pure returns (uint256 prod0, uint256 prod1) {\n        // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n        // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2^256 + prod0.\n        assembly {\n            let mm := mulmod(x, y, not(0))\n            prod0 := mul(x, y)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n    }\n\n    /// @notice Helper function to return the result of `x * y / denominator` with full precision\n    /// @param x The multiplicand as an uint256\n    /// @param y The multiplier as an uint256\n    /// @param denominator The divisor as an uint256\n    /// @param prod0 The least significant 256 bits of the product\n    /// @param prod1 The most significant 256 bits of the product\n    /// @return result The result as an uint256\n    function _getEndOfDivRoundDown(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        uint256 prod0,\n        uint256 prod1\n    ) private pure returns (uint256 result) {\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            unchecked {\n                result = prod0 / denominator;\n            }\n        } else {\n            // Make sure the result is less than 2^256. Also prevents denominator == 0\n            if (prod1 >= denominator) revert Math512Bits__MulDivOverflow(prod1, denominator);\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1\n            // See https://cs.stackexchange.com/q/138556/92363\n            unchecked {\n                // Does not overflow because the denominator cannot be zero at this stage in the function\n                uint256 lpotdod = denominator & (~denominator + 1);\n                assembly {\n                    // Divide denominator by lpotdod.\n                    denominator := div(denominator, lpotdod)\n\n                    // Divide [prod1 prod0] by lpotdod.\n                    prod0 := div(prod0, lpotdod)\n\n                    // Flip lpotdod such that it is 2^256 / lpotdod. If lpotdod is zero, then it becomes one\n                    lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\n                }\n\n                // Shift in bits from prod1 into prod0\n                prod0 |= prod1 * lpotdod;\n\n                // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n                // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n                // four bits. That is, denominator * inv = 1 mod 2^4\n                uint256 inverse = (3 * denominator) ^ 2;\n\n                // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n                // in modular arithmetic, doubling the correct bits in each step\n                inverse *= 2 - denominator * inverse; // inverse mod 2^8\n                inverse *= 2 - denominator * inverse; // inverse mod 2^16\n                inverse *= 2 - denominator * inverse; // inverse mod 2^32\n                inverse *= 2 - denominator * inverse; // inverse mod 2^64\n                inverse *= 2 - denominator * inverse; // inverse mod 2^128\n                inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n                // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n                // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n                // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n                // is no longer required.\n                result = prod0 * inverse;\n            }\n        }\n    }\n}\n"
			},
			"joe-v2-main/src/libraries/BitMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Bit Math Library\n/// @author Trader Joe\n/// @notice Helper contract used for bit calculations\nlibrary BitMath {\n    /// @notice Returns the closest non-zero bit of `integer` to the right (of left) of the `bit` bits that is not `bit`\n    /// @param _integer The integer as a uint256\n    /// @param _bit The bit index\n    /// @param _rightSide Whether we're searching in the right side of the tree (true) or the left side (false)\n    /// @return The index of the closest non-zero bit. If there is no closest bit, it returns max(uint256)\n    function closestBit(\n        uint256 _integer,\n        uint8 _bit,\n        bool _rightSide\n    ) internal pure returns (uint256) {\n        return _rightSide ? closestBitRight(_integer, _bit - 1) : closestBitLeft(_integer, _bit + 1);\n    }\n\n    /// @notice Returns the most (or least) significant bit of `_integer`\n    /// @param _integer The integer\n    /// @param _isMostSignificant Whether we want the most (true) or the least (false) significant bit\n    /// @return The index of the most (or least) significant bit\n    function significantBit(uint256 _integer, bool _isMostSignificant) internal pure returns (uint8) {\n        return _isMostSignificant ? mostSignificantBit(_integer) : leastSignificantBit(_integer);\n    }\n\n    /// @notice Returns the index of the closest bit on the right of x that is non null\n    /// @param x The value as a uint256\n    /// @param bit The index of the bit to start searching at\n    /// @return id The index of the closest non null bit on the right of x.\n    /// If there is no closest bit, it returns max(uint256)\n    function closestBitRight(uint256 x, uint8 bit) internal pure returns (uint256 id) {\n        unchecked {\n            uint256 _shift = 255 - bit;\n            x <<= _shift;\n\n            // can't overflow as it's non-zero and we shifted it by `_shift`\n            return (x == 0) ? type(uint256).max : mostSignificantBit(x) - _shift;\n        }\n    }\n\n    /// @notice Returns the index of the closest bit on the left of x that is non null\n    /// @param x The value as a uint256\n    /// @param bit The index of the bit to start searching at\n    /// @return id The index of the closest non null bit on the left of x.\n    /// If there is no closest bit, it returns max(uint256)\n    function closestBitLeft(uint256 x, uint8 bit) internal pure returns (uint256 id) {\n        unchecked {\n            x >>= bit;\n\n            return (x == 0) ? type(uint256).max : leastSignificantBit(x) + bit;\n        }\n    }\n\n    /// @notice Returns the index of the most significant bit of x\n    /// @param x The value as a uint256\n    /// @return msb The index of the most significant bit of x\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 msb) {\n        unchecked {\n            if (x >= 1 << 128) {\n                x >>= 128;\n                msb = 128;\n            }\n            if (x >= 1 << 64) {\n                x >>= 64;\n                msb += 64;\n            }\n            if (x >= 1 << 32) {\n                x >>= 32;\n                msb += 32;\n            }\n            if (x >= 1 << 16) {\n                x >>= 16;\n                msb += 16;\n            }\n            if (x >= 1 << 8) {\n                x >>= 8;\n                msb += 8;\n            }\n            if (x >= 1 << 4) {\n                x >>= 4;\n                msb += 4;\n            }\n            if (x >= 1 << 2) {\n                x >>= 2;\n                msb += 2;\n            }\n            if (x >= 1 << 1) {\n                msb += 1;\n            }\n        }\n    }\n\n    /// @notice Returns the index of the least significant bit of x\n    /// @param x The value as a uint256\n    /// @return lsb The index of the least significant bit of x\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 lsb) {\n        unchecked {\n            if (x << 128 != 0) {\n                x <<= 128;\n                lsb = 128;\n            }\n            if (x << 64 != 0) {\n                x <<= 64;\n                lsb += 64;\n            }\n            if (x << 32 != 0) {\n                x <<= 32;\n                lsb += 32;\n            }\n            if (x << 16 != 0) {\n                x <<= 16;\n                lsb += 16;\n            }\n            if (x << 8 != 0) {\n                x <<= 8;\n                lsb += 8;\n            }\n            if (x << 4 != 0) {\n                x <<= 4;\n                lsb += 4;\n            }\n            if (x << 2 != 0) {\n                x <<= 2;\n                lsb += 2;\n            }\n            if (x << 1 != 0) {\n                lsb += 1;\n            }\n\n            return 255 - lsb;\n        }\n    }\n}\n"
			},
			"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title Liquidity Book Flashloan Callback Interface\n/// @author Trader Joe\n/// @notice Required interface to interact with LB flash loans\ninterface ILBFlashLoanCallback {\n    function LBFlashLoanCallback(\n        address sender,\n        IERC20 token,\n        uint256 amount,\n        uint256 fee,\n        bytes calldata data\n    ) external returns (bytes32);\n}\n"
			},
			"joe-v2-main/src/libraries/FeeHelper.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"./Constants.sol\";\nimport \"./SafeCast.sol\";\nimport \"./SafeMath.sol\";\n\n/// @title Liquidity Book Fee Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for fees calculation\nlibrary FeeHelper {\n    using SafeCast for uint256;\n    using SafeMath for uint256;\n\n    /// @dev Structure to store the protocol fees:\n    /// - binStep: The bin step\n    /// - baseFactor: The base factor\n    /// - filterPeriod: The filter period, where the fees stays constant\n    /// - decayPeriod: The decay period, where the fees are halved\n    /// - reductionFactor: The reduction factor, used to calculate the reduction of the accumulator\n    /// - variableFeeControl: The variable fee control, used to control the variable fee, can be 0 to disable them\n    /// - protocolShare: The share of fees sent to protocol\n    /// - maxVolatilityAccumulated: The max value of volatility accumulated\n    /// - volatilityAccumulated: The value of volatility accumulated\n    /// - volatilityReference: The value of volatility reference\n    /// - indexRef: The index reference\n    /// - time: The last time the accumulator was called\n    struct FeeParameters {\n        uint128 rate;\n        uint128 protocolShare;\n    }\n\n    /// @dev Structure used during swaps to distributes the fees:\n    /// - total: The total amount of fees\n    /// - protocol: The amount of fees reserved for protocol\n    struct FeesDistribution {\n        uint128 total;\n        uint128 protocol;\n    }\n\n    /// @notice Return the amount of fees from an amount\n    /// @dev Rounds amount up, follows `amount = amountWithFees - getFeeAmountFrom(fp, amountWithFees)`\n    /// @param _fp The current fee parameter\n    /// @param _amountWithFees The amount of token sent\n    /// @return The fee amount from the amount sent\n    function getFeeAmountFrom(FeeParameters memory _fp, uint256 _amountWithFees) internal pure returns (uint256) {\n        return (_amountWithFees * getTotalFee(_fp) + Constants.PRECISION - 1) / (Constants.PRECISION);\n    }\n\n    /// @notice Return the fees to add to an amount\n    /// @dev Rounds amount up, follows `amountWithFees = amount + getFeeAmount(fp, amount)`\n    /// @param _fp The current fee parameter\n    /// @param _amount The amount of token sent\n    /// @return The fee amount to add to the amount\n    function getFeeAmount(FeeParameters memory _fp, uint256 _amount) internal pure returns (uint256) {\n        uint256 _fee = getTotalFee(_fp);\n        uint256 _denominator = Constants.PRECISION - _fee;\n        return (_amount * _fee + _denominator - 1) / _denominator;\n    }\n\n\n    /// @notice Return the fees distribution added to an amount\n    /// @param _fp The current fee parameter\n    /// @param _fees The fee amount\n    /// @return fees The fee distribution\n    function getFeeAmountDistribution(FeeParameters memory _fp, uint256 _fees)\n        internal\n        pure\n        returns (FeesDistribution memory fees)\n    {\n        fees.total = _fees.safe128();\n        // unsafe math is fine because total >= protocol\n        unchecked {\n            fees.protocol = uint128((_fees * _fp.protocolShare) / Constants.BASIS_POINT_MAX);\n        }\n    }\n\n    /// @notice Return the total fee, i.e. baseFee + variableFee\n    /// @param _fp The current fee parameter\n    /// @return The total fee, with 18 decimals\n    function getTotalFee(FeeParameters memory _fp) private pure returns (uint256) {\n        unchecked {\n            return _fp.rate;\n        }\n    }\n}\n"
			},
			"joe-v2-main/src/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\n/// @title Liquidity Book Safe Math Helper Library\n/// @author Trader Joe\n/// @notice Helper contract used for calculating absolute value safely\nlibrary SafeMath {\n    /// @notice absSub, can't underflow or overflow\n    /// @param x The first value\n    /// @param y The second value\n    /// @return The result of abs(x - y)\n    function absSub(uint256 x, uint256 y) internal pure returns (uint256) {\n        unchecked {\n            return x > y ? x - y : y - x;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/Clones.sol\":755:4036  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":755:4036  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208fddc03411c077397ca3c4a82d938194916b6928b104339f03cd4fdc49fc970564736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fddc03411c077397ca3c4a82d938194916b6928b104339f03cd4fdc49fc970564736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDD 0xC0 CALLVALUE GT 0xC0 PUSH24 0x397CA3C4A82D938194916B6928B104339F03CD4FDC49FC97 SDIV PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "755:3281:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:3281:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fddc03411c077397ca3c4a82d938194916b6928b104339f03cd4fdc49fc970564736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDD 0xC0 CALLVALUE GT 0xC0 PUSH24 0x397CA3C4A82D938194916B6928B104339F03CD4FDC49FC97 SDIV PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "755:3281:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 4036,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208fddc03411c077397ca3c4a82d938194916b6928b104339f03cd4fdc49fc970564736f6c634300080a0033",
									".code": [
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 755,
											"end": 4036,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1321:12951  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1321:12951  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122033f22e3f1a01fc5c37e9b8f0f24717063cdf36d5563fd14e21e8b57153865d3164736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033f22e3f1a01fc5c37e9b8f0f24717063cdf36d5563fd14e21e8b57153865d3164736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLCODE 0x2E EXTCODEHASH BYTE ADD 0xFC 0x5C CALLDATACOPY 0xE9 0xB8 CREATE CALLCODE SELFBALANCE OR MOD EXTCODECOPY 0xDF CALLDATASIZE 0xD5 JUMP EXTCODEHASH 0xD1 0x4E 0x21 0xE8 0xB5 PUSH18 0x53865D3164736F6C634300080A0033000000 ",
							"sourceMap": "1321:11630:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1321:11630:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033f22e3f1a01fc5c37e9b8f0f24717063cdf36d5563fd14e21e8b57153865d3164736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER CALLCODE 0x2E EXTCODEHASH BYTE ADD 0xFC 0x5C CALLDATACOPY 0xE9 0xB8 CREATE CALLCODE SELFBALANCE OR MOD EXTCODECOPY 0xDF CALLDATASIZE 0xD5 JUMP EXTCODEHASH 0xD1 0x4E 0x21 0xE8 0xB5 PUSH18 0x53865D3164736F6C634300080A0033000000 ",
							"sourceMap": "1321:11630:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122033f22e3f1a01fc5c37e9b8f0f24717063cdf36d5563fd14e21e8b57153865d3164736f6c634300080a0033",
									".code": [
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"joe-v2-main/src/LBFactory.sol": {
				"LBFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "BinHelper__IdOverflows",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LBFactory__AddressZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LBFactory__FactoryLockIsAlreadyInTheSameState",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "LBFactory__FunctionIsLockedForUsers",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "LBFactory__IdenticalAddresses",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LBFactory__ImplementationNotSet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_binStep",
									"type": "uint256"
								}
							],
							"name": "LBFactory__LBPairAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBFactory__LBPairSafetyCheckFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "LBFactory__QuoteAssetAlreadyWhitelisted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "LBFactory__QuoteAssetNotWhitelisted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "feeRecipient",
									"type": "address"
								}
							],
							"name": "LBFactory__SameFeeRecipient",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBFactory__SameImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "y",
									"type": "int256"
								}
							],
							"name": "Math128x128__PowerUnderflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__AddressZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NoPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__PendingOwnerAlreadySet",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"name": "FactoryLockedStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								}
							],
							"name": "FeeParametersSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFlashLoanFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFlashLoanFee",
									"type": "uint256"
								}
							],
							"name": "FlashLoanFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								}
							],
							"name": "LBPairCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "ignored",
									"type": "bool"
								}
							],
							"name": "LBPairIgnoredStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldLBPairImplementation",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBPairImplementationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresetRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sampleLifetime",
									"type": "uint256"
								}
							],
							"name": "PresetSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LBPairImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_quoteAsset",
									"type": "address"
								}
							],
							"name": "addQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allLBPairs",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_tokenY",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "_activeId",
									"type": "uint24"
								}
							],
							"name": "createLBPair",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "_LBPair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creationUnlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashLoanFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_tokenA",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_tokenB",
									"type": "address"
								}
							],
							"name": "getLBPairInformation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract ILBPair",
											"name": "LBPair",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "createdByOwner",
											"type": "bool"
										}
									],
									"internalType": "struct ILBFactory.LBPairInformation",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfLBPairs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfQuoteAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getQuoteAsset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "isQuoteAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_quoteAsset",
									"type": "address"
								}
							],
							"name": "removeQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_locked",
									"type": "bool"
								}
							],
							"name": "setFactoryLockedState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_LBPairImplementation",
									"type": "address"
								}
							],
							"name": "setLBPairImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner_",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {
							"addQuoteAsset(address)": {
								"params": {
									"_quoteAsset": "The quote asset (e.g: AVAX, USDC...)"
								}
							},
							"constructor": {
								"params": {
									"_feeRecipient": "The address of the fee recipient"
								}
							},
							"createLBPair(address,address,uint24)": {
								"params": {
									"_activeId": "The active id of the pair",
									"_tokenX": "The address of the first token",
									"_tokenY": "The address of the second token"
								},
								"returns": {
									"_LBPair": "The address of the newly created LBPair"
								}
							},
							"getLBPairInformation(address,address)": {
								"params": {
									"_tokenA": "The address of the first token of the pair",
									"_tokenB": "The address of the second token of the pair"
								},
								"returns": {
									"_0": "The LBPairInformation"
								}
							},
							"getNumberOfLBPairs()": {
								"returns": {
									"_0": "The number of LBPair"
								}
							},
							"getNumberOfQuoteAssets()": {
								"returns": {
									"_0": "The number of quote assets"
								}
							},
							"getQuoteAsset(uint256)": {
								"params": {
									"_index": "The index"
								},
								"returns": {
									"_0": "The address of the _quoteAsset at index `index`"
								}
							},
							"isQuoteAsset(address)": {
								"params": {
									"_token": "The address of the asset"
								},
								"returns": {
									"_0": "Whether the token is a quote asset or not"
								}
							},
							"owner()": {
								"returns": {
									"_0": "The address of the current owner"
								}
							},
							"pendingOwner()": {
								"returns": {
									"_0": "The address of the current pending owner"
								}
							},
							"removeQuoteAsset(address)": {
								"params": {
									"_quoteAsset": "The quote asset (e.g: AVAX, USDC...)"
								}
							},
							"setFactoryLockedState(bool)": {
								"params": {
									"_locked": "If the creation is restricted (true) or not (false)"
								}
							},
							"setFeeRecipient(address)": {
								"params": {
									"_feeRecipient": "The address of the recipient"
								}
							},
							"setLBPairImplementation(address)": {
								"details": "Needs to be called by the owner",
								"params": {
									"_LBPairImplementation": "The address of the implementation"
								}
							}
						},
						"stateVariables": {
							"_LBPairsInfo": {
								"details": "Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens"
							},
							"_availablePresets": {
								"details": "Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas"
							}
						},
						"title": "Liquidity Book Factory",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/LBFactory.sol\":712:10161  contract LBFactory is PendingOwnable, ILBFactory {... */\n  mstore(0x40, 0x80)\n    /* \"joe-v2-main/src/LBFactory.sol\":2126:2209  constructor(address _feeRecipient) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  tag_7\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1671:1681  msg.sender */\n  caller\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1670  _transferOwnership */\n  tag_8\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  jump\t// in\ntag_7:\n    /* \"joe-v2-main/src/LBFactory.sol\":2171:2202  _setFeeRecipient(_feeRecipient) */\n  tag_10\n    /* \"joe-v2-main/src/LBFactory.sol\":2188:2201  _feeRecipient */\n  dup2\n    /* \"joe-v2-main/src/LBFactory.sol\":2171:2187  _setFeeRecipient */\n  tag_11\n    /* \"joe-v2-main/src/LBFactory.sol\":2171:2202  _setFeeRecipient(_feeRecipient) */\n  jump\t// in\ntag_10:\n    /* \"joe-v2-main/src/LBFactory.sol\":2126:2209  constructor(address _feeRecipient) {... */\n  pop\n    /* \"joe-v2-main/src/LBFactory.sol\":712:10161  contract LBFactory is PendingOwnable, ILBFactory {... */\n  jump(tag_21)\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\ntag_8:\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n  0x00\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup1\n  dup5\n  and\n  dup3\n  or\n  dup6\n  sstore\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  0x01\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  sstore\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  mload(0x40)\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n  swap1\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  log3\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n  pop\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"joe-v2-main/src/LBFactory.sol\":8764:9153  function _setFeeRecipient(address _feeRecipient) internal {... */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"joe-v2-main/src/LBFactory.sol\":8836:8863  _feeRecipient == address(0) */\n  dup2\n  and\n    /* \"joe-v2-main/src/LBFactory.sol\":8832:8896  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\n  tag_15\n  jumpi\n    /* \"joe-v2-main/src/LBFactory.sol\":8872:8896  LBFactory__AddressZero() */\n  mload(0x40)\n  shl(0xe2, 0x2573cfb9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"joe-v2-main/src/LBFactory.sol\":8832:8896  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\ntag_15:\n    /* \"joe-v2-main/src/LBFactory.sol\":8934:8946  feeRecipient */\n  sload(0x03)\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n  swap1\n    /* \"joe-v2-main/src/LBFactory.sol\":8960:8993  _oldFeeRecipient == _feeRecipient */\n  dup3\n  and\n  dup2\n  eq\n    /* \"joe-v2-main/src/LBFactory.sol\":8956:9044  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\n  iszero\n  tag_16\n  jumpi\n    /* \"joe-v2-main/src/LBFactory.sol\":9002:9044  LBFactory__SameFeeRecipient(_feeRecipient) */\n  mload(0x40)\n  shl(0xe0, 0x4fcea971)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":473:505   */\n  dup4\n  and\n    /* \"joe-v2-main/src/LBFactory.sol\":9002:9044  LBFactory__SameFeeRecipient(_feeRecipient) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"joe-v2-main/src/LBFactory.sol\":9002:9044  LBFactory__SameFeeRecipient(_feeRecipient) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"joe-v2-main/src/LBFactory.sol\":8956:9044  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\ntag_16:\n    /* \"joe-v2-main/src/LBFactory.sol\":9055:9067  feeRecipient */\n  0x03\n    /* \"joe-v2-main/src/LBFactory.sol\":9055:9083  feeRecipient = _feeRecipient */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  dup2\n  and\n  swap2\n  dup3\n  or\n  swap1\n  swap3\n  sstore\n    /* \"joe-v2-main/src/LBFactory.sol\":9098:9146  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n  0x40\n  dup1\n  mload\n    /* \"#utility.yul\":747:762   */\n  swap3\n  dup5\n  and\n    /* \"#utility.yul\":729:763   */\n  dup4\n  mstore\n    /* \"#utility.yul\":794:796   */\n  0x20\n    /* \"#utility.yul\":779:797   */\n  dup4\n  add\n    /* \"#utility.yul\":772:815   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"joe-v2-main/src/LBFactory.sol\":9098:9146  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n  0x15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721\n  swap2\n    /* \"#utility.yul\":664:682   */\n  add\n    /* \"joe-v2-main/src/LBFactory.sol\":9098:9146  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"joe-v2-main/src/LBFactory.sol\":8822:9153  {... */\n  pop\n    /* \"joe-v2-main/src/LBFactory.sol\":8764:9153  function _setFeeRecipient(address _feeRecipient) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_23:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_24:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":517:821   */\ntag_21:\n    /* \"joe-v2-main/src/LBFactory.sol\":712:10161  contract LBFactory is PendingOwnable, ILBFactory {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/LBFactory.sol\":712:10161  contract LBFactory is PendingOwnable, ILBFactory {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x72e47b8c\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xddbfd941\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xeaec42a4\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xeaec42a4\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf89a4cd5\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf9dca989\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0xddbfd941\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0xb0384781\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xb0384781\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbc063e1a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc42069ec\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x72e47b8c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80c5061e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x4e937c3a\n      gt\n      tag_30\n      jumpi\n      dup1\n      0x5c779d6d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x5c779d6d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x67ab8a4e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x4e937c3a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x509ceb90\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5a440923\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x27721842\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x27721842\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4847cdc8\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x02e48ce2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x22f3fe14\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"joe-v2-main/src/LBFactory.sol\":4945:7124  function createLBPair(... */\n    tag_3:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":950:1024   */\n      dup2\n      mstore\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":4945:7124  function createLBPair(... */\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"joe-v2-main/src/LBFactory.sol\":7573:7837  function setFactoryLockedState(bool _locked) external override onlyOwner {... */\n    tag_4:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"joe-v2-main/src/LBFactory.sol\":3225:3370  function isQuoteAsset(IERC20 _token) external view override returns (bool) {... */\n    tag_5:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":1752:1766   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1745:1767   */\n      iszero\n        /* \"#utility.yul\":1727:1768   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1715:1717   */\n      0x20\n        /* \"#utility.yul\":1700:1718   */\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":3225:3370  function isQuoteAsset(IERC20 _token) external view override returns (bool) {... */\n      tag_37\n        /* \"#utility.yul\":1587:1774   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":999:1035  address public override feeRecipient */\n    tag_6:\n      sload(0x03)\n      tag_33\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":1208:1244  uint256 public override flashLoanFee */\n    tag_7:\n      tag_53\n      sload(0x04)\n      dup2\n      jump\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":2156:2181   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2144:2146   */\n      0x20\n        /* \"#utility.yul\":2129:2147   */\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":1208:1244  uint256 public override flashLoanFee */\n      tag_37\n        /* \"#utility.yul\":2010:2187   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":2322:2434  function getNumberOfLBPairs() external view override returns (uint256) {... */\n    tag_8:\n        /* \"joe-v2-main/src/LBFactory.sol\":2410:2420  allLBPairs */\n      0x05\n        /* \"joe-v2-main/src/LBFactory.sol\":2410:2427  allLBPairs.length */\n      sload\n        /* \"joe-v2-main/src/LBFactory.sol\":2322:2434  function getNumberOfLBPairs() external view override returns (uint256) {... */\n      jump(tag_53)\n        /* \"joe-v2-main/src/LBFactory.sol\":948:992  address public override LBPairImplementation */\n    tag_9:\n      sload(0x02)\n      tag_33\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":7981:8237  function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_10:\n      tag_39\n      tag_64\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":1164:1201  bool public override creationUnlocked */\n    tag_11:\n      sload(0x03)\n      tag_43\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_12:\n      tag_39\n      tag_70\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_13:\n      tag_39\n      tag_72\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":1251:1287  ILBPair[] public override allLBPairs */\n    tag_14:\n      tag_33\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":2562:2690  function getNumberOfQuoteAssets() external view override returns (uint256) {... */\n    tag_15:\n      tag_53\n      tag_79\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n    tag_16:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1848:1855  address */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1874:1880  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n      jump(tag_33)\n        /* \"joe-v2-main/src/LBFactory.sol\":4061:4645  function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {... */\n    tag_17:\n      tag_39\n      tag_85\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":885:934  uint256 public constant override MAX_FEE = 0.1e18 */\n    tag_18:\n      tag_53\n        /* \"joe-v2-main/src/LBFactory.sol\":928:934  0.1e18 */\n      0x016345785d8a0000\n        /* \"joe-v2-main/src/LBFactory.sol\":885:934  uint256 public constant override MAX_FEE = 0.1e18 */\n      dup2\n      jump\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_19:\n      tag_39\n      tag_92\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":8386:8634  function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_20:\n      tag_39\n      tag_95\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n    tag_21:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2095:2108  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n      jump(tag_33)\n        /* \"joe-v2-main/src/LBFactory.sol\":7295:7419  function setFeeRecipient(address _feeRecipient) external override onlyOwner {... */\n    tag_22:\n      tag_39\n      tag_101\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":3680:3885  function getLBPairInformation(... */\n    tag_23:\n      tag_103\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3312:3325   */\n      dup3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3308:3370   */\n      and\n        /* \"#utility.yul\":3290:3371   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3441:3445   */\n      0x20\n        /* \"#utility.yul\":3429:3446   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":3423:3447   */\n      mload\n        /* \"#utility.yul\":3416:3448   */\n      iszero\n        /* \"#utility.yul\":3409:3449   */\n      iszero\n        /* \"#utility.yul\":3387:3407   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":3380:3450   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":3680:3885  function getLBPairInformation(... */\n      tag_37\n        /* \"#utility.yul\":3074:3456   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":2877:3019  function getQuoteAsset(uint256 _index) external view override returns (IERC20) {... */\n    tag_24:\n      tag_33\n      tag_110\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_25:\n      tag_39\n      tag_115\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":4945:7124  function createLBPair(... */\n    tag_36:\n        /* \"joe-v2-main/src/LBFactory.sol\":5074:5089  ILBPair _LBPair */\n      0x00\n        /* \"joe-v2-main/src/LBFactory.sol\":5101:5115  address _owner */\n      dup1\n        /* \"joe-v2-main/src/LBFactory.sol\":5118:5125  owner() */\n      tag_117\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1848:1855  address */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1874:1880  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":5118:5125  owner() */\n    tag_117:\n        /* \"joe-v2-main/src/LBFactory.sol\":5140:5156  creationUnlocked */\n      sload(0x03)\n        /* \"joe-v2-main/src/LBFactory.sol\":5101:5125  address _owner = owner() */\n      swap1\n      swap2\n      pop\n      shl(0xa0, 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":5140:5156  creationUnlocked */\n      swap1\n      div\n      0xff\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":5139:5156  !creationUnlocked */\n      iszero\n        /* \"joe-v2-main/src/LBFactory.sol\":5139:5180  !creationUnlocked && msg.sender != _owner */\n      dup1\n      iszero\n      tag_118\n      jumpi\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":5160:5170  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":5160:5180  msg.sender != _owner */\n      dup3\n      and\n      eq\n      iszero\n        /* \"joe-v2-main/src/LBFactory.sol\":5139:5180  !creationUnlocked && msg.sender != _owner */\n    tag_118:\n        /* \"joe-v2-main/src/LBFactory.sol\":5135:5236  if (!creationUnlocked && msg.sender != _owner) revert LBFactory__FunctionIsLockedForUsers(msg.sender) */\n      iszero\n      tag_119\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":5189:5236  LBFactory__FunctionIsLockedForUsers(msg.sender) */\n      mload(0x40)\n      0x3a43e98000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":5225:5235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/LBFactory.sol\":5189:5236  LBFactory__FunctionIsLockedForUsers(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":5189:5236  LBFactory__FunctionIsLockedForUsers(msg.sender) */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/LBFactory.sol\":5135:5236  if (!creationUnlocked && msg.sender != _owner) revert LBFactory__FunctionIsLockedForUsers(msg.sender) */\n    tag_119:\n        /* \"joe-v2-main/src/LBFactory.sol\":5279:5299  LBPairImplementation */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"joe-v2-main/src/LBFactory.sol\":5314:5349  _LBPairImplementation == address(0) */\n      dup1\n        /* \"joe-v2-main/src/LBFactory.sol\":5310:5391  if (_LBPairImplementation == address(0)) revert LBFactory__ImplementationNotSet() */\n      tag_121\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":5358:5391  LBFactory__ImplementationNotSet() */\n      mload(0x40)\n      0xa2d3f3e400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/LBFactory.sol\":5310:5391  if (_LBPairImplementation == address(0)) revert LBFactory__ImplementationNotSet() */\n    tag_121:\n        /* \"joe-v2-main/src/LBFactory.sol\":5407:5454  _quoteAssetWhitelist.contains(address(_tokenY)) */\n      tag_122\n        /* \"joe-v2-main/src/LBFactory.sol\":5407:5427  _quoteAssetWhitelist */\n      0x09\n        /* \"joe-v2-main/src/LBFactory.sol\":5445:5452  _tokenY */\n      dup7\n        /* \"joe-v2-main/src/LBFactory.sol\":5407:5436  _quoteAssetWhitelist.contains */\n      tag_123\n        /* \"joe-v2-main/src/LBFactory.sol\":5407:5454  _quoteAssetWhitelist.contains(address(_tokenY)) */\n      jump\t// in\n    tag_122:\n        /* \"joe-v2-main/src/LBFactory.sol\":5402:5507  if (!_quoteAssetWhitelist.contains(address(_tokenY))) revert LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n      tag_124\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":5463:5507  LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n      mload(0x40)\n      shl(0xe0, 0x8e888ef3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      dup7\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":5463:5507  LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":5463:5507  LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n      tag_120\n        /* \"#utility.yul\":788:1030   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":5402:5507  if (!_quoteAssetWhitelist.contains(address(_tokenY))) revert LBFactory__QuoteAssetNotWhitelisted(_tokenY) */\n    tag_124:\n        /* \"joe-v2-main/src/LBFactory.sol\":5533:5540  _tokenY */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":5522:5540  _tokenX == _tokenY */\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":5522:5529  _tokenX */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":5522:5540  _tokenX == _tokenY */\n      and\n      eq\n        /* \"joe-v2-main/src/LBFactory.sol\":5518:5587  if (_tokenX == _tokenY) revert LBFactory__IdenticalAddresses(_tokenX) */\n      iszero\n      tag_126\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":5549:5587  LBFactory__IdenticalAddresses(_tokenX) */\n      mload(0x40)\n      0x2f9b185300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      dup8\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":5549:5587  LBFactory__IdenticalAddresses(_tokenX) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":5549:5587  LBFactory__IdenticalAddresses(_tokenX) */\n      tag_120\n        /* \"#utility.yul\":788:1030   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":5518:5587  if (_tokenX == _tokenY) revert LBFactory__IdenticalAddresses(_tokenX) */\n    tag_126:\n        /* \"joe-v2-main/src/LBFactory.sol\":5668:5703  BinHelper.getPriceFromId(_activeId) */\n      tag_128\n        /* \"joe-v2-main/src/LBFactory.sol\":5693:5702  _activeId */\n      dup5\n        /* \"joe-v2-main/src/LBFactory.sol\":5668:5703  BinHelper.getPriceFromId(_activeId) */\n      0xffffff\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":5668:5692  BinHelper.getPriceFromId */\n      tag_129\n        /* \"joe-v2-main/src/LBFactory.sol\":5668:5703  BinHelper.getPriceFromId(_activeId) */\n      jump\t// in\n    tag_128:\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":5822:5836  IERC20 _tokenA */\n      0x00\n        /* \"joe-v2-main/src/LBFactory.sol\":5838:5852  IERC20 _tokenB */\n      dup1\n        /* \"joe-v2-main/src/LBFactory.sol\":5856:5885  _sortTokens(_tokenX, _tokenY) */\n      tag_130\n        /* \"joe-v2-main/src/LBFactory.sol\":5868:5875  _tokenX */\n      dup9\n        /* \"joe-v2-main/src/LBFactory.sol\":5877:5884  _tokenY */\n      dup9\n        /* \"joe-v2-main/src/LBFactory.sol\":5856:5867  _sortTokens */\n      tag_131\n        /* \"joe-v2-main/src/LBFactory.sol\":5856:5885  _sortTokens(_tokenX, _tokenY) */\n      jump\t// in\n    tag_130:\n        /* \"joe-v2-main/src/LBFactory.sol\":5821:5885  (IERC20 _tokenA, IERC20 _tokenB) = _sortTokens(_tokenX, _tokenY) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":5937:5967  address(_tokenA) == address(0) */\n      dup3\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":5933:6000  if (address(_tokenA) == address(0)) revert LBFactory__AddressZero() */\n      tag_132\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":5976:6000  LBFactory__AddressZero() */\n      mload(0x40)\n      shl(0xe2, 0x2573cfb9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/LBFactory.sol\":5933:6000  if (address(_tokenA) == address(0)) revert LBFactory__AddressZero() */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":6022:6043  _LBPairsInfo[_tokenA] */\n      dup3\n      dup2\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":6072:6073  0 */\n      0x00\n        /* \"joe-v2-main/src/LBFactory.sol\":6022:6043  _LBPairsInfo[_tokenA] */\n      swap1\n      dup2\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6022:6034  _LBPairsInfo */\n      0x06\n        /* \"joe-v2-main/src/LBFactory.sol\":6022:6043  _LBPairsInfo[_tokenA] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"joe-v2-main/src/LBFactory.sol\":6022:6052  _LBPairsInfo[_tokenA][_tokenB] */\n      dup6\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"joe-v2-main/src/LBFactory.sol\":6022:6059  _LBPairsInfo[_tokenA][_tokenB].LBPair */\n      sload\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":6014:6074  address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0) */\n      iszero\n        /* \"joe-v2-main/src/LBFactory.sol\":6010:6146  if (address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0))... */\n      tag_133\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":6095:6146  LBFactory__LBPairAlreadyExists(_tokenX, _tokenY, 1) */\n      mload(0x40)\n      0xcb27a43500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4023:4038   */\n      dup1\n      dup11\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":6095:6146  LBFactory__LBPairAlreadyExists(_tokenX, _tokenY, 1) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4005:4039   */\n      mstore\n        /* \"#utility.yul\":4075:4090   */\n      dup9\n      and\n        /* \"#utility.yul\":4055:4073   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4048:4091   */\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6144:6145  1 */\n      0x01\n        /* \"#utility.yul\":4107:4125   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4100:4134   */\n      mstore\n        /* \"#utility.yul\":3917:3935   */\n      0x64\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":6095:6146  LBFactory__LBPairAlreadyExists(_tokenX, _tokenY, 1) */\n      tag_120\n        /* \"#utility.yul\":3706:4140   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":6010:6146  if (address(_LBPairsInfo[_tokenA][_tokenB].LBPair) != address(0))... */\n    tag_133:\n        /* \"joe-v2-main/src/LBFactory.sol\":6183:6211  abi.encode(_tokenA, _tokenB) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4426:4441   */\n      dup5\n      dup2\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":6183:6211  abi.encode(_tokenA, _tokenB) */\n      0x20\n      dup1\n      dup5\n      add\n        /* \"#utility.yul\":4408:4442   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4478:4493   */\n      swap1\n      dup5\n      and\n        /* \"#utility.yul\":4458:4476   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":4451:4494   */\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6183:6211  abi.encode(_tokenA, _tokenB) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      dup5\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4320:4338   */\n      0x60\n      swap1\n      swap3\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":6183:6211  abi.encode(_tokenA, _tokenB) */\n      swap1\n      swap3\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6173:6212  keccak256(abi.encode(_tokenA, _tokenB)) */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n        /* \"joe-v2-main/src/LBFactory.sol\":6240:6295  Clones.cloneDeterministic(_LBPairImplementation, _salt) */\n      tag_138\n        /* \"joe-v2-main/src/LBFactory.sol\":6266:6287  _LBPairImplementation */\n      dup5\n        /* \"joe-v2-main/src/LBFactory.sol\":6173:6212  keccak256(abi.encode(_tokenA, _tokenB)) */\n      dup3\n        /* \"joe-v2-main/src/LBFactory.sol\":6240:6265  Clones.cloneDeterministic */\n      tag_139\n        /* \"joe-v2-main/src/LBFactory.sol\":6240:6295  Clones.cloneDeterministic(_LBPairImplementation, _salt) */\n      jump\t// in\n    tag_138:\n        /* \"joe-v2-main/src/LBFactory.sol\":6307:6354  _LBPair.initialize(_tokenX, _tokenY, _activeId) */\n      mload(0x40)\n      0x336c8d7000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4812:4827   */\n      dup12\n      dup2\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":6307:6354  _LBPair.initialize(_tokenX, _tokenY, _activeId) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4794:4828   */\n      mstore\n        /* \"#utility.yul\":4864:4879   */\n      dup11\n      dup2\n      and\n        /* \"#utility.yul\":4844:4862   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4837:4880   */\n      mstore\n        /* \"#utility.yul\":4928:4936   */\n      0xffffff\n        /* \"#utility.yul\":4916:4937   */\n      dup11\n      and\n        /* \"#utility.yul\":4896:4914   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":4889:4938   */\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6222:6296  _LBPair = ILBPair(Clones.cloneDeterministic(_LBPairImplementation, _salt)) */\n      swap2\n      swap8\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":6307:6325  _LBPair.initialize */\n      swap1\n      dup8\n      and\n      swap1\n      0x336c8d70\n      swap1\n        /* \"#utility.yul\":4706:4724   */\n      0x64\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":6307:6354  _LBPair.initialize(_tokenX, _tokenY, _activeId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":6398:6506  LBPairInformation({... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup12\n      and\n      dup1\n      dup4\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6475:6485  msg.sender */\n      caller\n        /* \"joe-v2-main/src/LBFactory.sol\":6475:6495  msg.sender == _owner */\n      dup12\n      dup4\n      and\n      eq\n        /* \"joe-v2-main/src/LBFactory.sol\":6398:6506  LBPairInformation({... */\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6365:6386  _LBPairsInfo[_tokenA] */\n      dup11\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6365:6377  _LBPairsInfo */\n      0x06\n        /* \"joe-v2-main/src/LBFactory.sol\":6365:6386  _LBPairsInfo[_tokenA] */\n      dup3\n      mstore\n      dup7\n      dup2\n      keccak256\n        /* \"joe-v2-main/src/LBFactory.sol\":6365:6395  _LBPairsInfo[_tokenA][_tokenB] */\n      dup12\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      swap2\n      mstore\n      swap5\n      dup6\n      keccak256\n        /* \"joe-v2-main/src/LBFactory.sol\":6365:6506  _LBPairsInfo[_tokenA][_tokenB] = LBPairInformation({... */\n      swap4\n      mload\n      dup5\n      sload\n      swap2\n      mload\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      0xffffffffffffffffffffff000000000000000000000000000000000000000000\n      swap1\n      swap3\n      and\n      swap1\n      dup5\n      and\n      or\n      or\n      swap1\n      swap3\n      sstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6517:6527  allLBPairs */\n      0x05\n        /* \"joe-v2-main/src/LBFactory.sol\":6517:6541  allLBPairs.push(_LBPair) */\n      dup1\n      sload\n        /* \"joe-v2-main/src/LBFactory.sol\":6365:6506  _LBPairsInfo[_tokenA][_tokenB] = LBPairInformation({... */\n      0x01\n        /* \"joe-v2-main/src/LBFactory.sol\":6517:6541  allLBPairs.push(_LBPair) */\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap5\n      dup3\n      swap1\n      mstore\n      0x036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"joe-v2-main/src/LBFactory.sol\":6598:6615  allLBPairs.length */\n      swap1\n      sload\n        /* \"joe-v2-main/src/LBFactory.sol\":6557:6620  LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1) */\n      dup13\n      dup3\n      and\n      swap5\n      pop\n      swap1\n      dup14\n      and\n      swap3\n      pop\n      0x612fdd9b533d1ca33088dcbca9ad3186eeadc9893e63715b8a783040d729cd6a\n      swap2\n        /* \"joe-v2-main/src/LBFactory.sol\":6438:6445  _LBPair */\n      dup11\n      swap2\n        /* \"joe-v2-main/src/LBFactory.sol\":6598:6619  allLBPairs.length - 1 */\n      tag_146\n      swap2\n        /* \"joe-v2-main/src/LBFactory.sol\":6365:6506  _LBPairsInfo[_tokenA][_tokenB] = LBPairInformation({... */\n      swap1\n        /* \"joe-v2-main/src/LBFactory.sol\":6598:6619  allLBPairs.length - 1 */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"joe-v2-main/src/LBFactory.sol\":6557:6620  LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5441:5496   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":5423:5497   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5528:5530   */\n      0x20\n        /* \"#utility.yul\":5513:5531   */\n      dup4\n      add\n        /* \"#utility.yul\":5506:5540   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5396:5414   */\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":6557:6620  LBPairCreated(_tokenX, _tokenY, _LBPair, allLBPairs.length - 1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"joe-v2-main/src/LBFactory.sol\":5091:7124  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":4945:7124  function createLBPair(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":7573:7837  function setFactoryLockedState(bool _locked) external override onlyOwner {... */\n    tag_42:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_151\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_151:\n        /* \"joe-v2-main/src/LBFactory.sol\":7660:7676  creationUnlocked */\n      sload(0x03)\n      0xff\n      shl(0xa0, 0x01)\n      swap1\n      swap2\n      div\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":7660:7687  creationUnlocked != _locked */\n      iszero\n      iszero\n      dup2\n      iszero\n      iszero\n      eq\n        /* \"joe-v2-main/src/LBFactory.sol\":7656:7743  if (creationUnlocked != _locked) revert LBFactory__FactoryLockIsAlreadyInTheSameState() */\n      tag_153\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":7696:7743  LBFactory__FactoryLockIsAlreadyInTheSameState() */\n      mload(0x40)\n      0x0b6ef29400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/LBFactory.sol\":7656:7743  if (creationUnlocked != _locked) revert LBFactory__FactoryLockIsAlreadyInTheSameState() */\n    tag_153:\n        /* \"joe-v2-main/src/LBFactory.sol\":7753:7769  creationUnlocked */\n      0x03\n        /* \"joe-v2-main/src/LBFactory.sol\":7753:7780  creationUnlocked = !_locked */\n      dup1\n      sload\n      shl(0xa0, 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":7772:7780  !_locked */\n      dup4\n      iszero\n        /* \"joe-v2-main/src/LBFactory.sol\":7753:7780  creationUnlocked = !_locked */\n      mul\n      0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      or\n      swap1\n      sstore\n        /* \"joe-v2-main/src/LBFactory.sol\":7795:7830  FactoryLockedStatusUpdated(_locked) */\n      mload(0x40)\n      0xcdee7bf87b7a743b4cbe1d2d534c5248621b76f58460337e7fda92d5d23f4124\n      swap1\n      tag_154\n      swap1\n        /* \"joe-v2-main/src/LBFactory.sol\":7773:7780  _locked */\n      dup4\n        /* \"#utility.yul\":1752:1766   */\n      iszero\n        /* \"#utility.yul\":1745:1767   */\n      iszero\n        /* \"#utility.yul\":1727:1768   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1715:1717   */\n      0x20\n        /* \"#utility.yul\":1700:1718   */\n      add\n      swap1\n        /* \"#utility.yul\":1587:1774   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":7795:7830  FactoryLockedStatusUpdated(_locked) */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"joe-v2-main/src/LBFactory.sol\":7573:7837  function setFactoryLockedState(bool _locked) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":3225:3370  function isQuoteAsset(IERC20 _token) external view override returns (bool) {... */\n    tag_46:\n        /* \"joe-v2-main/src/LBFactory.sol\":3294:3298  bool */\n      0x00\n        /* \"joe-v2-main/src/LBFactory.sol\":3317:3363  _quoteAssetWhitelist.contains(address(_token)) */\n      tag_156\n        /* \"joe-v2-main/src/LBFactory.sol\":3317:3337  _quoteAssetWhitelist */\n      0x09\n        /* \"joe-v2-main/src/LBFactory.sol\":3355:3361  _token */\n      dup4\n        /* \"joe-v2-main/src/LBFactory.sol\":3317:3346  _quoteAssetWhitelist.contains */\n      tag_123\n        /* \"joe-v2-main/src/LBFactory.sol\":3317:3363  _quoteAssetWhitelist.contains(address(_token)) */\n      jump\t// in\n    tag_156:\n        /* \"joe-v2-main/src/LBFactory.sol\":3310:3363  return _quoteAssetWhitelist.contains(address(_token)) */\n      swap3\n        /* \"joe-v2-main/src/LBFactory.sol\":3225:3370  function isQuoteAsset(IERC20 _token) external view override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":7981:8237  function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_65:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_159\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_159:\n        /* \"joe-v2-main/src/LBFactory.sol\":8067:8113  _quoteAssetWhitelist.add(address(_quoteAsset)) */\n      tag_161\n        /* \"joe-v2-main/src/LBFactory.sol\":8067:8087  _quoteAssetWhitelist */\n      0x09\n        /* \"joe-v2-main/src/LBFactory.sol\":8100:8111  _quoteAsset */\n      dup3\n        /* \"joe-v2-main/src/LBFactory.sol\":8067:8091  _quoteAssetWhitelist.add */\n      tag_162\n        /* \"joe-v2-main/src/LBFactory.sol\":8067:8113  _quoteAssetWhitelist.add(address(_quoteAsset)) */\n      jump\t// in\n    tag_161:\n        /* \"joe-v2-main/src/LBFactory.sol\":8062:8186  if (!_quoteAssetWhitelist.add(address(_quoteAsset)))... */\n      tag_163\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":8134:8186  LBFactory__QuoteAssetAlreadyWhitelisted(_quoteAsset) */\n      mload(0x40)\n      0x03ce0ad900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      dup3\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":8134:8186  LBFactory__QuoteAssetAlreadyWhitelisted(_quoteAsset) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":8134:8186  LBFactory__QuoteAssetAlreadyWhitelisted(_quoteAsset) */\n      tag_120\n        /* \"#utility.yul\":788:1030   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":8062:8186  if (!_quoteAssetWhitelist.add(address(_quoteAsset)))... */\n    tag_163:\n        /* \"joe-v2-main/src/LBFactory.sol\":8202:8230  QuoteAssetAdded(_quoteAsset) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"joe-v2-main/src/LBFactory.sol\":7981:8237  function addQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_70:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_166\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_166:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2824  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n      tag_168\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2847:2879  PendingOwnable__NoPendingOwner() */\n      mload(0x40)\n      0xecfad6bf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n    tag_168:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      tag_169\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2914:2915  0 */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2905  _setPendingOwner */\n      tag_170\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      jump\t// in\n    tag_169:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n      jump\t// out\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_72:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_172\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_172:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      tag_169\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3581:3582  0 */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3572  _transferOwnership */\n      tag_175\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":1251:1287  ILBPair[] public override allLBPairs */\n    tag_76:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":2562:2690  function getNumberOfQuoteAssets() external view override returns (uint256) {... */\n    tag_79:\n        /* \"joe-v2-main/src/LBFactory.sol\":2628:2635  uint256 */\n      0x00\n        /* \"joe-v2-main/src/LBFactory.sol\":2654:2683  _quoteAssetWhitelist.length() */\n      tag_179\n        /* \"joe-v2-main/src/LBFactory.sol\":2654:2674  _quoteAssetWhitelist */\n      0x09\n        /* \"joe-v2-main/src/LBFactory.sol\":2654:2681  _quoteAssetWhitelist.length */\n      tag_180\n        /* \"joe-v2-main/src/LBFactory.sol\":2654:2683  _quoteAssetWhitelist.length() */\n      jump\t// in\n    tag_179:\n        /* \"joe-v2-main/src/LBFactory.sol\":2647:2683  return _quoteAssetWhitelist.length() */\n      swap1\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":2562:2690  function getNumberOfQuoteAssets() external view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":4061:4645  function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {... */\n    tag_87:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_183\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_183:\n        /* \"joe-v2-main/src/LBFactory.sol\":4211:4215  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":4167:4215  ILBPair(_LBPairImplementation).factory() != this */\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":4175:4196  _LBPairImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":4167:4205  ILBPair(_LBPairImplementation).factory */\n      and\n      0xc45a0155\n        /* \"joe-v2-main/src/LBFactory.sol\":4167:4207  ILBPair(_LBPairImplementation).factory() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":4167:4215  ILBPair(_LBPairImplementation).factory() != this */\n      and\n      eq\n        /* \"joe-v2-main/src/LBFactory.sol\":4163:4293  if (ILBPair(_LBPairImplementation).factory() != this)... */\n      tag_189\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":4236:4293  LBFactory__LBPairSafetyCheckFailed(_LBPairImplementation) */\n      mload(0x40)\n      0x147ce15e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      dup3\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":4236:4293  LBFactory__LBPairSafetyCheckFailed(_LBPairImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":4236:4293  LBFactory__LBPairSafetyCheckFailed(_LBPairImplementation) */\n      tag_120\n        /* \"#utility.yul\":788:1030   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":4163:4293  if (ILBPair(_LBPairImplementation).factory() != this)... */\n    tag_189:\n        /* \"joe-v2-main/src/LBFactory.sol\":4339:4359  LBPairImplementation */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"joe-v2-main/src/LBFactory.sol\":4373:4422  _oldLBPairImplementation == _LBPairImplementation */\n      dup3\n      and\n      dup2\n      eq\n        /* \"joe-v2-main/src/LBFactory.sol\":4369:4495  if (_oldLBPairImplementation == _LBPairImplementation)... */\n      iszero\n      tag_191\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":4443:4495  LBFactory__SameImplementation(_LBPairImplementation) */\n      mload(0x40)\n      0x6f69dca800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      dup4\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":4443:4495  LBFactory__SameImplementation(_LBPairImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":4443:4495  LBFactory__SameImplementation(_LBPairImplementation) */\n      tag_120\n        /* \"#utility.yul\":788:1030   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":4369:4495  if (_oldLBPairImplementation == _LBPairImplementation)... */\n    tag_191:\n        /* \"joe-v2-main/src/LBFactory.sol\":4506:4526  LBPairImplementation */\n      0x02\n        /* \"joe-v2-main/src/LBFactory.sol\":4506:4550  LBPairImplementation = _LBPairImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"joe-v2-main/src/LBFactory.sol\":4566:4638  LBPairImplementationSet(_oldLBPairImplementation, _LBPairImplementation) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4426:4441   */\n      swap3\n      dup5\n      and\n        /* \"#utility.yul\":4408:4442   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4473:4475   */\n      0x20\n        /* \"#utility.yul\":4458:4476   */\n      dup4\n      add\n        /* \"#utility.yul\":4451:4494   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":4566:4638  LBPairImplementationSet(_oldLBPairImplementation, _LBPairImplementation) */\n      0x900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e\n      swap2\n        /* \"#utility.yul\":4320:4338   */\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":4566:4638  LBPairImplementationSet(_oldLBPairImplementation, _LBPairImplementation) */\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"joe-v2-main/src/LBFactory.sol\":4153:4645  {... */\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":4061:4645  function setLBPairImplementation(address _LBPairImplementation) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_93:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_196\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2380  pendingOwner_ == address(0) */\n      dup2\n      and\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n      tag_198\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2389:2418  PendingOwnable__AddressZero() */\n      mload(0x40)\n      0x91f3851500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n    tag_198:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2445  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2459  _pendingOwner != address(0) */\n      iszero\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n      tag_199\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2468:2508  PendingOwnable__PendingOwnerAlreadySet() */\n      mload(0x40)\n      0x716b1fbf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n    tag_199:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      tag_200\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2535:2548  pendingOwner_ */\n      dup2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2534  _setPendingOwner */\n      tag_170\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      jump\t// in\n    tag_200:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":8386:8634  function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n    tag_96:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_202\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_202:\n        /* \"joe-v2-main/src/LBFactory.sol\":8475:8524  _quoteAssetWhitelist.remove(address(_quoteAsset)) */\n      tag_204\n        /* \"joe-v2-main/src/LBFactory.sol\":8475:8495  _quoteAssetWhitelist */\n      0x09\n        /* \"joe-v2-main/src/LBFactory.sol\":8511:8522  _quoteAsset */\n      dup3\n        /* \"joe-v2-main/src/LBFactory.sol\":8475:8502  _quoteAssetWhitelist.remove */\n      tag_205\n        /* \"joe-v2-main/src/LBFactory.sol\":8475:8524  _quoteAssetWhitelist.remove(address(_quoteAsset)) */\n      jump\t// in\n    tag_204:\n        /* \"joe-v2-main/src/LBFactory.sol\":8470:8581  if (!_quoteAssetWhitelist.remove(address(_quoteAsset))) revert LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n      tag_206\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":8533:8581  LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n      mload(0x40)\n      shl(0xe0, 0x8e888ef3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      dup3\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":8533:8581  LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":8533:8581  LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n      tag_120\n        /* \"#utility.yul\":788:1030   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":8470:8581  if (!_quoteAssetWhitelist.remove(address(_quoteAsset))) revert LBFactory__QuoteAssetNotWhitelisted(_quoteAsset) */\n    tag_206:\n        /* \"joe-v2-main/src/LBFactory.sol\":8597:8627  QuoteAssetRemoved(_quoteAsset) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0x0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb3\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"joe-v2-main/src/LBFactory.sol\":8386:8634  function removeQuoteAsset(IERC20 _quoteAsset) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":7295:7419  function setFeeRecipient(address _feeRecipient) external override onlyOwner {... */\n    tag_102:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_210\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_210:\n        /* \"joe-v2-main/src/LBFactory.sol\":7381:7412  _setFeeRecipient(_feeRecipient) */\n      tag_200\n        /* \"joe-v2-main/src/LBFactory.sol\":7398:7411  _feeRecipient */\n      dup2\n        /* \"joe-v2-main/src/LBFactory.sol\":7381:7397  _setFeeRecipient */\n      tag_213\n        /* \"joe-v2-main/src/LBFactory.sol\":7381:7412  _setFeeRecipient(_feeRecipient) */\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":3680:3885  function getLBPairInformation(... */\n    tag_106:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":3839:3878  _getLBPairInformation(_tokenA, _tokenB) */\n      tag_217\n        /* \"joe-v2-main/src/LBFactory.sol\":3861:3868  _tokenA */\n      dup4\n        /* \"joe-v2-main/src/LBFactory.sol\":3870:3877  _tokenB */\n      dup4\n        /* \"joe-v2-main/src/LBFactory.sol\":3839:3860  _getLBPairInformation */\n      tag_218\n        /* \"joe-v2-main/src/LBFactory.sol\":3839:3878  _getLBPairInformation(_tokenA, _tokenB) */\n      jump\t// in\n    tag_217:\n        /* \"joe-v2-main/src/LBFactory.sol\":3832:3878  return _getLBPairInformation(_tokenA, _tokenB) */\n      swap4\n        /* \"joe-v2-main/src/LBFactory.sol\":3680:3885  function getLBPairInformation(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/LBFactory.sol\":2877:3019  function getQuoteAsset(uint256 _index) external view override returns (IERC20) {... */\n    tag_111:\n        /* \"joe-v2-main/src/LBFactory.sol\":2948:2954  IERC20 */\n      0x00\n        /* \"joe-v2-main/src/LBFactory.sol\":2980:3011  _quoteAssetWhitelist.at(_index) */\n      tag_156\n        /* \"joe-v2-main/src/LBFactory.sol\":2980:3000  _quoteAssetWhitelist */\n      0x09\n        /* \"joe-v2-main/src/LBFactory.sol\":3004:3010  _index */\n      dup4\n        /* \"joe-v2-main/src/LBFactory.sol\":2980:3003  _quoteAssetWhitelist.at */\n      tag_221\n        /* \"joe-v2-main/src/LBFactory.sol\":2980:3011  _quoteAssetWhitelist.at(_index) */\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_115:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1438:1451  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1434  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1451  msg.sender != _pendingOwner */\n      eq\n      iszero\n      dup1\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n      tag_223\n      jumpi\n      pop\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1465  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1479  msg.sender == address(0) */\n      iszero\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n    tag_223:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n      iszero\n      tag_224\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1488:1521  PendingOwnable__NotPendingOwner() */\n      mload(0x40)\n      0x7304d01200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n    tag_224:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      tag_169\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3137:3147  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3136  _transferOwnership */\n      tag_175\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8852:9017  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8985:9008  uint256(uint160(value)) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8932:8936  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4355  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4367  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8955:9010  _contains(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4247:4374  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1462:1754  function getPriceFromId(uint256 _id) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1522:1529  uint256 */\n      0x00\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1559:1575  type(uint24).max */\n      0xffffff\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1545:1576  _id > uint256(type(uint24).max) */\n      dup3\n      gt\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1541:1609  if (_id > uint256(type(uint24).max)) revert BinHelper__IdOverflows() */\n      iszero\n      tag_231\n      jumpi\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1585:1609  BinHelper__IdOverflows() */\n      mload(0x40)\n      0x58f62eac00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1541:1609  if (_id > uint256(type(uint24).max)) revert BinHelper__IdOverflows() */\n    tag_231:\n      not(0x7fffff)\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1660:1687  int256(_id) - REAL_ID_SHIFT */\n      dup3\n      add\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1709:1737  _getBPValue().power(_realId) */\n      tag_217\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":2108:2183  Constants.SCALE + (1 << Constants.SCALE_OFFSET) / Constants.BASIS_POINT_MAX */\n      0x0100068db8bac710cb295e9e1b089a0275\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1660:1687  int256(_id) - REAL_ID_SHIFT */\n      dup3\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1709:1728  _getBPValue().power */\n      tag_235\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":1709:1737  _getBPValue().power(_realId) */\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":9954:10159  function _sortTokens(IERC20 _tokenA, IERC20 _tokenB) private pure returns (IERC20, IERC20) {... */\n    tag_131:\n        /* \"joe-v2-main/src/LBFactory.sol\":10029:10035  IERC20 */\n      0x00\n        /* \"joe-v2-main/src/LBFactory.sol\":10037:10043  IERC20 */\n      dup1\n        /* \"joe-v2-main/src/LBFactory.sol\":10069:10076  _tokenB */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":10059:10076  _tokenA > _tokenB */\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":10059:10066  _tokenA */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":10059:10076  _tokenA > _tokenB */\n      and\n      gt\n        /* \"joe-v2-main/src/LBFactory.sol\":10055:10117  if (_tokenA > _tokenB) (_tokenA, _tokenB) = (_tokenB, _tokenA) */\n      iszero\n      tag_237\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":10100:10107  _tokenB */\n      swap2\n      swap3\n        /* \"joe-v2-main/src/LBFactory.sol\":10109:10116  _tokenA */\n      swap2\n        /* \"joe-v2-main/src/LBFactory.sol\":10055:10117  if (_tokenA > _tokenB) (_tokenA, _tokenB) = (_tokenB, _tokenA) */\n    tag_237:\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":10135:10142  _tokenA */\n      swap2\n      swap3\n        /* \"joe-v2-main/src/LBFactory.sol\":10144:10151  _tokenB */\n      swap1\n      swap2\n      pop\n        /* \"joe-v2-main/src/LBFactory.sol\":9954:10159  function _sortTokens(IERC20 _tokenA, IERC20 _tokenB) private pure returns (IERC20, IERC20) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2107:2901  function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2191:2207  address instance */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2523:2571  0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000 */\n      0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2505:2519  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2499:2503  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2495:2520  shl(0x60, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2489:2493  0xe8 */\n      0xe8\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2485:2521  shr(0xe8, shl(0x60, implementation)) */\n      shr\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2482:2572  or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2476:2480  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2469:2573  mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2730:2762  0x5af43d82803e903d91602b57fd5bf3 */\n      0x5af43d82803e903d91602b57fd5bf3\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2713:2727  implementation */\n      dup4\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2707:2711  0x78 */\n      0x78\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2703:2728  shl(0x78, implementation) */\n      shl\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2700:2763  or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3) */\n      or\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2694:2698  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2687:2764  mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3)) */\n      mstore\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2812:2816  salt */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2806:2810  0x37 */\n      0x37\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2800:2804  0x09 */\n      0x09\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2797:2798  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2789:2817  create2(0, 0x09, 0x37, salt) */\n      create2\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2777:2817  instance := create2(0, 0x09, 0x37, salt) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2844:2866  instance != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2836:2894  require(instance != address(0), \"ERC1167: create2 failed\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6368:6370   */\n      0x20\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2836:2894  require(instance != address(0), \"ERC1167: create2 failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6350:6371   */\n      mstore\n        /* \"#utility.yul\":6407:6409   */\n      0x17\n        /* \"#utility.yul\":6387:6405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6380:6410   */\n      mstore\n        /* \"#utility.yul\":6446:6471   */\n      0x455243313136373a2063726561746532206661696c6564000000000000000000\n        /* \"#utility.yul\":6426:6444   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6419:6472   */\n      mstore\n        /* \"#utility.yul\":6489:6507   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/proxy/Clones.sol\":2836:2894  require(instance != address(0), \"ERC1167: create2 failed\") */\n      tag_120\n        /* \"#utility.yul\":6166:6513   */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8297:8447  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8367:8371  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8390:8440  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8395:8398  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8415:8438  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8390:8394  _add */\n      tag_244\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8390:8440  _add(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n    tag_170:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4306  _pendingOwner */\n      0x01\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4322  _pendingOwner = pendingOwner_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4337:4367  PendingOwnerSet(pendingOwner_) */\n      mload(0x40)\n      0x68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n    tag_175:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup1\n      dup5\n      and\n      dup3\n      or\n      dup6\n      sstore\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      0x01\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      mload(0x40)\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n      swap1\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      log3\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n      pop\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9098:9213  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9161:9168  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9187:9206  _length(set._inner) */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9195:9198  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4537:4555  set._values.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4455:4562  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8615:8771  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8688:8692  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8764  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8719:8722  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8739:8762  uint256(uint160(value)) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8718  _remove */\n      tag_252\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":8711:8764  _remove(set._inner, bytes32(uint256(uint160(value)))) */\n      jump\t// in\n        /* \"joe-v2-main/src/LBFactory.sol\":8764:9153  function _setFeeRecipient(address _feeRecipient) internal {... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":8836:8863  _feeRecipient == address(0) */\n      dup2\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":8832:8896  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\n      tag_254\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":8872:8896  LBFactory__AddressZero() */\n      mload(0x40)\n      shl(0xe2, 0x2573cfb9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/LBFactory.sol\":8832:8896  if (_feeRecipient == address(0)) revert LBFactory__AddressZero() */\n    tag_254:\n        /* \"joe-v2-main/src/LBFactory.sol\":8934:8946  feeRecipient */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"joe-v2-main/src/LBFactory.sol\":8960:8993  _oldFeeRecipient == _feeRecipient */\n      dup3\n      and\n      dup2\n      eq\n        /* \"joe-v2-main/src/LBFactory.sol\":8956:9044  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\n      iszero\n      tag_255\n      jumpi\n        /* \"joe-v2-main/src/LBFactory.sol\":9002:9044  LBFactory__SameFeeRecipient(_feeRecipient) */\n      mload(0x40)\n      0x4fcea97100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":968:1023   */\n      dup4\n      and\n        /* \"joe-v2-main/src/LBFactory.sol\":9002:9044  LBFactory__SameFeeRecipient(_feeRecipient) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":950:1024   */\n      mstore\n        /* \"#utility.yul\":923:941   */\n      0x24\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":9002:9044  LBFactory__SameFeeRecipient(_feeRecipient) */\n      tag_120\n        /* \"#utility.yul\":788:1030   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":8956:9044  if (_oldFeeRecipient == _feeRecipient) revert LBFactory__SameFeeRecipient(_feeRecipient) */\n    tag_255:\n        /* \"joe-v2-main/src/LBFactory.sol\":9055:9067  feeRecipient */\n      0x03\n        /* \"joe-v2-main/src/LBFactory.sol\":9055:9083  feeRecipient = _feeRecipient */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"joe-v2-main/src/LBFactory.sol\":9098:9146  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4426:4441   */\n      swap3\n      dup5\n      and\n        /* \"#utility.yul\":4408:4442   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4473:4475   */\n      0x20\n        /* \"#utility.yul\":4458:4476   */\n      dup4\n      add\n        /* \"#utility.yul\":4451:4494   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":9098:9146  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n      0x15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721\n      swap2\n        /* \"#utility.yul\":4320:4338   */\n      add\n        /* \"joe-v2-main/src/LBFactory.sol\":9098:9146  FeeRecipientSet(_oldFeeRecipient, _feeRecipient) */\n      tag_193\n        /* \"#utility.yul\":4145:4500   */\n      jump\n        /* \"joe-v2-main/src/LBFactory.sol\":9469:9716  function _getLBPairInformation(... */\n    tag_218:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":9633:9662  _sortTokens(_tokenA, _tokenB) */\n      tag_260\n        /* \"joe-v2-main/src/LBFactory.sol\":9645:9652  _tokenA */\n      dup4\n        /* \"joe-v2-main/src/LBFactory.sol\":9654:9661  _tokenB */\n      dup4\n        /* \"joe-v2-main/src/LBFactory.sol\":9633:9644  _sortTokens */\n      tag_131\n        /* \"joe-v2-main/src/LBFactory.sol\":9633:9662  _sortTokens(_tokenA, _tokenB) */\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/LBFactory.sol\":9679:9700  _LBPairsInfo[_tokenA] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"joe-v2-main/src/LBFactory.sol\":9679:9691  _LBPairsInfo */\n      0x06\n        /* \"joe-v2-main/src/LBFactory.sol\":9679:9700  _LBPairsInfo[_tokenA] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"joe-v2-main/src/LBFactory.sol\":9679:9709  _LBPairsInfo[_tokenA][_tokenB] */\n      swap4\n      dup6\n      and\n      dup4\n      mstore\n      swap3\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n        /* \"joe-v2-main/src/LBFactory.sol\":9672:9709  return _LBPairsInfo[_tokenA][_tokenB] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      sload\n      swap3\n      dup4\n      and\n      dup3\n      mstore\n      shl(0xa0, 0x01)\n      swap1\n      swap3\n      div\n      0xff\n      and\n      iszero\n      iszero\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap4\n        /* \"joe-v2-main/src/LBFactory.sol\":9469:9716  function _getLBPairInformation(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9555:9711  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9629:9636  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9679:9701  _at(set._inner, index) */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9683:9686  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9695:9700  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9679:9682  _at */\n      tag_263\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":9679:9701  _at(set._inner, index) */\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4094:8094  function power(uint256 x, int256 y) internal pure returns (uint256 result) {... */\n    tag_235:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4153:4167  uint256 result */\n      0x00\n      dup1\n      dup1\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4227:4233  y == 0 */\n      dup4\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4223:4257  if (y == 0) return Constants.SCALE */\n      tag_270\n      jumpi\n      pop\n        /* \"joe-v2-main/src/libraries/Constants.sol\":291:308  1 << SCALE_OFFSET */\n      0x0100000000000000000000000000000000\n      swap2\n      pop\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4235:4257  return Constants.SCALE */\n      tag_156\n      swap1\n      pop\n      jump\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4223:4257  if (y == 0) return Constants.SCALE */\n    tag_270:\n      pop\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4299:4300  y */\n      dup3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4326:4327  0 */\n      0x00\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4316:4328  slt(absY, 0) */\n      dup2\n      slt\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4313:4422  if slt(absY, 0) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4394:4408  iszero(invert) */\n      swap1\n      iszero\n      swap1\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4359:4360  0 */\n      0x00\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4355:4367  sub(0, absY) */\n      sub\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4313:4422  if slt(absY, 0) {... */\n    tag_271:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4453:4461  0x100000 */\n      0x100000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4446:4450  absY */\n      dup2\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4446:4461  absY < 0x100000 */\n      lt\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4442:7902  if (absY < 0x100000) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"joe-v2-main/src/libraries/Constants.sol\":291:308  1 << SCALE_OFFSET */\n      0x0100000000000000000000000000000000\n      swap3\n      pop\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4553:4554  x */\n      dup5\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4580:4614  0xffffffffffffffffffffffffffffffff */\n      0xffffffffffffffffffffffffffffffff\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4574:4615  gt(x, 0xffffffffffffffffffffffffffffffff) */\n      dup2\n      gt\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4571:4724  if gt(x, 0xffffffffffffffffffffffffffffffff) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4692:4706  iszero(invert) */\n      swap2\n      iszero\n      swap2\n      not(0x00)\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4645:4661  div(not(0), pow) */\n      div\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4571:4724  if gt(x, 0xffffffffffffffffffffffffffffffff) {... */\n    tag_273:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4755:4758  0x1 */\n      0x01\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4749:4753  absY */\n      dup3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4745:4759  and(absY, 0x1) */\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4742:4836  if and(absY, 0x1) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4801:4817  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4796:4799  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4792:4818  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4742:4836  if and(absY, 0x1) {... */\n    tag_274:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4869:4882  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4864:4867  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4860:4883  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4913:4916  0x2 */\n      0x02\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4903:4917  and(absY, 0x2) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4900:4994  if and(absY, 0x2) {... */\n      iszero\n      tag_275\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4959:4975  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4954:4957  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4950:4976  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4900:4994  if and(absY, 0x2) {... */\n    tag_275:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5027:5040  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5022:5025  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5018:5041  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5071:5074  0x4 */\n      0x04\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5061:5075  and(absY, 0x4) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5058:5152  if and(absY, 0x4) {... */\n      iszero\n      tag_276\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5117:5133  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5112:5115  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5108:5134  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5058:5152  if and(absY, 0x4) {... */\n    tag_276:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5185:5198  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5180:5183  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5176:5199  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5229:5232  0x8 */\n      0x08\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5219:5233  and(absY, 0x8) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5216:5310  if and(absY, 0x8) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5275:5291  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5270:5273  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5266:5292  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5216:5310  if and(absY, 0x8) {... */\n    tag_277:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5343:5356  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5338:5341  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5334:5357  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5387:5391  0x10 */\n      0x10\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5377:5392  and(absY, 0x10) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5374:5469  if and(absY, 0x10) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5434:5450  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5429:5432  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5425:5451  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5374:5469  if and(absY, 0x10) {... */\n    tag_278:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5502:5515  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5497:5500  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5493:5516  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5546:5550  0x20 */\n      0x20\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5536:5551  and(absY, 0x20) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5533:5628  if and(absY, 0x20) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5593:5609  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5588:5591  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5584:5610  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5533:5628  if and(absY, 0x20) {... */\n    tag_279:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5661:5674  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5656:5659  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5652:5675  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5705:5709  0x40 */\n      0x40\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5695:5710  and(absY, 0x40) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5692:5787  if and(absY, 0x40) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5752:5768  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5747:5750  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5743:5769  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5692:5787  if and(absY, 0x40) {... */\n    tag_280:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5820:5833  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5815:5818  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5811:5834  shr(128, mul(pow, pow)) */\n      swap1\n      dup2\n      shr\n      swap1\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5854:5869  and(absY, 0x80) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5851:5946  if and(absY, 0x80) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5911:5927  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5906:5909  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5902:5928  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5851:5946  if and(absY, 0x80) {... */\n    tag_281:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5979:5992  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5974:5977  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":5970:5993  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6023:6028  0x100 */\n      0x0100\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6013:6029  and(absY, 0x100) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6010:6106  if and(absY, 0x100) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6071:6087  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6066:6069  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6062:6088  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6010:6106  if and(absY, 0x100) {... */\n    tag_282:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6139:6152  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6134:6137  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6130:6153  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6183:6188  0x200 */\n      0x0200\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6173:6189  and(absY, 0x200) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6170:6266  if and(absY, 0x200) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6231:6247  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6226:6229  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6222:6248  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6170:6266  if and(absY, 0x200) {... */\n    tag_283:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6299:6312  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6294:6297  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6290:6313  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6343:6348  0x400 */\n      0x0400\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6333:6349  and(absY, 0x400) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6330:6426  if and(absY, 0x400) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6391:6407  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6386:6389  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6382:6408  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6330:6426  if and(absY, 0x400) {... */\n    tag_284:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6459:6472  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6454:6457  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6450:6473  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6503:6508  0x800 */\n      0x0800\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6493:6509  and(absY, 0x800) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6490:6586  if and(absY, 0x800) {... */\n      iszero\n      tag_285\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6551:6567  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6546:6549  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6542:6568  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6490:6586  if and(absY, 0x800) {... */\n    tag_285:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6619:6632  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6614:6617  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6610:6633  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6663:6669  0x1000 */\n      0x1000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6653:6670  and(absY, 0x1000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6650:6747  if and(absY, 0x1000) {... */\n      iszero\n      tag_286\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6712:6728  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6707:6710  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6703:6729  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6650:6747  if and(absY, 0x1000) {... */\n    tag_286:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6780:6793  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6775:6778  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6771:6794  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6824:6830  0x2000 */\n      0x2000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6814:6831  and(absY, 0x2000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6811:6908  if and(absY, 0x2000) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6873:6889  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6868:6871  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6864:6890  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6811:6908  if and(absY, 0x2000) {... */\n    tag_287:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6941:6954  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6936:6939  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6932:6955  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6985:6991  0x4000 */\n      0x4000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6975:6992  and(absY, 0x4000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6972:7069  if and(absY, 0x4000) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7034:7050  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7029:7032  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7025:7051  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":6972:7069  if and(absY, 0x4000) {... */\n    tag_288:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7102:7115  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7097:7100  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7093:7116  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7146:7152  0x8000 */\n      0x8000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7136:7153  and(absY, 0x8000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7133:7230  if and(absY, 0x8000) {... */\n      iszero\n      tag_289\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7195:7211  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7190:7193  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7186:7212  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7133:7230  if and(absY, 0x8000) {... */\n    tag_289:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7263:7276  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7258:7261  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7254:7277  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7307:7314  0x10000 */\n      0x010000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7297:7315  and(absY, 0x10000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7294:7392  if and(absY, 0x10000) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7357:7373  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7352:7355  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7348:7374  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7294:7392  if and(absY, 0x10000) {... */\n    tag_290:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7425:7438  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7420:7423  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7416:7439  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7469:7476  0x20000 */\n      0x020000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7459:7477  and(absY, 0x20000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7456:7554  if and(absY, 0x20000) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7519:7535  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7514:7517  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7510:7536  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7456:7554  if and(absY, 0x20000) {... */\n    tag_291:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7587:7600  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7582:7585  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7578:7601  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7631:7638  0x40000 */\n      0x040000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7621:7639  and(absY, 0x40000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7618:7716  if and(absY, 0x40000) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7681:7697  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7676:7679  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7672:7698  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7618:7716  if and(absY, 0x40000) {... */\n    tag_292:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7749:7762  mul(pow, pow) */\n      dup1\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7744:7747  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7740:7763  shr(128, mul(pow, pow)) */\n      shr\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7793:7800  0x80000 */\n      0x080000\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7783:7801  and(absY, 0x80000) */\n      dup3\n      and\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7780:7878  if and(absY, 0x80000) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7843:7859  mul(result, pow) */\n      swap3\n      dup4\n      mul\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7838:7841  128 */\n      0x80\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7834:7860  shr(128, mul(result, pow)) */\n      shr\n      swap3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7780:7878  if and(absY, 0x80000) {... */\n    tag_293:\n      pop\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4442:7902  if (absY < 0x100000) {... */\n    tag_272:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7972:7983  result == 0 */\n      dup3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7968:8025  if (result == 0) revert Math128x128__PowerUnderflow(x, y) */\n      tag_294\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7992:8025  Math128x128__PowerUnderflow(x, y) */\n      mload(0x40)\n      0x74e3eb0800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":6879:6904   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":6920:6938   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":6913:6947   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6852:6870   */\n      0x44\n      add\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7992:8025  Math128x128__PowerUnderflow(x, y) */\n      tag_120\n        /* \"#utility.yul\":6707:6953   */\n      jump\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":7968:8025  if (result == 0) revert Math128x128__PowerUnderflow(x, y) */\n    tag_294:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8043:8049  invert */\n      dup2\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8043:8087  invert ? type(uint256).max / result : result */\n      tag_297\n      jumpi\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8081:8087  result */\n      dup3\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8043:8087  invert ? type(uint256).max / result : result */\n      jump(tag_299)\n    tag_297:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8052:8078  type(uint256).max / result */\n      tag_299\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8072:8078  result */\n      dup4\n      not(0x00)\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8052:8078  type(uint256).max / result */\n      tag_300\n      jump\t// in\n    tag_299:\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":8036:8087  return invert ? type(uint256).max / result : result */\n      swap6\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":4094:8094  function power(uint256 x, int256 y) internal pure returns (uint256 result) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2206:2610  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2269:2273  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4355  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2285:2604  if (!_contains(set, value)) {... */\n      tag_303\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2350  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2338  set._values */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2350  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2507:2525  set._values.length */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2504  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2497  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2504  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2525  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2539:2550  return true */\n      jump(tag_156)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2285:2604  if (!_contains(set, value)) {... */\n    tag_303:\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2588:2593  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2581:2593  return false */\n      jump(tag_156)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2778:4166  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2844:2848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:3000  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:2993  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:3000  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3015:3030  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3011:4160  if (valueIndex != 0) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3405  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3422  valueIndex - 1 */\n      tag_309\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3421:3422  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3418  valueIndex */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3422  valueIndex - 1 */\n      tag_147\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3474  set._values.length */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3422  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3436:3453  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3478  set._values.length - 1 */\n      tag_310\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3477:3478  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3478  set._values.length - 1 */\n      tag_147\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3436:3478  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3510:3523  toDeleteIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3497:3506  lastIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3497:3523  lastIndex != toDeleteIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3493:3891  if (lastIndex != toDeleteIndex) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3543:3560  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3566  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3574  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3575:3584  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3585  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_313\n      jumpi\n      tag_313\n      tag_314\n      jump\t// in\n    tag_313:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3543:3585  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3714:3723  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3688  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3696  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3697:3710  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3711  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_317\n      jumpi\n      tag_317\n      tag_314\n      jump\t// in\n    tag_317:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3723  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3820  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3809  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3820  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3833  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3493:3891  if (lastIndex != toDeleteIndex) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3986  set._values.pop() */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3972  set */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3986  set._values.pop() */\n      dup1\n      tag_320\n      jumpi\n      tag_320\n      tag_321\n      jump\t// in\n    tag_320:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4064  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4073  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4080  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4074:4079  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4080  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4054:4080  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4102:4106  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4095:4106  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_156)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3011:4160  if (valueIndex != 0) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4144:4149  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4137:4149  return false */\n      swap2\n      pop\n      pop\n      jump(tag_156)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:5022  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4971:4978  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5000  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5008  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5009:5014  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5015  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_326\n      jumpi\n      tag_326\n      tag_314\n      jump\t// in\n    tag_326:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4990:5015  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:5022  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:176   */\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":101:106   */\n      dup2\n        /* \"#utility.yul\":97:151   */\n      and\n        /* \"#utility.yul\":90:95   */\n      dup2\n        /* \"#utility.yul\":87:152   */\n      eq\n        /* \"#utility.yul\":77:170   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":166:167   */\n      0x00\n        /* \"#utility.yul\":163:164   */\n      dup1\n        /* \"#utility.yul\":156:168   */\n      revert\n        /* \"#utility.yul\":181:783   */\n    tag_35:\n        /* \"#utility.yul\":285:291   */\n      0x00\n        /* \"#utility.yul\":293:299   */\n      dup1\n        /* \"#utility.yul\":301:307   */\n      0x00\n        /* \"#utility.yul\":354:356   */\n      0x60\n        /* \"#utility.yul\":342:351   */\n      dup5\n        /* \"#utility.yul\":333:340   */\n      dup7\n        /* \"#utility.yul\":329:352   */\n      sub\n        /* \"#utility.yul\":325:357   */\n      slt\n        /* \"#utility.yul\":322:374   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":370:371   */\n      0x00\n        /* \"#utility.yul\":367:368   */\n      dup1\n        /* \"#utility.yul\":360:372   */\n      revert\n        /* \"#utility.yul\":322:374   */\n    tag_333:\n        /* \"#utility.yul\":409:418   */\n      dup4\n        /* \"#utility.yul\":396:419   */\n      calldataload\n        /* \"#utility.yul\":428:467   */\n      tag_334\n        /* \"#utility.yul\":461:466   */\n      dup2\n        /* \"#utility.yul\":428:467   */\n      tag_328\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":486:491   */\n      swap3\n      pop\n        /* \"#utility.yul\":543:545   */\n      0x20\n        /* \"#utility.yul\":528:546   */\n      dup5\n      add\n        /* \"#utility.yul\":515:547   */\n      calldataload\n        /* \"#utility.yul\":556:597   */\n      tag_335\n        /* \"#utility.yul\":515:547   */\n      dup2\n        /* \"#utility.yul\":556:597   */\n      tag_328\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":616:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":675:677   */\n      0x40\n        /* \"#utility.yul\":660:678   */\n      dup5\n      add\n        /* \"#utility.yul\":647:679   */\n      calldataload\n        /* \"#utility.yul\":723:731   */\n      0xffffff\n        /* \"#utility.yul\":710:732   */\n      dup2\n      and\n        /* \"#utility.yul\":698:733   */\n      dup2\n      eq\n        /* \"#utility.yul\":688:751   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":747:748   */\n      0x00\n        /* \"#utility.yul\":744:745   */\n      dup1\n        /* \"#utility.yul\":737:749   */\n      revert\n        /* \"#utility.yul\":688:751   */\n    tag_336:\n        /* \"#utility.yul\":770:777   */\n      dup1\n        /* \"#utility.yul\":760:777   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":181:783   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1035:1308   */\n    tag_41:\n        /* \"#utility.yul\":1091:1097   */\n      0x00\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1132:1141   */\n      dup3\n        /* \"#utility.yul\":1123:1130   */\n      dup5\n        /* \"#utility.yul\":1119:1142   */\n      sub\n        /* \"#utility.yul\":1115:1147   */\n      slt\n        /* \"#utility.yul\":1112:1164   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1160:1161   */\n      0x00\n        /* \"#utility.yul\":1157:1158   */\n      dup1\n        /* \"#utility.yul\":1150:1162   */\n      revert\n        /* \"#utility.yul\":1112:1164   */\n    tag_339:\n        /* \"#utility.yul\":1199:1208   */\n      dup2\n        /* \"#utility.yul\":1186:1209   */\n      calldataload\n        /* \"#utility.yul\":1252:1257   */\n      dup1\n        /* \"#utility.yul\":1245:1258   */\n      iszero\n        /* \"#utility.yul\":1238:1259   */\n      iszero\n        /* \"#utility.yul\":1231:1236   */\n      dup2\n        /* \"#utility.yul\":1228:1260   */\n      eq\n        /* \"#utility.yul\":1218:1278   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":1274:1275   */\n      0x00\n        /* \"#utility.yul\":1271:1272   */\n      dup1\n        /* \"#utility.yul\":1264:1276   */\n      revert\n        /* \"#utility.yul\":1313:1582   */\n    tag_45:\n        /* \"#utility.yul\":1386:1392   */\n      0x00\n        /* \"#utility.yul\":1439:1441   */\n      0x20\n        /* \"#utility.yul\":1427:1436   */\n      dup3\n        /* \"#utility.yul\":1418:1425   */\n      dup5\n        /* \"#utility.yul\":1414:1437   */\n      sub\n        /* \"#utility.yul\":1410:1442   */\n      slt\n        /* \"#utility.yul\":1407:1459   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":1455:1456   */\n      0x00\n        /* \"#utility.yul\":1452:1453   */\n      dup1\n        /* \"#utility.yul\":1445:1457   */\n      revert\n        /* \"#utility.yul\":1407:1459   */\n    tag_342:\n        /* \"#utility.yul\":1494:1503   */\n      dup2\n        /* \"#utility.yul\":1481:1504   */\n      calldataload\n        /* \"#utility.yul\":1513:1552   */\n      tag_217\n        /* \"#utility.yul\":1546:1551   */\n      dup2\n        /* \"#utility.yul\":1513:1552   */\n      tag_328\n      jump\t// in\n        /* \"#utility.yul\":2192:2372   */\n    tag_75:\n        /* \"#utility.yul\":2251:2257   */\n      0x00\n        /* \"#utility.yul\":2304:2306   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup3\n        /* \"#utility.yul\":2283:2290   */\n      dup5\n        /* \"#utility.yul\":2279:2302   */\n      sub\n        /* \"#utility.yul\":2275:2307   */\n      slt\n        /* \"#utility.yul\":2272:2324   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":2320:2321   */\n      0x00\n        /* \"#utility.yul\":2317:2318   */\n      dup1\n        /* \"#utility.yul\":2310:2322   */\n      revert\n        /* \"#utility.yul\":2272:2324   */\n    tag_348:\n      pop\n        /* \"#utility.yul\":2343:2366   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2192:2372   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2637:3069   */\n    tag_105:\n        /* \"#utility.yul\":2733:2739   */\n      0x00\n        /* \"#utility.yul\":2741:2747   */\n      dup1\n        /* \"#utility.yul\":2794:2796   */\n      0x40\n        /* \"#utility.yul\":2782:2791   */\n      dup4\n        /* \"#utility.yul\":2773:2780   */\n      dup6\n        /* \"#utility.yul\":2769:2792   */\n      sub\n        /* \"#utility.yul\":2765:2797   */\n      slt\n        /* \"#utility.yul\":2762:2814   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2807:2808   */\n      dup1\n        /* \"#utility.yul\":2800:2812   */\n      revert\n        /* \"#utility.yul\":2762:2814   */\n    tag_353:\n        /* \"#utility.yul\":2849:2858   */\n      dup3\n        /* \"#utility.yul\":2836:2859   */\n      calldataload\n        /* \"#utility.yul\":2868:2907   */\n      tag_354\n        /* \"#utility.yul\":2901:2906   */\n      dup2\n        /* \"#utility.yul\":2868:2907   */\n      tag_328\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2926:2931   */\n      swap2\n      pop\n        /* \"#utility.yul\":2983:2985   */\n      0x20\n        /* \"#utility.yul\":2968:2986   */\n      dup4\n      add\n        /* \"#utility.yul\":2955:2987   */\n      calldataload\n        /* \"#utility.yul\":2996:3037   */\n      tag_355\n        /* \"#utility.yul\":2955:2987   */\n      dup2\n        /* \"#utility.yul\":2996:3037   */\n      tag_328\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3056:3063   */\n      dup1\n        /* \"#utility.yul\":3046:3063   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2637:3069   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4949:5228   */\n    tag_147:\n        /* \"#utility.yul\":4989:4993   */\n      0x00\n        /* \"#utility.yul\":5017:5018   */\n      dup3\n        /* \"#utility.yul\":5014:5015   */\n      dup3\n        /* \"#utility.yul\":5011:5019   */\n      lt\n        /* \"#utility.yul\":5008:5196   */\n      iszero\n      tag_362\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5049:5050   */\n      0x00\n        /* \"#utility.yul\":5042:5130   */\n      mstore\n        /* \"#utility.yul\":5153:5157   */\n      0x11\n        /* \"#utility.yul\":5150:5151   */\n      0x04\n        /* \"#utility.yul\":5143:5158   */\n      mstore\n        /* \"#utility.yul\":5181:5185   */\n      0x24\n        /* \"#utility.yul\":5178:5179   */\n      0x00\n        /* \"#utility.yul\":5171:5186   */\n      revert\n        /* \"#utility.yul\":5008:5196   */\n    tag_362:\n      pop\n        /* \"#utility.yul\":5213:5222   */\n      sub\n      swap1\n        /* \"#utility.yul\":4949:5228   */\n      jump\t// out\n        /* \"#utility.yul\":5551:5829   */\n    tag_188:\n        /* \"#utility.yul\":5640:5646   */\n      0x00\n        /* \"#utility.yul\":5693:5695   */\n      0x20\n        /* \"#utility.yul\":5681:5690   */\n      dup3\n        /* \"#utility.yul\":5672:5679   */\n      dup5\n        /* \"#utility.yul\":5668:5691   */\n      sub\n        /* \"#utility.yul\":5664:5696   */\n      slt\n        /* \"#utility.yul\":5661:5713   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5709:5710   */\n      0x00\n        /* \"#utility.yul\":5706:5707   */\n      dup1\n        /* \"#utility.yul\":5699:5711   */\n      revert\n        /* \"#utility.yul\":5661:5713   */\n    tag_365:\n        /* \"#utility.yul\":5741:5750   */\n      dup2\n        /* \"#utility.yul\":5735:5751   */\n      mload\n        /* \"#utility.yul\":5760:5799   */\n      tag_217\n        /* \"#utility.yul\":5793:5798   */\n      dup2\n        /* \"#utility.yul\":5760:5799   */\n      tag_328\n      jump\t// in\n        /* \"#utility.yul\":6958:7232   */\n    tag_300:\n        /* \"#utility.yul\":6998:6999   */\n      0x00\n        /* \"#utility.yul\":7024:7025   */\n      dup3\n        /* \"#utility.yul\":7014:7203   */\n      tag_372\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7056:7057   */\n      0x00\n        /* \"#utility.yul\":7049:7137   */\n      mstore\n        /* \"#utility.yul\":7160:7164   */\n      0x12\n        /* \"#utility.yul\":7157:7158   */\n      0x04\n        /* \"#utility.yul\":7150:7165   */\n      mstore\n        /* \"#utility.yul\":7188:7192   */\n      0x24\n        /* \"#utility.yul\":7185:7186   */\n      0x00\n        /* \"#utility.yul\":7178:7193   */\n      revert\n        /* \"#utility.yul\":7014:7203   */\n    tag_372:\n      pop\n        /* \"#utility.yul\":7217:7226   */\n      div\n      swap1\n        /* \"#utility.yul\":6958:7232   */\n      jump\t// out\n        /* \"#utility.yul\":7237:7421   */\n    tag_314:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7286:7287   */\n      0x00\n        /* \"#utility.yul\":7279:7367   */\n      mstore\n        /* \"#utility.yul\":7386:7390   */\n      0x32\n        /* \"#utility.yul\":7383:7384   */\n      0x04\n        /* \"#utility.yul\":7376:7391   */\n      mstore\n        /* \"#utility.yul\":7410:7414   */\n      0x24\n        /* \"#utility.yul\":7407:7408   */\n      0x00\n        /* \"#utility.yul\":7400:7415   */\n      revert\n        /* \"#utility.yul\":7426:7610   */\n    tag_321:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7475:7476   */\n      0x00\n        /* \"#utility.yul\":7468:7556   */\n      mstore\n        /* \"#utility.yul\":7575:7579   */\n      0x31\n        /* \"#utility.yul\":7572:7573   */\n      0x04\n        /* \"#utility.yul\":7565:7580   */\n      mstore\n        /* \"#utility.yul\":7599:7603   */\n      0x24\n        /* \"#utility.yul\":7596:7597   */\n      0x00\n        /* \"#utility.yul\":7589:7604   */\n      revert\n\n    auxdata: 0xa2646970667358221220f1ba58ea2026871bea689b9f7f7c0100b6684e25fd3198e01c522f6e3e9d71ff64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1392": {
									"entryPoint": null,
									"id": 1392,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3765": {
									"entryPoint": null,
									"id": 3765,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setFeeRecipient_1828": {
									"entryPoint": 171,
									"id": 1828,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_3899": {
									"entryPoint": 81,
									"id": 3899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:823:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:19"
															},
															"nodeType": "YulIf",
															"src": "105:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:19"
															},
															"nodeType": "YulIf",
															"src": "204:70:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:19",
														"type": ""
													}
												],
												"src": "14:290:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "493:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "498:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "502:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "455:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "390:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "401:4:19",
														"type": ""
													}
												],
												"src": "309:203:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:175:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "656:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "668:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "679:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "664:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "656:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "691:29:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "709:3:19",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "714:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "705:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "705:11:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "718:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:19:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "695:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "736:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "759:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "747:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "729:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "729:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "783:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "794:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "811:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "772:43:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "607:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "618:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "626:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "637:4:19",
														"type": ""
													}
												],
												"src": "517:304:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200189138038062001891833981016040819052620000349162000173565b6200003f3362000051565b6200004a81620000ab565b50620001a5565b600080546001600160a01b038381166001600160a01b031980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116620000d357604051632573cfb960e21b815260040160405180910390fd5b6003546001600160a01b039081169082168114156200011457604051634fcea97160e01b81526001600160a01b038316600482015260240160405180910390fd5b600380546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910160405180910390a15050565b6000602082840312156200018657600080fd5b81516001600160a01b03811681146200019e57600080fd5b9392505050565b6116dc80620001b56000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806372e47b8c116100e3578063ddbfd9411161008c578063eaec42a411610066578063eaec42a41461030e578063f89a4cd514610347578063f9dca9891461035a57600080fd5b8063ddbfd941146102d7578063e30c3978146102ea578063e74b981b146102fb57600080fd5b8063b0384781116100bd578063b0384781146102a2578063bc063e1a146102b5578063c42069ec146102c457600080fd5b806372e47b8c1461027657806380c5061e146102895780638da5cb5b1461029157600080fd5b80634e937c3a116101455780635c779d6d1161011f5780635c779d6d1461025257806367ab8a4e14610266578063715018a61461026e57600080fd5b80634e937c3a14610224578063509ceb901461022c5780635a4409231461023f57600080fd5b8063277218421161017657806327721842146101d757806346904840146101fa5780634847cdc81461020d57600080fd5b806302e48ce21461019257806322f3fe14146101c2575b600080fd5b6101a56101a0366004611532565b610362565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d56101d0366004611585565b610754565b005b6101ea6101e53660046115a7565b61083b565b60405190151581526020016101b9565b6003546101a5906001600160a01b031681565b61021660045481565b6040519081526020016101b9565b600554610216565b6002546101a5906001600160a01b031681565b6101d561024d3660046115a7565b61084e565b6003546101ea90600160a01b900460ff1681565b6101d56108fc565b6101d5610975565b6101a56102843660046115c4565b6109aa565b6102166109d4565b6000546001600160a01b03166101a5565b6101d56102b03660046115a7565b6109e5565b61021667016345785d8a000081565b6101d56102d23660046115a7565b610b7c565b6101d56102e53660046115a7565b610c36565b6001546001600160a01b03166101a5565b6101d56103093660046115a7565b610ccb565b61032161031c3660046115dd565b610cff565b6040805182516001600160a01b03168152602092830151151592810192909252016101b9565b6101a56103553660046115c4565b610d24565b6101d5610d31565b6000806103776000546001600160a01b031690565b600354909150600160a01b900460ff1615801561039d5750336001600160a01b03821614155b156103db576040517f3a43e9800000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b6002546001600160a01b03168061041e576040517fa2d3f3e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610429600986610d89565b61045157604051638e888ef360e01b81526001600160a01b03861660048201526024016103d2565b846001600160a01b0316866001600160a01b031614156104a8576040517f2f9b18530000000000000000000000000000000000000000000000000000000081526001600160a01b03871660048201526024016103d2565b6104b68462ffffff16610dab565b506000806104c48888610e0c565b90925090506001600160a01b0382166104f057604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b03828116600090815260066020908152604080832085851684529091529020541615610569576040517fcb27a4350000000000000000000000000000000000000000000000000000000081526001600160a01b03808a16600483015288166024820152600160448201526064016103d2565b604080516001600160a01b0384811660208084019190915290841682840152825180830384018152606090920190925280519101206105a88482610e35565b6040517f336c8d700000000000000000000000000000000000000000000000000000000081526001600160a01b038b811660048301528a8116602483015262ffffff8a1660448301529197509087169063336c8d7090606401600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b50506040805180820182526001600160a01b03808b16808352338b83161460208085019182528a84166000908152600682528681208b861682529091529485209351845491511515600160a01b027fffffffffffffffffffffff00000000000000000000000000000000000000000090921690841617179092556005805460018181018355948290527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191690931790925590548c82169450908d1692507f612fdd9b533d1ca33088dcbca9ad3186eeadc9893e63715b8a783040d729cd6a918a916107269190611616565b604080516001600160a01b03909316835260208301919091520160405180910390a350505050509392505050565b6000546001600160a01b0316331461077f57604051639f216c1360e01b815260040160405180910390fd5b60035460ff600160a01b909104161515811515146107c9576040517f0b6ef29400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038054600160a01b8315027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff9091161790556040517fcdee7bf87b7a743b4cbe1d2d534c5248621b76f58460337e7fda92d5d23f41249061083090831515815260200190565b60405180910390a150565b6000610848600983610d89565b92915050565b6000546001600160a01b0316331461087957604051639f216c1360e01b815260040160405180910390fd5b610884600982610eec565b6108c5576040517f03ce0ad90000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016103d2565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b6000546001600160a01b0316331461092757604051639f216c1360e01b815260040160405180910390fd5b6001546001600160a01b0316610969576040517fecfad6bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109736000610f01565b565b6000546001600160a01b031633146109a057604051639f216c1360e01b815260040160405180910390fd5b6109736000610f4b565b600581815481106109ba57600080fd5b6000918252602090912001546001600160a01b0316905081565b60006109e06009610fa5565b905090565b6000546001600160a01b03163314610a1057604051639f216c1360e01b815260040160405180910390fd5b306001600160a01b0316816001600160a01b031663c45a01556040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7c919061163b565b6001600160a01b031614610ac7576040517f147ce15e0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016103d2565b6002546001600160a01b03908116908216811415610b1c576040517f6f69dca80000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016103d2565b600280546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e91015b60405180910390a15050565b6000546001600160a01b03163314610ba757604051639f216c1360e01b815260040160405180910390fd5b6001600160a01b038116610be7576040517f91f3851500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546001600160a01b031615610c2a576040517f716b1fbf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c3381610f01565b50565b6000546001600160a01b03163314610c6157604051639f216c1360e01b815260040160405180910390fd5b610c6c600982610faf565b610c9457604051638e888ef360e01b81526001600160a01b03821660048201526024016103d2565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b6000546001600160a01b03163314610cf657604051639f216c1360e01b815260040160405180910390fd5b610c3381610fc4565b6040805180820190915260008082526020820152610d1d8383611098565b9392505050565b6000610848600983611107565b6001546001600160a01b031633141580610d49575033155b15610d80576040517f7304d01200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61097333610f4b565b6001600160a01b03811660009081526001830160205260408120541515610d1d565b600062ffffff821115610dea576040517f58f62eac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b627fffff198201610d1d700100068db8bac710cb295e9e1b089a027582611113565b600080826001600160a01b0316846001600160a01b03161115610e2d579192915b509192909150565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b038116610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016103d2565b6000610d1d836001600160a01b0384166113b1565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f590600090a250565b600080546001600160a01b038381166001600160a01b031980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610848825490565b6000610d1d836001600160a01b038416611400565b6001600160a01b038116610feb57604051632573cfb960e21b815260040160405180910390fd5b6003546001600160a01b03908116908216811415611040576040517f4fcea9710000000000000000000000000000000000000000000000000000000081526001600160a01b03831660048201526024016103d2565b600380546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa708401527219101610b70565b60408051808201909152600080825260208201526110b68383610e0c565b6001600160a01b0391821660009081526006602090815260408083209385168352928152908290208251808401909352549283168252600160a01b90920460ff161515918101919091529392505050565b6000610d1d83836114f3565b6000808083611138575070010000000000000000000000000000000091506108489050565b5082600081121561114a579015906000035b62100000811015611350577001000000000000000000000000000000009250846fffffffffffffffffffffffffffffffff81111561118a57911591600019045b600182161561119b5792830260801c925b800260801c60028216156111b15792830260801c925b800260801c60048216156111c75792830260801c925b800260801c60088216156111dd5792830260801c925b800260801c60108216156111f35792830260801c925b800260801c60208216156112095792830260801c925b800260801c604082161561121f5792830260801c925b8002608090811c908216156112365792830260801c925b800260801c61010082161561124d5792830260801c925b800260801c6102008216156112645792830260801c925b800260801c61040082161561127b5792830260801c925b800260801c6108008216156112925792830260801c925b800260801c6110008216156112a95792830260801c925b800260801c6120008216156112c05792830260801c925b800260801c6140008216156112d75792830260801c925b800260801c6180008216156112ee5792830260801c925b800260801c620100008216156113065792830260801c925b800260801c6202000082161561131e5792830260801c925b800260801c620400008216156113365792830260801c925b800260801c6208000082161561134e5792830260801c925b505b82611391576040517f74e3eb0800000000000000000000000000000000000000000000000000000000815260048101869052602481018590526044016103d2565b8161139c57826113a8565b6113a883600019611658565b95945050505050565b60008181526001830160205260408120546113f857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610848565b506000610848565b600081815260018301602052604081205480156114e9576000611424600183611616565b855490915060009061143890600190611616565b905081811461149d5760008660000182815481106114585761145861167a565b906000526020600020015490508087600001848154811061147b5761147b61167a565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806114ae576114ae611690565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610848565b6000915050610848565b600082600001828154811061150a5761150a61167a565b9060005260206000200154905092915050565b6001600160a01b0381168114610c3357600080fd5b60008060006060848603121561154757600080fd5b83356115528161151d565b925060208401356115628161151d565b9150604084013562ffffff8116811461157a57600080fd5b809150509250925092565b60006020828403121561159757600080fd5b81358015158114610d1d57600080fd5b6000602082840312156115b957600080fd5b8135610d1d8161151d565b6000602082840312156115d657600080fd5b5035919050565b600080604083850312156115f057600080fd5b82356115fb8161151d565b9150602083013561160b8161151d565b809150509250929050565b60008282101561163657634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561164d57600080fd5b8151610d1d8161151d565b60008261167557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea2646970667358221220f1ba58ea2026871bea689b9f7f7c0100b6684e25fd3198e01c522f6e3e9d71ff64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1891 CODESIZE SUB DUP1 PUSH3 0x1891 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x173 JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x51 JUMP JUMPDEST PUSH3 0x4A DUP2 PUSH3 0xAB JUMP JUMPDEST POP PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND DUP3 OR DUP6 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2573CFB9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ ISZERO PUSH3 0x114 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4FCEA971 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x16DC DUP1 PUSH3 0x1B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72E47B8C GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xDDBFD941 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xEAEC42A4 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEAEC42A4 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF89A4CD5 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDDBFD941 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0384781 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xB0384781 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72E47B8C EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x80C5061E EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E937C3A GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x5C779D6D GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C779D6D EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E937C3A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x509CEB90 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x5A440923 EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27721842 GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x27721842 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x4847CDC8 EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E48CE2 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x22F3FE14 EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1EA SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x216 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x216 PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x321 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x377 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A43E98000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2D3F3E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x429 PUSH1 0x9 DUP7 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8E888EF3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9B185300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x4B6 DUP5 PUSH3 0xFFFFFF AND PUSH2 0xDAB JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x4C4 DUP9 DUP9 PUSH2 0xE0C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2573CFB9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB27A43500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x5A8 DUP5 DUP3 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x336C8D7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP11 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP8 POP SWAP1 DUP8 AND SWAP1 PUSH4 0x336C8D70 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP4 MSTORE CALLER DUP12 DUP4 AND EQ PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP11 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 DUP6 KECCAK256 SWAP4 MLOAD DUP5 SLOAD SWAP2 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP1 DUP5 AND OR OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP5 DUP3 SWAP1 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 SLOAD DUP13 DUP3 AND SWAP5 POP SWAP1 DUP14 AND SWAP3 POP PUSH32 0x612FDD9B533D1CA33088DCBCA9AD3186EEADC9893E63715B8A783040D729CD6A SWAP2 DUP11 SWAP2 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB6EF29400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL DUP4 ISZERO MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCDEE7BF87B7A743B4CBE1D2D534C5248621B76F58460337E7FDA92D5D23F4124 SWAP1 PUSH2 0x830 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 PUSH1 0x9 DUP4 PUSH2 0xD89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x884 PUSH1 0x9 DUP3 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3CE0AD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x84CC2115995684DCB0CD3D3A9565E3D32F075DE81DB70C8DC3A719B2A47AF67E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 PUSH1 0x0 PUSH2 0xF01 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 PUSH1 0x0 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E0 PUSH1 0x9 PUSH2 0xFA5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x147CE15E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ ISZERO PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F69DCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x900D0E3D359F50E4F923ECDC06B401E07DBB9F485E17B07BCFC91A13000B277E SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xF01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6C PUSH1 0x9 DUP3 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8E888EF3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xB767739217755D8AF5A2BA75B181A19FA1750F8BB701F09311CB19A90140CB3 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD1D DUP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 PUSH1 0x9 DUP4 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO DUP1 PUSH2 0xD49 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 CALLER PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 GT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x58F62EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7FFFFF NOT DUP3 ADD PUSH2 0xD1D PUSH17 0x100068DB8BAC710CB295E9E1B089A0275 DUP3 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0xE2D JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST POP SWAP2 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP2 PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13B1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND DUP3 OR DUP6 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2573CFB9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ ISZERO PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4FCEA97100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 SWAP2 ADD PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x10B6 DUP4 DUP4 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD SWAP3 DUP4 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 DUP4 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 PUSH2 0x1138 JUMPI POP PUSH17 0x100000000000000000000000000000000 SWAP2 POP PUSH2 0x848 SWAP1 POP JUMP JUMPDEST POP DUP3 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x114A JUMPI SWAP1 ISZERO SWAP1 PUSH1 0x0 SUB JUMPDEST PUSH3 0x100000 DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH17 0x100000000000000000000000000000000 SWAP3 POP DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118A JUMPI SWAP2 ISZERO SWAP2 PUSH1 0x0 NOT DIV JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x119B JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x11B1 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x11C7 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x11DD JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x11F3 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1209 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x121F JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SWAP1 DUP2 SHR SWAP1 DUP3 AND ISZERO PUSH2 0x1236 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x124D JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x1264 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x127B JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1292 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x12A9 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x12C0 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x12D7 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x12EE JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x1306 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x131E JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1336 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x134E JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST POP JUMPDEST DUP3 PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x74E3EB0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3D2 JUMP JUMPDEST DUP2 PUSH2 0x139C JUMPI DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x13A8 DUP4 PUSH1 0x0 NOT PUSH2 0x1658 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x13F8 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x848 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 PUSH2 0x1424 PUSH1 0x1 DUP4 PUSH2 0x1616 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1438 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1616 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x167A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x147B JUMPI PUSH2 0x147B PUSH2 0x167A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x14AE JUMPI PUSH2 0x14AE PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x150A JUMPI PUSH2 0x150A PUSH2 0x167A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1552 DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1562 DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD1D DUP2 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15FB DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x160B DUP2 PUSH2 0x151D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1636 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD1D DUP2 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1675 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xBA PC 0xEA KECCAK256 0x26 DUP8 SHL 0xEA PUSH9 0x9B9F7F7C0100B6684E 0x25 REVERT BALANCE SWAP9 0xE0 SHR MSTORE 0x2F PUSH15 0x3E9D71FF64736F6C634300080A0033 ",
							"sourceMap": "712:9449:4:-:0;;;2126:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1652:30:16;1671:10;1652:18;:30::i;:::-;2171:31:4;2188:13;2171:16;:31::i;:::-;2126:83;712:9449;;3788:228:16;3862:17;3882:6;;-1:-1:-1;;;;;3898:18:16;;;-1:-1:-1;;;;;;3898:18:16;;;;;;;3882:6;3926:26;;;;;;;3967:42;;3882:6;;;;;;;3967:42;;3862:17;3967:42;3852:164;3788:228;:::o;8764:389:4:-;-1:-1:-1;;;;;8836:27:4;;8832:64;;8872:24;;-1:-1:-1;;;8872:24:4;;;;;;;;;;;8832:64;8934:12;;-1:-1:-1;;;;;8934:12:4;;;;8960:33;;;;8956:88;;;9002:42;;-1:-1:-1;;;9002:42:4;;-1:-1:-1;;;;;473:32:19;;9002:42:4;;;455:51:19;428:18;;9002:42:4;;;;;;;8956:88;9055:12;:28;;-1:-1:-1;;;;;;9055:28:4;-1:-1:-1;;;;;9055:28:4;;;;;;;;;9098:48;;;747:15:19;;;729:34;;794:2;779:18;;772:43;;;;9098:48:4;;664:18:19;9098:48:4;;;;;;;8822:331;8764:389;:::o;14:290:19:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:19;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:19:o;517:304::-;712:9449:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LBPairImplementation_1346": {
									"entryPoint": null,
									"id": 1346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_FEE_1343": {
									"entryPoint": null,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_add_210": {
									"entryPoint": 5041,
									"id": 210,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_at_344": {
									"entryPoint": 5363,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_contains_313": {
									"entryPoint": null,
									"id": 313,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getBPValue_2561": {
									"entryPoint": null,
									"id": 2561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getLBPairInformation_1857": {
									"entryPoint": 4248,
									"id": 1857,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_length_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_remove_294": {
									"entryPoint": 5120,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setFeeRecipient_1828": {
									"entryPoint": 4036,
									"id": 1828,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setPendingOwner_3914": {
									"entryPoint": 3841,
									"id": 3914,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sortTokens_1890": {
									"entryPoint": 3596,
									"id": 1890,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_transferOwnership_3899": {
									"entryPoint": 3915,
									"id": 3899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addQuoteAsset_1762": {
									"entryPoint": 2126,
									"id": 1762,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_510": {
									"entryPoint": 3820,
									"id": 510,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allLBPairs_1361": {
									"entryPoint": 2474,
									"id": 1361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@at_606": {
									"entryPoint": 4359,
									"id": 606,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@becomeOwner_3857": {
									"entryPoint": 3377,
									"id": 3857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cloneDeterministic_44": {
									"entryPoint": 3637,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_564": {
									"entryPoint": 3465,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createLBPair_1694": {
									"entryPoint": 866,
									"id": 1694,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@creationUnlocked_1353": {
									"entryPoint": null,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeRecipient_1349": {
									"entryPoint": null,
									"id": 1349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flashLoanFee_1356": {
									"entryPoint": null,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLBPairInformation_1472": {
									"entryPoint": 3327,
									"id": 1472,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getNumberOfLBPairs_1403": {
									"entryPoint": null,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getNumberOfQuoteAssets_1415": {
									"entryPoint": 2516,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPriceFromId_2541": {
									"entryPoint": 3499,
									"id": 2541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getQuoteAsset_1433": {
									"entryPoint": 3364,
									"id": 1433,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isQuoteAsset_1452": {
									"entryPoint": 2107,
									"id": 1452,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@length_579": {
									"entryPoint": 4005,
									"id": 579,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_3775": {
									"entryPoint": null,
									"id": 3775,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_3785": {
									"entryPoint": null,
									"id": 3785,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@power_3341": {
									"entryPoint": 4371,
									"id": 3341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeQuoteAsset_1790": {
									"entryPoint": 3126,
									"id": 1790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@remove_537": {
									"entryPoint": 4015,
									"id": 537,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_3872": {
									"entryPoint": 2421,
									"id": 3872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokePendingOwner_3844": {
									"entryPoint": 2300,
									"id": 3844,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFactoryLockedState_1734": {
									"entryPoint": 1876,
									"id": 1734,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeRecipient_1708": {
									"entryPoint": 3275,
									"id": 1708,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLBPairImplementation_1515": {
									"entryPoint": 2533,
									"id": 1515,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPendingOwner_3819": {
									"entryPoint": 2940,
									"id": 3819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 5509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$157": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157t_uint24": {
									"entryPoint": 5426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_contract$_ILBFactory_$2111_fromMemory": {
									"entryPoint": 5691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILBPair_$2398__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ILBPair_$2398_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_LBPairInformation_$1905_memory_ptr__to_t_struct$_LBPairInformation_$1905_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IERC20": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7612:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:109:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "154:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "163:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "166:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "156:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "156:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "156:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "90:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "101:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "108:42:19",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "97:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "97:54:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "87:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "87:65:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "80:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "80:73:19"
															},
															"nodeType": "YulIf",
															"src": "77:93:19"
														}
													]
												},
												"name": "validator_revert_contract_IERC20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "56:5:19",
														"type": ""
													}
												],
												"src": "14:162:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:471:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "358:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "367:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "360:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "360:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "360:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "333:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "342:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "329:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "329:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "354:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "325:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "325:32:19"
															},
															"nodeType": "YulIf",
															"src": "322:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "383:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "409:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "396:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "396:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "387:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "461:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "428:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "428:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "428:39:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "476:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "486:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "500:47:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "532:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "543:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "528:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "528:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "515:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:32:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "504:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "589:7:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "556:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:41:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "606:17:19",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "616:7:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "606:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "632:47:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "664:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "675:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "660:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "660:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "647:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "647:32:19"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "636:7:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "701:7:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nodeType": "YulIdentifier",
																						"src": "714:7:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "723:8:19",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "710:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "710:22:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "698:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "691:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "691:43:19"
															},
															"nodeType": "YulIf",
															"src": "688:63:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "760:17:19",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "770:7:19"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "760:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "262:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "273:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "285:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "293:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "301:6:19",
														"type": ""
													}
												],
												"src": "181:602:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "915:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "927:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "938:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "957:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "972:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "980:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "968:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "968:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILBPair_$2398__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "874:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "885:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "896:4:19",
														"type": ""
													}
												],
												"src": "788:242:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1102:206:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1148:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1157:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1160:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1150:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1150:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1150:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1123:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1132:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:32:19"
															},
															"nodeType": "YulIf",
															"src": "1112:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1173:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1199:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1186:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1177:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1262:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1271:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1274:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1264:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1264:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1264:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1231:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "1252:5:19"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "1245:6:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1245:13:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1238:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1238:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1228:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1228:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:40:19"
															},
															"nodeType": "YulIf",
															"src": "1218:60:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1287:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1297:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1287:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1079:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1091:6:19",
														"type": ""
													}
												],
												"src": "1035:273:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:185:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1443:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1452:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1455:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1445:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1445:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1445:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1418:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1414:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1439:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:32:19"
															},
															"nodeType": "YulIf",
															"src": "1407:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1468:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1494:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1481:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1472:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1546:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "1513:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1513:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1513:39:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1561:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1571:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$157",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1363:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1374:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1386:6:19",
														"type": ""
													}
												],
												"src": "1313:269:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1682:92:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1692:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1704:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1715:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1692:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1734:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1759:6:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1752:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1752:14:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1745:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:22:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1727:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1727:41:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1651:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1662:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1673:4:19",
														"type": ""
													}
												],
												"src": "1587:187:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1880:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1890:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1902:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1913:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1898:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1890:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1932:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1947:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1955:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1943:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1849:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1860:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1871:4:19",
														"type": ""
													}
												],
												"src": "1779:226:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2111:76:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2121:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2133:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2144:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2129:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2129:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2121:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2163:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2156:25:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2080:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2091:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2102:4:19",
														"type": ""
													}
												],
												"src": "2010:177:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2262:110:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2308:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2317:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2320:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2310:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2310:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2310:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2283:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2279:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2279:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2275:32:19"
															},
															"nodeType": "YulIf",
															"src": "2272:52:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2333:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2356:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2343:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:23:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2333:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2228:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2239:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2251:6:19",
														"type": ""
													}
												],
												"src": "2192:180:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2447:185:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2493:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2505:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2495:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2495:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2495:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2468:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2477:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2464:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2464:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2489:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2460:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:32:19"
															},
															"nodeType": "YulIf",
															"src": "2457:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2518:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2544:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2531:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2522:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2596:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "2563:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2563:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2563:39:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2611:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2621:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2611:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2413:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2424:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2436:6:19",
														"type": ""
													}
												],
												"src": "2377:255:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2752:317:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2798:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2807:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2810:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2800:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2800:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2800:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2773:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2782:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2769:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2769:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2794:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2765:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:32:19"
															},
															"nodeType": "YulIf",
															"src": "2762:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2849:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2836:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2836:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2827:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2901:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "2868:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2868:39:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2916:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2916:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2940:47:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2983:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2968:18:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2955:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:32:19"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2944:7:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3029:7:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "2996:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:41:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2996:41:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3046:17:19",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3056:7:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3046:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2710:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2721:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2733:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2741:6:19",
														"type": ""
													}
												],
												"src": "2637:432:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3245:211:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3255:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3267:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3278:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3255:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3297:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3318:6:19"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "3312:5:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3312:13:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3327:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:62:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:81:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:81:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3391:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3402:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3387:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3387:20:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "value0",
																										"nodeType": "YulIdentifier",
																										"src": "3433:6:19"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3441:4:19",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3429:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3429:17:19"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "3423:5:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3423:24:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3416:6:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3416:32:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3409:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:40:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3380:70:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3380:70:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_LBPairInformation_$1905_memory_ptr__to_t_struct$_LBPairInformation_$1905_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3214:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3225:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3236:4:19",
														"type": ""
													}
												],
												"src": "3074:382:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3586:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3598:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3594:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3594:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3586:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3628:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3643:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3651:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3621:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3621:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3545:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3556:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3567:4:19",
														"type": ""
													}
												],
												"src": "3461:240:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3899:241:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3909:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3921:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3932:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3917:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "3917:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3909:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3944:52:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3954:42:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3948:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4012:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4027:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4023:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4005:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4005:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4059:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4070:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4055:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4055:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4079:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4075:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4075:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4048:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4048:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4048:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4111:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4122:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4107:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4107:18:19"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4127:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4100:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3863:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3871:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3879:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3890:4:19",
														"type": ""
													}
												],
												"src": "3706:434:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:198:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4312:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4324:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4320:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4320:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4312:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4347:52:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4357:42:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4351:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4415:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4430:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4438:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4426:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4426:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4408:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4408:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4462:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4473:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4458:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4482:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4490:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4478:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4451:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4451:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4451:43:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4263:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4274:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4282:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4293:4:19",
														"type": ""
													}
												],
												"src": "4145:355:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4688:256:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4698:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4710:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4721:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4706:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4706:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4698:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4733:52:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4743:42:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4737:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4801:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4816:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4824:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4848:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4859:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4844:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4844:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4868:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4876:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4837:43:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4900:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4911:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4896:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4896:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4920:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4928:8:19",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4916:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4916:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:49:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4889:49:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4641:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4652:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4660:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4668:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4679:4:19",
														"type": ""
													}
												],
												"src": "4505:439:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4998:230:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5028:168:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5049:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5052:77:19",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5042:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5042:88:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5042:88:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5150:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5153:4:19",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5143:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5143:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5143:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5178:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5171:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5171:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5171:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5014:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5017:1:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5011:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5011:8:19"
															},
															"nodeType": "YulIf",
															"src": "5008:188:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5205:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5217:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5220:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5213:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5205:4:19"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4980:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4983:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4989:4:19",
														"type": ""
													}
												],
												"src": "4949:279:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5378:168:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5388:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5400:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5411:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5396:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5396:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5388:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5430:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5445:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5453:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5441:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5441:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5423:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5423:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5423:74:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5517:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5528:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5513:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5533:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5506:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5506:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ILBPair_$2398_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5339:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5350:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5358:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5369:4:19",
														"type": ""
													}
												],
												"src": "5233:313:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5651:178:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5697:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5706:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5709:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5699:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5699:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5699:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5672:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5681:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5668:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5668:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5693:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5664:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:32:19"
															},
															"nodeType": "YulIf",
															"src": "5661:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5722:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5741:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5735:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5735:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5726:5:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5793:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IERC20",
																	"nodeType": "YulIdentifier",
																	"src": "5760:32:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:39:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5760:39:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5808:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5818:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ILBFactory_$2111_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5617:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5628:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5640:6:19",
														"type": ""
													}
												],
												"src": "5551:278:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5963:198:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5973:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5985:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5996:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5981:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5973:4:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6008:52:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6018:42:19",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6012:2:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6076:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6091:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6099:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6087:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6087:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6069:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6069:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6123:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6134:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6119:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6119:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6143:6:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6151:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6139:15:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6112:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6112:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6112:43:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5924:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5935:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5954:4:19",
														"type": ""
													}
												],
												"src": "5834:327:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6340:173:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6357:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6368:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6350:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6402:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6387:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6387:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6407:2:19",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6380:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6380:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6430:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6441:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6426:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6426:18:19"
																	},
																	{
																		"hexValue": "455243313136373a2063726561746532206661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6446:25:19",
																		"type": "",
																		"value": "ERC1167: create2 failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6419:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:53:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6419:53:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6481:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6493:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6504:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6481:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6317:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6331:4:19",
														"type": ""
													}
												],
												"src": "6166:347:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6550:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6570:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6560:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6664:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6667:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6657:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6657:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6657:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6688:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6691:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6681:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6681:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "6518:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6834:119:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6844:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6856:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6867:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6852:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6852:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6844:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6886:9:19"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:25:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6879:25:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6924:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6935:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6920:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:18:19"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6940:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6913:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6913:34:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6795:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6806:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6814:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6825:4:19",
														"type": ""
													}
												],
												"src": "6707:246:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7004:228:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7035:168:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7056:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7059:77:19",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7049:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7049:88:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7049:88:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7157:1:19",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7160:4:19",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7150:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7150:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7150:15:19"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7185:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7188:4:19",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7178:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7178:15:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7178:15:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7024:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:9:19"
															},
															"nodeType": "YulIf",
															"src": "7014:189:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7212:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7221:1:19"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7224:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7217:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7212:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6989:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6992:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6998:1:19",
														"type": ""
													}
												],
												"src": "6958:274:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7269:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7289:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7279:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7279:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7383:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7386:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7376:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7376:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7407:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7410:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7400:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7400:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7237:184:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7458:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7475:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7478:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7468:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7468:88:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7468:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7572:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7575:4:19",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7565:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7565:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7565:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7596:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7599:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7589:15:19"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "7426:184:19"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157t_uint24(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        if iszero(eq(value_2, and(value_2, 0xffffff))) { revert(0, 0) }\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_contract$_ILBPair_$2398__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$157(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$157t_contract$_IERC20_$157(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC20(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_struct$_LBPairInformation_$1905_memory_ptr__to_t_struct$_LBPairInformation_$1905_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x20), iszero(iszero(mload(add(value0, 0x20)))))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$157__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_rational_1_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$157_t_contract$_IERC20_$157_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_contract$_ILBPair_$2398_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_contract$_ILBFactory_$2111_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"ERC1167: create2 failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x72E47B8C GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0xDDBFD941 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xEAEC42A4 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEAEC42A4 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xF89A4CD5 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDDBFD941 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0384781 GT PUSH2 0xBD JUMPI DUP1 PUSH4 0xB0384781 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xBC063E1A EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x72E47B8C EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x80C5061E EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E937C3A GT PUSH2 0x145 JUMPI DUP1 PUSH4 0x5C779D6D GT PUSH2 0x11F JUMPI DUP1 PUSH4 0x5C779D6D EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4E937C3A EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x509CEB90 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x5A440923 EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27721842 GT PUSH2 0x176 JUMPI DUP1 PUSH4 0x27721842 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x4847CDC8 EQ PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E48CE2 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x22F3FE14 EQ PUSH2 0x1C2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH2 0x1D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x216 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x216 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1EA SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST PUSH2 0x216 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x216 PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A5 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x309 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x321 PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0xD24 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x377 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x39D JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x3A43E98000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH32 0xA2D3F3E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x429 PUSH1 0x9 DUP7 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8E888EF3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2F9B185300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH2 0x4B6 DUP5 PUSH3 0xFFFFFF AND PUSH2 0xDAB JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x4C4 DUP9 DUP9 PUSH2 0xE0C JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2573CFB9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH32 0xCB27A43500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP5 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x5A8 DUP5 DUP3 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x336C8D7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP11 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH3 0xFFFFFF DUP11 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 SWAP8 POP SWAP1 DUP8 AND SWAP1 PUSH4 0x336C8D70 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x62F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP4 MSTORE CALLER DUP12 DUP4 AND EQ PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP11 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 MSTORE DUP7 DUP2 KECCAK256 DUP12 DUP7 AND DUP3 MSTORE SWAP1 SWAP2 MSTORE SWAP5 DUP6 KECCAK256 SWAP4 MLOAD DUP5 SLOAD SWAP2 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP1 DUP5 AND OR OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP5 DUP3 SWAP1 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP1 SLOAD DUP13 DUP3 AND SWAP5 POP SWAP1 DUP14 AND SWAP3 POP PUSH32 0x612FDD9B533D1CA33088DCBCA9AD3186EEADC9893E63715B8A783040D729CD6A SWAP2 DUP11 SWAP2 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB6EF29400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL DUP4 ISZERO MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCDEE7BF87B7A743B4CBE1D2D534C5248621B76F58460337E7FDA92D5D23F4124 SWAP1 PUSH2 0x830 SWAP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 PUSH1 0x9 DUP4 PUSH2 0xD89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x884 PUSH1 0x9 DUP3 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x8C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3CE0AD900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x84CC2115995684DCB0CD3D3A9565E3D32F075DE81DB70C8DC3A719B2A47AF67E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 PUSH1 0x0 PUSH2 0xF01 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 PUSH1 0x0 PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x9BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E0 PUSH1 0x9 PUSH2 0xFA5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA7C SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x147CE15E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ ISZERO PUSH2 0xB1C JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F69DCA800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x900D0E3D359F50E4F923ECDC06B401E07DBB9F485E17B07BCFC91A13000B277E SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xF01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC61 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6C PUSH1 0x9 DUP3 PUSH2 0xFAF JUMP JUMPDEST PUSH2 0xC94 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8E888EF3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xB767739217755D8AF5A2BA75B181A19FA1750F8BB701F09311CB19A90140CB3 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC33 DUP2 PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD1D DUP4 DUP4 PUSH2 0x1098 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 PUSH1 0x9 DUP4 PUSH2 0x1107 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO DUP1 PUSH2 0xD49 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 CALLER PUSH2 0xF4B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 GT ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x58F62EAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7FFFFF NOT DUP3 ADD PUSH2 0xD1D PUSH17 0x100068DB8BAC710CB295E9E1B089A0275 DUP3 PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0xE2D JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST POP SWAP2 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE DUP2 PUSH1 0x37 PUSH1 0x9 PUSH1 0x0 CREATE2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13B1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND DUP3 OR DUP6 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH4 0x2573CFB9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ ISZERO PUSH2 0x1040 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4FCEA97100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721 SWAP2 ADD PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x10B6 DUP4 DUP4 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD SWAP3 DUP4 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 DUP4 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 PUSH2 0x1138 JUMPI POP PUSH17 0x100000000000000000000000000000000 SWAP2 POP PUSH2 0x848 SWAP1 POP JUMP JUMPDEST POP DUP3 PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x114A JUMPI SWAP1 ISZERO SWAP1 PUSH1 0x0 SUB JUMPDEST PUSH3 0x100000 DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH17 0x100000000000000000000000000000000 SWAP3 POP DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118A JUMPI SWAP2 ISZERO SWAP2 PUSH1 0x0 NOT DIV JUMPDEST PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x119B JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x11B1 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x11C7 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x11DD JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x11F3 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1209 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x121F JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SWAP1 DUP2 SHR SWAP1 DUP3 AND ISZERO PUSH2 0x1236 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x124D JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x1264 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x127B JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1292 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x12A9 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x12C0 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x12D7 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x12EE JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x1306 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x131E JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1336 JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST DUP1 MUL PUSH1 0x80 SHR PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x134E JUMPI SWAP3 DUP4 MUL PUSH1 0x80 SHR SWAP3 JUMPDEST POP JUMPDEST DUP3 PUSH2 0x1391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x74E3EB0800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3D2 JUMP JUMPDEST DUP2 PUSH2 0x139C JUMPI DUP3 PUSH2 0x13A8 JUMP JUMPDEST PUSH2 0x13A8 DUP4 PUSH1 0x0 NOT PUSH2 0x1658 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x13F8 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x848 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 PUSH2 0x1424 PUSH1 0x1 DUP4 PUSH2 0x1616 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1438 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1616 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x167A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x147B JUMPI PUSH2 0x147B PUSH2 0x167A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x14AE JUMPI PUSH2 0x14AE PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x848 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x150A JUMPI PUSH2 0x150A PUSH2 0x167A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1552 DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1562 DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x157A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD1D DUP2 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x15FB DUP2 PUSH2 0x151D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x160B DUP2 PUSH2 0x151D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1636 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xD1D DUP2 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1675 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xBA PC 0xEA KECCAK256 0x26 DUP8 SHL 0xEA PUSH9 0x9B9F7F7C0100B6684E 0x25 REVERT BALANCE SWAP9 0xE0 SHR MSTORE 0x2F PUSH15 0x3E9D71FF64736F6C634300080A0033 ",
							"sourceMap": "712:9449:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4945:2179;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;968:55:19;;;950:74;;938:2;923:18;4945:2179:4;;;;;;;;7573:264;;;;;;:::i;:::-;;:::i;:::-;;3225:145;;;;;;:::i;:::-;;:::i;:::-;;;1752:14:19;;1745:22;1727:41;;1715:2;1700:18;3225:145:4;1587:187:19;999:36:4;;;;;-1:-1:-1;;;;;999:36:4;;;1208;;;;;;;;;2156:25:19;;;2144:2;2129:18;1208:36:4;2010:177:19;2322:112:4;2410:10;:17;2322:112;;948:44;;;;;-1:-1:-1;;;;;948:44:4;;;7981:256;;;;;;:::i;:::-;;:::i;1164:37::-;;;;;-1:-1:-1;;;1164:37:4;;;;;;2741:183:16;;;:::i;3489:102::-;;;:::i;1251:36:4:-;;;;;;:::i;:::-;;:::i;2562:128::-;;;:::i;1801:86:16:-;1848:7;1874:6;-1:-1:-1;;;;;1874:6:16;1801:86;;4061:584:4;;;;;;:::i;:::-;;:::i;885:49::-;;928:6;885:49;;2265:291:16;;;;;;:::i;:::-;;:::i;8386:248:4:-;;;;;;:::i;:::-;;:::i;2015:100:16:-;2095:13;;-1:-1:-1;;;;;2095:13:16;2015:100;;7295:124:4;;;;;;:::i;:::-;;:::i;3680:205::-;;;;;;:::i;:::-;;:::i;:::-;;;;3312:13:19;;-1:-1:-1;;;;;3308:62:19;3290:81;;3441:4;3429:17;;;3423:24;3416:32;3409:40;3387:20;;;3380:70;;;;3263:18;3680:205:4;3074:382:19;2877:142:4;;;;;;:::i;:::-;;:::i;3052:103:16:-;;;:::i;4945:2179:4:-;5074:15;5101:14;5118:7;1848::16;1874:6;-1:-1:-1;;;;;1874:6:16;;1801:86;5118:7:4;5140:16;;5101:24;;-1:-1:-1;;;;5140:16:4;;;;5139:17;:41;;;;-1:-1:-1;5160:10:4;-1:-1:-1;;;;;5160:20:4;;;;5139:41;5135:101;;;5189:47;;;;;5225:10;5189:47;;;950:74:19;923:18;;5189:47:4;;;;;;;;5135:101;5279:20;;-1:-1:-1;;;;;5279:20:4;5314:35;5310:81;;5358:33;;;;;;;;;;;;;;5310:81;5407:47;:20;5445:7;5407:29;:47::i;:::-;5402:105;;5463:44;;-1:-1:-1;;;5463:44:4;;-1:-1:-1;;;;;968:55:19;;5463:44:4;;;950:74:19;923:18;;5463:44:4;788:242:19;5402:105:4;5533:7;-1:-1:-1;;;;;5522:18:4;:7;-1:-1:-1;;;;;5522:18:4;;5518:69;;;5549:38;;;;;-1:-1:-1;;;;;968:55:19;;5549:38:4;;;950:74:19;923:18;;5549:38:4;788:242:19;5518:69:4;5668:35;5693:9;5668:35;;:24;:35::i;:::-;;5822:14;5838;5856:29;5868:7;5877;5856:11;:29::i;:::-;5821:64;;-1:-1:-1;5821:64:4;-1:-1:-1;;;;;;5937:30:4;;5933:67;;5976:24;;-1:-1:-1;;;5976:24:4;;;;;;;;;;;5933:67;-1:-1:-1;;;;;6022:21:4;;;6072:1;6022:21;;;:12;:21;;;;;;;;:30;;;;;;;;;;:37;;6014:60;6010:136;;6095:51;;;;;-1:-1:-1;;;;;4023:15:19;;;6095:51:4;;;4005:34:19;4075:15;;4055:18;;;4048:43;6144:1:4;4107:18:19;;;4100:34;3917:18;;6095:51:4;3706:434:19;6010:136:4;6183:28;;;-1:-1:-1;;;;;4426:15:19;;;6183:28:4;;;;4408:34:19;;;;4478:15;;;4458:18;;;4451:43;6183:28:4;;;;;;;;;4320:18:19;;;;6183:28:4;;;6173:39;;;;;6240:55;6266:21;6173:39;6240:25;:55::i;:::-;6307:47;;;;;-1:-1:-1;;;;;4812:15:19;;;6307:47:4;;;4794:34:19;4864:15;;;4844:18;;;4837:43;4928:8;4916:21;;4896:18;;;4889:49;6222:74:4;;-1:-1:-1;6307:18:4;;;;;;4706::19;;6307:47:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6398:108:4;;;;;;;;-1:-1:-1;;;;;6398:108:4;;;;;;6475:10;:20;;;;6398:108;;;;;;;6365:21;;;-1:-1:-1;6365:21:4;;;:12;:21;;;;;:30;;;;;;;;;;;:141;;;;;;;;-1:-1:-1;;;6365:141:4;;;;;;;;;;;;;6517:10;:24;;6365:141;6517:24;;;;;;;;;;;;;-1:-1:-1;;;;;;6517:24:4;;;;;;;6598:17;;6557:63;;;;-1:-1:-1;6557:63:4;;;;-1:-1:-1;6557:63:4;;6438:7;;6598:21;;6365:141;6598:21;:::i;:::-;6557:63;;;-1:-1:-1;;;;;5441:55:19;;;5423:74;;5528:2;5513:18;;5506:34;;;;5396:18;6557:63:4;;;;;;;5091:2033;;;;;4945:2179;;;;;:::o;7573:264::-;1239:6:16;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;7660:16:4::1;::::0;::::1;-1:-1:-1::0;;;7660:16:4;;::::1;;:27;;::::0;::::1;;;7656:87;;7696:47;;;;;;;;;;;;;;7656:87;7753:16;:27:::0;;-1:-1:-1;;;7772:8:4;::::1;7753:27;::::0;;;::::1;;::::0;;7795:35:::1;::::0;::::1;::::0;::::1;::::0;7773:7;1752:14:19;1745:22;1727:41;;1715:2;1700:18;;1587:187;7795:35:4::1;;;;;;;;7573:264:::0;:::o;3225:145::-;3294:4;3317:46;:20;3355:6;3317:29;:46::i;:::-;3310:53;3225:145;-1:-1:-1;;3225:145:4:o;7981:256::-;1239:6:16;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;8067:46:4::1;:20;8100:11:::0;8067:24:::1;:46::i;:::-;8062:124;;8134:52;::::0;::::1;::::0;;-1:-1:-1;;;;;968:55:19;;8134:52:4::1;::::0;::::1;950:74:19::0;923:18;;8134:52:4::1;788:242:19::0;8062:124:4::1;8202:28;::::0;-1:-1:-1;;;;;8202:28:4;::::1;::::0;::::1;::::0;;;::::1;7981:256:::0;:::o;2741:183:16:-;1239:6;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;2811:13:::1;::::0;-1:-1:-1;;;;;2811:13:16::1;2807:72;;2847:32;;;;;;;;;;;;;;2807:72;2889:28;2914:1;2889:16;:28::i;:::-;2741:183::o:0;3489:102::-;1239:6;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;3554:30:::1;3581:1;3554:18;:30::i;1251:36:4:-:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1251:36:4;;-1:-1:-1;1251:36:4;:::o;2562:128::-;2628:7;2654:29;:20;:27;:29::i;:::-;2647:36;;2562:128;:::o;4061:584::-;1239:6:16;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;4211:4:4::1;-1:-1:-1::0;;;;;4167:48:4::1;4175:21;-1:-1:-1::0;;;;;4167:38:4::1;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4167:48:4::1;;4163:130;;4236:57;::::0;::::1;::::0;;-1:-1:-1;;;;;968:55:19;;4236:57:4::1;::::0;::::1;950:74:19::0;923:18;;4236:57:4::1;788:242:19::0;4163:130:4::1;4339:20;::::0;-1:-1:-1;;;;;4339:20:4;;::::1;::::0;4373:49;::::1;::::0;::::1;4369:126;;;4443:52;::::0;::::1;::::0;;-1:-1:-1;;;;;968:55:19;;4443:52:4::1;::::0;::::1;950:74:19::0;923:18;;4443:52:4::1;788:242:19::0;4369:126:4::1;4506:20;:44:::0;;-1:-1:-1;;;;;;4506:44:4::1;-1:-1:-1::0;;;;;4506:44:4;;::::1;::::0;;::::1;::::0;;;4566:72:::1;::::0;;4426:15:19;;;4408:34;;4473:2;4458:18;;4451:43;;;;4566:72:4::1;::::0;4320:18:19;4566:72:4::1;;;;;;;;4153:492;4061:584:::0;:::o;2265:291:16:-;1239:6;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;-1:-1:-1;;;;;2353:27:16;::::1;2349:69;;2389:29;;;;;;;;;;;;;;2349:69;2432:13;::::0;-1:-1:-1;;;;;2432:13:16::1;:27:::0;2428:80:::1;;2468:40;;;;;;;;;;;;;;2428:80;2518:31;2535:13;2518:16;:31::i;:::-;2265:291:::0;:::o;8386:248:4:-;1239:6:16;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;8475:49:4::1;:20;8511:11:::0;8475:27:::1;:49::i;:::-;8470:111;;8533:48;::::0;-1:-1:-1;;;8533:48:4;;-1:-1:-1;;;;;968:55:19;;8533:48:4::1;::::0;::::1;950:74:19::0;923:18;;8533:48:4::1;788:242:19::0;8470:111:4::1;8597:30;::::0;-1:-1:-1;;;;;8597:30:4;::::1;::::0;::::1;::::0;;;::::1;8386:248:::0;:::o;7295:124::-;1239:6:16;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;7381:31:4::1;7398:13;7381:16;:31::i;3680:205::-:0;-1:-1:-1;;;;;;;;;;;;;;;;;3839:39:4;3861:7;3870;3839:21;:39::i;:::-;3832:46;3680:205;-1:-1:-1;;;3680:205:4:o;2877:142::-;2948:6;2980:31;:20;3004:6;2980:23;:31::i;3052:103:16:-;1438:13;;-1:-1:-1;;;;;1438:13:16;1424:10;:27;;;:55;;-1:-1:-1;1455:10:16;:24;1424:55;1420:101;;;1488:33;;;;;;;;;;;;;;1420:101;3118:30:::1;3137:10;3118:18;:30::i;8852:165:2:-:0;-1:-1:-1;;;;;8985:23:2;;8932:4;4343:19;;;:12;;;:19;;;;;;:24;;8955:55;4247:127;1462:292:9;1522:7;1559:16;1545:31;;1541:68;;;1585:24;;;;;;;;;;;;;;1541:68;-1:-1:-1;;1660:27:9;;1709:28;2108:75;1660:27;1709:19;:28::i;9954:205:4:-;10029:6;10037;10069:7;-1:-1:-1;;;;;10059:17:4;:7;-1:-1:-1;;;;;10059:17:4;;10055:62;;;10100:7;;10109;10055:62;-1:-1:-1;10135:7:4;;10144;;-1:-1:-1;9954:205:4:o;2107:794:0:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:0;;2836:58;;;;;;;6368:2:19;2836:58:0;;;6350:21:19;6407:2;6387:18;;;6380:30;6446:25;6426:18;;;6419:53;6489:18;;2836:58:0;6166:347:19;8297:150:2;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:2;;8390:4;:50::i;4217:157:16:-;4293:13;:29;;-1:-1:-1;;;;;;4293:29:16;-1:-1:-1;;;;;4293:29:16;;;;;;;;4337:30;;;;-1:-1:-1;;4337:30:16;4217:157;:::o;3788:228::-;3862:17;3882:6;;-1:-1:-1;;;;;3898:18:16;;;-1:-1:-1;;;;;;3898:18:16;;;;;;;3882:6;3926:26;;;;;;;3967:42;;3882:6;;;;;;;3967:42;;3862:17;3967:42;3852:164;3788:228;:::o;9098:115:2:-;9161:7;9187:19;9195:3;4537:18;;4455:107;8615:156;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:2;;8711:7;:53::i;8764:389:4:-;-1:-1:-1;;;;;8836:27:4;;8832:64;;8872:24;;-1:-1:-1;;;8872:24:4;;;;;;;;;;;8832:64;8934:12;;-1:-1:-1;;;;;8934:12:4;;;;8960:33;;;;8956:88;;;9002:42;;;;;-1:-1:-1;;;;;968:55:19;;9002:42:4;;;950:74:19;923:18;;9002:42:4;788:242:19;8956:88:4;9055:12;:28;;-1:-1:-1;;;;;;9055:28:4;-1:-1:-1;;;;;9055:28:4;;;;;;;;;9098:48;;;4426:15:19;;;4408:34;;4473:2;4458:18;;4451:43;;;;9098:48:4;;4320:18:19;9098:48:4;4145:355:19;9469:247:4;-1:-1:-1;;;;;;;;;;;;;;;;;9633:29:4;9645:7;9654;9633:11;:29::i;:::-;-1:-1:-1;;;;;9679:21:4;;;;;;;:12;:21;;;;;;;;:30;;;;;;;;;;;;9672:37;;;;;;;;;;;;;;-1:-1:-1;;;9672:37:4;;;;;;;;;;;;;;;9469:247;-1:-1:-1;;;9469:247:4:o;9555:156:2:-;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;4094:4000:14:-;4153:14;;;4227:6;4223:34;;-1:-1:-1;291:17:11;;-1:-1:-1;4235:22:14;;-1:-1:-1;4235:22:14;4223:34;-1:-1:-1;4299:1:14;4326;4316:12;;4313:109;;;4394:14;;;4359:1;4355:12;4313:109;4453:8;4446:4;:15;4442:3460;;;291:17:11;;-1:-1:-1;4553:1:14;4580:34;4574:41;;4571:153;;;4692:14;;;-1:-1:-1;;4645:16:14;4571:153;4755:3;4749:4;4745:14;4742:94;;;4801:16;;;4796:3;4792:26;;4742:94;4869:13;;4864:3;4860:23;4913:3;4903:14;;4900:94;;;4959:16;;;4954:3;4950:26;;4900:94;5027:13;;5022:3;5018:23;5071:3;5061:14;;5058:94;;;5117:16;;;5112:3;5108:26;;5058:94;5185:13;;5180:3;5176:23;5229:3;5219:14;;5216:94;;;5275:16;;;5270:3;5266:26;;5216:94;5343:13;;5338:3;5334:23;5387:4;5377:15;;5374:95;;;5434:16;;;5429:3;5425:26;;5374:95;5502:13;;5497:3;5493:23;5546:4;5536:15;;5533:95;;;5593:16;;;5588:3;5584:26;;5533:95;5661:13;;5656:3;5652:23;5705:4;5695:15;;5692:95;;;5752:16;;;5747:3;5743:26;;5692:95;5820:13;;5815:3;5811:23;;;;5854:15;;5851:95;;;5911:16;;;5906:3;5902:26;;5851:95;5979:13;;5974:3;5970:23;6023:5;6013:16;;6010:96;;;6071:16;;;6066:3;6062:26;;6010:96;6139:13;;6134:3;6130:23;6183:5;6173:16;;6170:96;;;6231:16;;;6226:3;6222:26;;6170:96;6299:13;;6294:3;6290:23;6343:5;6333:16;;6330:96;;;6391:16;;;6386:3;6382:26;;6330:96;6459:13;;6454:3;6450:23;6503:5;6493:16;;6490:96;;;6551:16;;;6546:3;6542:26;;6490:96;6619:13;;6614:3;6610:23;6663:6;6653:17;;6650:97;;;6712:16;;;6707:3;6703:26;;6650:97;6780:13;;6775:3;6771:23;6824:6;6814:17;;6811:97;;;6873:16;;;6868:3;6864:26;;6811:97;6941:13;;6936:3;6932:23;6985:6;6975:17;;6972:97;;;7034:16;;;7029:3;7025:26;;6972:97;7102:13;;7097:3;7093:23;7146:6;7136:17;;7133:97;;;7195:16;;;7190:3;7186:26;;7133:97;7263:13;;7258:3;7254:23;7307:7;7297:18;;7294:98;;;7357:16;;;7352:3;7348:26;;7294:98;7425:13;;7420:3;7416:23;7469:7;7459:18;;7456:98;;;7519:16;;;7514:3;7510:26;;7456:98;7587:13;;7582:3;7578:23;7631:7;7621:18;;7618:98;;;7681:16;;;7676:3;7672:26;;7618:98;7749:13;;7744:3;7740:23;7793:7;7783:18;;7780:98;;;7843:16;;;7838:3;7834:26;;7780:98;;4442:3460;7972:11;7968:57;;7992:33;;;;;;;;6879:25:19;;;6920:18;;;6913:34;;;6852:18;;7992:33:14;6707:246:19;7968:57:14;8043:6;:44;;8081:6;8043:44;;;8052:26;8072:6;-1:-1:-1;;8052:26:14;:::i;:::-;8036:51;4094:4000;-1:-1:-1;;;;;4094:4000:14:o;2206:404:2:-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:2;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:2;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:2;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;4904:118;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;14:162:19:-;-1:-1:-1;;;;;101:5:19;97:54;90:5;87:65;77:93;;166:1;163;156:12;181:602;285:6;293;301;354:2;342:9;333:7;329:23;325:32;322:52;;;370:1;367;360:12;322:52;409:9;396:23;428:39;461:5;428:39;:::i;:::-;486:5;-1:-1:-1;543:2:19;528:18;;515:32;556:41;515:32;556:41;:::i;:::-;616:7;-1:-1:-1;675:2:19;660:18;;647:32;723:8;710:22;;698:35;;688:63;;747:1;744;737:12;688:63;770:7;760:17;;;181:602;;;;;:::o;1035:273::-;1091:6;1144:2;1132:9;1123:7;1119:23;1115:32;1112:52;;;1160:1;1157;1150:12;1112:52;1199:9;1186:23;1252:5;1245:13;1238:21;1231:5;1228:32;1218:60;;1274:1;1271;1264:12;1313:269;1386:6;1439:2;1427:9;1418:7;1414:23;1410:32;1407:52;;;1455:1;1452;1445:12;1407:52;1494:9;1481:23;1513:39;1546:5;1513:39;:::i;2192:180::-;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:52;;;2320:1;2317;2310:12;2272:52;-1:-1:-1;2343:23:19;;2192:180;-1:-1:-1;2192:180:19:o;2637:432::-;2733:6;2741;2794:2;2782:9;2773:7;2769:23;2765:32;2762:52;;;2810:1;2807;2800:12;2762:52;2849:9;2836:23;2868:39;2901:5;2868:39;:::i;:::-;2926:5;-1:-1:-1;2983:2:19;2968:18;;2955:32;2996:41;2955:32;2996:41;:::i;:::-;3056:7;3046:17;;;2637:432;;;;;:::o;4949:279::-;4989:4;5017:1;5014;5011:8;5008:188;;;-1:-1:-1;;;5049:1:19;5042:88;5153:4;5150:1;5143:15;5181:4;5178:1;5171:15;5008:188;-1:-1:-1;5213:9:19;;4949:279::o;5551:278::-;5640:6;5693:2;5681:9;5672:7;5668:23;5664:32;5661:52;;;5709:1;5706;5699:12;5661:52;5741:9;5735:16;5760:39;5793:5;5760:39;:::i;6958:274::-;6998:1;7024;7014:189;;-1:-1:-1;;;7056:1:19;7049:88;7160:4;7157:1;7150:15;7188:4;7185:1;7178:15;7014:189;-1:-1:-1;7217:9:19;;6958:274::o;7237:184::-;-1:-1:-1;;;7286:1:19;7279:88;7386:4;7383:1;7376:15;7410:4;7407:1;7400:15;7426:184;-1:-1:-1;;;7475:1:19;7468:88;7575:4;7572:1;7565:15;7599:4;7596:1;7589:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1170400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LBPairImplementation()": "2394",
								"MAX_FEE()": "262",
								"addQuoteAsset(address)": "infinite",
								"allLBPairs(uint256)": "4649",
								"becomeOwner()": "52452",
								"createLBPair(address,address,uint24)": "infinite",
								"creationUnlocked()": "2372",
								"feeRecipient()": "2394",
								"flashLoanFee()": "2385",
								"getLBPairInformation(address,address)": "infinite",
								"getNumberOfLBPairs()": "2338",
								"getNumberOfQuoteAssets()": "2438",
								"getQuoteAsset(uint256)": "4749",
								"isQuoteAsset(address)": "infinite",
								"owner()": "2410",
								"pendingOwner()": "2387",
								"removeQuoteAsset(address)": "infinite",
								"renounceOwnership()": "52424",
								"revokePendingOwner()": "29921",
								"setFactoryLockedState(bool)": "29952",
								"setFeeRecipient(address)": "infinite",
								"setLBPairImplementation(address)": "infinite",
								"setPendingOwner(address)": "infinite"
							},
							"internal": {
								"_getLBPairInformation(contract IERC20,contract IERC20)": "infinite",
								"_setFeeRecipient(address)": "infinite",
								"_sortTokens(contract IERC20,contract IERC20)": "102"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 712,
									"end": 10161,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1681,
									"name": "CALLER",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "tag",
									"source": 16,
									"value": "7"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2188,
									"end": 2201,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2171,
									"end": 2187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2171,
									"end": 2202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2126,
									"end": 2209,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3879,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3879,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "LOG3",
									"source": 16
								},
								{
									"begin": 3852,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 8764,
									"end": 9153,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 8764,
									"end": 9153,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8836,
									"end": 8863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8836,
									"end": 8863,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8832,
									"end": 8896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 8832,
									"end": 8896,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2573CFB9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8872,
									"end": 8896,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 8832,
									"end": 8896,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 8832,
									"end": 8896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8934,
									"end": 8946,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 8934,
									"end": 8946,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8934,
									"end": 8946,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8934,
									"end": 8946,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8934,
									"end": 8946,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8934,
									"end": 8946,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8960,
									"end": 8993,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8960,
									"end": 8993,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8960,
									"end": 8993,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 8960,
									"end": 8993,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 8956,
									"end": 9044,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8956,
									"end": 9044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 8956,
									"end": 9044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4FCEA971"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 473,
									"end": 505,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 473,
									"end": 505,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9002,
									"end": 9044,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 8956,
									"end": 9044,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 8956,
									"end": 9044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9067,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 9055,
									"end": 9083,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 747,
									"end": 762,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 747,
									"end": 762,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 747,
									"end": 762,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 729,
									"end": 763,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 729,
									"end": 763,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 794,
									"end": 796,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 779,
									"end": 797,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 779,
									"end": 797,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 772,
									"end": 815,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 772,
									"end": 815,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 772,
									"end": 815,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 772,
									"end": 815,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "PUSH",
									"source": 4,
									"value": "15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721"
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 664,
									"end": 682,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 9098,
									"end": 9146,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 8822,
									"end": 9153,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8764,
									"end": 9153,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8764,
									"end": 9153,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 19,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 19
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 19,
									"value": "[out]"
								},
								{
									"begin": 517,
									"end": 821,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 517,
									"end": 821,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 712,
									"end": 10161,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1ba58ea2026871bea689b9f7f7c0100b6684e25fd3198e01c522f6e3e9d71ff64736f6c634300080a0033",
									".code": [
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "72E47B8C"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "DDBFD941"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "EAEC42A4"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "EAEC42A4"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "F89A4CD5"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "F9DCA989"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "DDBFD941"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "E30C3978"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "E74B981B"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "B0384781"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "B0384781"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "BC063E1A"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "C42069EC"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "72E47B8C"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "80C5061E"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "4E937C3A"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "5C779D6D"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "5C779D6D"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "67AB8A4E"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "4E937C3A"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "509CEB90"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "5A440923"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "27721842"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "27721842"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "46904840"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "4847CDC8"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "2E48CE2"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "22F3FE14"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 10161,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1766,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1752,
											"end": 1766,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1745,
											"end": 1767,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1727,
											"end": 1768,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1727,
											"end": 1768,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1700,
											"end": 1718,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1587,
											"end": 1774,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1035,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2181,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2181,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2156,
											"end": 2181,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1208,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2010,
											"end": 2187,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2420,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2410,
											"end": 2427,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2322,
											"end": 2434,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 948,
											"end": 992,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 948,
											"end": 992,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 948,
											"end": 992,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 928,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "16345785D8A0000"
										},
										{
											"begin": 885,
											"end": 934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 885,
											"end": 934,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3312,
											"end": 3325,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3312,
											"end": 3325,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3308,
											"end": 3370,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3371,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3290,
											"end": 3371,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3441,
											"end": 3445,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3446,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3429,
											"end": 3446,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3429,
											"end": 3446,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3423,
											"end": 3447,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 3416,
											"end": 3448,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3409,
											"end": 3449,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3387,
											"end": 3407,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3380,
											"end": 3450,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3380,
											"end": 3450,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3380,
											"end": 3450,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3380,
											"end": 3450,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3074,
											"end": 3456,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5074,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5118,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5118,
											"end": 5125,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5118,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 5156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5140,
											"end": 5156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5101,
											"end": 5125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 5156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 5156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5140,
											"end": 5156,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5140,
											"end": 5156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5180,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5139,
											"end": 5180,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5180,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5180,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5139,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5236,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5135,
											"end": 5236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "3A43E98000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5235,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5135,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5279,
											"end": 5299,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5279,
											"end": 5299,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5279,
											"end": 5299,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5314,
											"end": 5349,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5310,
											"end": 5391,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "PUSH",
											"source": 4,
											"value": "A2D3F3E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5310,
											"end": 5391,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 5310,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5407,
											"end": 5427,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 5407,
											"end": 5454,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5407,
											"end": 5454,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5407,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5402,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5402,
											"end": 5507,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8E888EF3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5463,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 788,
											"end": 1030,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5402,
											"end": 5507,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5402,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5533,
											"end": 5540,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5522,
											"end": 5540,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5529,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5522,
											"end": 5540,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5540,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5587,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5518,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5518,
											"end": 5587,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "2F9B185300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5549,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 788,
											"end": 1030,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5518,
											"end": 5587,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5518,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5693,
											"end": 5702,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5822,
											"end": 5836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5856,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5868,
											"end": 5875,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5877,
											"end": 5884,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5856,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 5856,
											"end": 5885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5856,
											"end": 5885,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 5856,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5821,
											"end": 5885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 5967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5933,
											"end": 6000,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2573CFB9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 6000,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5933,
											"end": 6000,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5933,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6034,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6043,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6052,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6059,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6059,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6014,
											"end": 6074,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6010,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6010,
											"end": 6146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "CB27A43500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4023,
											"end": 4038,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4023,
											"end": 4038,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 4023,
											"end": 4038,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4039,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4075,
											"end": 4090,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4075,
											"end": 4090,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4055,
											"end": 4073,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4048,
											"end": 4091,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6144,
											"end": 6145,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4107,
											"end": 4125,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4100,
											"end": 4134,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6095,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3706,
											"end": 4140,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6010,
											"end": 6146,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6010,
											"end": 6146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4478,
											"end": 4493,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4478,
											"end": 4493,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4478,
											"end": 4493,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6212,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6212,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6212,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6212,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6212,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6266,
											"end": 6287,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6173,
											"end": 6212,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6240,
											"end": 6295,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6240,
											"end": 6295,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 6240,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "336C8D7000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4812,
											"end": 4827,
											"name": "DUP12",
											"source": 19
										},
										{
											"begin": 4812,
											"end": 4827,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4812,
											"end": 4827,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4864,
											"end": 4879,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4837,
											"end": 4880,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4928,
											"end": 4936,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 4916,
											"end": 4937,
											"name": "DUP11",
											"source": 19
										},
										{
											"begin": 4916,
											"end": 4937,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4889,
											"end": 4938,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6222,
											"end": 6296,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6222,
											"end": 6296,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "PUSH",
											"source": 4,
											"value": "336C8D70"
										},
										{
											"begin": 6307,
											"end": 6325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 6307,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6485,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6475,
											"end": 6495,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6398,
											"end": 6506,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6395,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000"
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6527,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "PUSH",
											"source": 4,
											"value": "36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6517,
											"end": 6541,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6615,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6615,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "PUSH",
											"source": 4,
											"value": "612FDD9B533D1CA33088DCBCA9AD3186EEADC9893E63715B8A783040D729CD6A"
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6445,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6445,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6365,
											"end": 6506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 6598,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5496,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5441,
											"end": 5496,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5441,
											"end": 5496,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 5423,
											"end": 5497,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5423,
											"end": 5497,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5513,
											"end": 5531,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5513,
											"end": 5531,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5506,
											"end": 5540,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5506,
											"end": 5540,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5506,
											"end": 5540,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5506,
											"end": 5540,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6557,
											"end": 6620,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5091,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4945,
											"end": 7124,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7676,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7687,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7656,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7656,
											"end": 7743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "PUSH",
											"source": 4,
											"value": "B6EF29400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7656,
											"end": 7743,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 7656,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7769,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7772,
											"end": 7780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7772,
											"end": 7780,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7780,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "CDEE7BF87B7A743B4CBE1D2D534C5248621B76F58460337E7FDA92D5D23F4124"
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7773,
											"end": 7780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1752,
											"end": 1766,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1745,
											"end": 1767,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1727,
											"end": 1768,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1727,
											"end": 1768,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1700,
											"end": 1718,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1700,
											"end": 1718,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1587,
											"end": 1774,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7830,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7573,
											"end": 7837,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3317,
											"end": 3337,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3355,
											"end": 3361,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3317,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3317,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8067,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 8100,
											"end": 8111,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8067,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8067,
											"end": 8113,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8067,
											"end": 8113,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8067,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8062,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8062,
											"end": 8186,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "PUSH",
											"source": 4,
											"value": "3CE0AD900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8134,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 788,
											"end": 1030,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8062,
											"end": 8186,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8062,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "PUSH",
											"source": 4,
											"value": "84CC2115995684DCB0CD3D3A9565E3D32F075DE81DB70C8DC3A719B2A47AF67E"
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8230,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7981,
											"end": 8237,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "ECFAD6BF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "tag",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1287,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2654,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2654,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2654,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2690,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "183"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4211,
											"end": 4215,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4167,
											"end": 4205,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4205,
											"name": "PUSH",
											"source": 4,
											"value": "C45A0155"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4167,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4215,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH",
											"source": 4,
											"value": "147CE15E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4236,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 788,
											"end": 1030,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 4163,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4339,
											"end": 4359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4373,
											"end": 4422,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH",
											"source": 4,
											"value": "6F69DCA800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4443,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 788,
											"end": 1030,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4369,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4506,
											"end": 4550,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "900D0E3D359F50E4F923ECDC06B401E07DBB9F485E17B07BCFC91A13000B277E"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4566,
											"end": 4638,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4061,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "196"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "91F3851500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "716B1FBF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "tag",
											"source": 16,
											"value": "199"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8475,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8475,
											"end": 8495,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 8511,
											"end": 8522,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8475,
											"end": 8502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8475,
											"end": 8524,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8475,
											"end": 8524,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 8475,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8470,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8470,
											"end": 8581,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8E888EF3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8533,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 788,
											"end": 1030,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8470,
											"end": 8581,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8470,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "PUSH",
											"source": 4,
											"value": "B767739217755D8AF5A2BA75B181A19FA1750F8BB701F09311CB19A90140CB3"
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8597,
											"end": 8627,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8386,
											"end": 8634,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7295,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7381,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 7398,
											"end": 7411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7381,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 7381,
											"end": 7412,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3861,
											"end": 3868,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3877,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3839,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3878,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 3885,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2877,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2980,
											"end": 3000,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2980,
											"end": 3011,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1465,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "tag",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "7304D01200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 8852,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8985,
											"end": 9008,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8985,
											"end": 9008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4367,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4367,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8955,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 1462,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1522,
											"end": 1529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1575,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFF"
										},
										{
											"begin": 1545,
											"end": 1576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1576,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "58F62EAC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1585,
											"end": 1609,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1541,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7FFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1687,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2108,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "100068DB8BAC710CB295E9E1B089A0275"
										},
										{
											"begin": 1660,
											"end": 1687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1709,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1709,
											"end": 1737,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9954,
											"end": 10159,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 9954,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10029,
											"end": 10035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10037,
											"end": 10043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10069,
											"end": 10076,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10059,
											"end": 10076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10059,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10059,
											"end": 10076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10059,
											"end": 10076,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10117,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 10055,
											"end": 10117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10100,
											"end": 10107,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10100,
											"end": 10107,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10109,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10117,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 10055,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10135,
											"end": 10142,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10135,
											"end": 10142,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9954,
											"end": 10159,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2107,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2191,
											"end": 2207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2571,
											"name": "PUSH",
											"source": 0,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73000000"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2503,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2495,
											"end": 2520,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2493,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 2485,
											"end": 2521,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2482,
											"end": 2572,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2476,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2711,
											"name": "PUSH",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2703,
											"end": 2728,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2810,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2800,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2797,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2817,
											"name": "CREATE2",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6370,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6380,
											"end": 6410,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6446,
											"end": 6471,
											"name": "PUSH",
											"source": 19,
											"value": "455243313136373A2063726561746532206661696C6564000000000000000000"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6419,
											"end": 6472,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6166,
											"end": 6513,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8297,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8395,
											"end": 8398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8415,
											"end": 8438,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8415,
											"end": 8438,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8390,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8390,
											"end": 8440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4306,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "tag",
											"source": 16,
											"value": "175"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3879,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3879,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9098,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 8615,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8688,
											"end": 8692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 8719,
											"end": 8722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8711,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 8711,
											"end": 8764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8764,
											"end": 9153,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8764,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8836,
											"end": 8863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8836,
											"end": 8863,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8832,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8832,
											"end": 8896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2573CFB9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8832,
											"end": 8896,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8832,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8934,
											"end": 8946,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8934,
											"end": 8946,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8934,
											"end": 8946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8934,
											"end": 8946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8934,
											"end": 8946,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8934,
											"end": 8946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8993,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8993,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8993,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 9044,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8956,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 8956,
											"end": 9044,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "PUSH",
											"source": 4,
											"value": "4FCEA97100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 968,
											"end": 1023,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 950,
											"end": 1024,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 923,
											"end": 941,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9002,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 788,
											"end": 1030,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8956,
											"end": 9044,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 8956,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9067,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9055,
											"end": 9083,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9146,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9098,
											"end": 9146,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4408,
											"end": 4442,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4473,
											"end": 4475,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4458,
											"end": 4476,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4451,
											"end": 4494,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9098,
											"end": 9146,
											"name": "PUSH",
											"source": 4,
											"value": "15D80A013F22151BC7246E3BC132E12828CDE19DE98870475E3FA70840152721"
										},
										{
											"begin": 9098,
											"end": 9146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9098,
											"end": 9146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4145,
											"end": 4500,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9469,
											"end": 9716,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 9469,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9633,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 9645,
											"end": 9652,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9654,
											"end": 9661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9633,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 9633,
											"end": 9662,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9633,
											"end": 9662,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 9633,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9691,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9672,
											"end": 9709,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9469,
											"end": 9716,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9469,
											"end": 9716,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9555,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9629,
											"end": 9636,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9695,
											"end": 9700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9679,
											"end": 9682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9679,
											"end": 9701,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4167,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4153,
											"end": 4167,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 291,
											"end": 308,
											"name": "PUSH",
											"source": 11,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4235,
											"end": 4257,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 4223,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4300,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4326,
											"end": 4327,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4328,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4316,
											"end": 4328,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4408,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4408,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 4313,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4453,
											"end": 4461,
											"name": "PUSH",
											"source": 14,
											"value": "100000"
										},
										{
											"begin": 4446,
											"end": 4450,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 291,
											"end": 308,
											"name": "PUSH",
											"source": 11,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 291,
											"end": 308,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4553,
											"end": 4554,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4580,
											"end": 4614,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4574,
											"end": 4615,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4574,
											"end": 4615,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4706,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4706,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4692,
											"end": 4706,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4645,
											"end": 4661,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 4571,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4755,
											"end": 4758,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4749,
											"end": 4753,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4745,
											"end": 4759,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4801,
											"end": 4817,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4796,
											"end": 4799,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4792,
											"end": 4818,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4792,
											"end": 4818,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 4742,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4869,
											"end": 4882,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4869,
											"end": 4882,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4864,
											"end": 4867,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4860,
											"end": 4883,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 4903,
											"end": 4917,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4903,
											"end": 4917,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4959,
											"end": 4975,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4959,
											"end": 4975,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4959,
											"end": 4975,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4954,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4950,
											"end": 4976,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 4950,
											"end": 4976,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 4900,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5027,
											"end": 5040,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5027,
											"end": 5040,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5022,
											"end": 5025,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5074,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5061,
											"end": 5075,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5061,
											"end": 5075,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5117,
											"end": 5133,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5117,
											"end": 5133,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5117,
											"end": 5133,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5108,
											"end": 5134,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5108,
											"end": 5134,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 5058,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5185,
											"end": 5198,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5185,
											"end": 5198,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5180,
											"end": 5183,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5176,
											"end": 5199,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5229,
											"end": 5232,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5291,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5291,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5275,
											"end": 5291,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5270,
											"end": 5273,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5266,
											"end": 5292,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5266,
											"end": 5292,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 5216,
											"end": 5310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5343,
											"end": 5356,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5343,
											"end": 5356,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5334,
											"end": 5357,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5387,
											"end": 5391,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 5377,
											"end": 5392,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5377,
											"end": 5392,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5429,
											"end": 5432,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5425,
											"end": 5451,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5425,
											"end": 5451,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 5374,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5502,
											"end": 5515,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5502,
											"end": 5515,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5500,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5493,
											"end": 5516,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5546,
											"end": 5550,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5551,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5536,
											"end": 5551,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5593,
											"end": 5609,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5593,
											"end": 5609,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5593,
											"end": 5609,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5588,
											"end": 5591,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5584,
											"end": 5610,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5584,
											"end": 5610,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 5533,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5661,
											"end": 5674,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5661,
											"end": 5674,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5656,
											"end": 5659,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5652,
											"end": 5675,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5709,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5695,
											"end": 5710,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5710,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5752,
											"end": 5768,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5752,
											"end": 5768,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5752,
											"end": 5768,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5747,
											"end": 5750,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 5692,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5820,
											"end": 5833,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5815,
											"end": 5818,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 5869,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5854,
											"end": 5869,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5911,
											"end": 5927,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5911,
											"end": 5927,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5911,
											"end": 5927,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5906,
											"end": 5909,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5902,
											"end": 5928,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 5928,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 5851,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5979,
											"end": 5992,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5979,
											"end": 5992,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5970,
											"end": 5993,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6023,
											"end": 6028,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 6013,
											"end": 6029,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6013,
											"end": 6029,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6071,
											"end": 6087,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6071,
											"end": 6087,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6071,
											"end": 6087,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6066,
											"end": 6069,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6062,
											"end": 6088,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6088,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 6010,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6139,
											"end": 6152,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6139,
											"end": 6152,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6134,
											"end": 6137,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6130,
											"end": 6153,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "PUSH",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6173,
											"end": 6189,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6231,
											"end": 6247,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6231,
											"end": 6247,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6231,
											"end": 6247,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6226,
											"end": 6229,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6222,
											"end": 6248,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 6170,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6312,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6312,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6294,
											"end": 6297,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6290,
											"end": 6313,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6343,
											"end": 6348,
											"name": "PUSH",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 6333,
											"end": 6349,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6333,
											"end": 6349,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6391,
											"end": 6407,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6391,
											"end": 6407,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6391,
											"end": 6407,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6386,
											"end": 6389,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6382,
											"end": 6408,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6408,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 6330,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6472,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6472,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6454,
											"end": 6457,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6503,
											"end": 6508,
											"name": "PUSH",
											"source": 14,
											"value": "800"
										},
										{
											"begin": 6493,
											"end": 6509,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6493,
											"end": 6509,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6551,
											"end": 6567,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6546,
											"end": 6549,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6542,
											"end": 6568,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6542,
											"end": 6568,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 6490,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6632,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6619,
											"end": 6632,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6614,
											"end": 6617,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6610,
											"end": 6633,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "PUSH",
											"source": 14,
											"value": "1000"
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6670,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6712,
											"end": 6728,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6712,
											"end": 6728,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6712,
											"end": 6728,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6707,
											"end": 6710,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6703,
											"end": 6729,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6703,
											"end": 6729,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 6650,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6780,
											"end": 6793,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6780,
											"end": 6793,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6771,
											"end": 6794,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6824,
											"end": 6830,
											"name": "PUSH",
											"source": 14,
											"value": "2000"
										},
										{
											"begin": 6814,
											"end": 6831,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6814,
											"end": 6831,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6889,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6889,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6873,
											"end": 6889,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6871,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6864,
											"end": 6890,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6864,
											"end": 6890,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 6811,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6941,
											"end": 6954,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6941,
											"end": 6954,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6936,
											"end": 6939,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6932,
											"end": 6955,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "PUSH",
											"source": 14,
											"value": "4000"
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6975,
											"end": 6992,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7034,
											"end": 7050,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7034,
											"end": 7050,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7034,
											"end": 7050,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7029,
											"end": 7032,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7025,
											"end": 7051,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7025,
											"end": 7051,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 6972,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7115,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7102,
											"end": 7115,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7093,
											"end": 7116,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7146,
											"end": 7152,
											"name": "PUSH",
											"source": 14,
											"value": "8000"
										},
										{
											"begin": 7136,
											"end": 7153,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7136,
											"end": 7153,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7195,
											"end": 7211,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7190,
											"end": 7193,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7186,
											"end": 7212,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7186,
											"end": 7212,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 7133,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7276,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7258,
											"end": 7261,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7254,
											"end": 7277,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7307,
											"end": 7314,
											"name": "PUSH",
											"source": 14,
											"value": "10000"
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7297,
											"end": 7315,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7357,
											"end": 7373,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7357,
											"end": 7373,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7357,
											"end": 7373,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7352,
											"end": 7355,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 7294,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7425,
											"end": 7438,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7425,
											"end": 7438,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7420,
											"end": 7423,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7416,
											"end": 7439,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7469,
											"end": 7476,
											"name": "PUSH",
											"source": 14,
											"value": "20000"
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7519,
											"end": 7535,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7519,
											"end": 7535,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7519,
											"end": 7535,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7517,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7510,
											"end": 7536,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 7456,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7587,
											"end": 7600,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7587,
											"end": 7600,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7582,
											"end": 7585,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7578,
											"end": 7601,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7631,
											"end": 7638,
											"name": "PUSH",
											"source": 14,
											"value": "40000"
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7681,
											"end": 7697,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7681,
											"end": 7697,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7681,
											"end": 7697,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7676,
											"end": 7679,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7672,
											"end": 7698,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7672,
											"end": 7698,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 7618,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7749,
											"end": 7762,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7749,
											"end": 7762,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7744,
											"end": 7747,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7740,
											"end": 7763,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7793,
											"end": 7800,
											"name": "PUSH",
											"source": 14,
											"value": "80000"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7834,
											"end": 7860,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7780,
											"end": 7878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 4442,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7972,
											"end": 7983,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH",
											"source": 14,
											"value": "74E3EB0800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6920,
											"end": 6938,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 6920,
											"end": 6938,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6920,
											"end": 6938,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6913,
											"end": 6947,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6913,
											"end": 6947,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6913,
											"end": 6947,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 6852,
											"end": 6870,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 6852,
											"end": 6870,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7992,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 6707,
											"end": 6953,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 7968,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8081,
											"end": 8087,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 8043,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 8052,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8036,
											"end": 8087,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4094,
											"end": 8094,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2273,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3405,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3422,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3523,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3560,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3543,
											"end": 3585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3688,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4073,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4061,
											"end": 4073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4144,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 4978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 176,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 14,
											"end": 176,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 101,
											"end": 106,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 97,
											"end": 151,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 90,
											"end": 95,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 87,
											"end": 152,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 77,
											"end": 170,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 77,
											"end": 170,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 166,
											"end": 167,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 163,
											"end": 164,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 156,
											"end": 168,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 181,
											"end": 783,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 181,
											"end": 783,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 285,
											"end": 291,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 299,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 301,
											"end": 307,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 356,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 342,
											"end": 351,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 333,
											"end": 340,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 329,
											"end": 352,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 325,
											"end": 357,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 322,
											"end": 374,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 322,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 322,
											"end": 374,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 370,
											"end": 371,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 368,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 360,
											"end": 372,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 322,
											"end": 374,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 322,
											"end": 374,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 409,
											"end": 418,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 396,
											"end": 419,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 428,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 461,
											"end": 466,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 428,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 428,
											"end": 467,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 467,
											"name": "tag",
											"source": 19,
											"value": "334"
										},
										{
											"begin": 428,
											"end": 467,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 486,
											"end": 491,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 546,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 528,
											"end": 546,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 515,
											"end": 547,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 556,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 515,
											"end": 547,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 556,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 556,
											"end": 597,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 597,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 556,
											"end": 597,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 616,
											"end": 623,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 675,
											"end": 677,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 660,
											"end": 678,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 660,
											"end": 678,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 647,
											"end": 679,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 723,
											"end": 731,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 710,
											"end": 732,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 710,
											"end": 732,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 698,
											"end": 733,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 698,
											"end": 733,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 688,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 688,
											"end": 751,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 747,
											"end": 748,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 737,
											"end": 749,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 688,
											"end": 751,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 688,
											"end": 751,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 770,
											"end": 777,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 760,
											"end": 777,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 760,
											"end": 777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 760,
											"end": 777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 181,
											"end": 783,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 181,
											"end": 783,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 181,
											"end": 783,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 181,
											"end": 783,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 181,
											"end": 783,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 181,
											"end": 783,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1035,
											"end": 1308,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 1035,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1141,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1123,
											"end": 1130,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1119,
											"end": 1142,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1115,
											"end": 1147,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1158,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1150,
											"end": 1162,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 1112,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1199,
											"end": 1208,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1186,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1238,
											"end": 1259,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 1218,
											"end": 1278,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1272,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1264,
											"end": 1276,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1313,
											"end": 1582,
											"name": "tag",
											"source": 19,
											"value": "45"
										},
										{
											"begin": 1313,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1386,
											"end": 1392,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1418,
											"end": 1425,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1414,
											"end": 1437,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1410,
											"end": 1442,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1455,
											"end": 1456,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1453,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1445,
											"end": 1457,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 1407,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1481,
											"end": 1504,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1513,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1513,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 1513,
											"end": 1552,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2192,
											"end": 2372,
											"name": "tag",
											"source": 19,
											"value": "75"
										},
										{
											"begin": 2192,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2251,
											"end": 2257,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2306,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2279,
											"end": 2302,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2275,
											"end": 2307,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2272,
											"end": 2324,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2272,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 2272,
											"end": 2324,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2320,
											"end": 2321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2310,
											"end": 2322,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2272,
											"end": 2324,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 2272,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2192,
											"end": 2372,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2192,
											"end": 2372,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "tag",
											"source": 19,
											"value": "105"
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2794,
											"end": 2796,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2773,
											"end": 2780,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2769,
											"end": 2792,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2765,
											"end": 2797,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2800,
											"end": 2812,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2836,
											"end": 2859,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2868,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 2901,
											"end": 2906,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2868,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 2868,
											"end": 2907,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 2907,
											"name": "tag",
											"source": 19,
											"value": "354"
										},
										{
											"begin": 2868,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2983,
											"end": 2985,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2996,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2996,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 2996,
											"end": 3037,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2996,
											"end": 3037,
											"name": "tag",
											"source": 19,
											"value": "355"
										},
										{
											"begin": 2996,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 3046,
											"end": 3063,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3046,
											"end": 3063,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3046,
											"end": 3063,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2637,
											"end": 3069,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4949,
											"end": 5228,
											"name": "tag",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 4949,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4989,
											"end": 4993,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5014,
											"end": 5015,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5011,
											"end": 5019,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 5008,
											"end": 5196,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5008,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 5008,
											"end": 5196,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5049,
											"end": 5050,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5130,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 5150,
											"end": 5151,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 5143,
											"end": 5158,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5171,
											"end": 5186,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5008,
											"end": 5196,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 5008,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4949,
											"end": 5228,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5551,
											"end": 5829,
											"name": "tag",
											"source": 19,
											"value": "188"
										},
										{
											"begin": 5551,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5695,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5681,
											"end": 5690,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5672,
											"end": 5679,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5668,
											"end": 5691,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5664,
											"end": 5696,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5699,
											"end": 5711,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 5661,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5735,
											"end": 5751,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 5793,
											"end": 5798,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5760,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 5760,
											"end": 5799,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6958,
											"end": 7232,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 6958,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7025,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7014,
											"end": 7203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 7014,
											"end": 7203,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7056,
											"end": 7057,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7049,
											"end": 7137,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7160,
											"end": 7164,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 7157,
											"end": 7158,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 7150,
											"end": 7165,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7188,
											"end": 7192,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7193,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7014,
											"end": 7203,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 7014,
											"end": 7203,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7217,
											"end": 7226,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 7217,
											"end": 7226,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6958,
											"end": 7232,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7237,
											"end": 7421,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 7237,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7286,
											"end": 7287,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7279,
											"end": 7367,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7386,
											"end": 7390,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 7376,
											"end": 7391,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7410,
											"end": 7414,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7407,
											"end": 7408,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7415,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7426,
											"end": 7610,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 7426,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7556,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7575,
											"end": 7579,
											"name": "PUSH",
											"source": 19,
											"value": "31"
										},
										{
											"begin": 7572,
											"end": 7573,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 7565,
											"end": 7580,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 7596,
											"end": 7597,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7589,
											"end": 7604,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"LBPairImplementation()": "509ceb90",
							"MAX_FEE()": "bc063e1a",
							"addQuoteAsset(address)": "5a440923",
							"allLBPairs(uint256)": "72e47b8c",
							"becomeOwner()": "f9dca989",
							"createLBPair(address,address,uint24)": "02e48ce2",
							"creationUnlocked()": "5c779d6d",
							"feeRecipient()": "46904840",
							"flashLoanFee()": "4847cdc8",
							"getLBPairInformation(address,address)": "eaec42a4",
							"getNumberOfLBPairs()": "4e937c3a",
							"getNumberOfQuoteAssets()": "80c5061e",
							"getQuoteAsset(uint256)": "f89a4cd5",
							"isQuoteAsset(address)": "27721842",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"removeQuoteAsset(address)": "ddbfd941",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setFactoryLockedState(bool)": "22f3fe14",
							"setFeeRecipient(address)": "e74b981b",
							"setLBPairImplementation(address)": "b0384781",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BinHelper__IdOverflows\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LBFactory__AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LBFactory__FactoryLockIsAlreadyInTheSameState\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LBFactory__FunctionIsLockedForUsers\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"LBFactory__IdenticalAddresses\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LBFactory__ImplementationNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_binStep\",\"type\":\"uint256\"}],\"name\":\"LBFactory__LBPairAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBFactory__LBPairSafetyCheckFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"LBFactory__QuoteAssetAlreadyWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"LBFactory__QuoteAssetNotWhitelisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"LBFactory__SameFeeRecipient\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBFactory__SameImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"Math128x128__PowerUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NoPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__PendingOwnerAlreadySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"name\":\"FactoryLockedStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"}],\"name\":\"FeeParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFlashLoanFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFee\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"LBPairCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"ignored\",\"type\":\"bool\"}],\"name\":\"LBPairIgnoredStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLBPairImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBPairImplementationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sampleLifetime\",\"type\":\"uint256\"}],\"name\":\"PresetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LBPairImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_quoteAsset\",\"type\":\"address\"}],\"name\":\"addQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allLBPairs\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenY\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_activeId\",\"type\":\"uint24\"}],\"name\":\"createLBPair\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"_LBPair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"name\":\"getLBPairInformation\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"createdByOwner\",\"type\":\"bool\"}],\"internalType\":\"struct ILBFactory.LBPairInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfLBPairs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfQuoteAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getQuoteAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isQuoteAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_quoteAsset\",\"type\":\"address\"}],\"name\":\"removeQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_locked\",\"type\":\"bool\"}],\"name\":\"setFactoryLockedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LBPairImplementation\",\"type\":\"address\"}],\"name\":\"setLBPairImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"addQuoteAsset(address)\":{\"params\":{\"_quoteAsset\":\"The quote asset (e.g: AVAX, USDC...)\"}},\"constructor\":{\"params\":{\"_feeRecipient\":\"The address of the fee recipient\"}},\"createLBPair(address,address,uint24)\":{\"params\":{\"_activeId\":\"The active id of the pair\",\"_tokenX\":\"The address of the first token\",\"_tokenY\":\"The address of the second token\"},\"returns\":{\"_LBPair\":\"The address of the newly created LBPair\"}},\"getLBPairInformation(address,address)\":{\"params\":{\"_tokenA\":\"The address of the first token of the pair\",\"_tokenB\":\"The address of the second token of the pair\"},\"returns\":{\"_0\":\"The LBPairInformation\"}},\"getNumberOfLBPairs()\":{\"returns\":{\"_0\":\"The number of LBPair\"}},\"getNumberOfQuoteAssets()\":{\"returns\":{\"_0\":\"The number of quote assets\"}},\"getQuoteAsset(uint256)\":{\"params\":{\"_index\":\"The index\"},\"returns\":{\"_0\":\"The address of the _quoteAsset at index `index`\"}},\"isQuoteAsset(address)\":{\"params\":{\"_token\":\"The address of the asset\"},\"returns\":{\"_0\":\"Whether the token is a quote asset or not\"}},\"owner()\":{\"returns\":{\"_0\":\"The address of the current owner\"}},\"pendingOwner()\":{\"returns\":{\"_0\":\"The address of the current pending owner\"}},\"removeQuoteAsset(address)\":{\"params\":{\"_quoteAsset\":\"The quote asset (e.g: AVAX, USDC...)\"}},\"setFactoryLockedState(bool)\":{\"params\":{\"_locked\":\"If the creation is restricted (true) or not (false)\"}},\"setFeeRecipient(address)\":{\"params\":{\"_feeRecipient\":\"The address of the recipient\"}},\"setLBPairImplementation(address)\":{\"details\":\"Needs to be called by the owner\",\"params\":{\"_LBPairImplementation\":\"The address of the implementation\"}}},\"stateVariables\":{\"_LBPairsInfo\":{\"details\":\"Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens\"},\"_availablePresets\":{\"details\":\"Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas\"}},\"title\":\"Liquidity Book Factory\",\"version\":1},\"userdoc\":{\"errors\":{\"LBFactory__IdenticalAddresses(address)\":[{\"notice\":\"LBFactory errors \"}],\"Math128x128__PowerUnderflow(uint256,int256)\":[{\"notice\":\"Math128x128 errors \"}],\"PendingOwnable__NotOwner()\":[{\"notice\":\"PendingOwnable errors \"}]},\"kind\":\"user\",\"methods\":{\"addQuoteAsset(address)\":{\"notice\":\"Function to add an asset to the whitelist of quote assets\"},\"becomeOwner()\":{\"notice\":\"Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner\"},\"constructor\":{\"notice\":\"Constructor\"},\"createLBPair(address,address,uint24)\":{\"notice\":\"Create a liquidity bin LBPair for _tokenX and _tokenY\"},\"creationUnlocked()\":{\"notice\":\"Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)\"},\"getLBPairInformation(address,address)\":{\"notice\":\"Returns the LBPairInformation if it exists, if not, then the address 0 is returned. The order doesn't matter\"},\"getNumberOfLBPairs()\":{\"notice\":\"View function to return the number of LBPairs created\"},\"getNumberOfQuoteAssets()\":{\"notice\":\"View function to return the number of quote assets whitelisted\"},\"getQuoteAsset(uint256)\":{\"notice\":\"View function to return the quote asset whitelisted at index `index`\"},\"isQuoteAsset(address)\":{\"notice\":\"View function to return whether a token is a quotedAsset (true) or not (false)\"},\"owner()\":{\"notice\":\"Returns the address of the current owner\"},\"pendingOwner()\":{\"notice\":\"Returns the address of the current pending owner\"},\"removeQuoteAsset(address)\":{\"notice\":\"Function to remove an asset from the whitelist of quote assets\"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokePendingOwner()\":{\"notice\":\"Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner\"},\"setFactoryLockedState(bool)\":{\"notice\":\"Function to set the creation restriction of the Factory\"},\"setFeeRecipient(address)\":{\"notice\":\"Function to set the recipient of the fees. This address needs to be able to receive ERC20s\"},\"setLBPairImplementation(address)\":{\"notice\":\"Set the LBPair implementation address\"},\"setPendingOwner(address)\":{\"notice\":\"Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}\"}},\"notice\":\"Contract used to deploy and register new LBPairs. Enables setting fee parameters, flashloan fees and LBPair implementation. Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/LBFactory.sol\":\"LBFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/LBFactory.sol\":{\"keccak256\":\"0x2844abb26dcfa979a5071ef5e35d9628cc52025c6957026c64c49181ed3ade57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1077412eebaa597e6add28d219cb719b18f3d53f28fdef8195eebe7da1a97c0\",\"dweb:/ipfs/QmWUuaLmPJF6fXtEdizuuRQ4qtSjxWUvJf8TMBeh37Rit5\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/BinHelper.sol\":{\"keccak256\":\"0xe364497f7c55d363711aea744090c9e6e0270a62b6a350074f3db9d9b7f13aec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38ca88d51bbef9b3b26b629af0df9c9572599d6f6d8dfdf2111f4626b34a49f9\",\"dweb:/ipfs/QmamJBBBqh4D3LNg3cJLaiJdryMjfa8LTVuMPR2iwvpe81\"]},\"joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/Decoder.sol\":{\"keccak256\":\"0xe12ecacbd1d520251a148fb671f682fac728e48ec3e7bfcfdd8f9765fe2b5e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e63ed2ea395acf3a99ef623c94740ebf4b1b2fff1913b6cff3b305950862210\",\"dweb:/ipfs/QmfPcMVaAwJ7nGhhgpNg7bxXHPKPi4NeShtzuy1wX8n9MZ\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/Math128x128.sol\":{\"keccak256\":\"0x33202d8738fe0334bff67f2ad4568f2669ef00b86ad252803a217cd9a913921f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e32450665cc7ae8c0b9907ea0451dbe5ea29aea21f3967ccb764729d54bff30\",\"dweb:/ipfs/QmPh5GkHYYCqf2328usjFpGi3BLKgKakjsFHBKjp7regK1\"]},\"joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"joe-v2-main/src/libraries/PendingOwnable.sol\":{\"keccak256\":\"0x6799fef60252b959af4ecd5b7caebe67e227c90c35d4e23a2c44544579df4c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51ed31c79d3108fba21d2af4c39113d3f1dea711570c6945c9e53d04a776054\",\"dweb:/ipfs/QmVg1jaA3Jt9H28BZNytmxxdNo8soSBCD3NSvphzKdNDaD\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3719,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3721,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1346,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "LBPairImplementation",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1349,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1353,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "creationUnlocked",
								"offset": 20,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 1356,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "flashLoanFee",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1361,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "allLBPairs",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_contract(ILBPair)2398)dyn_storage"
							},
							{
								"astId": 1371,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_LBPairsInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_contract(IERC20)157,t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1905_storage))"
							},
							{
								"astId": 1374,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_availablePresets",
								"offset": 0,
								"slot": "7",
								"type": "t_bytes32"
							},
							{
								"astId": 1378,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_presets",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_bytes32)"
							},
							{
								"astId": 1381,
								"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
								"label": "_quoteAssetWhitelist",
								"offset": 0,
								"slot": "9",
								"type": "t_struct(AddressSet)483_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_contract(ILBPair)2398)dyn_storage": {
								"base": "t_contract(ILBPair)2398",
								"encoding": "dynamic_array",
								"label": "contract ILBPair[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)157": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ILBPair)2398": {
								"encoding": "inplace",
								"label": "contract ILBPair",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_contract(IERC20)157,t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1905_storage))": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)157",
								"label": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1905_storage)"
							},
							"t_mapping(t_contract(IERC20)157,t_struct(LBPairInformation)1905_storage)": {
								"encoding": "mapping",
								"key": "t_contract(IERC20)157",
								"label": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation)",
								"numberOfBytes": "32",
								"value": "t_struct(LBPairInformation)1905_storage"
							},
							"t_mapping(t_uint256,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_struct(AddressSet)483_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 482,
										"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)168_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(LBPairInformation)1905_storage": {
								"encoding": "inplace",
								"label": "struct ILBFactory.LBPairInformation",
								"members": [
									{
										"astId": 1902,
										"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "LBPair",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(ILBPair)2398"
									},
									{
										"astId": 1904,
										"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "createdByOwner",
										"offset": 20,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Set)168_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 163,
										"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 167,
										"contract": "joe-v2-main/src/LBFactory.sol:LBFactory",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"LBFactory__IdenticalAddresses(address)": [
								{
									"notice": "LBFactory errors "
								}
							],
							"Math128x128__PowerUnderflow(uint256,int256)": [
								{
									"notice": "Math128x128 errors "
								}
							],
							"PendingOwnable__NotOwner()": [
								{
									"notice": "PendingOwnable errors "
								}
							]
						},
						"kind": "user",
						"methods": {
							"addQuoteAsset(address)": {
								"notice": "Function to add an asset to the whitelist of quote assets"
							},
							"becomeOwner()": {
								"notice": "Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner"
							},
							"constructor": {
								"notice": "Constructor"
							},
							"createLBPair(address,address,uint24)": {
								"notice": "Create a liquidity bin LBPair for _tokenX and _tokenY"
							},
							"creationUnlocked()": {
								"notice": "Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)"
							},
							"getLBPairInformation(address,address)": {
								"notice": "Returns the LBPairInformation if it exists, if not, then the address 0 is returned. The order doesn't matter"
							},
							"getNumberOfLBPairs()": {
								"notice": "View function to return the number of LBPairs created"
							},
							"getNumberOfQuoteAssets()": {
								"notice": "View function to return the number of quote assets whitelisted"
							},
							"getQuoteAsset(uint256)": {
								"notice": "View function to return the quote asset whitelisted at index `index`"
							},
							"isQuoteAsset(address)": {
								"notice": "View function to return whether a token is a quotedAsset (true) or not (false)"
							},
							"owner()": {
								"notice": "Returns the address of the current owner"
							},
							"pendingOwner()": {
								"notice": "Returns the address of the current pending owner"
							},
							"removeQuoteAsset(address)": {
								"notice": "Function to remove an asset from the whitelist of quote assets"
							},
							"renounceOwnership()": {
								"notice": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"revokePendingOwner()": {
								"notice": "Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner"
							},
							"setFactoryLockedState(bool)": {
								"notice": "Function to set the creation restriction of the Factory"
							},
							"setFeeRecipient(address)": {
								"notice": "Function to set the recipient of the fees. This address needs to be able to receive ERC20s"
							},
							"setLBPairImplementation(address)": {
								"notice": "Set the LBPair implementation address"
							},
							"setPendingOwner(address)": {
								"notice": "Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}"
							}
						},
						"notice": "Contract used to deploy and register new LBPairs. Enables setting fee parameters, flashloan fees and LBPair implementation. Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs.",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/interfaces/ILBFactory.sol": {
				"ILBFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"name": "FactoryLockedStatusUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								}
							],
							"name": "FeeParametersSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldRecipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFlashLoanFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFlashLoanFee",
									"type": "uint256"
								}
							],
							"name": "FlashLoanFeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								}
							],
							"name": "LBPairCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract ILBPair",
									"name": "LBPair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "ignored",
									"type": "bool"
								}
							],
							"name": "LBPairIgnoredStateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldLBPairImplementation",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "LBPairImplementationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PresetRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "baseFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "filterPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decayPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reductionFactor",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "variableFeeControl",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "protocolShare",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxVolatilityAccumulated",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "sampleLifetime",
									"type": "uint256"
								}
							],
							"name": "PresetSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "QuoteAssetRemoved",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "LBPairImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "addQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "allLBPairs",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "activeId",
									"type": "uint24"
								}
							],
							"name": "createLBPair",
							"outputs": [
								{
									"internalType": "contract ILBPair",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creationUnlocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flashLoanFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								}
							],
							"name": "getLBPairInformation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract ILBPair",
											"name": "LBPair",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "createdByOwner",
											"type": "bool"
										}
									],
									"internalType": "struct ILBFactory.LBPairInformation",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfLBPairs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfQuoteAssets",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getQuoteAsset",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isQuoteAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "quoteAsset",
									"type": "address"
								}
							],
							"name": "removeQuoteAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "locked",
									"type": "bool"
								}
							],
							"name": "setFactoryLockedState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "feeRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "LBPairImplementation",
									"type": "address"
								}
							],
							"name": "setLBPairImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Factory Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"LBPairImplementation()": "509ceb90",
							"MAX_FEE()": "bc063e1a",
							"addQuoteAsset(address)": "5a440923",
							"allLBPairs(uint256)": "72e47b8c",
							"becomeOwner()": "f9dca989",
							"createLBPair(address,address,uint24)": "02e48ce2",
							"creationUnlocked()": "5c779d6d",
							"feeRecipient()": "46904840",
							"flashLoanFee()": "4847cdc8",
							"getLBPairInformation(address,address)": "eaec42a4",
							"getNumberOfLBPairs()": "4e937c3a",
							"getNumberOfQuoteAssets()": "80c5061e",
							"getQuoteAsset(uint256)": "f89a4cd5",
							"isQuoteAsset(address)": "27721842",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"removeQuoteAsset(address)": "ddbfd941",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setFactoryLockedState(bool)": "22f3fe14",
							"setFeeRecipient(address)": "e74b981b",
							"setLBPairImplementation(address)": "b0384781",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"name\":\"FactoryLockedStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"}],\"name\":\"FeeParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFlashLoanFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFlashLoanFee\",\"type\":\"uint256\"}],\"name\":\"FlashLoanFeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"LBPairCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"ignored\",\"type\":\"bool\"}],\"name\":\"LBPairIgnoredStateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLBPairImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"LBPairImplementationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PresetRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filterPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decayPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reductionFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableFeeControl\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolShare\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxVolatilityAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sampleLifetime\",\"type\":\"uint256\"}],\"name\":\"PresetSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"QuoteAssetRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LBPairImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"addQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"allLBPairs\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"}],\"name\":\"createLBPair\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creationUnlocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"}],\"name\":\"getLBPairInformation\",\"outputs\":[{\"components\":[{\"internalType\":\"contract ILBPair\",\"name\":\"LBPair\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"createdByOwner\",\"type\":\"bool\"}],\"internalType\":\"struct ILBFactory.LBPairInformation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfLBPairs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfQuoteAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getQuoteAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isQuoteAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"quoteAsset\",\"type\":\"address\"}],\"name\":\"removeQuoteAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setFactoryLockedState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"LBPairImplementation\",\"type\":\"address\"}],\"name\":\"setLBPairImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Factory Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface of LBFactory contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/interfaces/ILBFactory.sol\":\"ILBFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface of LBFactory contract",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol": {
				"ILBFlashLoanCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "LBFlashLoanCallback",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Flashloan Callback Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"LBFlashLoanCallback(address,address,uint256,uint256,bytes)": "5dbacec5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"LBFlashLoanCallback\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Flashloan Callback Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface to interact with LB flash loans\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":\"ILBFlashLoanCallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface to interact with LB flash loans",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/interfaces/ILBPair.sol": {
				"ILBPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feesX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feesY",
									"type": "uint256"
								}
							],
							"name": "CompositionFee",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "DepositedToBin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "FeesCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousSize",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newSize",
									"type": "uint256"
								}
							],
							"name": "OracleSizeIncreased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "ProtocolFeesCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "swapForY",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fees",
									"type": "uint256"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "WithdrawnFromBin",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "collectFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collectProtocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amountY",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract ILBFactory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeParameters",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint128",
											"name": "rate",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "protocolShare",
											"type": "uint128"
										}
									],
									"internalType": "struct FeeHelper.FeeParameters",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "id_",
									"type": "uint24"
								},
								{
									"internalType": "bool",
									"name": "sentTokenY",
									"type": "bool"
								}
							],
							"name": "findFirstNonEmptyBinId",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "id",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "id",
									"type": "uint24"
								}
							],
							"name": "getBin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserveX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveY",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGlobalFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "feesYTotal",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "feesYProtocol",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReservesAndId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reserveX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "activeId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "tokenX",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenY",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "activeId",
									"type": "uint24"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "distributionX",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "distributionY",
									"type": "uint256[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountXAddedToPair",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountYAddedToPair",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "liquidityMinted",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "pendingFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "sentTokenY",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountXOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountYOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenX",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenY",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Pair Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256[],uint256[],address)": "0acd451d",
							"collectFees(address,uint256[])": "225b20b9",
							"collectProtocolFees()": "a1af5b9a",
							"factory()": "c45a0155",
							"feeParameters()": "98c7adf3",
							"findFirstNonEmptyBinId(uint24,bool)": "8f919a83",
							"getBin(uint24)": "0abe9688",
							"getGlobalFees()": "a582cdaa",
							"getReservesAndId()": "1b05b83e",
							"initialize(address,address,uint24)": "336c8d70",
							"mint(uint256[],uint256[],uint256[],address)": "714c8592",
							"pendingFees(address,uint256[])": "f7cff1f8",
							"swap(bool,address)": "53c059a0",
							"tokenX()": "16dc165b",
							"tokenY()": "b7d19fc4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feesY\",\"type\":\"uint256\"}],\"name\":\"CompositionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"DepositedToBin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"FeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSize\",\"type\":\"uint256\"}],\"name\":\"OracleSizeIncreased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"swapForY\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"WithdrawnFromBin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"collectFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountY\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract ILBFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeParameters\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"rate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"protocolShare\",\"type\":\"uint128\"}],\"internalType\":\"struct FeeHelper.FeeParameters\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"id_\",\"type\":\"uint24\"},{\"internalType\":\"bool\",\"name\":\"sentTokenY\",\"type\":\"bool\"}],\"name\":\"findFirstNonEmptyBinId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"id\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"id\",\"type\":\"uint24\"}],\"name\":\"getBin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveY\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"feesYTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"feesYProtocol\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesAndId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reserveX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"activeId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenX\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenY\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"distributionX\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"distributionY\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountXAddedToPair\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountYAddedToPair\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"liquidityMinted\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"pendingFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"sentTokenY\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountXOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountYOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenY\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Pair Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface of LBPair contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/interfaces/ILBPair.sol\":\"ILBPair\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface of LBPair contract",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/interfaces/IPendingOwnable.sol": {
				"IPendingOwnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Pending Ownable Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"becomeOwner()": "f9dca989",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Pending Ownable Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Required interface of Pending Ownable contract used for LBFactory\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":\"IPendingOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Required interface of Pending Ownable contract used for LBFactory",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/BinHelper.sol": {
				"BinHelper": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Bin Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/BinHelper.sol\":243:2202  library BinHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/BinHelper.sol\":243:2202  library BinHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c5bfe7b9d6ed38ff95112da597d425813be2b376d92721a32aa497f441313f4764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5bfe7b9d6ed38ff95112da597d425813be2b376d92721a32aa497f441313f4764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xBF 0xE7 0xB9 0xD6 0xED CODESIZE SELFDESTRUCT SWAP6 GT 0x2D 0xA5 SWAP8 0xD4 0x25 DUP2 EXTCODESIZE 0xE2 0xB3 PUSH23 0xD92721A32AA497F441313F4764736F6C634300080A0033 ",
							"sourceMap": "243:1959:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;243:1959:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5bfe7b9d6ed38ff95112da597d425813be2b376d92721a32aa497f441313f4764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xBF 0xE7 0xB9 0xD6 0xED CODESIZE SELFDESTRUCT SWAP6 GT 0x2D 0xA5 SWAP8 0xD4 0x25 DUP2 EXTCODESIZE 0xE2 0xB3 PUSH23 0xD92721A32AA497F441313F4764736F6C634300080A0033 ",
							"sourceMap": "243:1959:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_getBPValue()": "infinite",
								"getIdFromPrice(uint256)": "infinite",
								"getPriceFromId(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 243,
									"end": 2202,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5bfe7b9d6ed38ff95112da597d425813be2b376d92721a32aa497f441313f4764736f6c634300080a0033",
									".code": [
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 243,
											"end": 2202,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Bin Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract used to convert bin ID to price and back\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/BinHelper.sol\":\"BinHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/BinHelper.sol\":{\"keccak256\":\"0xe364497f7c55d363711aea744090c9e6e0270a62b6a350074f3db9d9b7f13aec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38ca88d51bbef9b3b26b629af0df9c9572599d6f6d8dfdf2111f4626b34a49f9\",\"dweb:/ipfs/QmamJBBBqh4D3LNg3cJLaiJdryMjfa8LTVuMPR2iwvpe81\"]},\"joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/Math128x128.sol\":{\"keccak256\":\"0x33202d8738fe0334bff67f2ad4568f2669ef00b86ad252803a217cd9a913921f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e32450665cc7ae8c0b9907ea0451dbe5ea29aea21f3967ccb764729d54bff30\",\"dweb:/ipfs/QmPh5GkHYYCqf2328usjFpGi3BLKgKakjsFHBKjp7regK1\"]},\"joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contract used to convert bin ID to price and back",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Bit Math Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/BitMath.sol\":178:4698  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/BitMath.sol\":178:4698  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220617b78b4dc61e96e238dca7378b03e7f513d784ace7c35ec580a286755a4490964736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220617b78b4dc61e96e238dca7378b03e7f513d784ace7c35ec580a286755a4490964736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x7B78 0xB4 0xDC PUSH2 0xE96E 0x23 DUP14 0xCA PUSH20 0x78B03E7F513D784ACE7C35EC580A286755A44909 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "178:4520:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;178:4520:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220617b78b4dc61e96e238dca7378b03e7f513d784ace7c35ec580a286755a4490964736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x7B78 0xB4 0xDC PUSH2 0xE96E 0x23 DUP14 0xCA PUSH20 0x78B03E7F513D784ACE7C35EC580A286755A44909 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "178:4520:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"closestBit(uint256,uint8,bool)": "infinite",
								"closestBitLeft(uint256,uint8)": "infinite",
								"closestBitRight(uint256,uint8)": "infinite",
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite",
								"significantBit(uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 178,
									"end": 4698,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220617b78b4dc61e96e238dca7378b03e7f513d784ace7c35ec580a286755a4490964736f6c634300080a0033",
									".code": [
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 178,
											"end": 4698,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Bit Math Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for bit calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for bit calculations",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/Constants.sol": {
				"Constants": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"CALLBACK_SUCCESS": {
								"details": "The expected return after a successful flash loan"
							}
						},
						"title": "Liquidity Book Constants Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/Constants.sol\":183:576  library Constants {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/Constants.sol\":183:576  library Constants {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122066474e3d74dbc56b8621fa22b78c2a65c25c5bb18caa7fea6cf93d0d063b777a64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066474e3d74dbc56b8621fa22b78c2a65c25c5bb18caa7fea6cf93d0d063b777a64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x474E3D74DBC56B DUP7 0x21 STATICCALL 0x22 0xB7 DUP13 0x2A PUSH6 0xC25C5BB18CAA PUSH32 0xEA6CF93D0D063B777A64736F6C634300080A0033000000000000000000000000 ",
							"sourceMap": "183:393:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;183:393:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122066474e3d74dbc56b8621fa22b78c2a65c25c5bb18caa7fea6cf93d0d063b777a64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x474E3D74DBC56B DUP7 0x21 STATICCALL 0x22 0xB7 DUP13 0x2A PUSH6 0xC25C5BB18CAA PUSH32 0xEA6CF93D0D063B777A64736F6C634300080A0033000000000000000000000000 ",
							"sourceMap": "183:393:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 183,
									"end": 576,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066474e3d74dbc56b8621fa22b78c2a65c25c5bb18caa7fea6cf93d0d063b777a64736f6c634300080a0033",
									".code": [
										{
											"begin": 183,
											"end": 576,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 576,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 183,
											"end": 576,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"CALLBACK_SUCCESS\":{\"details\":\"The expected return after a successful flash loan\"}},\"title\":\"Liquidity Book Constants Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Set of constants for Liquidity Book contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Set of constants for Liquidity Book contracts",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/Decoder.sol": {
				"Decoder": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Decoder Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/Decoder.sol\":184:708  library Decoder {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/Decoder.sol\":184:708  library Decoder {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205ee3d1e1a51020ad51d9e20ee7da10de2c768369b995b7fee15bcbeb3000da7864736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ee3d1e1a51020ad51d9e20ee7da10de2c768369b995b7fee15bcbeb3000da7864736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xE3 0xD1 0xE1 0xA5 LT KECCAK256 0xAD MLOAD 0xD9 0xE2 0xE 0xE7 0xDA LT 0xDE 0x2C PUSH23 0x8369B995B7FEE15BCBEB3000DA7864736F6C634300080A STOP CALLER ",
							"sourceMap": "184:524:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;184:524:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ee3d1e1a51020ad51d9e20ee7da10de2c768369b995b7fee15bcbeb3000da7864736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xE3 0xD1 0xE1 0xA5 LT KECCAK256 0xAD MLOAD 0xD9 0xE2 0xE 0xE7 0xDA LT 0xDE 0x2C PUSH23 0x8369B995B7FEE15BCBEB3000DA7864736F6C634300080A STOP CALLER ",
							"sourceMap": "184:524:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"decode(bytes32,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 184,
									"end": 708,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ee3d1e1a51020ad51d9e20ee7da10de2c768369b995b7fee15bcbeb3000da7864736f6c634300080a0033",
									".code": [
										{
											"begin": 184,
											"end": 708,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 184,
											"end": 708,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 184,
											"end": 708,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 184,
											"end": 708,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 184,
											"end": 708,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Decoder Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for decoding bytes32 sample\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/Decoder.sol\":\"Decoder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"joe-v2-main/src/libraries/Decoder.sol\":{\"keccak256\":\"0xe12ecacbd1d520251a148fb671f682fac728e48ec3e7bfcfdd8f9765fe2b5e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e63ed2ea395acf3a99ef623c94740ebf4b1b2fff1913b6cff3b305950862210\",\"dweb:/ipfs/QmfPcMVaAwJ7nGhhgpNg7bxXHPKPi4NeShtzuy1wX8n9MZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for decoding bytes32 sample",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/FeeHelper.sol": {
				"FeeHelper": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Fee Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/FeeHelper.sol\":257:3516  library FeeHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/FeeHelper.sol\":257:3516  library FeeHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c2bd05019c2a6a50ff7c91a8be520a5a8e1cf5d7b327bffcbeec7161533d9cb564736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2bd05019c2a6a50ff7c91a8be520a5a8e1cf5d7b327bffcbeec7161533d9cb564736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xBD SDIV ADD SWAP13 0x2A PUSH11 0x50FF7C91A8BE520A5A8E1C CREATE2 0xD7 0xB3 0x27 0xBF 0xFC 0xBE 0xEC PUSH18 0x61533D9CB564736F6C634300080A00330000 ",
							"sourceMap": "257:3259:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;257:3259:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c2bd05019c2a6a50ff7c91a8be520a5a8e1cf5d7b327bffcbeec7161533d9cb564736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xBD SDIV ADD SWAP13 0x2A PUSH11 0x50FF7C91A8BE520A5A8E1C CREATE2 0xD7 0xB3 0x27 0xBF 0xFC 0xBE 0xEC PUSH18 0x61533D9CB564736F6C634300080A00330000 ",
							"sourceMap": "257:3259:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getFeeAmount(struct FeeHelper.FeeParameters memory,uint256)": "infinite",
								"getFeeAmountDistribution(struct FeeHelper.FeeParameters memory,uint256)": "infinite",
								"getFeeAmountFrom(struct FeeHelper.FeeParameters memory,uint256)": "infinite",
								"getTotalFee(struct FeeHelper.FeeParameters memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 257,
									"end": 3516,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2bd05019c2a6a50ff7c91a8be520a5a8e1cf5d7b327bffcbeec7161533d9cb564736f6c634300080a0033",
									".code": [
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 257,
											"end": 3516,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Fee Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for fees calculation\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/FeeHelper.sol\":\"FeeHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for fees calculation",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/Math128x128.sol": {
				"Math128x128": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Math Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/Math128x128.sol\":296:8096  library Math128x128 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/Math128x128.sol\":296:8096  library Math128x128 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206942acf827fbedf5729de20f61320423a13b350bee2364adafe67662c8cce6e964736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206942acf827fbedf5729de20f61320423a13b350bee2364adafe67662c8cce6e964736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x42ACF827FBEDF5729DE2 0xF PUSH2 0x3204 0x23 LOG1 EXTCODESIZE CALLDATALOAD SIGNEXTEND 0xEE 0x23 PUSH5 0xADAFE67662 0xC8 0xCC 0xE6 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "296:7800:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;296:7800:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206942acf827fbedf5729de20f61320423a13b350bee2364adafe67662c8cce6e964736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x42ACF827FBEDF5729DE2 0xF PUSH2 0x3204 0x23 LOG1 EXTCODESIZE CALLDATALOAD SIGNEXTEND 0xEE 0x23 PUSH5 0xADAFE67662 0xC8 0xCC 0xE6 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "296:7800:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"log2(uint256)": "infinite",
								"power(uint256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 296,
									"end": 8096,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206942acf827fbedf5729de20f61320423a13b350bee2364adafe67662c8cce6e964736f6c634300080a0033",
									".code": [
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 296,
											"end": 8096,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Math Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for power and log calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/Math128x128.sol\":\"Math128x128\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/Math128x128.sol\":{\"keccak256\":\"0x33202d8738fe0334bff67f2ad4568f2669ef00b86ad252803a217cd9a913921f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e32450665cc7ae8c0b9907ea0451dbe5ea29aea21f3967ccb764729d54bff30\",\"dweb:/ipfs/QmPh5GkHYYCqf2328usjFpGi3BLKgKakjsFHBKjp7regK1\"]},\"joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for power and log calculations",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/Math512Bits.sol": {
				"Math512Bits": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Math Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/Math512Bits.sol\":243:10227  library Math512Bits {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/Math512Bits.sol\":243:10227  library Math512Bits {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c8f8353f7863cb6595bc227f837c1c6de10168506c69a76dcbcb5a6111b021c64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c8f8353f7863cb6595bc227f837c1c6de10168506c69a76dcbcb5a6111b021c64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DUP16 DUP4 MSTORE8 0xF7 DUP7 EXTCODECOPY 0xB6 MSIZE JUMPDEST 0xC2 0x27 0xF8 CALLDATACOPY 0xC1 0xC6 0xDE LT AND DUP6 MOD 0xC6 SWAP11 PUSH23 0xDCBCB5A6111B021C64736F6C634300080A003300000000 ",
							"sourceMap": "243:9984:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;243:9984:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c8f8353f7863cb6595bc227f837c1c6de10168506c69a76dcbcb5a6111b021c64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DUP16 DUP4 MSTORE8 0xF7 DUP7 EXTCODECOPY 0xB6 MSIZE JUMPDEST 0xC2 0x27 0xF8 CALLDATACOPY 0xC1 0xC6 0xDE LT AND DUP6 MOD 0xC6 SWAP11 PUSH23 0xDCBCB5A6111B021C64736F6C634300080A003300000000 ",
							"sourceMap": "243:9984:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_getEndOfDivRoundDown(uint256,uint256,uint256,uint256,uint256)": "infinite",
								"_getMulProds(uint256,uint256)": "infinite",
								"mulDivRoundDown(uint256,uint256,uint256)": "infinite",
								"mulShiftRoundDown(uint256,uint256,uint256)": "infinite",
								"mulShiftRoundUp(uint256,uint256,uint256)": "infinite",
								"shiftDivRoundDown(uint256,uint256,uint256)": "infinite",
								"shiftDivRoundUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 243,
									"end": 10227,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c8f8353f7863cb6595bc227f837c1c6de10168506c69a76dcbcb5a6111b021c64736f6c634300080a0033",
									".code": [
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 243,
											"end": 10227,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Math Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for full precision calculations\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/Math512Bits.sol\":\"Math512Bits\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/BitMath.sol\":{\"keccak256\":\"0xf6a2d3055de0fa5f3ba8791901f7694a40dbfca7d6a447a17c70993325fc02f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b551bc04ac6e4c6848d48bc83b941d5a2950ffe5a5cd57f8e42d66e82d1c1084\",\"dweb:/ipfs/QmZb8SGo4e3eiqrB62r1A4Txx3zMMZJtSavEXAcvbovL9J\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/Math512Bits.sol\":{\"keccak256\":\"0x2a00e56dc0280a311b6c750dcd753a67cf0e67dc27a18b6ac531773275d7e389\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5dac5d5f31b457992dadc950b1a00019360c0a8999e6b49533d1f45fa4a4f9f\",\"dweb:/ipfs/QmbahMDjLC33HNSciBSJDta4TBHokJfyDvAhnWDRem4dzm\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for full precision calculations",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/PendingOwnable.sol": {
				"PendingOwnable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__AddressZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NoPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__NotPendingOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PendingOwnable__PendingOwnerAlreadySet",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"name": "PendingOwnerSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "becomeOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "revokePendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "pendingOwner_",
									"type": "address"
								}
							],
							"name": "setPendingOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "The address of the current owner"
								}
							},
							"pendingOwner()": {
								"returns": {
									"_0": "The address of the current pending owner"
								}
							}
						},
						"title": "Pending Ownable",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1628:1689  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  tag_4\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1671:1681  msg.sender */\n  caller\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1670  _transferOwnership */\n  tag_5\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1652:1682  _transferOwnership(msg.sender) */\n  jump\t// in\ntag_4:\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\n  jump(tag_6)\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\ntag_5:\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n  0x00\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup1\n  dup5\n  and\n  dup3\n  or\n  dup6\n  sstore\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  0x01\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  sstore\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  mload(0x40)\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n  swap1\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n  log3\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n  pop\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1007:4376  contract PendingOwnable is IPendingOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc42069ec\n      gt\n      tag_9\n      jumpi\n      dup1\n      0xc42069ec\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf9dca989\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup1\n      0x67ab8a4e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_3:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_4:\n      tag_10\n      tag_13\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n    tag_5:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1848:1855  address */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1874:1880  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n    tag_14:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:233   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1801:1887  function owner() public view override returns (address) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_6:\n      tag_10\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n    tag_7:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2095:2108  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2015:2115  function pendingOwner() public view override returns (address) {... */\n      jump(tag_14)\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_8:\n      tag_10\n      tag_26\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n    tag_11:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_28\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_28:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2811:2824  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n      tag_30\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2847:2879  PendingOwnable__NoPendingOwner() */\n      mload(0x40)\n      0xecfad6bf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2807:2879  if (_pendingOwner == address(0)) revert PendingOwnable__NoPendingOwner() */\n    tag_30:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      tag_31\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2914:2915  0 */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2905  _setPendingOwner */\n      tag_32\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2889:2917  _setPendingOwner(address(0)) */\n      jump\t// in\n    tag_31:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2741:2924  function revokePendingOwner() public override onlyOwner {... */\n      jump\t// out\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3489:3591  function renounceOwnership() public override onlyOwner {... */\n    tag_13:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_34\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_34:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      tag_31\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3581:3582  0 */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3572  _transferOwnership */\n      tag_37\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3554:3584  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n    tag_21:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1239:1245  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1235  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1225:1245  msg.sender != _owner */\n      eq\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n      tag_40\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1254:1280  PendingOwnable__NotOwner() */\n      mload(0x40)\n      shl(0xe0, 0x9f216c13)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1221:1280  if (msg.sender != _owner) revert PendingOwnable__NotOwner() */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2353:2380  pendingOwner_ == address(0) */\n      dup2\n      and\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n      tag_42\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2389:2418  PendingOwnable__AddressZero() */\n      mload(0x40)\n      0x91f3851500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2349:2418  if (pendingOwner_ == address(0)) revert PendingOwnable__AddressZero() */\n    tag_42:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2445  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2432:2459  _pendingOwner != address(0) */\n      iszero\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n      tag_43\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2468:2508  PendingOwnable__PendingOwnerAlreadySet() */\n      mload(0x40)\n      0x716b1fbf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2428:2508  if (_pendingOwner != address(0)) revert PendingOwnable__PendingOwnerAlreadySet() */\n    tag_43:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      tag_44\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2535:2548  pendingOwner_ */\n      dup2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2534  _setPendingOwner */\n      tag_32\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2518:2549  _setPendingOwner(pendingOwner_) */\n      jump\t// in\n    tag_44:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":2265:2556  function setPendingOwner(address pendingOwner_) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3052:3155  function becomeOwner() public override onlyPendingOwner {... */\n    tag_26:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1438:1451  _pendingOwner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1434  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1451  msg.sender != _pendingOwner */\n      eq\n      iszero\n      dup1\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n      tag_47\n      jumpi\n      pop\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1465  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1455:1479  msg.sender == address(0) */\n      iszero\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1424:1479  msg.sender != _pendingOwner || msg.sender == address(0) */\n    tag_47:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n      iszero\n      tag_48\n      jumpi\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1488:1521  PendingOwnable__NotPendingOwner() */\n      mload(0x40)\n      0x7304d01200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":1420:1521  if (msg.sender != _pendingOwner || msg.sender == address(0)) revert PendingOwnable__NotPendingOwner() */\n    tag_48:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      tag_31\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3137:3147  msg.sender */\n      caller\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3136  _transferOwnership */\n      tag_37\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3118:3148  _transferOwnership(msg.sender) */\n      jump\t// in\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n    tag_32:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4306  _pendingOwner */\n      0x01\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4293:4322  _pendingOwner = pendingOwner_ */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4337:4367  PendingOwnerSet(pendingOwner_) */\n      mload(0x40)\n      0x68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f5\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":4217:4374  function _setPendingOwner(address pendingOwner_) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n    tag_37:\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n      0x00\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3898:3916  _owner = _newOwner */\n      dup4\n      dup2\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffff)\n      dup1\n      dup5\n      and\n      dup3\n      or\n      dup6\n      sstore\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      0x01\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3926:3952  _pendingOwner = address(0) */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap1\n      sstore\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      mload(0x40)\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3882:3888  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3862:3879  address _oldOwner */\n      swap1\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3967:4009  OwnershipTransferred(_oldOwner, _newOwner) */\n      log3\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3852:4016  {... */\n      pop\n        /* \"joe-v2-main/src/libraries/PendingOwnable.sol\":3788:4016  function _transferOwnership(address _newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:554   */\n    tag_20:\n        /* \"#utility.yul\":304:310   */\n      0x00\n        /* \"#utility.yul\":357:359   */\n      0x20\n        /* \"#utility.yul\":345:354   */\n      dup3\n        /* \"#utility.yul\":336:343   */\n      dup5\n        /* \"#utility.yul\":332:355   */\n      sub\n        /* \"#utility.yul\":328:360   */\n      slt\n        /* \"#utility.yul\":325:377   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":373:374   */\n      0x00\n        /* \"#utility.yul\":370:371   */\n      dup1\n        /* \"#utility.yul\":363:375   */\n      revert\n        /* \"#utility.yul\":325:377   */\n    tag_56:\n        /* \"#utility.yul\":412:421   */\n      dup2\n        /* \"#utility.yul\":399:422   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":455:460   */\n      dup2\n        /* \"#utility.yul\":451:505   */\n      and\n        /* \"#utility.yul\":444:449   */\n      dup2\n        /* \"#utility.yul\":441:506   */\n      eq\n        /* \"#utility.yul\":431:524   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":520:521   */\n      0x00\n        /* \"#utility.yul\":517:518   */\n      dup1\n        /* \"#utility.yul\":510:522   */\n      revert\n        /* \"#utility.yul\":431:524   */\n    tag_57:\n        /* \"#utility.yul\":543:548   */\n      swap4\n        /* \"#utility.yul\":245:554   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205234a4230249e973941d33a7587ee673bfcae54b0a0ba18f01b5d128209d47f664736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3765": {
									"entryPoint": null,
									"id": 3765,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_3899": {
									"entryPoint": 31,
									"id": 3899,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361001f565b610079565b600080546001600160a01b038381166001600160a01b031980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103c2806100886000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c42069ec11610050578063c42069ec146100b2578063e30c3978146100c5578063f9dca989146100d657600080fd5b806367ab8a4e14610077578063715018a6146100815780638da5cb5b14610089575b600080fd5b61007f6100de565b005b61007f610157565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007f6100c036600461035c565b61018c565b6001546001600160a01b0316610096565b61007f610246565b6000546001600160a01b0316331461010957604051639f216c1360e01b815260040160405180910390fd5b6001546001600160a01b031661014b576040517fecfad6bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610155600061029e565b565b6000546001600160a01b0316331461018257604051639f216c1360e01b815260040160405180910390fd5b61015560006102f5565b6000546001600160a01b031633146101b757604051639f216c1360e01b815260040160405180910390fd5b6001600160a01b0381166101f7576040517f91f3851500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546001600160a01b03161561023a576040517f716b1fbf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102438161029e565b50565b6001546001600160a01b03163314158061025e575033155b15610295576040517f7304d01200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610155336102f5565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f590600090a250565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561036e57600080fd5b81356001600160a01b038116811461038557600080fd5b939250505056fea26469706673582212205234a4230249e973941d33a7587ee673bfcae54b0a0ba18f01b5d128209d47f664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x1F JUMP JUMPDEST PUSH2 0x79 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP1 DUP5 AND DUP3 OR DUP6 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3C2 DUP1 PUSH2 0x88 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC42069EC GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96 JUMP JUMPDEST PUSH2 0x7F PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x0 PUSH2 0x29E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x0 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x23A JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x243 DUP2 PUSH2 0x29E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO DUP1 PUSH2 0x25E JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 CALLER PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP5 AND DUP3 OR DUP6 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CALLVALUE LOG4 0x23 MUL 0x49 0xE9 PUSH20 0x941D33A7587EE673BFCAE54B0A0BA18F01B5D128 KECCAK256 SWAP14 SELFBALANCE 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1007:3369:16:-:0;;;1628:61;;;;;;;;;-1:-1:-1;1652:30:16;1671:10;1652:18;:30::i;:::-;1007:3369;;3788:228;3862:17;3882:6;;-1:-1:-1;;;;;3898:18:16;;;-1:-1:-1;;;;;;3898:18:16;;;;;;;3882:6;3926:26;;;;;;;3967:42;;3882:6;;;;;;;3967:42;;3862:17;3967:42;3852:164;3788:228;:::o;1007:3369::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_setPendingOwner_3914": {
									"entryPoint": 670,
									"id": 3914,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_3899": {
									"entryPoint": 757,
									"id": 3899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@becomeOwner_3857": {
									"entryPoint": 582,
									"id": 3857,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_3775": {
									"entryPoint": null,
									"id": 3775,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_3785": {
									"entryPoint": null,
									"id": 3785,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_3872": {
									"entryPoint": 343,
									"id": 3872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokePendingOwner_3844": {
									"entryPoint": 222,
									"id": 3844,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setPendingOwner_3819": {
									"entryPoint": 396,
									"id": 3819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:556:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:125:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "190:42:19",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:55:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:74:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:74:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:19",
														"type": ""
													}
												],
												"src": "14:226:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "315:239:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "361:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "336:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "345:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "332:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "332:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "357:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "328:32:19"
															},
															"nodeType": "YulIf",
															"src": "325:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "386:36:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "412:9:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "399:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:23:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "390:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "508:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "517:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "520:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "510:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "510:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "510:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "444:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "455:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "462:42:19",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "451:54:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "441:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "441:65:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:73:19"
															},
															"nodeType": "YulIf",
															"src": "431:93:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "533:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "543:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "533:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "281:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "292:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "304:6:19",
														"type": ""
													}
												],
												"src": "245:309:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100725760003560e01c8063c42069ec11610050578063c42069ec146100b2578063e30c3978146100c5578063f9dca989146100d657600080fd5b806367ab8a4e14610077578063715018a6146100815780638da5cb5b14610089575b600080fd5b61007f6100de565b005b61007f610157565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007f6100c036600461035c565b61018c565b6001546001600160a01b0316610096565b61007f610246565b6000546001600160a01b0316331461010957604051639f216c1360e01b815260040160405180910390fd5b6001546001600160a01b031661014b576040517fecfad6bf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610155600061029e565b565b6000546001600160a01b0316331461018257604051639f216c1360e01b815260040160405180910390fd5b61015560006102f5565b6000546001600160a01b031633146101b757604051639f216c1360e01b815260040160405180910390fd5b6001600160a01b0381166101f7576040517f91f3851500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546001600160a01b03161561023a576040517f716b1fbf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102438161029e565b50565b6001546001600160a01b03163314158061025e575033155b15610295576040517f7304d01200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610155336102f5565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f68f49b346b94582a8b5f9d10e3fe3365318fe8f191ff8dce7c59c6cad06b02f590600090a250565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff1980841682178555600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561036e57600080fd5b81356001600160a01b038116811461038557600080fd5b939250505056fea26469706673582212205234a4230249e973941d33a7587ee673bfcae54b0a0ba18f01b5d128209d47f664736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x72 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC42069EC GT PUSH2 0x50 JUMPI DUP1 PUSH4 0xC42069EC EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67AB8A4E EQ PUSH2 0x77 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x89 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7F PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7F PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7F PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x96 JUMP JUMPDEST PUSH2 0x7F PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14B JUMPI PUSH1 0x40 MLOAD PUSH32 0xECFAD6BF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x0 PUSH2 0x29E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 PUSH1 0x0 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9F216C13 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x91F3851500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x23A JUMPI PUSH1 0x40 MLOAD PUSH32 0x716B1FBF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x243 DUP2 PUSH2 0x29E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO DUP1 PUSH2 0x25E JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7304D01200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155 CALLER PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP5 AND DUP3 OR DUP6 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CALLVALUE LOG4 0x23 MUL 0x49 0xE9 PUSH20 0x941D33A7587EE673BFCAE54B0A0BA18F01B5D128 KECCAK256 SWAP14 SELFBALANCE 0xF6 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "1007:3369:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2741:183;;;:::i;:::-;;3489:102;;;:::i;1801:86::-;1848:7;1874:6;-1:-1:-1;;;;;1874:6:16;1801:86;;;-1:-1:-1;;;;;178:55:19;;;160:74;;148:2;133:18;1801:86:16;;;;;;;2265:291;;;;;;:::i;:::-;;:::i;2015:100::-;2095:13;;-1:-1:-1;;;;;2095:13:16;2015:100;;3052:103;;;:::i;2741:183::-;1239:6;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;2811:13:::1;::::0;-1:-1:-1;;;;;2811:13:16::1;2807:72;;2847:32;;;;;;;;;;;;;;2807:72;2889:28;2914:1;2889:16;:28::i;:::-;2741:183::o:0;3489:102::-;1239:6;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;3554:30:::1;3581:1;3554:18;:30::i;2265:291::-:0;1239:6;;-1:-1:-1;;;;;1239:6:16;1225:10;:20;1221:59;;1254:26;;-1:-1:-1;;;1254:26:16;;;;;;;;;;;1221:59;-1:-1:-1;;;;;2353:27:16;::::1;2349:69;;2389:29;;;;;;;;;;;;;;2349:69;2432:13;::::0;-1:-1:-1;;;;;2432:13:16::1;:27:::0;2428:80:::1;;2468:40;;;;;;;;;;;;;;2428:80;2518:31;2535:13;2518:16;:31::i;:::-;2265:291:::0;:::o;3052:103::-;1438:13;;-1:-1:-1;;;;;1438:13:16;1424:10;:27;;;:55;;-1:-1:-1;1455:10:16;:24;1424:55;1420:101;;;1488:33;;;;;;;;;;;;;;1420:101;3118:30:::1;3137:10;3118:18;:30::i;4217:157::-:0;4293:13;:29;;-1:-1:-1;;4293:29:16;-1:-1:-1;;;;;4293:29:16;;;;;;;;4337:30;;;;-1:-1:-1;;4337:30:16;4217:157;:::o;3788:228::-;3862:17;3882:6;;-1:-1:-1;;;;;3898:18:16;;;-1:-1:-1;;3898:18:16;;;;;;;3882:6;3926:26;;;;;;;3967:42;;3882:6;;;;;;;3967:42;;3862:17;3967:42;3852:164;3788:228;:::o;245:309:19:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;-1:-1:-1;;;;;455:5:19;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:19:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "192400",
								"executionCost": "50300",
								"totalCost": "242700"
							},
							"external": {
								"becomeOwner()": "52396",
								"owner()": "2353",
								"pendingOwner()": "2341",
								"renounceOwnership()": "52346",
								"revokePendingOwner()": "29843",
								"setPendingOwner(address)": "30005"
							},
							"internal": {
								"_setPendingOwner(address)": "25414",
								"_transferOwnership(address)": "50030"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1628,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1681,
									"name": "CALLER",
									"source": 16
								},
								{
									"begin": 1652,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "tag",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1652,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "tag",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3879,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3916,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3926,
									"end": 3952,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3882,
									"end": 3888,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "PUSH",
									"source": 16,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3862,
									"end": 3879,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3967,
									"end": 4009,
									"name": "LOG3",
									"source": 16
								},
								{
									"begin": 3852,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3788,
									"end": 4016,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "tag",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1007,
									"end": 4376,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205234a4230249e973941d33a7587ee673bfcae54b0a0ba18f01b5d128209d47f664736f6c634300080a0033",
									".code": [
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "C42069EC"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "C42069EC"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "E30C3978"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "F9DCA989"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "67AB8A4E"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1007,
											"end": 4376,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 233,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 178,
											"end": 233,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 178,
											"end": 233,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 160,
											"end": 234,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 160,
											"end": 234,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1801,
											"end": 1887,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2095,
											"end": 2108,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 2015,
											"end": 2115,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "tag",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2824,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "ECFAD6BF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2847,
											"end": 2879,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2807,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 2889,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2924,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 3489,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 3554,
											"end": 3584,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1235,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9F216C13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1254,
											"end": 1280,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "tag",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "91F3851500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2389,
											"end": 2418,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 2349,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2459,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "716B1FBF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 2428,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "tag",
											"source": 16,
											"value": "44"
										},
										{
											"begin": 2518,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2265,
											"end": 2556,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 3052,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1434,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1451,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1455,
											"end": 1465,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1455,
											"end": 1479,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "7304D01200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1488,
											"end": 1521,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1420,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4306,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4293,
											"end": 4322,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "PUSH",
											"source": 16,
											"value": "68F49B346B94582A8B5F9D10E3FE3365318FE8F191FF8DCE7C59C6CAD06B02F5"
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4367,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4217,
											"end": 4374,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3879,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3916,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3926,
											"end": 3952,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3882,
											"end": 3888,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "PUSH",
											"source": 16,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3862,
											"end": 3879,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3967,
											"end": 4009,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 3852,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3788,
											"end": 4016,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 245,
											"end": 554,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 245,
											"end": 554,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 304,
											"end": 310,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 359,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 345,
											"end": 354,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 336,
											"end": 343,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 332,
											"end": 355,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 328,
											"end": 360,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 325,
											"end": 377,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 325,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 325,
											"end": 377,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 373,
											"end": 374,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 370,
											"end": 371,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 363,
											"end": 375,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 325,
											"end": 377,
											"name": "tag",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 325,
											"end": 377,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 412,
											"end": 421,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 399,
											"end": 422,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 455,
											"end": 460,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 451,
											"end": 505,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 444,
											"end": 449,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 441,
											"end": 506,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 431,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 431,
											"end": 524,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 520,
											"end": 521,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 510,
											"end": 522,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 431,
											"end": 524,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 431,
											"end": 524,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 543,
											"end": 548,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 245,
											"end": 554,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 245,
											"end": 554,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"becomeOwner()": "f9dca989",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"revokePendingOwner()": "67ab8a4e",
							"setPendingOwner(address)": "c42069ec"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PendingOwnable__AddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NoPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__NotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingOwnable__PendingOwnerAlreadySet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"name\":\"PendingOwnerSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"becomeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revokePendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingOwner_\",\"type\":\"address\"}],\"name\":\"setPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"The address of the current owner\"}},\"pendingOwner()\":{\"returns\":{\"_0\":\"The address of the current pending owner\"}}},\"title\":\"Pending Ownable\",\"version\":1},\"userdoc\":{\"errors\":{\"PendingOwnable__NotOwner()\":[{\"notice\":\"PendingOwnable errors \"}]},\"kind\":\"user\",\"methods\":{\"becomeOwner()\":{\"notice\":\"Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner\"},\"constructor\":{\"notice\":\"Initializes the contract setting the deployer as the initial owner\"},\"owner()\":{\"notice\":\"Returns the address of the current owner\"},\"pendingOwner()\":{\"notice\":\"Returns the address of the current pending owner\"},\"renounceOwnership()\":{\"notice\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokePendingOwner()\":{\"notice\":\"Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner\"},\"setPendingOwner(address)\":{\"notice\":\"Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}\"}},\"notice\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The ownership of this contract is transferred using the push and pull pattern, the current owner set a `pendingOwner` using {setPendingOwner} and that address can then call {becomeOwner} to become the owner of that contract. The main logic and comments comes from OpenZeppelin's Ownable contract. By default, the owner account will be the one that deploys the contract. This can later be changed with {setPendingOwner} and {becomeOwner}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/PendingOwnable.sol\":\"PendingOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/PendingOwnable.sol\":{\"keccak256\":\"0x6799fef60252b959af4ecd5b7caebe67e227c90c35d4e23a2c44544579df4c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e51ed31c79d3108fba21d2af4c39113d3f1dea711570c6945c9e53d04a776054\",\"dweb:/ipfs/QmVg1jaA3Jt9H28BZNytmxxdNo8soSBCD3NSvphzKdNDaD\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3719,
								"contract": "joe-v2-main/src/libraries/PendingOwnable.sol:PendingOwnable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3721,
								"contract": "joe-v2-main/src/libraries/PendingOwnable.sol:PendingOwnable",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"errors": {
							"PendingOwnable__NotOwner()": [
								{
									"notice": "PendingOwnable errors "
								}
							]
						},
						"kind": "user",
						"methods": {
							"becomeOwner()": {
								"notice": "Transfers the ownership to the new owner (`pendingOwner). Can only be called by the pending owner"
							},
							"constructor": {
								"notice": "Initializes the contract setting the deployer as the initial owner"
							},
							"owner()": {
								"notice": "Returns the address of the current owner"
							},
							"pendingOwner()": {
								"notice": "Returns the address of the current pending owner"
							},
							"renounceOwnership()": {
								"notice": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"revokePendingOwner()": {
								"notice": "Revoke the pending owner address. This address will not be able to call {becomeOwner} to become the owner anymore. Can only be called by the owner"
							},
							"setPendingOwner(address)": {
								"notice": "Sets the pending owner address. This address will be able to become the owner of this contract by calling {becomeOwner}"
							}
						},
						"notice": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The ownership of this contract is transferred using the push and pull pattern, the current owner set a `pendingOwner` using {setPendingOwner} and that address can then call {becomeOwner} to become the owner of that contract. The main logic and comments comes from OpenZeppelin's Ownable contract. By default, the owner account will be the one that deploys the contract. This can later be changed with {setPendingOwner} and {becomeOwner}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/SafeCast.sol": {
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Safe Cast Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/SafeCast.sol\":219:9522  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/SafeCast.sol\":219:9522  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220390f9772bdc5170a54bf489cc693b33f7e5ad4f4683af6180be854d3d8a0bfae64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220390f9772bdc5170a54bf489cc693b33f7e5ad4f4683af6180be854d3d8a0bfae64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xF SWAP8 PUSH19 0xBDC5170A54BF489CC693B33F7E5AD4F4683AF6 XOR SIGNEXTEND 0xE8 SLOAD 0xD3 0xD8 LOG0 0xBF 0xAE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "219:9303:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;219:9303:17;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220390f9772bdc5170a54bf489cc693b33f7e5ad4f4683af6180be854d3d8a0bfae64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xF SWAP8 PUSH19 0xBDC5170A54BF489CC693B33F7E5AD4F4683AF6 XOR SIGNEXTEND 0xE8 SLOAD 0xD3 0xD8 LOG0 0xBF 0xAE PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "219:9303:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safe104(uint256)": "infinite",
								"safe112(uint256)": "infinite",
								"safe120(uint256)": "infinite",
								"safe128(uint256)": "infinite",
								"safe136(uint256)": "infinite",
								"safe144(uint256)": "infinite",
								"safe152(uint256)": "infinite",
								"safe16(uint256)": "infinite",
								"safe160(uint256)": "infinite",
								"safe168(uint256)": "infinite",
								"safe176(uint256)": "infinite",
								"safe184(uint256)": "infinite",
								"safe192(uint256)": "infinite",
								"safe200(uint256)": "infinite",
								"safe208(uint256)": "infinite",
								"safe216(uint256)": "infinite",
								"safe224(uint256)": "infinite",
								"safe232(uint256)": "infinite",
								"safe24(uint256)": "infinite",
								"safe240(uint256)": "infinite",
								"safe248(uint256)": "infinite",
								"safe32(uint256)": "infinite",
								"safe40(uint256)": "infinite",
								"safe48(uint256)": "infinite",
								"safe56(uint256)": "infinite",
								"safe64(uint256)": "infinite",
								"safe72(uint256)": "infinite",
								"safe8(uint256)": "infinite",
								"safe80(uint256)": "infinite",
								"safe88(uint256)": "infinite",
								"safe96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 219,
									"end": 9522,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220390f9772bdc5170a54bf489cc693b33f7e5ad4f4683af6180be854d3d8a0bfae64736f6c634300080a0033",
									".code": [
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 219,
											"end": 9522,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Safe Cast Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for converting uint values safely\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"joe-v2-main/src/LBErrors.sol\":{\"keccak256\":\"0xdef68e9e8f585f2bbfa294a1df13a774e9d6ed3d0bc495da5243842907bcc93e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c91baa2876d0c4c6272c141eade4a4471a81518ed664f5a56c38d0576e34e\",\"dweb:/ipfs/QmZtNra5hMkERWdgEKZFWxepFohM2zqwFWNj8uRpFxN2MP\"]},\"joe-v2-main/src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xf6ec8a22aeb373cb135407e49b43b5c0025c028ba36c81c773ad776bffcafe99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d88b893d9e13c3b71029a9dd7d13c1173cc5aa8617f37cbd9b53df111872a4e\",\"dweb:/ipfs/QmVCa2tMCYCEiBXjz88hvSf8q7cgVDL7yRxnQsuRe6FShD\"]},\"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0ad4de9217ea804336d10f8200c442f1be75a22fed5d64e0d9d5334f6fcc7f55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab52dd79579de997ec44e79275ea8d08bd2da05cf6b3ba821bea01e5639748d\",\"dweb:/ipfs/QmazDbWMPGanUbq3iVuSAbZtpLCihy3HYSbH5RvHsLUqRt\"]},\"joe-v2-main/src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xa1820d518ee8446623cc021b4b9d66e49b23cbdc28c5a49b2877d5d63312a6f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c9e58707685d956b641ddbce959720d61922e359141411c980da549bdf20c31\",\"dweb:/ipfs/QmVozer8dDmhy72YQTNYeavXoXTU3cvinX4aXWpQp9QRPk\"]},\"joe-v2-main/src/interfaces/IPendingOwnable.sol\":{\"keccak256\":\"0x4c51408f2586a703c922f504c61f92811c53680d2f604aa436baa7dda89f10cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://893108ef6befefd6a154d754271dba3505df7c55f53ed3af7c700cbcc1c5ed42\",\"dweb:/ipfs/QmURW3zDuVNdgi2n8GEihihbTZ8mxvpjUrbQAqs2t4pKnP\"]},\"joe-v2-main/src/libraries/Constants.sol\":{\"keccak256\":\"0xb6d9ce63d36b945ca698438d9e3a2d0b3d2713b7d57f1ff63009965ea2ef78ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e54db847ce3ef1bfbea2a4303b1f6bf7d7614b90a6b496a47699e18069826c83\",\"dweb:/ipfs/QmSTuGvKLWVCgvZN32t3XH6zzj3rmYis7EizMSWgNFpRdN\"]},\"joe-v2-main/src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x05fa546412c82d738c03919239bbbe83c1caaf8982af3e85d4ef72709c3e62bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d893bed925dd278876702a8cb9fab494bf754fadd82d008224600bd902aabb2a\",\"dweb:/ipfs/QmYgjkHieFSK8zFv2M3UNdNKRspgJuF4S4qNDbvweBQj79\"]},\"joe-v2-main/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x171ac968ef2f498a9ff6f8aca58eaa6070bfa245781d701f74cfca62f7ff85f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fca7527eb62b9f1bd20ab72fe5024f64e03de0666991b3a54fc63864ff78d6\",\"dweb:/ipfs/QmWBxZ4BXd3SMm9XSWmCzULCNpyj5ocTohr26mPoye7vJq\"]},\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for converting uint values safely",
						"version": 1
					}
				}
			},
			"joe-v2-main/src/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"author": "Trader Joe",
						"kind": "dev",
						"methods": {},
						"title": "Liquidity Book Safe Math Helper Library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"joe-v2-main/src/libraries/SafeMath.sol\":203:537  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"joe-v2-main/src/libraries/SafeMath.sol\":203:537  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d59236dfcca02f14836a10f4050997a4806de060c3b77748c5be69356659d07164736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d59236dfcca02f14836a10f4050997a4806de060c3b77748c5be69356659d07164736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 SWAP3 CALLDATASIZE 0xDF 0xCC LOG0 0x2F EQ DUP4 PUSH11 0x10F4050997A4806DE060C3 0xB7 PUSH24 0x48C5BE69356659D07164736F6C634300080A003300000000 ",
							"sourceMap": "203:334:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:334:18;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d59236dfcca02f14836a10f4050997a4806de060c3b77748c5be69356659d07164736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 SWAP3 CALLDATASIZE 0xDF 0xCC LOG0 0x2F EQ DUP4 PUSH11 0x10F4050997A4806DE060C3 0xB7 PUSH24 0x48C5BE69356659D07164736F6C634300080A003300000000 ",
							"sourceMap": "203:334:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"absSub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 537,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d59236dfcca02f14836a10f4050997a4806de060c3b77748c5be69356659d07164736f6c634300080a0033",
									".code": [
										{
											"begin": 203,
											"end": 537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 537,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 537,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 203,
											"end": 537,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Trader Joe\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity Book Safe Math Helper Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Helper contract used for calculating absolute value safely\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"joe-v2-main/src/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"joe-v2-main/src/libraries/SafeMath.sol\":{\"keccak256\":\"0x38fad00f0157c59a0d9a97b50447d8331ba2e9dc3292e6b7386429782d611e46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a054f7c5e5794febebf102168f350d8f37814a8fcfac5b9e7916784a379bed47\",\"dweb:/ipfs/Qmbnh882A1FRvsv2bwXdVoeebxCn3PiUKQKag6uc15dGaW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Helper contract used for calculating absolute value safely",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							79
						]
					},
					"id": 80,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "125:629:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 79,
							"linearizedBaseContracts": [
								79
							],
							"name": "Clones",
							"nameLocation": "763:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "1048:684:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1110:549:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1328:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1338:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "1344:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1334:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1334:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1324:36:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1321:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1321:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:104:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1533:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1546:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "1552:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1542:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1542:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1539:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:77:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:77:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:33:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:21:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1616:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1344:14:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1552:14:0",
														"valueSize": 1
													},
													{
														"declaration": 8,
														"isOffset": false,
														"isSlot": false,
														"src": "1616:8:0",
														"valueSize": 1
													}
												],
												"id": 10,
												"nodeType": "InlineAssembly",
												"src": "1101:558:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 12,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1676:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 15,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 13,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1688:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1688:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1676:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1700:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1668:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "1668:57:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "776:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 22,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "996:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "988:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:24:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1038:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "1030:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:18:0"
									},
									"scope": 79,
									"src": "973:759:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2209:692:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2271:556:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2489:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2499:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "2505:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2495:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2495:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "2485:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2485:36:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2523:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2482:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2482:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:104:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2707:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "2713:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2703:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2703:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2730:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:77:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2687:77:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2777:40:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:0",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2812:4:0"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2789:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:28:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2777:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2505:14:0",
														"valueSize": 1
													},
													{
														"declaration": 25,
														"isOffset": false,
														"isSlot": false,
														"src": "2713:14:0",
														"valueSize": 1
													},
													{
														"declaration": 30,
														"isOffset": false,
														"isSlot": false,
														"src": "2777:8:0",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "2812:4:0",
														"valueSize": 1
													}
												],
												"id": 32,
												"nodeType": "InlineAssembly",
												"src": "2262:565:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 34,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "2844:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2856:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 35,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2856:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2856:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2844:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2868:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2836:58:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "1738:364:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2116:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2143:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2135:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2167:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2159:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:38:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2199:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2191:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:18:0"
									},
									"scope": 79,
									"src": "2107:794:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "3176:515:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3238:447:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "3256:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3298:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:4:0",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3294:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3294:14:0"
																	},
																	{
																		"name": "deployer",
																		"nodeType": "YulIdentifier",
																		"src": "3310:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:32:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:32:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3343:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3348:4:0",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3339:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:34:0",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:58:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3332:58:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:4:0",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:14:0"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "3426:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:42:0",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:55:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:55:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3533:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:4:0",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:14:0"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3545:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3574:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:0",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:14:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "3600:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3605:4:0",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3596:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3596:14:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3612:4:0",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3586:9:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:31:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:55:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3563:55:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3631:44:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3658:3:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3663:4:0",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:0",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3644:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:31:0"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3631:9:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "3310:8:0",
														"valueSize": 1
													},
													{
														"declaration": 47,
														"isOffset": false,
														"isSlot": false,
														"src": "3426:14:0",
														"valueSize": 1
													},
													{
														"declaration": 54,
														"isOffset": false,
														"isSlot": false,
														"src": "3631:9:0",
														"valueSize": 1
													},
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "3545:4:0",
														"valueSize": 1
													}
												],
												"id": 56,
												"nodeType": "InlineAssembly",
												"src": "3229:456:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2907:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3020:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3065:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3057:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3097:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3089:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:86:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3165:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3157:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:19:0"
									},
									"scope": 79,
									"src": "3011:680:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "3946:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 69,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3991:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 70,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "4007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 73,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4021:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$79",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$79",
																		"typeString": "library Clones"
																	}
																],
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 71,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4013:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4013:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															58,
															78
														],
														"referencedDeclaration": 58,
														"src": "3963:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3963:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 67,
												"id": 76,
												"nodeType": "Return",
												"src": "3956:71:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3697:99:0",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3810:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3846:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3838:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3870:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3862:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:38:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3931:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3923:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:19:0"
									},
									"scope": 79,
									"src": "3801:233:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 80,
							"src": "755:3281:0",
							"usedErrors": []
						}
					],
					"src": "100:3937:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							157
						]
					},
					"id": 158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 81,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 91,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 100,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 157,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 114,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 157,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 157,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 157,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 157,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 157,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 158,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							770
						]
					},
					"id": 771,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 159,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "205:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 160,
								"nodeType": "StructuredDocumentation",
								"src": "230:1090:2",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 770,
							"linearizedBaseContracts": [
								770
							],
							"name": "EnumerableSet",
							"nameLocation": "1329:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 168,
									"members": [
										{
											"constant": false,
											"id": 163,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1853:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "1843:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 162,
												"nodeType": "ArrayTypeName",
												"src": "1843:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 167,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "2021:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 168,
											"src": "1993:36:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 166,
												"keyType": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1993:27:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1796:3:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "1789:247:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "2275:335:2",
										"statements": [
											{
												"condition": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2289:22:2",
													"subExpression": {
														"arguments": [
															{
																"id": 180,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 172,
																"src": "2300:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "2305:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 179,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2290:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2290:21:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 207,
													"nodeType": "Block",
													"src": "2567:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2588:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 178,
															"id": 206,
															"nodeType": "Return",
															"src": "2581:12:2"
														}
													]
												},
												"id": 208,
												"nodeType": "IfStatement",
												"src": "2285:319:2",
												"trueBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "2313:248:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 189,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "2344:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 184,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "2327:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 187,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "2327:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2327:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2327:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 191,
															"nodeType": "ExpressionStatement",
															"src": "2327:23:2"
														},
														{
															"expression": {
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 192,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "2485:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "2485:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 196,
																	"indexExpression": {
																		"id": 194,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "2498:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2485:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 197,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "2507:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 198,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "2507:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2507:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2485:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 201,
															"nodeType": "ExpressionStatement",
															"src": "2485:40:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 178,
															"id": 203,
															"nodeType": "Return",
															"src": "2539:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2042:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2215:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2232:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2220:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "2220:3:2"
													},
													"referencedDeclaration": 168,
													"src": "2220:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2245:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2237:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:32:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "2269:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2269:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:6:2"
									},
									"scope": 770,
									"src": "2206:404:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "2850:1316:2",
										"statements": [
											{
												"assignments": [
													222
												],
												"declarations": [
													{
														"constant": false,
														"id": 222,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2968:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 293,
														"src": "2960:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2960:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 223,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2981:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 167,
														"src": "2981:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 226,
													"indexExpression": {
														"id": 225,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2994:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2981:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2960:40:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 228,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3015:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3029:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3015:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "4123:37:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4144:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 220,
															"id": 290,
															"nodeType": "Return",
															"src": "4137:12:2"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "3011:1149:2",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "3032:1085:2",
													"statements": [
														{
															"assignments": [
																232
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 232,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3392:13:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 288,
																	"src": "3384:21:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 231,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3384:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 236,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 233,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3408:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3421:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3408:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3384:38:2"
														},
														{
															"assignments": [
																238
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 238,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3444:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 288,
																	"src": "3436:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 237,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3436:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 244,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 239,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3456:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "3456:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3456:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3477:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3456:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3436:42:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 245,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 238,
																	"src": "3497:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 246,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3510:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3497:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "IfStatement",
															"src": "3493:398:2",
															"trueBody": {
																"id": 271,
																"nodeType": "Block",
																"src": "3525:366:2",
																"statements": [
																	{
																		"assignments": [
																			249
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 249,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 271,
																				"src": "3543:17:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 248,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 254,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 250,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 214,
																					"src": "3563:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 251,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 163,
																				"src": "3563:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 253,
																			"indexExpression": {
																				"id": 252,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 238,
																				"src": "3575:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:2"
																	},
																	{
																		"expression": {
																			"id": 261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 255,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 214,
																						"src": "3685:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 258,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 163,
																					"src": "3685:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 259,
																				"indexExpression": {
																					"id": 257,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 232,
																					"src": "3697:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3685:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 260,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "3714:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3685:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 262,
																		"nodeType": "ExpressionStatement",
																		"src": "3685:38:2"
																	},
																	{
																		"expression": {
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 263,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 214,
																						"src": "3797:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 167,
																					"src": "3797:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 267,
																				"indexExpression": {
																					"id": 265,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "3810:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3797:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 268,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "3823:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3797:36:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 270,
																		"nodeType": "ExpressionStatement",
																		"src": "3797:36:2"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 273,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3969:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 163,
																		"src": "3969:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3969:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3969:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "3969:17:2"
														},
														{
															"expression": {
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4054:26:2",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 280,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "4061:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 167,
																		"src": "4061:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 283,
																	"indexExpression": {
																		"id": 282,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "4074:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4061:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "4054:26:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 220,
															"id": 287,
															"nodeType": "Return",
															"src": "4095:11:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "2616:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2787:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2807:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2795:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 213,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 212,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "2795:3:2"
													},
													"referencedDeclaration": 168,
													"src": "2795:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2820:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2812:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "2844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:6:2"
									},
									"scope": 770,
									"src": "2778:1388:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "4326:48:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 305,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "4343:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "4343:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 308,
														"indexExpression": {
															"id": 307,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "4356:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4343:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4366:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4343:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 304,
												"id": 311,
												"nodeType": "Return",
												"src": "4336:31:2"
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4172:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4278:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4266:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 296,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4266:3:2"
													},
													"referencedDeclaration": 168,
													"src": "4266:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4291:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4283:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:32:2"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "4320:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4320:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4319:6:2"
									},
									"scope": 770,
									"src": "4247:127:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4520:42:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 322,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "4537:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "4537:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4537:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 321,
												"id": 325,
												"nodeType": "Return",
												"src": "4530:25:2"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "4380:70:2",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4464:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4484:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4472:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 315,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4472:3:2"
													},
													"referencedDeclaration": 168,
													"src": "4472:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4471:17:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4511:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4510:9:2"
									},
									"scope": 770,
									"src": "4455:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "4980:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 338,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "4997:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 163,
														"src": "4997:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 341,
													"indexExpression": {
														"id": 340,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "5009:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4997:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 337,
												"id": 342,
												"nodeType": "Return",
												"src": "4990:25:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4568:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4913:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4929:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4917:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "4917:3:2"
													},
													"referencedDeclaration": 168,
													"src": "4917:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4942:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4934:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:32:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "4971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4970:9:2"
									},
									"scope": 770,
									"src": "4904:118:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "5636:35:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 354,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "5653:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 163,
													"src": "5653:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 353,
												"id": 356,
												"nodeType": "Return",
												"src": "5646:18:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5028:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5571:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5591:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5579:15:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 347,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 346,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 168,
														"src": "5579:3:2"
													},
													"referencedDeclaration": 168,
													"src": "5579:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5578:17:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "5618:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 350,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5618:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 351,
													"nodeType": "ArrayTypeName",
													"src": "5618:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:18:2"
									},
									"scope": 770,
									"src": "5562:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 362,
									"members": [
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5728:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 362,
											"src": "5724:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 360,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 359,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 168,
													"src": "5724:3:2"
												},
												"referencedDeclaration": 168,
												"src": "5724:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5703:10:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "5696:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "5987:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 374,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "6009:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6009:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 376,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6021:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 373,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "6004:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6004:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 372,
												"id": 378,
												"nodeType": "Return",
												"src": "5997:30:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "5747:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5920:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5943:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5924:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "5924:10:2"
													},
													"referencedDeclaration": 362,
													"src": "5924:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5956:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5948:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 367,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5923:39:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "5981:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5981:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5980:6:2"
									},
									"scope": 770,
									"src": "5911:123:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "6281:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 392,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "6306:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6306:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 394,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "6318:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 391,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6298:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6298:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "6291:33:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "6040:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6211:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6237:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6218:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 382,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "6218:10:2"
													},
													"referencedDeclaration": 362,
													"src": "6218:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6250:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6242:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6217:39:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6275:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6275:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:6:2"
									},
									"scope": 770,
									"src": "6202:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "6498:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 410,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "6525:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6525:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "6537:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 409,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "6515:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 408,
												"id": 414,
												"nodeType": "Return",
												"src": "6508:35:2"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "6337:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6421:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6449:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6430:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 401,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 400,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "6430:10:2"
													},
													"referencedDeclaration": 362,
													"src": "6430:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6462:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6454:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6429:39:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "6492:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6492:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6491:6:2"
									},
									"scope": 770,
									"src": "6412:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "6703:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 426,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6728:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "6728:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 425,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "6720:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6720:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 424,
												"id": 429,
												"nodeType": "Return",
												"src": "6713:26:2"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "6556:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6640:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6666:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6647:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 418,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "6647:10:2"
													},
													"referencedDeclaration": 362,
													"src": "6647:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:24:2"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "6694:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:9:2"
									},
									"scope": 770,
									"src": "6631:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "7171:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 443,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "7192:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "7192:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 445,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "7204:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 442,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "7188:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7188:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 441,
												"id": 447,
												"nodeType": "Return",
												"src": "7181:29:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "6752:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7097:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7119:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7100:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 433,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "7100:10:2"
													},
													"referencedDeclaration": 362,
													"src": "7100:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7132:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7124:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7124:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:39:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "7162:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 439,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7162:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7161:9:2"
									},
									"scope": 770,
									"src": "7088:129:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "7838:219:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7865:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "7848:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 461,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7848:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 462,
															"nodeType": "ArrayTypeName",
															"src": "7848:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 465,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "7881:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 361,
															"src": "7881:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 464,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "7873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7873:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7848:44:2"
											},
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7919:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 478,
														"src": "7902:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 471,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7902:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 472,
															"nodeType": "ArrayTypeName",
															"src": "7902:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"nodeType": "VariableDeclarationStatement",
												"src": "7902:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7988:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8002:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "8012:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 473,
														"isOffset": false,
														"isSlot": false,
														"src": "8002:6:2",
														"valueSize": 1
													},
													{
														"declaration": 463,
														"isOffset": false,
														"isSlot": false,
														"src": "8012:5:2",
														"valueSize": 1
													}
												],
												"id": 475,
												"nodeType": "InlineAssembly",
												"src": "7979:48:2"
											},
											{
												"expression": {
													"id": 476,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 473,
													"src": "8044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 458,
												"id": 477,
												"nodeType": "Return",
												"src": "8037:13:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "7223:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7766:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7792:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7773:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 452,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 451,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 362,
														"src": "7773:10:2"
													},
													"referencedDeclaration": 362,
													"src": "7773:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$362_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7772:24:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "7820:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7820:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "7820:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7819:18:2"
									},
									"scope": 770,
									"src": "7757:300:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 483,
									"members": [
										{
											"constant": false,
											"id": 482,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8114:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 483,
											"src": "8110:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 481,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 480,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 168,
													"src": "8110:3:2"
												},
												"referencedDeclaration": 168,
												"src": "8110:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8089:10:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "8082:45:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "8373:74:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 495,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "8395:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "8395:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 503,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 489,
																					"src": "8431:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 501,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8423:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8423:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8415:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 499,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8415:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8415:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8407:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 497,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8407:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8407:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 494,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "8390:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8390:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 493,
												"id": 508,
												"nodeType": "Return",
												"src": "8383:57:2"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "8133:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8306:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8329:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8310:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "8310:10:2"
													},
													"referencedDeclaration": 483,
													"src": "8310:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8342:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8334:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8334:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:39:2"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "8367:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8367:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8366:6:2"
									},
									"scope": 770,
									"src": "8297:150:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "8694:77:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 522,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "8719:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "8719:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 530,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 516,
																					"src": "8755:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8747:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 528,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8747:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8747:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8739:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8739:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8739:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8731:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 524,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8731:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8731:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 521,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "8711:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 520,
												"id": 535,
												"nodeType": "Return",
												"src": "8704:60:2"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "8453:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8650:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "8631:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "8631:10:2"
													},
													"referencedDeclaration": 483,
													"src": "8631:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "8655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8630:39:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "8688:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8688:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8687:6:2"
									},
									"scope": 770,
									"src": "8615:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "8938:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 549,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "8965:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "8965:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 557,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 543,
																					"src": "9001:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8993:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 555,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8993:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8993:14:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8985:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8985:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8985:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8977:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 551,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8977:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8977:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 548,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "8955:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8955:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 562,
												"nodeType": "Return",
												"src": "8948:62:2"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "8777:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8861:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8889:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8870:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 539,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "8870:10:2"
													},
													"referencedDeclaration": 483,
													"src": "8870:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8902:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8894:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8869:39:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "8932:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8932:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8931:6:2"
									},
									"scope": 770,
									"src": "8852:165:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "9170:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 574,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "9195:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "9195:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 573,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "9187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9187:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 572,
												"id": 577,
												"nodeType": "Return",
												"src": "9180:26:2"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "9023:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9107:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9133:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9114:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 566,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "9114:10:2"
													},
													"referencedDeclaration": 483,
													"src": "9114:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9113:24:2"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9161:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9160:9:2"
									},
									"scope": 770,
									"src": "9098:115:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "9638:73:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 597,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 583,
																						"src": "9683:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 598,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 482,
																					"src": "9683:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$168_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 599,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "9695:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$168_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 596,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "9679:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9679:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9671:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 594,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9671:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9671:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9663:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 592,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9663:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9663:40:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9655:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 590,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9655:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9655:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 589,
												"id": 604,
												"nodeType": "Return",
												"src": "9648:56:2"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "9219:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9567:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 581,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "9567:10:2"
													},
													"referencedDeclaration": 483,
													"src": "9567:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9591:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:2"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "9629:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:2"
									},
									"scope": 770,
									"src": "9555:156:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "10332:219:2",
										"statements": [
											{
												"assignments": [
													620
												],
												"declarations": [
													{
														"constant": false,
														"id": 620,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10359:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10342:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 618,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10342:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 619,
															"nodeType": "ArrayTypeName",
															"src": "10342:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 622,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "10375:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 482,
															"src": "10375:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 621,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "10367:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10367:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10342:44:2"
											},
											{
												"assignments": [
													630
												],
												"declarations": [
													{
														"constant": false,
														"id": 630,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10413:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10396:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 628,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10396:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 629,
															"nodeType": "ArrayTypeName",
															"src": "10396:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"nodeType": "VariableDeclarationStatement",
												"src": "10396:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10482:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10496:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10506:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10496:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 630,
														"isOffset": false,
														"isSlot": false,
														"src": "10496:6:2",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "10506:5:2",
														"valueSize": 1
													}
												],
												"id": 632,
												"nodeType": "InlineAssembly",
												"src": "10473:48:2"
											},
											{
												"expression": {
													"id": 633,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 630,
													"src": "10538:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 615,
												"id": 634,
												"nodeType": "Return",
												"src": "10531:13:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "9717:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10260:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10286:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10267:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 609,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 608,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 483,
														"src": "10267:10:2"
													},
													"referencedDeclaration": 483,
													"src": "10267:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10266:24:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10314:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 612,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10314:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 613,
													"nodeType": "ArrayTypeName",
													"src": "10314:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10313:18:2"
									},
									"scope": 770,
									"src": "10251:300:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 640,
									"members": [
										{
											"constant": false,
											"id": 639,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10602:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 640,
											"src": "10598:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 638,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 637,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 168,
													"src": "10598:3:2"
												},
												"referencedDeclaration": 168,
												"src": "10598:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$168_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10580:7:2",
									"nodeType": "StructDefinition",
									"scope": 770,
									"src": "10573:42:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "10858:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 652,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "10880:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "10880:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "10900:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 654,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10892:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10892:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 651,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "10875:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10875:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 650,
												"id": 659,
												"nodeType": "Return",
												"src": "10868:39:2"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "10621:159:2",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10794:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10814:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "10798:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 642,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "10798:7:2"
													},
													"referencedDeclaration": 640,
													"src": "10798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10827:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "10819:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10797:36:2"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "10852:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10851:6:2"
									},
									"scope": 770,
									"src": "10785:129:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "11158:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 673,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "11183:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "11183:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 677,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "11203:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11195:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 675,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11195:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11195:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 672,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "11175:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11175:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 671,
												"id": 680,
												"nodeType": "Return",
												"src": "11168:42:2"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "10920:157:2",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11091:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11114:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11098:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11098:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11098:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11127:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11119:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11119:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11097:36:2"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "11152:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11152:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11151:6:2"
									},
									"scope": 770,
									"src": "11082:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "11381:61:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 694,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "11408:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "11408:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 698,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "11428:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11420:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 696,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11420:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11420:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 693,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "11398:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 692,
												"id": 701,
												"nodeType": "Return",
												"src": "11391:44:2"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "11223:70:2",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11307:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11332:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11316:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 685,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 684,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11316:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11345:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11337:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11337:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11315:36:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "11375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:6:2"
									},
									"scope": 770,
									"src": "11298:144:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "11592:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 713,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "11617:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "11617:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 712,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "11609:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11609:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 716,
												"nodeType": "Return",
												"src": "11602:26:2"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "11448:70:2",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11532:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11555:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "11539:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11539:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11538:21:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "11583:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11583:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11582:9:2"
									},
									"scope": 770,
									"src": "11523:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "12057:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 732,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "12086:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 733,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 639,
																	"src": "12086:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$168_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 734,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "12098:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$168_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 731,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "12082:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12082:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12074:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12074:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 737,
												"nodeType": "Return",
												"src": "12067:38:2"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "11641:331:2",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11986:2:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12005:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "11989:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "11989:7:2"
													},
													"referencedDeclaration": 640,
													"src": "11989:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12018:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "12010:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12010:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11988:36:2"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "12048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12047:9:2"
									},
									"scope": 770,
									"src": "11977:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "12730:219:2",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12757:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "12740:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 751,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12740:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 752,
															"nodeType": "ArrayTypeName",
															"src": "12740:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 755,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "12773:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 639,
															"src": "12773:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$168_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 754,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "12765:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$168_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12765:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12740:44:2"
											},
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12811:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "12794:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 761,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12794:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 762,
															"nodeType": "ArrayTypeName",
															"src": "12794:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"nodeType": "VariableDeclarationStatement",
												"src": "12794:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12880:39:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12894:15:2",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12904:5:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12894:6:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 763,
														"isOffset": false,
														"isSlot": false,
														"src": "12894:6:2",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "12904:5:2",
														"valueSize": 1
													}
												],
												"id": 765,
												"nodeType": "InlineAssembly",
												"src": "12871:48:2"
											},
											{
												"expression": {
													"id": 766,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 763,
													"src": "12936:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 748,
												"id": 767,
												"nodeType": "Return",
												"src": "12929:13:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "12118:529:2",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12661:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12684:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "12668:19:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 741,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 640,
														"src": "12668:7:2"
													},
													"referencedDeclaration": 640,
													"src": "12668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$640_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12667:21:2"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "12712:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 745,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12712:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 746,
													"nodeType": "ArrayTypeName",
													"src": "12712:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12711:18:2"
									},
									"scope": 770,
									"src": "12652:297:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 771,
							"src": "1321:11630:2",
							"usedErrors": []
						}
					],
					"src": "205:12747:2"
				},
				"id": 2
			},
			"joe-v2-main/src/LBErrors.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/LBErrors.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2964
						],
						"FeeHelper": [
							3121
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBFlashLoanCallback": [
							2132
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 1314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 772,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "joe-v2-main/src/interfaces/ILBPair.sol",
							"file": "./interfaces/ILBPair.sol",
							"id": 773,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1314,
							"sourceUnit": 2399,
							"src": "58:34:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"documentation": {
								"id": 774,
								"nodeType": "StructuredDocumentation",
								"src": "94:22:3",
								"text": "LBRouter errors "
							},
							"id": 776,
							"name": "LBRouter__SenderIsNotWAVAX",
							"nameLocation": "124:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 775,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "150:2:3"
							},
							"src": "118:35:3"
						},
						{
							"id": 784,
							"name": "LBRouter__PairNotCreated",
							"nameLocation": "160:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 783,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 778,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "193:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 784,
										"src": "185:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 777,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "185:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 780,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "209:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 784,
										"src": "201:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 779,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "201:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 782,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "225:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 784,
										"src": "217:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 781,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "217:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "184:49:3"
							},
							"src": "154:80:3"
						},
						{
							"id": 790,
							"name": "LBRouter__WrongAmounts",
							"nameLocation": "241:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 789,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 786,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "272:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 790,
										"src": "264:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 785,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "264:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 788,
										"mutability": "mutable",
										"name": "reserve",
										"nameLocation": "288:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 790,
										"src": "280:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 787,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "280:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "263:33:3"
							},
							"src": "235:62:3"
						},
						{
							"id": 794,
							"name": "LBRouter__SwapOverflows",
							"nameLocation": "304:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 793,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 792,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "336:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 794,
										"src": "328:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 791,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "328:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "327:12:3"
							},
							"src": "298:42:3"
						},
						{
							"id": 796,
							"name": "LBRouter__BrokenSwapSafetyCheck",
							"nameLocation": "347:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 795,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "378:2:3"
							},
							"src": "341:40:3"
						},
						{
							"id": 798,
							"name": "LBRouter__NotFactoryOwner",
							"nameLocation": "388:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 797,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "413:2:3"
							},
							"src": "382:34:3"
						},
						{
							"id": 802,
							"name": "LBRouter__TooMuchTokensIn",
							"nameLocation": "423:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 801,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 800,
										"mutability": "mutable",
										"name": "excess",
										"nameLocation": "457:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 802,
										"src": "449:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 799,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "449:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "448:16:3"
							},
							"src": "417:48:3"
						},
						{
							"id": 806,
							"name": "LBRouter__BinReserveOverflows",
							"nameLocation": "472:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 805,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 804,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "510:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 806,
										"src": "502:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 803,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "502:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "501:12:3"
							},
							"src": "466:48:3"
						},
						{
							"id": 810,
							"name": "LBRouter__IdOverflows",
							"nameLocation": "521:21:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 809,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 808,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "550:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 810,
										"src": "543:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 807,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "543:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "542:11:3"
							},
							"src": "515:39:3"
						},
						{
							"id": 812,
							"name": "LBRouter__LengthsMismatch",
							"nameLocation": "561:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 811,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "586:2:3"
							},
							"src": "555:34:3"
						},
						{
							"id": 814,
							"name": "LBRouter__WrongTokenOrder",
							"nameLocation": "596:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 813,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "621:2:3"
							},
							"src": "590:34:3"
						},
						{
							"id": 822,
							"name": "LBRouter__IdSlippageCaught",
							"nameLocation": "631:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 821,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 816,
										"mutability": "mutable",
										"name": "activeIdDesired",
										"nameLocation": "666:15:3",
										"nodeType": "VariableDeclaration",
										"scope": 822,
										"src": "658:23:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 815,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "658:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 818,
										"mutability": "mutable",
										"name": "idSlippage",
										"nameLocation": "691:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 822,
										"src": "683:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 817,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "683:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 820,
										"mutability": "mutable",
										"name": "activeId",
										"nameLocation": "711:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 822,
										"src": "703:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 819,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "703:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "657:63:3"
							},
							"src": "625:96:3"
						},
						{
							"id": 832,
							"name": "LBRouter__AmountSlippageCaught",
							"nameLocation": "728:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 831,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 824,
										"mutability": "mutable",
										"name": "amountXMin",
										"nameLocation": "767:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "759:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 823,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "759:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 826,
										"mutability": "mutable",
										"name": "amountX",
										"nameLocation": "787:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "779:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 825,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "779:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 828,
										"mutability": "mutable",
										"name": "amountYMin",
										"nameLocation": "804:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "796:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 827,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "796:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 830,
										"mutability": "mutable",
										"name": "amountY",
										"nameLocation": "824:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 832,
										"src": "816:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 829,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "758:74:3"
							},
							"src": "722:111:3"
						},
						{
							"id": 838,
							"name": "LBRouter__IdDesiredOverflows",
							"nameLocation": "840:28:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 837,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 834,
										"mutability": "mutable",
										"name": "idDesired",
										"nameLocation": "877:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 838,
										"src": "869:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 833,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "869:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 836,
										"mutability": "mutable",
										"name": "idSlippage",
										"nameLocation": "896:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 838,
										"src": "888:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 835,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "868:39:3"
							},
							"src": "834:74:3"
						},
						{
							"id": 844,
							"name": "LBRouter__FailedToSendAVAX",
							"nameLocation": "915:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 843,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 840,
										"mutability": "mutable",
										"name": "recipient",
										"nameLocation": "950:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 844,
										"src": "942:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 839,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 842,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "969:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 844,
										"src": "961:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 841,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "941:35:3"
							},
							"src": "909:68:3"
						},
						{
							"id": 850,
							"name": "LBRouter__DeadlineExceeded",
							"nameLocation": "984:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 849,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 846,
										"mutability": "mutable",
										"name": "deadline",
										"nameLocation": "1019:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 850,
										"src": "1011:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 845,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 848,
										"mutability": "mutable",
										"name": "currentTimestamp",
										"nameLocation": "1037:16:3",
										"nodeType": "VariableDeclaration",
										"scope": 850,
										"src": "1029:24:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 847,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1029:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1010:44:3"
							},
							"src": "978:77:3"
						},
						{
							"id": 854,
							"name": "LBRouter__AmountSlippageBPTooBig",
							"nameLocation": "1062:32:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 853,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 852,
										"mutability": "mutable",
										"name": "amountSlippage",
										"nameLocation": "1103:14:3",
										"nodeType": "VariableDeclaration",
										"scope": 854,
										"src": "1095:22:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 851,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1095:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1094:24:3"
							},
							"src": "1056:63:3"
						},
						{
							"id": 860,
							"name": "LBRouter__InsufficientAmountOut",
							"nameLocation": "1126:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 859,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 856,
										"mutability": "mutable",
										"name": "amountOutMin",
										"nameLocation": "1166:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 860,
										"src": "1158:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 855,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1158:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 858,
										"mutability": "mutable",
										"name": "amountOut",
										"nameLocation": "1188:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 860,
										"src": "1180:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 857,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1180:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1157:41:3"
							},
							"src": "1120:79:3"
						},
						{
							"id": 866,
							"name": "LBRouter__MaxAmountInExceeded",
							"nameLocation": "1206:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 865,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 862,
										"mutability": "mutable",
										"name": "amountInMax",
										"nameLocation": "1244:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 866,
										"src": "1236:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 861,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1236:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 864,
										"mutability": "mutable",
										"name": "amountIn",
										"nameLocation": "1265:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 866,
										"src": "1257:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 863,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1257:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1235:39:3"
							},
							"src": "1200:75:3"
						},
						{
							"id": 870,
							"name": "LBRouter__InvalidTokenPath",
							"nameLocation": "1282:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 869,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 868,
										"mutability": "mutable",
										"name": "wrongToken",
										"nameLocation": "1317:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 870,
										"src": "1309:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 867,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1309:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1308:20:3"
							},
							"src": "1276:53:3"
						},
						{
							"id": 874,
							"name": "LBRouter__InvalidVersion",
							"nameLocation": "1336:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 873,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 872,
										"mutability": "mutable",
										"name": "version",
										"nameLocation": "1369:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 874,
										"src": "1361:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 871,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1361:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1360:17:3"
							},
							"src": "1330:48:3"
						},
						{
							"id": 886,
							"name": "LBRouter__WrongAvaxLiquidityParameters",
							"nameLocation": "1385:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 885,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 876,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "1437:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1429:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 875,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1429:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 878,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "1457:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1449:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 877,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1449:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 880,
										"mutability": "mutable",
										"name": "amountX",
										"nameLocation": "1477:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1469:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1469:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 882,
										"mutability": "mutable",
										"name": "amountY",
										"nameLocation": "1498:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1490:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 881,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1490:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 884,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "1519:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 886,
										"src": "1511:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 883,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1511:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1423:106:3"
							},
							"src": "1379:151:3"
						},
						{
							"documentation": {
								"id": 887,
								"nodeType": "StructuredDocumentation",
								"src": "1532:21:3",
								"text": "LBToken errors "
							},
							"id": 893,
							"name": "LBToken__SpenderNotApproved",
							"nameLocation": "1561:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 892,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 889,
										"mutability": "mutable",
										"name": "owner",
										"nameLocation": "1597:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 893,
										"src": "1589:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 888,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1589:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 891,
										"mutability": "mutable",
										"name": "spender",
										"nameLocation": "1612:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 893,
										"src": "1604:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 890,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1604:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1588:32:3"
							},
							"src": "1555:66:3"
						},
						{
							"id": 895,
							"name": "LBToken__TransferFromOrToAddress0",
							"nameLocation": "1628:33:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 894,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1661:2:3"
							},
							"src": "1622:42:3"
						},
						{
							"id": 897,
							"name": "LBToken__MintToAddress0",
							"nameLocation": "1671:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 896,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1694:2:3"
							},
							"src": "1665:32:3"
						},
						{
							"id": 899,
							"name": "LBToken__BurnFromAddress0",
							"nameLocation": "1704:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 898,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1729:2:3"
							},
							"src": "1698:34:3"
						},
						{
							"id": 907,
							"name": "LBToken__BurnExceedsBalance",
							"nameLocation": "1739:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 906,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 901,
										"mutability": "mutable",
										"name": "from",
										"nameLocation": "1775:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 907,
										"src": "1767:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 900,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1767:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 903,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "1789:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 907,
										"src": "1781:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 902,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1781:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 905,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "1801:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 907,
										"src": "1793:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 904,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1793:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1766:42:3"
							},
							"src": "1733:76:3"
						},
						{
							"id": 913,
							"name": "LBToken__LengthMismatch",
							"nameLocation": "1816:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 912,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 909,
										"mutability": "mutable",
										"name": "accountsLength",
										"nameLocation": "1848:14:3",
										"nodeType": "VariableDeclaration",
										"scope": 913,
										"src": "1840:22:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 908,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1840:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 911,
										"mutability": "mutable",
										"name": "idsLength",
										"nameLocation": "1872:9:3",
										"nodeType": "VariableDeclaration",
										"scope": 913,
										"src": "1864:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 910,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1864:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1839:43:3"
							},
							"src": "1810:73:3"
						},
						{
							"id": 917,
							"name": "LBToken__SelfApproval",
							"nameLocation": "1890:21:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 916,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 915,
										"mutability": "mutable",
										"name": "owner",
										"nameLocation": "1920:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 917,
										"src": "1912:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 914,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1912:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1911:15:3"
							},
							"src": "1884:43:3"
						},
						{
							"id": 925,
							"name": "LBToken__TransferExceedsBalance",
							"nameLocation": "1934:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 924,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 919,
										"mutability": "mutable",
										"name": "from",
										"nameLocation": "1974:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 925,
										"src": "1966:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 918,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1966:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 921,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "1988:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 925,
										"src": "1980:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 920,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1980:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 923,
										"mutability": "mutable",
										"name": "amount",
										"nameLocation": "2000:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 925,
										"src": "1992:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 922,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1992:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1965:42:3"
							},
							"src": "1928:80:3"
						},
						{
							"id": 927,
							"name": "LBToken__TransferToSelf",
							"nameLocation": "2015:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 926,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "2038:2:3"
							},
							"src": "2009:32:3"
						},
						{
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "2043:23:3",
								"text": "LBFactory errors "
							},
							"id": 933,
							"name": "LBFactory__IdenticalAddresses",
							"nameLocation": "2074:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 932,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 931,
										"mutability": "mutable",
										"name": "token",
										"nameLocation": "2111:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 933,
										"src": "2104:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 930,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 929,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2104:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2104:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2103:14:3"
							},
							"src": "2068:50:3"
						},
						{
							"id": 938,
							"name": "LBFactory__QuoteAssetNotWhitelisted",
							"nameLocation": "2125:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 937,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 936,
										"mutability": "mutable",
										"name": "quoteAsset",
										"nameLocation": "2168:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 938,
										"src": "2161:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 935,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 934,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2161:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2161:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2160:19:3"
							},
							"src": "2119:61:3"
						},
						{
							"id": 943,
							"name": "LBFactory__QuoteAssetAlreadyWhitelisted",
							"nameLocation": "2187:39:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 942,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 941,
										"mutability": "mutable",
										"name": "quoteAsset",
										"nameLocation": "2234:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 943,
										"src": "2227:17:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 940,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 939,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2227:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2227:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2226:19:3"
							},
							"src": "2181:65:3"
						},
						{
							"id": 945,
							"name": "LBFactory__AddressZero",
							"nameLocation": "2253:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 944,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "2275:2:3"
							},
							"src": "2247:31:3"
						},
						{
							"id": 955,
							"name": "LBFactory__LBPairAlreadyExists",
							"nameLocation": "2285:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 954,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 948,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "2323:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 955,
										"src": "2316:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 947,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 946,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2316:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2316:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 951,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "2338:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 955,
										"src": "2331:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 950,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 949,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2331:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2331:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 953,
										"mutability": "mutable",
										"name": "_binStep",
										"nameLocation": "2354:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 955,
										"src": "2346:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 952,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2346:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2315:48:3"
							},
							"src": "2279:85:3"
						},
						{
							"id": 965,
							"name": "LBFactory__LBPairNotCreated",
							"nameLocation": "2371:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 964,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 958,
										"mutability": "mutable",
										"name": "tokenX",
										"nameLocation": "2406:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 965,
										"src": "2399:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 957,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 956,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2399:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2399:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 961,
										"mutability": "mutable",
										"name": "tokenY",
										"nameLocation": "2421:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 965,
										"src": "2414:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$157",
											"typeString": "contract IERC20"
										},
										"typeName": {
											"id": 960,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 959,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "2414:6:3"
											},
											"referencedDeclaration": 157,
											"src": "2414:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 963,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "2437:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 965,
										"src": "2429:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 962,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2429:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2398:47:3"
							},
							"src": "2365:81:3"
						},
						{
							"id": 971,
							"name": "LBFactory__DecreasingPeriods",
							"nameLocation": "2453:28:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 970,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 967,
										"mutability": "mutable",
										"name": "filterPeriod",
										"nameLocation": "2489:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 971,
										"src": "2482:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 966,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2482:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 969,
										"mutability": "mutable",
										"name": "decayPeriod",
										"nameLocation": "2510:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 971,
										"src": "2503:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 968,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2503:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2481:41:3"
							},
							"src": "2447:76:3"
						},
						{
							"id": 977,
							"name": "LBFactory__ReductionFactorOverflows",
							"nameLocation": "2530:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 976,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 973,
										"mutability": "mutable",
										"name": "reductionFactor",
										"nameLocation": "2573:15:3",
										"nodeType": "VariableDeclaration",
										"scope": 977,
										"src": "2566:22:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 972,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2566:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 975,
										"mutability": "mutable",
										"name": "max",
										"nameLocation": "2598:3:3",
										"nodeType": "VariableDeclaration",
										"scope": 977,
										"src": "2590:11:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 974,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2590:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2565:37:3"
							},
							"src": "2524:79:3"
						},
						{
							"id": 983,
							"name": "LBFactory__VariableFeeControlOverflows",
							"nameLocation": "2610:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 982,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 979,
										"mutability": "mutable",
										"name": "variableFeeControl",
										"nameLocation": "2656:18:3",
										"nodeType": "VariableDeclaration",
										"scope": 983,
										"src": "2649:25:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 978,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2649:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 981,
										"mutability": "mutable",
										"name": "max",
										"nameLocation": "2684:3:3",
										"nodeType": "VariableDeclaration",
										"scope": 983,
										"src": "2676:11:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 980,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2676:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2648:40:3"
							},
							"src": "2604:85:3"
						},
						{
							"id": 989,
							"name": "LBFactory__BaseFeesBelowMin",
							"nameLocation": "2696:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 988,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 985,
										"mutability": "mutable",
										"name": "baseFees",
										"nameLocation": "2732:8:3",
										"nodeType": "VariableDeclaration",
										"scope": 989,
										"src": "2724:16:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 984,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2724:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 987,
										"mutability": "mutable",
										"name": "minBaseFees",
										"nameLocation": "2750:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 989,
										"src": "2742:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 986,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2742:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2723:39:3"
							},
							"src": "2690:73:3"
						},
						{
							"id": 995,
							"name": "LBFactory__FeesAboveMax",
							"nameLocation": "2770:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 994,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 991,
										"mutability": "mutable",
										"name": "fees",
										"nameLocation": "2802:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 995,
										"src": "2794:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 990,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2794:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 993,
										"mutability": "mutable",
										"name": "maxFees",
										"nameLocation": "2816:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 995,
										"src": "2808:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 992,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2808:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2793:31:3"
							},
							"src": "2764:61:3"
						},
						{
							"id": 1001,
							"name": "LBFactory__FlashLoanFeeAboveMax",
							"nameLocation": "2832:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1000,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 997,
										"mutability": "mutable",
										"name": "fees",
										"nameLocation": "2872:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 1001,
										"src": "2864:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 996,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2864:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 999,
										"mutability": "mutable",
										"name": "maxFees",
										"nameLocation": "2886:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1001,
										"src": "2878:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 998,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2878:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2863:31:3"
							},
							"src": "2826:69:3"
						},
						{
							"id": 1009,
							"name": "LBFactory__BinStepRequirementsBreached",
							"nameLocation": "2902:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1008,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1003,
										"mutability": "mutable",
										"name": "lowerBound",
										"nameLocation": "2949:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 1009,
										"src": "2941:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1002,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2941:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1005,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "2968:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1009,
										"src": "2961:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 1004,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "2961:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1007,
										"mutability": "mutable",
										"name": "higherBound",
										"nameLocation": "2985:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 1009,
										"src": "2977:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1006,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2977:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "2940:57:3"
							},
							"src": "2896:102:3"
						},
						{
							"id": 1015,
							"name": "LBFactory__ProtocolShareOverflows",
							"nameLocation": "3005:33:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1014,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1011,
										"mutability": "mutable",
										"name": "protocolShare",
										"nameLocation": "3046:13:3",
										"nodeType": "VariableDeclaration",
										"scope": 1015,
										"src": "3039:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 1010,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "3039:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1013,
										"mutability": "mutable",
										"name": "max",
										"nameLocation": "3069:3:3",
										"nodeType": "VariableDeclaration",
										"scope": 1015,
										"src": "3061:11:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1012,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3061:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3038:35:3"
							},
							"src": "2999:75:3"
						},
						{
							"id": 1019,
							"name": "LBFactory__FunctionIsLockedForUsers",
							"nameLocation": "3081:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1018,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1017,
										"mutability": "mutable",
										"name": "user",
										"nameLocation": "3125:4:3",
										"nodeType": "VariableDeclaration",
										"scope": 1019,
										"src": "3117:12:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1016,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3117:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3116:14:3"
							},
							"src": "3075:56:3"
						},
						{
							"id": 1021,
							"name": "LBFactory__FactoryLockIsAlreadyInTheSameState",
							"nameLocation": "3138:45:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1020,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3183:2:3"
							},
							"src": "3132:54:3"
						},
						{
							"id": 1023,
							"name": "LBFactory__LBPairIgnoredIsAlreadyInTheSameState",
							"nameLocation": "3193:47:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1022,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3240:2:3"
							},
							"src": "3187:56:3"
						},
						{
							"id": 1027,
							"name": "LBFactory__BinStepHasNoPreset",
							"nameLocation": "3250:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1026,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1025,
										"mutability": "mutable",
										"name": "binStep",
										"nameLocation": "3288:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1027,
										"src": "3280:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1024,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3280:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3279:17:3"
							},
							"src": "3244:53:3"
						},
						{
							"id": 1031,
							"name": "LBFactory__SameFeeRecipient",
							"nameLocation": "3304:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1030,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1029,
										"mutability": "mutable",
										"name": "feeRecipient",
										"nameLocation": "3340:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 1031,
										"src": "3332:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1028,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3332:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3331:22:3"
							},
							"src": "3298:56:3"
						},
						{
							"id": 1035,
							"name": "LBFactory__SameFlashLoanFee",
							"nameLocation": "3361:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1034,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1033,
										"mutability": "mutable",
										"name": "flashLoanFee",
										"nameLocation": "3397:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 1035,
										"src": "3389:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1032,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3389:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3388:22:3"
							},
							"src": "3355:56:3"
						},
						{
							"id": 1039,
							"name": "LBFactory__LBPairSafetyCheckFailed",
							"nameLocation": "3418:34:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1038,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1037,
										"mutability": "mutable",
										"name": "LBPairImplementation",
										"nameLocation": "3461:20:3",
										"nodeType": "VariableDeclaration",
										"scope": 1039,
										"src": "3453:28:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1036,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3453:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3452:30:3"
							},
							"src": "3412:71:3"
						},
						{
							"id": 1043,
							"name": "LBFactory__SameImplementation",
							"nameLocation": "3490:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1042,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1041,
										"mutability": "mutable",
										"name": "LBPairImplementation",
										"nameLocation": "3528:20:3",
										"nodeType": "VariableDeclaration",
										"scope": 1043,
										"src": "3520:28:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1040,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3520:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3519:30:3"
							},
							"src": "3484:66:3"
						},
						{
							"id": 1045,
							"name": "LBFactory__ImplementationNotSet",
							"nameLocation": "3557:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1044,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3588:2:3"
							},
							"src": "3551:40:3"
						},
						{
							"documentation": {
								"id": 1046,
								"nodeType": "StructuredDocumentation",
								"src": "3593:20:3",
								"text": "LBPair errors "
							},
							"id": 1048,
							"name": "LBPair__InsufficientAmounts",
							"nameLocation": "3621:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1047,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3648:2:3"
							},
							"src": "3615:36:3"
						},
						{
							"id": 1050,
							"name": "LBPair__AddressZero",
							"nameLocation": "3658:19:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1049,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3677:2:3"
							},
							"src": "3652:28:3"
						},
						{
							"id": 1052,
							"name": "LBPair__AddressZeroOrThis",
							"nameLocation": "3687:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1051,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3712:2:3"
							},
							"src": "3681:34:3"
						},
						{
							"id": 1056,
							"name": "LBPair__CompositionFactorFlawed",
							"nameLocation": "3722:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1055,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1054,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "3762:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1056,
										"src": "3754:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1053,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3754:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3753:12:3"
							},
							"src": "3716:50:3"
						},
						{
							"id": 1060,
							"name": "LBPair__InsufficientLiquidityMinted",
							"nameLocation": "3773:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1059,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1058,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "3817:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1060,
										"src": "3809:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1057,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3809:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3808:12:3"
							},
							"src": "3767:54:3"
						},
						{
							"id": 1064,
							"name": "LBPair__InsufficientLiquidityBurned",
							"nameLocation": "3828:35:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1063,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1062,
										"mutability": "mutable",
										"name": "id",
										"nameLocation": "3872:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1064,
										"src": "3864:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1061,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3864:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "3863:12:3"
							},
							"src": "3822:54:3"
						},
						{
							"id": 1066,
							"name": "LBPair__WrongLengths",
							"nameLocation": "3883:20:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1065,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3903:2:3"
							},
							"src": "3877:29:3"
						},
						{
							"id": 1068,
							"name": "LBPair__OnlyStrictlyIncreasingId",
							"nameLocation": "3913:32:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1067,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3945:2:3"
							},
							"src": "3907:41:3"
						},
						{
							"id": 1070,
							"name": "LBPair__OnlyFactory",
							"nameLocation": "3955:19:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1069,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "3974:2:3"
							},
							"src": "3949:28:3"
						},
						{
							"id": 1072,
							"name": "LBPair__DistributionsOverflow",
							"nameLocation": "3984:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1071,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4013:2:3"
							},
							"src": "3978:38:3"
						},
						{
							"id": 1078,
							"name": "LBPair__OnlyFeeRecipient",
							"nameLocation": "4023:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1077,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1074,
										"mutability": "mutable",
										"name": "feeRecipient",
										"nameLocation": "4056:12:3",
										"nodeType": "VariableDeclaration",
										"scope": 1078,
										"src": "4048:20:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1073,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4048:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1076,
										"mutability": "mutable",
										"name": "sender",
										"nameLocation": "4078:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1078,
										"src": "4070:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1075,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4070:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4047:38:3"
							},
							"src": "4017:69:3"
						},
						{
							"id": 1080,
							"name": "LBPair__OracleNotEnoughSample",
							"nameLocation": "4093:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1079,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4122:2:3"
							},
							"src": "4087:38:3"
						},
						{
							"id": 1082,
							"name": "LBPair__AlreadyInitialized",
							"nameLocation": "4132:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1081,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4158:2:3"
							},
							"src": "4126:35:3"
						},
						{
							"id": 1088,
							"name": "LBPair__OracleNewSizeTooSmall",
							"nameLocation": "4168:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1087,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1084,
										"mutability": "mutable",
										"name": "newSize",
										"nameLocation": "4206:7:3",
										"nodeType": "VariableDeclaration",
										"scope": 1088,
										"src": "4198:15:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1083,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4198:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1086,
										"mutability": "mutable",
										"name": "oracleSize",
										"nameLocation": "4223:10:3",
										"nodeType": "VariableDeclaration",
										"scope": 1088,
										"src": "4215:18:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1085,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4215:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4197:37:3"
							},
							"src": "4162:73:3"
						},
						{
							"id": 1090,
							"name": "LBPair__FlashLoanCallbackFailed",
							"nameLocation": "4242:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1089,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4273:2:3"
							},
							"src": "4236:40:3"
						},
						{
							"id": 1092,
							"name": "LBPair__FlashLoanInvalidBalance",
							"nameLocation": "4283:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1091,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4314:2:3"
							},
							"src": "4277:40:3"
						},
						{
							"id": 1094,
							"name": "LBPair__FlashLoanInvalidToken",
							"nameLocation": "4324:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1093,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4353:2:3"
							},
							"src": "4318:38:3"
						},
						{
							"documentation": {
								"id": 1095,
								"nodeType": "StructuredDocumentation",
								"src": "4358:23:3",
								"text": "BinHelper errors "
							},
							"id": 1099,
							"name": "BinHelper__BinStepOverflows",
							"nameLocation": "4389:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1098,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1097,
										"mutability": "mutable",
										"name": "bp",
										"nameLocation": "4425:2:3",
										"nodeType": "VariableDeclaration",
										"scope": 1099,
										"src": "4417:10:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1096,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4417:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4416:12:3"
							},
							"src": "4383:46:3"
						},
						{
							"id": 1101,
							"name": "BinHelper__IdOverflows",
							"nameLocation": "4436:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1100,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4458:2:3"
							},
							"src": "4430:31:3"
						},
						{
							"documentation": {
								"id": 1102,
								"nodeType": "StructuredDocumentation",
								"src": "4463:25:3",
								"text": "Math128x128 errors "
							},
							"id": 1108,
							"name": "Math128x128__PowerUnderflow",
							"nameLocation": "4496:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1107,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1104,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "4532:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1108,
										"src": "4524:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1103,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4524:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1106,
										"mutability": "mutable",
										"name": "y",
										"nameLocation": "4542:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1108,
										"src": "4535:8:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										},
										"typeName": {
											"id": 1105,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "4535:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4523:21:3"
							},
							"src": "4490:55:3"
						},
						{
							"id": 1110,
							"name": "Math128x128__LogUnderflow",
							"nameLocation": "4552:25:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1109,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "4577:2:3"
							},
							"src": "4546:34:3"
						},
						{
							"documentation": {
								"id": 1111,
								"nodeType": "StructuredDocumentation",
								"src": "4582:25:3",
								"text": "Math512Bits errors "
							},
							"id": 1117,
							"name": "Math512Bits__MulDivOverflow",
							"nameLocation": "4615:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1116,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1113,
										"mutability": "mutable",
										"name": "prod1",
										"nameLocation": "4651:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 1117,
										"src": "4643:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1112,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4643:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1115,
										"mutability": "mutable",
										"name": "denominator",
										"nameLocation": "4666:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 1117,
										"src": "4658:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1114,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4658:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4642:36:3"
							},
							"src": "4609:70:3"
						},
						{
							"id": 1123,
							"name": "Math512Bits__ShiftDivOverflow",
							"nameLocation": "4686:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1122,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1119,
										"mutability": "mutable",
										"name": "prod1",
										"nameLocation": "4724:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 1123,
										"src": "4716:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4716:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1121,
										"mutability": "mutable",
										"name": "denominator",
										"nameLocation": "4739:11:3",
										"nodeType": "VariableDeclaration",
										"scope": 1123,
										"src": "4731:19:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1120,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4731:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4715:36:3"
							},
							"src": "4680:72:3"
						},
						{
							"id": 1129,
							"name": "Math512Bits__MulShiftOverflow",
							"nameLocation": "4759:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1128,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1125,
										"mutability": "mutable",
										"name": "prod1",
										"nameLocation": "4797:5:3",
										"nodeType": "VariableDeclaration",
										"scope": 1129,
										"src": "4789:13:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1124,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4789:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1127,
										"mutability": "mutable",
										"name": "offset",
										"nameLocation": "4812:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1129,
										"src": "4804:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4804:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4788:31:3"
							},
							"src": "4753:67:3"
						},
						{
							"id": 1133,
							"name": "Math512Bits__OffsetOverflows",
							"nameLocation": "4827:28:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1132,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1131,
										"mutability": "mutable",
										"name": "offset",
										"nameLocation": "4864:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1133,
										"src": "4856:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1130,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4856:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4855:16:3"
							},
							"src": "4821:51:3"
						},
						{
							"documentation": {
								"id": 1134,
								"nodeType": "StructuredDocumentation",
								"src": "4874:20:3",
								"text": "Oracle errors "
							},
							"id": 1138,
							"name": "Oracle__AlreadyInitialized",
							"nameLocation": "4902:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1137,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1136,
										"mutability": "mutable",
										"name": "_index",
										"nameLocation": "4937:6:3",
										"nodeType": "VariableDeclaration",
										"scope": 1138,
										"src": "4929:14:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1135,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4929:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4928:16:3"
							},
							"src": "4896:49:3"
						},
						{
							"id": 1144,
							"name": "Oracle__LookUpTimestampTooOld",
							"nameLocation": "4952:29:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1143,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1140,
										"mutability": "mutable",
										"name": "_minTimestamp",
										"nameLocation": "4990:13:3",
										"nodeType": "VariableDeclaration",
										"scope": 1144,
										"src": "4982:21:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1139,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4982:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1142,
										"mutability": "mutable",
										"name": "_lookUpTimestamp",
										"nameLocation": "5013:16:3",
										"nodeType": "VariableDeclaration",
										"scope": 1144,
										"src": "5005:24:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1141,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5005:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "4981:49:3"
							},
							"src": "4946:85:3"
						},
						{
							"id": 1146,
							"name": "Oracle__NotInitialized",
							"nameLocation": "5038:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1145,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5060:2:3"
							},
							"src": "5032:31:3"
						},
						{
							"documentation": {
								"id": 1147,
								"nodeType": "StructuredDocumentation",
								"src": "5065:28:3",
								"text": "PendingOwnable errors "
							},
							"id": 1149,
							"name": "PendingOwnable__NotOwner",
							"nameLocation": "5101:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1148,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5125:2:3"
							},
							"src": "5095:33:3"
						},
						{
							"id": 1151,
							"name": "PendingOwnable__NotPendingOwner",
							"nameLocation": "5135:31:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1150,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5166:2:3"
							},
							"src": "5129:40:3"
						},
						{
							"id": 1153,
							"name": "PendingOwnable__PendingOwnerAlreadySet",
							"nameLocation": "5176:38:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1152,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5214:2:3"
							},
							"src": "5170:47:3"
						},
						{
							"id": 1155,
							"name": "PendingOwnable__NoPendingOwner",
							"nameLocation": "5224:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1154,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5254:2:3"
							},
							"src": "5218:39:3"
						},
						{
							"id": 1157,
							"name": "PendingOwnable__AddressZero",
							"nameLocation": "5264:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1156,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5291:2:3"
							},
							"src": "5258:36:3"
						},
						{
							"documentation": {
								"id": 1158,
								"nodeType": "StructuredDocumentation",
								"src": "5296:40:3",
								"text": "ReentrancyGuardUpgradeable errors "
							},
							"id": 1160,
							"name": "ReentrancyGuardUpgradeable__ReentrantCall",
							"nameLocation": "5344:41:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1159,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5385:2:3"
							},
							"src": "5338:50:3"
						},
						{
							"id": 1162,
							"name": "ReentrancyGuardUpgradeable__AlreadyInitialized",
							"nameLocation": "5395:46:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1161,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "5441:2:3"
							},
							"src": "5389:55:3"
						},
						{
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "5446:22:3",
								"text": "SafeCast errors "
							},
							"id": 1167,
							"name": "SafeCast__Exceeds256Bits",
							"nameLocation": "5476:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1166,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1165,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5509:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1167,
										"src": "5501:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1164,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5501:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5500:11:3"
							},
							"src": "5470:42:3"
						},
						{
							"id": 1171,
							"name": "SafeCast__Exceeds248Bits",
							"nameLocation": "5519:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1170,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1169,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5552:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1171,
										"src": "5544:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1168,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5544:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5543:11:3"
							},
							"src": "5513:42:3"
						},
						{
							"id": 1175,
							"name": "SafeCast__Exceeds240Bits",
							"nameLocation": "5562:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1174,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1173,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5595:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1175,
										"src": "5587:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5587:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5586:11:3"
							},
							"src": "5556:42:3"
						},
						{
							"id": 1179,
							"name": "SafeCast__Exceeds232Bits",
							"nameLocation": "5605:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1178,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1177,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5638:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1179,
										"src": "5630:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1176,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5630:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5629:11:3"
							},
							"src": "5599:42:3"
						},
						{
							"id": 1183,
							"name": "SafeCast__Exceeds224Bits",
							"nameLocation": "5648:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1182,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1181,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5681:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1183,
										"src": "5673:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5673:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5672:11:3"
							},
							"src": "5642:42:3"
						},
						{
							"id": 1187,
							"name": "SafeCast__Exceeds216Bits",
							"nameLocation": "5691:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1186,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1185,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5724:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1187,
										"src": "5716:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1184,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5716:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5715:11:3"
							},
							"src": "5685:42:3"
						},
						{
							"id": 1191,
							"name": "SafeCast__Exceeds208Bits",
							"nameLocation": "5734:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1190,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1189,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5767:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1191,
										"src": "5759:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1188,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5759:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5758:11:3"
							},
							"src": "5728:42:3"
						},
						{
							"id": 1195,
							"name": "SafeCast__Exceeds200Bits",
							"nameLocation": "5777:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1194,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1193,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5810:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1195,
										"src": "5802:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1192,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5802:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5801:11:3"
							},
							"src": "5771:42:3"
						},
						{
							"id": 1199,
							"name": "SafeCast__Exceeds192Bits",
							"nameLocation": "5820:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1198,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1197,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5853:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1199,
										"src": "5845:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1196,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5845:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5844:11:3"
							},
							"src": "5814:42:3"
						},
						{
							"id": 1203,
							"name": "SafeCast__Exceeds184Bits",
							"nameLocation": "5863:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1202,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1201,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5896:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1203,
										"src": "5888:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1200,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5888:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5887:11:3"
							},
							"src": "5857:42:3"
						},
						{
							"id": 1207,
							"name": "SafeCast__Exceeds176Bits",
							"nameLocation": "5906:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1206,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1205,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5939:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1207,
										"src": "5931:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1204,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5931:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5930:11:3"
							},
							"src": "5900:42:3"
						},
						{
							"id": 1211,
							"name": "SafeCast__Exceeds168Bits",
							"nameLocation": "5949:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1210,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1209,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "5982:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1211,
										"src": "5974:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1208,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5974:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "5973:11:3"
							},
							"src": "5943:42:3"
						},
						{
							"id": 1215,
							"name": "SafeCast__Exceeds160Bits",
							"nameLocation": "5992:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1214,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1213,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6025:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1215,
										"src": "6017:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6017:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6016:11:3"
							},
							"src": "5986:42:3"
						},
						{
							"id": 1219,
							"name": "SafeCast__Exceeds152Bits",
							"nameLocation": "6035:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1218,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1217,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6068:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1219,
										"src": "6060:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1216,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6060:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6059:11:3"
							},
							"src": "6029:42:3"
						},
						{
							"id": 1223,
							"name": "SafeCast__Exceeds144Bits",
							"nameLocation": "6078:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1222,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1221,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6111:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1223,
										"src": "6103:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1220,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6103:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6102:11:3"
							},
							"src": "6072:42:3"
						},
						{
							"id": 1227,
							"name": "SafeCast__Exceeds136Bits",
							"nameLocation": "6121:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1226,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1225,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6154:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1227,
										"src": "6146:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6146:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6145:11:3"
							},
							"src": "6115:42:3"
						},
						{
							"id": 1231,
							"name": "SafeCast__Exceeds128Bits",
							"nameLocation": "6164:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1230,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1229,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6197:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1231,
										"src": "6189:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1228,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6189:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6188:11:3"
							},
							"src": "6158:42:3"
						},
						{
							"id": 1235,
							"name": "SafeCast__Exceeds120Bits",
							"nameLocation": "6207:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1234,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1233,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6240:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1235,
										"src": "6232:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1232,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6232:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6231:11:3"
							},
							"src": "6201:42:3"
						},
						{
							"id": 1239,
							"name": "SafeCast__Exceeds112Bits",
							"nameLocation": "6250:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1238,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1237,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6283:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1239,
										"src": "6275:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1236,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6275:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6274:11:3"
							},
							"src": "6244:42:3"
						},
						{
							"id": 1243,
							"name": "SafeCast__Exceeds104Bits",
							"nameLocation": "6293:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1242,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1241,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6326:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1243,
										"src": "6318:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1240,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6318:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6317:11:3"
							},
							"src": "6287:42:3"
						},
						{
							"id": 1247,
							"name": "SafeCast__Exceeds96Bits",
							"nameLocation": "6336:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1246,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1245,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6368:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1247,
										"src": "6360:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1244,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6360:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6359:11:3"
							},
							"src": "6330:41:3"
						},
						{
							"id": 1251,
							"name": "SafeCast__Exceeds88Bits",
							"nameLocation": "6378:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1250,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1249,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6410:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1251,
										"src": "6402:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1248,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6402:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6401:11:3"
							},
							"src": "6372:41:3"
						},
						{
							"id": 1255,
							"name": "SafeCast__Exceeds80Bits",
							"nameLocation": "6420:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1254,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1253,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6452:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1255,
										"src": "6444:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1252,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6444:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6443:11:3"
							},
							"src": "6414:41:3"
						},
						{
							"id": 1259,
							"name": "SafeCast__Exceeds72Bits",
							"nameLocation": "6462:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1258,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1257,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6494:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1259,
										"src": "6486:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1256,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6486:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6485:11:3"
							},
							"src": "6456:41:3"
						},
						{
							"id": 1263,
							"name": "SafeCast__Exceeds64Bits",
							"nameLocation": "6504:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1262,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1261,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6536:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1263,
										"src": "6528:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1260,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6528:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6527:11:3"
							},
							"src": "6498:41:3"
						},
						{
							"id": 1267,
							"name": "SafeCast__Exceeds56Bits",
							"nameLocation": "6546:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1266,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1265,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6578:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1267,
										"src": "6570:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1264,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6570:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6569:11:3"
							},
							"src": "6540:41:3"
						},
						{
							"id": 1271,
							"name": "SafeCast__Exceeds48Bits",
							"nameLocation": "6588:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1270,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1269,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6620:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1271,
										"src": "6612:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1268,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6612:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6611:11:3"
							},
							"src": "6582:41:3"
						},
						{
							"id": 1275,
							"name": "SafeCast__Exceeds40Bits",
							"nameLocation": "6630:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1274,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1273,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6662:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1275,
										"src": "6654:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1272,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6654:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6653:11:3"
							},
							"src": "6624:41:3"
						},
						{
							"id": 1279,
							"name": "SafeCast__Exceeds32Bits",
							"nameLocation": "6672:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1278,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1277,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6704:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1279,
										"src": "6696:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1276,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6696:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6695:11:3"
							},
							"src": "6666:41:3"
						},
						{
							"id": 1283,
							"name": "SafeCast__Exceeds24Bits",
							"nameLocation": "6714:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1282,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1281,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6746:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1283,
										"src": "6738:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1280,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6738:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6737:11:3"
							},
							"src": "6708:41:3"
						},
						{
							"id": 1287,
							"name": "SafeCast__Exceeds16Bits",
							"nameLocation": "6756:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1286,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1285,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6788:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1287,
										"src": "6780:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1284,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6780:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6779:11:3"
							},
							"src": "6750:41:3"
						},
						{
							"id": 1291,
							"name": "SafeCast__Exceeds8Bits",
							"nameLocation": "6798:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1290,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1289,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "6829:1:3",
										"nodeType": "VariableDeclaration",
										"scope": 1291,
										"src": "6821:9:3",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 1288,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6821:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "6820:11:3"
							},
							"src": "6792:40:3"
						},
						{
							"documentation": {
								"id": 1292,
								"nodeType": "StructuredDocumentation",
								"src": "6834:22:3",
								"text": "TreeMath errors "
							},
							"id": 1294,
							"name": "TreeMath__ErrorDepthSearch",
							"nameLocation": "6864:26:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1293,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "6890:2:3"
							},
							"src": "6858:35:3"
						},
						{
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "6895:24:3",
								"text": "JoeLibrary errors "
							},
							"id": 1297,
							"name": "JoeLibrary__IdenticalAddresses",
							"nameLocation": "6927:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1296,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "6957:2:3"
							},
							"src": "6921:39:3"
						},
						{
							"id": 1299,
							"name": "JoeLibrary__AddressZero",
							"nameLocation": "6967:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1298,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "6990:2:3"
							},
							"src": "6961:32:3"
						},
						{
							"id": 1301,
							"name": "JoeLibrary__InsufficientAmount",
							"nameLocation": "7000:30:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1300,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7030:2:3"
							},
							"src": "6994:39:3"
						},
						{
							"id": 1303,
							"name": "JoeLibrary__InsufficientLiquidity",
							"nameLocation": "7040:33:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1302,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7073:2:3"
							},
							"src": "7034:42:3"
						},
						{
							"documentation": {
								"id": 1304,
								"nodeType": "StructuredDocumentation",
								"src": "7078:25:3",
								"text": "TokenHelper errors "
							},
							"id": 1306,
							"name": "TokenHelper__NonContract",
							"nameLocation": "7111:24:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1305,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7135:2:3"
							},
							"src": "7105:33:3"
						},
						{
							"id": 1308,
							"name": "TokenHelper__CallFailed",
							"nameLocation": "7145:23:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1307,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7168:2:3"
							},
							"src": "7139:32:3"
						},
						{
							"id": 1310,
							"name": "TokenHelper__TransferFailed",
							"nameLocation": "7178:27:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1309,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7205:2:3"
							},
							"src": "7172:36:3"
						},
						{
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "7210:22:3",
								"text": "LBQuoter errors "
							},
							"id": 1313,
							"name": "LBQuoter_InvalidLength",
							"nameLocation": "7240:22:3",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1312,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "7262:2:3"
							},
							"src": "7234:31:3"
						}
					],
					"src": "33:7233:3"
				},
				"id": 3
			},
			"joe-v2-main/src/LBFactory.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/LBFactory.sol",
					"exportedSymbols": {
						"BinHelper": [
							2562
						],
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2940
						],
						"Clones": [
							79
						],
						"Constants": [
							2964
						],
						"Decoder": [
							2982
						],
						"EnumerableSet": [
							770
						],
						"FeeHelper": [
							3121
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBFlashLoanCallback": [
							2132
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory": [
							1891
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128": [
							3342
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3710
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable": [
							3915
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 1892,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1315,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
							"file": "@openzeppelin/contracts/proxy/Clones.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 80,
							"src": "58:50:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 771,
							"src": "109:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/LBErrors.sol",
							"file": "./LBErrors.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 1314,
							"src": "176:24:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/BinHelper.sol",
							"file": "./libraries/BinHelper.sol",
							"id": 1319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 2563,
							"src": "201:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/Constants.sol",
							"file": "./libraries/Constants.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 2965,
							"src": "237:35:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/Decoder.sol",
							"file": "./libraries/Decoder.sol",
							"id": 1321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 2983,
							"src": "273:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/PendingOwnable.sol",
							"file": "./libraries/PendingOwnable.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 3916,
							"src": "307:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/SafeCast.sol",
							"file": "./libraries/SafeCast.sol",
							"id": 1323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 4634,
							"src": "348:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/interfaces/ILBFactory.sol",
							"file": "./interfaces/ILBFactory.sol",
							"id": 1324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1892,
							"sourceUnit": 2112,
							"src": "383:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1326,
										"name": "PendingOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3915,
										"src": "734:14:4"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "734:14:4"
								},
								{
									"baseName": {
										"id": 1328,
										"name": "ILBFactory",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2111,
										"src": "750:10:4"
									},
									"id": 1329,
									"nodeType": "InheritanceSpecifier",
									"src": "750:10:4"
								}
							],
							"canonicalName": "LBFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1325,
								"nodeType": "StructuredDocumentation",
								"src": "422:290:4",
								"text": "@title Liquidity Book Factory\n @author Trader Joe\n @notice Contract used to deploy and register new LBPairs.\n Enables setting fee parameters, flashloan fees and LBPair implementation.\n Unless the `creationUnlocked` is `true`, only the owner of the factory can create pairs."
							},
							"fullyImplemented": true,
							"id": 1891,
							"linearizedBaseContracts": [
								1891,
								2111,
								3915,
								2436
							],
							"name": "LBFactory",
							"nameLocation": "721:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1332,
									"libraryName": {
										"id": 1330,
										"name": "SafeCast",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4633,
										"src": "773:8:4"
									},
									"nodeType": "UsingForDirective",
									"src": "767:27:4",
									"typeName": {
										"id": 1331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "786:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1335,
									"libraryName": {
										"id": 1333,
										"name": "Decoder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2982,
										"src": "805:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "799:26:4",
									"typeName": {
										"id": 1334,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "817:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"id": 1339,
									"libraryName": {
										"id": 1336,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 770,
										"src": "836:13:4"
									},
									"nodeType": "UsingForDirective",
									"src": "830:49:4",
									"typeName": {
										"id": 1338,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1337,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 483,
											"src": "854:24:4"
										},
										"referencedDeclaration": 483,
										"src": "854:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"baseFunctions": [
										2003
									],
									"constant": true,
									"functionSelector": "bc063e1a",
									"id": 1343,
									"mutability": "constant",
									"name": "MAX_FEE",
									"nameLocation": "918:7:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1341,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "909:8:4"
									},
									"scope": 1891,
									"src": "885:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1340,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e31653138",
										"id": 1342,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "928:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"value": "0.1e18"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2008
									],
									"constant": false,
									"functionSelector": "509ceb90",
									"id": 1346,
									"mutability": "mutable",
									"name": "LBPairImplementation",
									"nameLocation": "972:20:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "963:8:4"
									},
									"scope": 1891,
									"src": "948:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1344,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "948:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2034
									],
									"constant": false,
									"functionSelector": "46904840",
									"id": 1349,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "1023:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1348,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1014:8:4"
									},
									"scope": 1891,
									"src": "999:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1347,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "999:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2044
									],
									"constant": false,
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "1042:117:4",
										"text": "@notice Whether the createLBPair function is unlocked and can be called by anyone (true) or only by owner (false)"
									},
									"functionSelector": "5c779d6d",
									"id": 1353,
									"mutability": "mutable",
									"name": "creationUnlocked",
									"nameLocation": "1185:16:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1176:8:4"
									},
									"scope": 1891,
									"src": "1164:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1351,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1164:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2039
									],
									"constant": false,
									"functionSelector": "4847cdc8",
									"id": 1356,
									"mutability": "mutable",
									"name": "flashLoanFee",
									"nameLocation": "1232:12:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1223:8:4"
									},
									"scope": 1891,
									"src": "1208:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1354,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2052
									],
									"constant": false,
									"functionSelector": "72e47b8c",
									"id": 1361,
									"mutability": "mutable",
									"name": "allLBPairs",
									"nameLocation": "1277:10:4",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1268:8:4"
									},
									"scope": 1891,
									"src": "1251:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_ILBPair_$2398_$dyn_storage",
										"typeString": "contract ILBPair[]"
									},
									"typeName": {
										"baseType": {
											"id": 1358,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1357,
												"name": "ILBPair",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2398,
												"src": "1251:7:4"
											},
											"referencedDeclaration": 2398,
											"src": "1251:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ILBPair_$2398",
												"typeString": "contract ILBPair"
											}
										},
										"id": 1359,
										"nodeType": "ArrayTypeName",
										"src": "1251:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_ILBPair_$2398_$dyn_storage_ptr",
											"typeString": "contract ILBPair[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "1294:244:4",
										"text": "@dev Mapping from a (tokenA, tokenB, binStep) to a LBPair. The tokens are ordered to save gas, but they can be\n in the reverse order in the actual pair. Always query one of the 2 tokens of the pair to assert the order of the 2 tokens"
									},
									"id": 1371,
									"mutability": "mutable",
									"name": "_LBPairsInfo",
									"nameLocation": "1607:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "1543:76:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$_$",
										"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation))"
									},
									"typeName": {
										"id": 1370,
										"keyType": {
											"id": 1364,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1363,
												"name": "IERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 157,
												"src": "1551:6:4"
											},
											"referencedDeclaration": 157,
											"src": "1551:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$157",
												"typeString": "contract IERC20"
											}
										},
										"nodeType": "Mapping",
										"src": "1543:55:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$_$",
											"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation))"
										},
										"valueType": {
											"id": 1369,
											"keyType": {
												"id": 1366,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1365,
													"name": "IERC20",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 157,
													"src": "1569:6:4"
												},
												"referencedDeclaration": 157,
												"src": "1569:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												}
											},
											"nodeType": "Mapping",
											"src": "1561:36:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$",
												"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation)"
											},
											"valueType": {
												"id": 1368,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1367,
													"name": "LBPairInformation",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1905,
													"src": "1579:17:4"
												},
												"referencedDeclaration": 1905,
												"src": "1579:17:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1626:223:4",
										"text": "@dev Whether a preset was set or not, if the bit at `index` is 1, it means that the binStep `index` was set\n The max binStep set is 247. We use this method instead of an array to keep it ordered and to reduce gas"
									},
									"id": 1374,
									"mutability": "mutable",
									"name": "_availablePresets",
									"nameLocation": "1870:17:4",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "1854:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1373,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1854:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1378,
									"mutability": "mutable",
									"name": "_presets",
									"nameLocation": "1960:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "1924:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 1377,
										"keyType": {
											"id": 1375,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1932:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1924:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueType": {
											"id": 1376,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1943:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1381,
									"mutability": "mutable",
									"name": "_quoteAssetWhitelist",
									"nameLocation": "2008:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "1975:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$483_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"id": 1380,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1379,
											"name": "EnumerableSet.AddressSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 483,
											"src": "1975:24:4"
										},
										"referencedDeclaration": 483,
										"src": "1975:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$483_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "2161:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "_feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "2188:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1387,
														"name": "_setFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "2171:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2171:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "2171:31:4"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "2036:85:4",
										"text": "@notice Constructor\n @param _feeRecipient The address of the fee recipient"
									},
									"id": 1392,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "2146:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "2138:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:23:4"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:0:4"
									},
									"scope": 1891,
									"src": "2126:83:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2057
									],
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "2393:41:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1399,
														"name": "allLBPairs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "2410:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_ILBPair_$2398_$dyn_storage",
															"typeString": "contract ILBPair[] storage ref"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2410:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1401,
												"nodeType": "Return",
												"src": "2403:24:4"
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "2215:102:4",
										"text": "@notice View function to return the number of LBPairs created\n @return The number of LBPair"
									},
									"functionSelector": "4e937c3a",
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfLBPairs",
									"nameLocation": "2331:18:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2366:8:4"
									},
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2349:2:4"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "2384:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:9:4"
									},
									"scope": 1891,
									"src": "2322:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2013
									],
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2637:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1410,
															"name": "_quoteAssetWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "2654:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 579,
														"src": "2654:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2654:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1413,
												"nodeType": "Return",
												"src": "2647:36:4"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "2440:117:4",
										"text": "@notice View function to return the number of quote assets whitelisted\n @return The number of quote assets"
									},
									"functionSelector": "80c5061e",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfQuoteAssets",
									"nameLocation": "2571:22:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1406,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2610:8:4"
									},
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2593:2:4"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2628:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:9:4"
									},
									"scope": 1891,
									"src": "2562:128:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2021
									],
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "2956:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1428,
																	"name": "_index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "3004:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1426,
																	"name": "_quoteAssetWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "2980:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																		"typeString": "struct EnumerableSet.AddressSet storage ref"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "at",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 606,
																"src": "2980:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2980:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1425,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2973:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$157_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2973:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1431,
												"nodeType": "Return",
												"src": "2966:46:4"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "2696:176:4",
										"text": "@notice View function to return the quote asset whitelisted at index `index`\n @param _index The index\n @return The address of the _quoteAsset at index `index`"
									},
									"functionSelector": "f89a4cd5",
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAsset",
									"nameLocation": "2886:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2930:8:4"
									},
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "_index",
												"nameLocation": "2908:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2900:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2899:16:4"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2948:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1421,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2948:6:4"
													},
													"referencedDeclaration": 157,
													"src": "2948:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2947:8:4"
									},
									"scope": 1891,
									"src": "2877:142:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2029
									],
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "3300:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1447,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "3355:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3347:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1445,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3347:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3347:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1443,
															"name": "_quoteAssetWhitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "3317:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 564,
														"src": "3317:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3317:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1442,
												"id": 1450,
												"nodeType": "Return",
												"src": "3310:53:4"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "3025:195:4",
										"text": "@notice View function to return whether a token is a quotedAsset (true) or not (false)\n @param _token The address of the asset\n @return Whether the token is a quote asset or not"
									},
									"functionSelector": "27721842",
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isQuoteAsset",
									"nameLocation": "3234:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1439,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3276:8:4"
									},
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3254:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3247:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1435,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3247:6:4"
													},
													"referencedDeclaration": 157,
													"src": "3247:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3246:15:4"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3294:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3294:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:6:4"
									},
									"scope": 1891,
									"src": "3225:145:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2069
									],
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "3822:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1467,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "3861:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1468,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "3870:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1466,
														"name": "_getLBPairInformation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "3839:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$returns$_t_struct$_LBPairInformation_$1905_memory_ptr_$",
															"typeString": "function (contract IERC20,contract IERC20) view returns (struct ILBFactory.LBPairInformation memory)"
														}
													},
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3839:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1905_memory_ptr",
														"typeString": "struct ILBFactory.LBPairInformation memory"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1470,
												"nodeType": "Return",
												"src": "3832:46:4"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "3376:299:4",
										"text": "@notice Returns the LBPairInformation if it exists,\n if not, then the address 0 is returned. The order doesn't matter\n @param _tokenA The address of the first token of the pair\n @param _tokenB The address of the second token of the pair\n @return The LBPairInformation"
									},
									"functionSelector": "eaec42a4",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLBPairInformation",
									"nameLocation": "3689:20:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3778:8:4"
									},
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "3726:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1454,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3719:6:4"
													},
													"referencedDeclaration": 157,
													"src": "3719:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "3750:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3743:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1458,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1457,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3743:6:4"
													},
													"referencedDeclaration": 157,
													"src": "3743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:54:4"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "3796:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1905_memory_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												},
												"typeName": {
													"id": 1463,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1462,
														"name": "LBPairInformation",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1905,
														"src": "3796:17:4"
													},
													"referencedDeclaration": 1905,
													"src": "3796:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage_ptr",
														"typeString": "struct ILBFactory.LBPairInformation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:26:4"
									},
									"scope": 1891,
									"src": "3680:205:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2074
									],
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "4153:492:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_ILBFactory_$2111",
														"typeString": "contract ILBFactory"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 1482,
																		"name": "_LBPairImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "4175:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1481,
																	"name": "ILBPair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2398,
																	"src": "4167:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ILBPair_$2398_$",
																		"typeString": "type(contract ILBPair)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4167:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILBPair_$2398",
																	"typeString": "contract ILBPair"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "factory",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2274,
															"src": "4167:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ILBFactory_$2111_$",
																"typeString": "function () view external returns (contract ILBFactory)"
															}
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4167:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILBFactory_$2111",
															"typeString": "contract ILBFactory"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1486,
														"name": "this",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967268,
														"src": "4211:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LBFactory_$1891",
															"typeString": "contract LBFactory"
														}
													},
													"src": "4167:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"nodeType": "IfStatement",
												"src": "4163:130:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1489,
																"name": "_LBPairImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "4271:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1488,
															"name": "LBFactory__LBPairSafetyCheckFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "4236:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4236:57:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1491,
													"nodeType": "RevertStatement",
													"src": "4229:64:4"
												}
											},
											{
												"assignments": [
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "_oldLBPairImplementation",
														"nameLocation": "4312:24:4",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "4304:32:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1493,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4304:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1496,
												"initialValue": {
													"id": 1495,
													"name": "LBPairImplementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1346,
													"src": "4339:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4304:55:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "_oldLBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "4373:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1498,
														"name": "_LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "4401:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4373:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "4369:126:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1501,
																"name": "_LBPairImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1475,
																"src": "4473:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1500,
															"name": "LBFactory__SameImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "4443:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4443:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1503,
													"nodeType": "RevertStatement",
													"src": "4436:59:4"
												}
											},
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1505,
														"name": "LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4506:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1506,
														"name": "_LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "4529:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4506:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "4506:44:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1510,
															"name": "_oldLBPairImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4590:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1511,
															"name": "_LBPairImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "4616:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1509,
														"name": "LBPairImplementationSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "4566:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4566:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "EmitStatement",
												"src": "4561:77:4"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "3891:165:4",
										"text": "@notice Set the LBPair implementation address\n @dev Needs to be called by the owner\n @param _LBPairImplementation The address of the implementation"
									},
									"functionSelector": "b0384781",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1478,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "4143:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4143:9:4"
										}
									],
									"name": "setLBPairImplementation",
									"nameLocation": "4070:23:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4134:8:4"
									},
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "_LBPairImplementation",
												"nameLocation": "4102:21:4",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4094:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:31:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4153:0:4"
									},
									"scope": 1891,
									"src": "4061:584:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2088
									],
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "5091:2033:4",
										"statements": [
											{
												"assignments": [
													1532
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "_owner",
														"nameLocation": "5109:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 1693,
														"src": "5101:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1531,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5101:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1533,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3775,
														"src": "5118:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5118:7:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5101:24:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5139:17:4",
														"subExpression": {
															"id": 1536,
															"name": "creationUnlocked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "5140:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1538,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5160:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5160:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1540,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5174:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "5160:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5139:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1548,
												"nodeType": "IfStatement",
												"src": "5135:101:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1544,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5225:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5225:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1543,
															"name": "LBFactory__FunctionIsLockedForUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "5189:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5189:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1547,
													"nodeType": "RevertStatement",
													"src": "5182:54:4"
												}
											},
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "_LBPairImplementation",
														"nameLocation": "5255:21:4",
														"nodeType": "VariableDeclaration",
														"scope": 1693,
														"src": "5247:29:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1549,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5247:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"id": 1551,
													"name": "LBPairImplementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1346,
													"src": "5279:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5247:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "_LBPairImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "5314:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5347:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5339:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1554,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5339:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5339:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5314:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1562,
												"nodeType": "IfStatement",
												"src": "5310:81:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1559,
															"name": "LBFactory__ImplementationNotSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "5358:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5358:33:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1561,
													"nodeType": "RevertStatement",
													"src": "5351:40:4"
												}
											},
											{
												"condition": {
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5406:48:4",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1567,
																		"name": "_tokenY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "5445:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5437:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5437:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5437:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1563,
																"name": "_quoteAssetWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "5407:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																	"typeString": "struct EnumerableSet.AddressSet storage ref"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 564,
															"src": "5407:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5407:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"nodeType": "IfStatement",
												"src": "5402:105:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1572,
																"name": "_tokenY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "5499:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1571,
															"name": "LBFactory__QuoteAssetNotWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "5463:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5463:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1574,
													"nodeType": "RevertStatement",
													"src": "5456:51:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1576,
														"name": "_tokenX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "5522:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1577,
														"name": "_tokenY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "5533:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"src": "5522:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1583,
												"nodeType": "IfStatement",
												"src": "5518:69:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1580,
																"name": "_tokenX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "5579:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1579,
															"name": "LBFactory__IdenticalAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "5549:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5549:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1582,
													"nodeType": "RevertStatement",
													"src": "5542:45:4"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1587,
															"name": "_activeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "5693:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 1584,
															"name": "BinHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2562,
															"src": "5668:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_BinHelper_$2562_$",
																"typeString": "type(library BinHelper)"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFromId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2541,
														"src": "5668:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5668:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "5668:35:4"
											},
											{
												"assignments": [
													1592,
													1595
												],
												"declarations": [
													{
														"constant": false,
														"id": 1592,
														"mutability": "mutable",
														"name": "_tokenA",
														"nameLocation": "5829:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1693,
														"src": "5822:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1591,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1590,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 157,
																"src": "5822:6:4"
															},
															"referencedDeclaration": 157,
															"src": "5822:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "_tokenB",
														"nameLocation": "5845:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1693,
														"src": "5838:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1594,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1593,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 157,
																"src": "5838:6:4"
															},
															"referencedDeclaration": 157,
															"src": "5838:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1600,
												"initialValue": {
													"arguments": [
														{
															"id": 1597,
															"name": "_tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "5868:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1598,
															"name": "_tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "5877:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1596,
														"name": "_sortTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "5856:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$returns$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
															"typeString": "function (contract IERC20,contract IERC20) pure returns (contract IERC20,contract IERC20)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5856:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
														"typeString": "tuple(contract IERC20,contract IERC20)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5821:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1603,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "5945:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5937:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5937:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5937:16:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5965:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5957:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5957:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5957:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5937:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1613,
												"nodeType": "IfStatement",
												"src": "5933:67:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1610,
															"name": "LBFactory__AddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "5976:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5976:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1612,
													"nodeType": "RevertStatement",
													"src": "5969:31:4"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1616,
																			"name": "_LBPairsInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1371,
																			"src": "6022:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$_$",
																				"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref))"
																			}
																		},
																		"id": 1618,
																		"indexExpression": {
																			"id": 1617,
																			"name": "_tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1592,
																			"src": "6035:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$157",
																				"typeString": "contract IERC20"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6022:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$",
																			"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref)"
																		}
																	},
																	"id": 1620,
																	"indexExpression": {
																		"id": 1619,
																		"name": "_tokenB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "6044:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6022:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage",
																		"typeString": "struct ILBFactory.LBPairInformation storage ref"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "LBPair",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1902,
																"src": "6022:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILBPair_$2398",
																	"typeString": "contract ILBPair"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ILBPair_$2398",
																	"typeString": "contract ILBPair"
																}
															],
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6014:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1614,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6014:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6014:46:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6072:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6064:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1623,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6064:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6064:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6014:60:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1634,
												"nodeType": "IfStatement",
												"src": "6010:136:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1629,
																"name": "_tokenX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "6126:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1630,
																"name": "_tokenY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "6135:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"hexValue": "31",
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6144:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 1628,
															"name": "LBFactory__LBPairAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6095:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$_t_uint256_$returns$__$",
																"typeString": "function (contract IERC20,contract IERC20,uint256) pure"
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6095:51:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1633,
													"nodeType": "RevertStatement",
													"src": "6088:58:4"
												}
											},
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "_salt",
														"nameLocation": "6165:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1693,
														"src": "6157:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1635,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1640,
																	"name": "_tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "6194:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1641,
																	"name": "_tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "6203:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																],
																"expression": {
																	"id": 1638,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6183:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "6183:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6183:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1637,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "6173:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6157:55:4"
											},
											{
												"expression": {
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "_LBPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "6222:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILBPair_$2398",
															"typeString": "contract ILBPair"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1649,
																		"name": "_LBPairImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "6266:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1650,
																		"name": "_salt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "6289:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1647,
																		"name": "Clones",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 79,
																		"src": "6240:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Clones_$79_$",
																			"typeString": "type(library Clones)"
																		}
																	},
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "cloneDeterministic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 44,
																	"src": "6240:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (address,bytes32) returns (address)"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6240:55:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1646,
															"name": "ILBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2398,
															"src": "6232:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ILBPair_$2398_$",
																"typeString": "type(contract ILBPair)"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6232:64:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILBPair_$2398",
															"typeString": "contract ILBPair"
														}
													},
													"src": "6222:74:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2398",
														"typeString": "contract ILBPair"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "6222:74:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1658,
															"name": "_tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "6326:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1659,
															"name": "_tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "6335:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1660,
															"name": "_activeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "6344:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 1655,
															"name": "_LBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "6307:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILBPair_$2398",
																"typeString": "contract ILBPair"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2397,
														"src": "6307:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$_t_uint24_$returns$__$",
															"typeString": "function (contract IERC20,contract IERC20,uint24) external"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6307:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "6307:47:4"
											},
											{
												"expression": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1663,
																"name": "_LBPairsInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "6365:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$_$",
																	"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref))"
																}
															},
															"id": 1666,
															"indexExpression": {
																"id": 1664,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "6378:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6365:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$",
																"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref)"
															}
														},
														"id": 1667,
														"indexExpression": {
															"id": 1665,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6387:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6365:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage",
															"typeString": "struct ILBFactory.LBPairInformation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1669,
																"name": "_LBPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "6438:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILBPair_$2398",
																	"typeString": "contract ILBPair"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1670,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6475:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6475:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1672,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "6489:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6475:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ILBPair_$2398",
																	"typeString": "contract ILBPair"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1668,
															"name": "LBPairInformation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "6398:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_LBPairInformation_$1905_storage_ptr_$",
																"typeString": "type(struct ILBFactory.LBPairInformation storage pointer)"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"LBPair",
															"createdByOwner"
														],
														"nodeType": "FunctionCall",
														"src": "6398:108:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LBPairInformation_$1905_memory_ptr",
															"typeString": "struct ILBFactory.LBPairInformation memory"
														}
													},
													"src": "6365:141:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage",
														"typeString": "struct ILBFactory.LBPairInformation storage ref"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "6365:141:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1680,
															"name": "_LBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "6533:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILBPair_$2398",
																"typeString": "contract ILBPair"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_ILBPair_$2398",
																"typeString": "contract ILBPair"
															}
														],
														"expression": {
															"id": 1677,
															"name": "allLBPairs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "6517:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_ILBPair_$2398_$dyn_storage",
																"typeString": "contract ILBPair[] storage ref"
															}
														},
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6517:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ILBPair_$2398_$dyn_storage_ptr_$_t_contract$_ILBPair_$2398_$returns$__$bound_to$_t_array$_t_contract$_ILBPair_$2398_$dyn_storage_ptr_$",
															"typeString": "function (contract ILBPair[] storage pointer,contract ILBPair)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6517:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "6517:24:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1684,
															"name": "_tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "6571:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1685,
															"name": "_tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "6580:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1686,
															"name": "_LBPair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "6589:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILBPair_$2398",
																"typeString": "contract ILBPair"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1687,
																	"name": "allLBPairs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "6598:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_ILBPair_$2398_$dyn_storage",
																		"typeString": "contract ILBPair[] storage ref"
																	}
																},
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6598:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6618:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6598:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_contract$_ILBPair_$2398",
																"typeString": "contract ILBPair"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1683,
														"name": "LBPairCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "6557:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$_t_contract$_ILBPair_$2398_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,contract IERC20,contract ILBPair,uint256)"
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6557:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1692,
												"nodeType": "EmitStatement",
												"src": "6552:68:4"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "4651:289:4",
										"text": "@notice Create a liquidity bin LBPair for _tokenX and _tokenY\n @param _tokenX The address of the first token\n @param _tokenY The address of the second token\n @param _activeId The active id of the pair\n @return _LBPair The address of the newly created LBPair"
									},
									"functionSelector": "02e48ce2",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createLBPair",
									"nameLocation": "4954:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1526,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5056:8:4"
									},
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "_tokenX",
												"nameLocation": "4983:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "4976:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1517,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "4976:6:4"
													},
													"referencedDeclaration": 157,
													"src": "4976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "_tokenY",
												"nameLocation": "5007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1520,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "5000:6:4"
													},
													"referencedDeclaration": 157,
													"src": "5000:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "_activeId",
												"nameLocation": "5031:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "5024:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1523,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5024:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:80:4"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_LBPair",
												"nameLocation": "5082:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "5074:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2398",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1528,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1527,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2398,
														"src": "5074:7:4"
													},
													"referencedDeclaration": 2398,
													"src": "5074:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2398",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5073:17:4"
									},
									"scope": 1891,
									"src": "4945:2179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2093
									],
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "7371:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1704,
															"name": "_feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "7398:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1703,
														"name": "_setFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "7381:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7381:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "7381:31:4"
											}
										]
									},
									"documentation": {
										"id": 1695,
										"nodeType": "StructuredDocumentation",
										"src": "7130:160:4",
										"text": "@notice Function to set the recipient of the fees. This address needs to be able to receive ERC20s\n @param _feeRecipient The address of the recipient"
									},
									"functionSelector": "e74b981b",
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1701,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1700,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "7361:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7361:9:4"
										}
									],
									"name": "setFeeRecipient",
									"nameLocation": "7304:15:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1699,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7352:8:4"
									},
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "7328:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "7320:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7320:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7319:23:4"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7371:0:4"
									},
									"scope": 1891,
									"src": "7295:124:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2098
									],
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "7646:191:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "creationUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "7660:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1718,
														"name": "_locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "7680:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7660:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1723,
												"nodeType": "IfStatement",
												"src": "7656:87:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1720,
															"name": "LBFactory__FactoryLockIsAlreadyInTheSameState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "7696:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7696:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1722,
													"nodeType": "RevertStatement",
													"src": "7689:54:4"
												}
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1724,
														"name": "creationUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "7753:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7772:8:4",
														"subExpression": {
															"id": 1725,
															"name": "_locked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "7773:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7753:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "7753:27:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1730,
															"name": "_locked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "7822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1729,
														"name": "FactoryLockedStatusUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "7795:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7795:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1732,
												"nodeType": "EmitStatement",
												"src": "7790:40:4"
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "7426:142:4",
										"text": "@notice Function to set the creation restriction of the Factory\n @param _locked If the creation is restricted (true) or not (false)"
									},
									"functionSelector": "22f3fe14",
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1715,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1714,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "7636:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "7636:9:4"
										}
									],
									"name": "setFactoryLockedState",
									"nameLocation": "7582:21:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1713,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7627:8:4"
									},
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "_locked",
												"nameLocation": "7609:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "7604:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7604:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7603:14:4"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7646:0:4"
									},
									"scope": 1891,
									"src": "7573:264:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2104
									],
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "8052:185:4",
										"statements": [
											{
												"condition": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8066:47:4",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1748,
																		"name": "_quoteAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "8100:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8092:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1746,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8092:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8092:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1744,
																"name": "_quoteAssetWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "8067:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																	"typeString": "struct EnumerableSet.AddressSet storage ref"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 510,
															"src": "8067:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8067:46:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "8062:124:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1753,
																"name": "_quoteAsset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "8174:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1752,
															"name": "LBFactory__QuoteAssetAlreadyWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "8134:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8134:52:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1755,
													"nodeType": "RevertStatement",
													"src": "8127:59:4"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1758,
															"name": "_quoteAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "8218:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1757,
														"name": "QuoteAssetAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "8202:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$157_$returns$__$",
															"typeString": "function (contract IERC20)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8202:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "EmitStatement",
												"src": "8197:33:4"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "7843:133:4",
										"text": "@notice Function to add an asset to the whitelist of quote assets\n @param _quoteAsset The quote asset (e.g: AVAX, USDC...)"
									},
									"functionSelector": "5a440923",
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1741,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "8042:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8042:9:4"
										}
									],
									"name": "addQuoteAsset",
									"nameLocation": "7990:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8033:8:4"
									},
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "_quoteAsset",
												"nameLocation": "8011:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "8004:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1736,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "8004:6:4"
													},
													"referencedDeclaration": 157,
													"src": "8004:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8003:20:4"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8052:0:4"
									},
									"scope": 1891,
									"src": "7981:256:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2110
									],
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "8460:174:4",
										"statements": [
											{
												"condition": {
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8474:50:4",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1776,
																		"name": "_quoteAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1766,
																		"src": "8511:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$157",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8503:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1774,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8503:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8503:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1772,
																"name": "_quoteAssetWhitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "8475:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$483_storage",
																	"typeString": "struct EnumerableSet.AddressSet storage ref"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "remove",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 537,
															"src": "8475:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$483_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$483_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8475:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1784,
												"nodeType": "IfStatement",
												"src": "8470:111:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1781,
																"name": "_quoteAsset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "8569:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1780,
															"name": "LBFactory__QuoteAssetNotWhitelisted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8533:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$157_$returns$__$",
																"typeString": "function (contract IERC20) pure"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8533:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1783,
													"nodeType": "RevertStatement",
													"src": "8526:55:4"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1786,
															"name": "_quoteAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "8615:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														],
														"id": 1785,
														"name": "QuoteAssetRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1998,
														"src": "8597:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$157_$returns$__$",
															"typeString": "function (contract IERC20)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "EmitStatement",
												"src": "8592:35:4"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "8243:138:4",
										"text": "@notice Function to remove an asset from the whitelist of quote assets\n @param _quoteAsset The quote asset (e.g: AVAX, USDC...)"
									},
									"functionSelector": "ddbfd941",
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1770,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1769,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "8450:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "8450:9:4"
										}
									],
									"name": "removeQuoteAsset",
									"nameLocation": "8395:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8441:8:4"
									},
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "_quoteAsset",
												"nameLocation": "8419:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "8412:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1764,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "8412:6:4"
													},
													"referencedDeclaration": 157,
													"src": "8412:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8411:20:4"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8460:0:4"
									},
									"scope": 1891,
									"src": "8386:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "8822:331:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1796,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "8836:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8861:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8853:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1797,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8853:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8853:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8836:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1805,
												"nodeType": "IfStatement",
												"src": "8832:64:4",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1802,
															"name": "LBFactory__AddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "8872:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8872:24:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1804,
													"nodeType": "RevertStatement",
													"src": "8865:31:4"
												}
											},
											{
												"assignments": [
													1807
												],
												"declarations": [
													{
														"constant": false,
														"id": 1807,
														"mutability": "mutable",
														"name": "_oldFeeRecipient",
														"nameLocation": "8915:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1827,
														"src": "8907:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1806,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8907:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1809,
												"initialValue": {
													"id": 1808,
													"name": "feeRecipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1349,
													"src": "8934:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8907:39:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1810,
														"name": "_oldFeeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "8960:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1811,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "8980:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8960:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1817,
												"nodeType": "IfStatement",
												"src": "8956:88:4",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1814,
																"name": "_feeRecipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "9030:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1813,
															"name": "LBFactory__SameFeeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "9002:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9002:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1816,
													"nodeType": "RevertStatement",
													"src": "8995:49:4"
												}
											},
											{
												"expression": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1818,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "9055:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1819,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "9070:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9055:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "9055:28:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1823,
															"name": "_oldFeeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "9114:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1824,
															"name": "_feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "9132:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1822,
														"name": "FeeRecipientSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "9098:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9098:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "EmitStatement",
												"src": "9093:53:4"
											}
										]
									},
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "8640:119:4",
										"text": "@notice Internal function to set the recipient of the fee\n @param _feeRecipient The address of the recipient"
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setFeeRecipient",
									"nameLocation": "8773:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "8798:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "8790:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8790:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8789:23:4"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8822:0:4"
									},
									"scope": 1891,
									"src": "8764:389:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "9602:114:4",
										"statements": [
											{
												"expression": {
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1841,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "9613:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1842,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "9622:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"id": 1843,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "9612:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1845,
																"name": "_tokenA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "9645:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1846,
																"name": "_tokenB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "9654:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_contract$_IERC20_$157",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1844,
															"name": "_sortTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "9633:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$returns$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
																"typeString": "function (contract IERC20,contract IERC20) pure returns (contract IERC20,contract IERC20)"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9633:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
															"typeString": "tuple(contract IERC20,contract IERC20)"
														}
													},
													"src": "9612:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "9612:50:4"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1850,
															"name": "_LBPairsInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "9679:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$_$",
																"typeString": "mapping(contract IERC20 => mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref))"
															}
														},
														"id": 1852,
														"indexExpression": {
															"id": 1851,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "9692:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9679:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_contract$_IERC20_$157_$_t_struct$_LBPairInformation_$1905_storage_$",
															"typeString": "mapping(contract IERC20 => struct ILBFactory.LBPairInformation storage ref)"
														}
													},
													"id": 1854,
													"indexExpression": {
														"id": 1853,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "9701:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9679:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage",
														"typeString": "struct ILBFactory.LBPairInformation storage ref"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1855,
												"nodeType": "Return",
												"src": "9672:37:4"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "9165:299:4",
										"text": "@notice Returns the LBPairInformation if it exists,\n if not, then the address 0 is returned. The order doesn't matter\n @param _tokenA The address of the first token of the pair\n @param _tokenB The address of the second token of the pair\n @return The LBPairInformation"
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getLBPairInformation",
									"nameLocation": "9478:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "9516:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "9509:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1830,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "9509:6:4"
													},
													"referencedDeclaration": 157,
													"src": "9509:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "9540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "9533:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1833,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "9533:6:4"
													},
													"referencedDeclaration": 157,
													"src": "9533:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9499:54:4"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "9576:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1905_memory_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												},
												"typeName": {
													"id": 1838,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1837,
														"name": "LBPairInformation",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1905,
														"src": "9576:17:4"
													},
													"referencedDeclaration": 1905,
													"src": "9576:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage_ptr",
														"typeString": "struct ILBFactory.LBPairInformation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9575:26:4"
									},
									"scope": 1891,
									"src": "9469:247:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "10045:114:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1873,
														"name": "_tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "10059:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1874,
														"name": "_tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "10069:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$157",
															"typeString": "contract IERC20"
														}
													},
													"src": "10059:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "IfStatement",
												"src": "10055:62:4",
												"trueBody": {
													"expression": {
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1876,
																	"name": "_tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "10079:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1877,
																	"name": "_tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "10088:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"id": 1878,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "10078:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
																"typeString": "tuple(contract IERC20,contract IERC20)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1879,
																	"name": "_tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "10100:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1880,
																	"name": "_tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "10109:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$157",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"id": 1881,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10099:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
																"typeString": "tuple(contract IERC20,contract IERC20)"
															}
														},
														"src": "10078:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1883,
													"nodeType": "ExpressionStatement",
													"src": "10078:39:4"
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1885,
															"name": "_tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1861,
															"src": "10135:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1886,
															"name": "_tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "10144:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$157",
																"typeString": "contract IERC20"
															}
														}
													],
													"id": 1887,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10134:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_contract$_IERC20_$157_$_t_contract$_IERC20_$157_$",
														"typeString": "tuple(contract IERC20,contract IERC20)"
													}
												},
												"functionReturnParameters": 1872,
												"id": 1888,
												"nodeType": "Return",
												"src": "10127:25:4"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "9722:227:4",
										"text": "@notice Private view function to sort 2 tokens in ascending order\n @param _tokenA The first token\n @param _tokenB The second token\n @return The sorted first token\n @return The sorted second token"
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sortTokens",
									"nameLocation": "9963:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "_tokenA",
												"nameLocation": "9982:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "9975:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1859,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "9975:6:4"
													},
													"referencedDeclaration": 157,
													"src": "9975:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "_tokenB",
												"nameLocation": "9998:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "9991:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1863,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1862,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "9991:6:4"
													},
													"referencedDeclaration": 157,
													"src": "9991:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9974:32:4"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "10029:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1866,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "10029:6:4"
													},
													"referencedDeclaration": 157,
													"src": "10029:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "10037:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "10037:6:4"
													},
													"referencedDeclaration": 157,
													"src": "10037:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10028:16:4"
									},
									"scope": 1891,
									"src": "9954:205:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1892,
							"src": "712:9449:4",
							"usedErrors": [
								933,
								938,
								943,
								945,
								955,
								1019,
								1021,
								1031,
								1039,
								1043,
								1045,
								1101,
								1108,
								1149,
								1151,
								1153,
								1155,
								1157
							]
						}
					],
					"src": "33:10129:4"
				},
				"id": 4
			},
			"joe-v2-main/src/interfaces/ILBFactory.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/interfaces/ILBFactory.sol",
					"exportedSymbols": {
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						]
					},
					"id": 2112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1893,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2112,
							"sourceUnit": 158,
							"src": "58:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/interfaces/ILBPair.sol",
							"file": "./ILBPair.sol",
							"id": 1895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2112,
							"sourceUnit": 2399,
							"src": "116:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/interfaces/IPendingOwnable.sol",
							"file": "./IPendingOwnable.sol",
							"id": 1896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2112,
							"sourceUnit": 2437,
							"src": "140:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1898,
										"name": "IPendingOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2436,
										"src": "317:15:5"
									},
									"id": 1899,
									"nodeType": "InheritanceSpecifier",
									"src": "317:15:5"
								}
							],
							"canonicalName": "ILBFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1897,
								"nodeType": "StructuredDocumentation",
								"src": "173:120:5",
								"text": "@title Liquidity Book Factory Interface\n @author Trader Joe\n @notice Required interface of LBFactory contract"
							},
							"fullyImplemented": false,
							"id": 2111,
							"linearizedBaseContracts": [
								2111,
								2436
							],
							"name": "ILBFactory",
							"nameLocation": "303:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ILBFactory.LBPairInformation",
									"id": 1905,
									"members": [
										{
											"constant": false,
											"id": 1902,
											"mutability": "mutable",
											"name": "LBPair",
											"nameLocation": "756:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 1905,
											"src": "748:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ILBPair_$2398",
												"typeString": "contract ILBPair"
											},
											"typeName": {
												"id": 1901,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1900,
													"name": "ILBPair",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2398,
													"src": "748:7:5"
												},
												"referencedDeclaration": 2398,
												"src": "748:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2398",
													"typeString": "contract ILBPair"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1904,
											"mutability": "mutable",
											"name": "createdByOwner",
											"nameLocation": "777:14:5",
											"nodeType": "VariableDeclaration",
											"scope": 1905,
											"src": "772:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1903,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "772:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LBPairInformation",
									"nameLocation": "720:17:5",
									"nodeType": "StructDefinition",
									"scope": 2111,
									"src": "713:85:5",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1918,
									"name": "LBPairCreated",
									"nameLocation": "810:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "848:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "833:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1907,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1906,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "833:6:5"
													},
													"referencedDeclaration": 157,
													"src": "833:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "879:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "864:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1910,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1909,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "864:6:5"
													},
													"referencedDeclaration": 157,
													"src": "864:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"indexed": false,
												"mutability": "mutable",
												"name": "LBPair",
												"nameLocation": "903:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "895:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2398",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1913,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1912,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2398,
														"src": "895:7:5"
													},
													"referencedDeclaration": 2398,
													"src": "895:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2398",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"indexed": false,
												"mutability": "mutable",
												"name": "pid",
												"nameLocation": "927:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "919:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:113:5"
									},
									"src": "804:133:5"
								},
								{
									"anonymous": false,
									"id": 1924,
									"name": "FeeRecipientSet",
									"nameLocation": "949:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldRecipient",
												"nameLocation": "973:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "965:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRecipient",
												"nameLocation": "995:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "987:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:44:5"
									},
									"src": "943:66:5"
								},
								{
									"anonymous": false,
									"id": 1930,
									"name": "FlashLoanFeeSet",
									"nameLocation": "1021:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFlashLoanFee",
												"nameLocation": "1045:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1037:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFlashLoanFee",
												"nameLocation": "1070:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "1062:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:50:5"
									},
									"src": "1015:72:5"
								},
								{
									"anonymous": false,
									"id": 1951,
									"name": "FeeParametersSet",
									"nameLocation": "1099:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1141:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1125:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"indexed": true,
												"mutability": "mutable",
												"name": "LBPair",
												"nameLocation": "1173:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1157:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2398",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1934,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1933,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2398,
														"src": "1157:7:5"
													},
													"referencedDeclaration": 2398,
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2398",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseFactor",
												"nameLocation": "1197:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1189:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"indexed": false,
												"mutability": "mutable",
												"name": "filterPeriod",
												"nameLocation": "1225:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1217:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"indexed": false,
												"mutability": "mutable",
												"name": "decayPeriod",
												"nameLocation": "1255:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1247:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"indexed": false,
												"mutability": "mutable",
												"name": "reductionFactor",
												"nameLocation": "1284:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1276:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableFeeControl",
												"nameLocation": "1317:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1309:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolShare",
												"nameLocation": "1353:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1345:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxVolatilityAccumulated",
												"nameLocation": "1384:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "1376:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:299:5"
									},
									"src": "1093:322:5"
								},
								{
									"anonymous": false,
									"id": 1955,
									"name": "FactoryLockedStatusUpdated",
									"nameLocation": "1427:26:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1459:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "1454:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1454:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1453:15:5"
									},
									"src": "1421:48:5"
								},
								{
									"anonymous": false,
									"id": 1961,
									"name": "LBPairImplementationSet",
									"nameLocation": "1481:23:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldLBPairImplementation",
												"nameLocation": "1513:23:5",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1505:31:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"indexed": false,
												"mutability": "mutable",
												"name": "LBPairImplementation",
												"nameLocation": "1546:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "1538:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:63:5"
									},
									"src": "1475:93:5"
								},
								{
									"anonymous": false,
									"id": 1968,
									"name": "LBPairIgnoredStateChanged",
									"nameLocation": "1580:25:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"indexed": true,
												"mutability": "mutable",
												"name": "LBPair",
												"nameLocation": "1622:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1606:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2398",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 1963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1962,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2398,
														"src": "1606:7:5"
													},
													"referencedDeclaration": 2398,
													"src": "1606:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2398",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"indexed": false,
												"mutability": "mutable",
												"name": "ignored",
												"nameLocation": "1635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1630:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1630:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:38:5"
									},
									"src": "1574:70:5"
								},
								{
									"anonymous": false,
									"id": 1986,
									"name": "PresetSet",
									"nameLocation": "1656:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"indexed": false,
												"mutability": "mutable",
												"name": "baseFactor",
												"nameLocation": "1683:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1675:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"indexed": false,
												"mutability": "mutable",
												"name": "filterPeriod",
												"nameLocation": "1711:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1703:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"indexed": false,
												"mutability": "mutable",
												"name": "decayPeriod",
												"nameLocation": "1741:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1733:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"indexed": false,
												"mutability": "mutable",
												"name": "reductionFactor",
												"nameLocation": "1770:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1762:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"indexed": false,
												"mutability": "mutable",
												"name": "variableFeeControl",
												"nameLocation": "1803:18:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1795:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1980,
												"indexed": false,
												"mutability": "mutable",
												"name": "protocolShare",
												"nameLocation": "1839:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1831:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1982,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxVolatilityAccumulated",
												"nameLocation": "1870:24:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1862:32:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"indexed": false,
												"mutability": "mutable",
												"name": "sampleLifetime",
												"nameLocation": "1912:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1986,
												"src": "1904:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:267:5"
									},
									"src": "1650:283:5"
								},
								{
									"anonymous": false,
									"id": 1988,
									"name": "PresetRemoved",
									"nameLocation": "1945:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1958:2:5"
									},
									"src": "1939:22:5"
								},
								{
									"anonymous": false,
									"id": 1993,
									"name": "QuoteAssetAdded",
									"nameLocation": "1973:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"indexed": true,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "2004:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "1989:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1989,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "1989:6:5"
													},
													"referencedDeclaration": 157,
													"src": "1989:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1988:27:5"
									},
									"src": "1967:49:5"
								},
								{
									"anonymous": false,
									"id": 1998,
									"name": "QuoteAssetRemoved",
									"nameLocation": "2028:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"indexed": true,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "2061:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "2046:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1994,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2046:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2046:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:27:5"
									},
									"src": "2022:51:5"
								},
								{
									"functionSelector": "bc063e1a",
									"id": 2003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MAX_FEE",
									"nameLocation": "2088:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:2:5"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "2121:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:9:5"
									},
									"scope": 2111,
									"src": "2079:51:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "509ceb90",
									"id": 2008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "LBPairImplementation",
									"nameLocation": "2346:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:2:5"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "2392:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:9:5"
									},
									"scope": 2111,
									"src": "2337:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "80c5061e",
									"id": 2013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfQuoteAssets",
									"nameLocation": "2416:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2438:2:5"
									},
									"returnParameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2464:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2464:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:9:5"
									},
									"scope": 2111,
									"src": "2407:66:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f89a4cd5",
									"id": 2021,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAsset",
									"nameLocation": "2488:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2510:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "2502:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2502:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2501:15:5"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "2540:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2017,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2540:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:8:5"
									},
									"scope": 2111,
									"src": "2479:69:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "27721842",
									"id": 2029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isQuoteAsset",
									"nameLocation": "2563:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2583:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2576:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2023,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2022,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2576:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2576:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2575:14:5"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2613:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2026,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2613:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:6:5"
									},
									"scope": 2111,
									"src": "2554:65:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "46904840",
									"id": 2034,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeRecipient",
									"nameLocation": "2634:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2646:2:5"
									},
									"returnParameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "2672:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:9:5"
									},
									"scope": 2111,
									"src": "2625:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4847cdc8",
									"id": 2039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flashLoanFee",
									"nameLocation": "2696:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:2:5"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "2734:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2734:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2733:9:5"
									},
									"scope": 2111,
									"src": "2687:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c779d6d",
									"id": 2044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "creationUnlocked",
									"nameLocation": "2758:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2774:2:5"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "2800:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2800:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2799:6:5"
									},
									"scope": 2111,
									"src": "2749:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "72e47b8c",
									"id": 2052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allLBPairs",
									"nameLocation": "2821:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2840:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2832:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:12:5"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "2862:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2398",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 2049,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2048,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2398,
														"src": "2862:7:5"
													},
													"referencedDeclaration": 2398,
													"src": "2862:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2398",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:9:5"
									},
									"scope": 2111,
									"src": "2812:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e937c3a",
									"id": 2057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfLBPairs",
									"nameLocation": "2886:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2904:2:5"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "2930:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2930:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2929:9:5"
									},
									"scope": 2111,
									"src": "2877:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eaec42a4",
									"id": 2069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLBPairInformation",
									"nameLocation": "2954:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "2991:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "2984:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2058,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "2984:6:5"
													},
													"referencedDeclaration": 157,
													"src": "2984:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "3014:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "3007:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2061,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3007:6:5"
													},
													"referencedDeclaration": 157,
													"src": "3007:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2974:52:5"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "3050:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_LBPairInformation_$1905_memory_ptr",
													"typeString": "struct ILBFactory.LBPairInformation"
												},
												"typeName": {
													"id": 2066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2065,
														"name": "LBPairInformation",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1905,
														"src": "3050:17:5"
													},
													"referencedDeclaration": 1905,
													"src": "3050:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LBPairInformation_$1905_storage_ptr",
														"typeString": "struct ILBFactory.LBPairInformation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:26:5"
									},
									"scope": 2111,
									"src": "2945:131:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b0384781",
									"id": 2074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setLBPairImplementation",
									"nameLocation": "3707:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "LBPairImplementation",
												"nameLocation": "3739:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "3731:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:30:5"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3769:0:5"
									},
									"scope": 2111,
									"src": "3698:72:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02e48ce2",
									"id": 2088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createLBPair",
									"nameLocation": "3785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "3814:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "3807:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2075,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3807:6:5"
													},
													"referencedDeclaration": 157,
													"src": "3807:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "3837:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "3830:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2078,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "3830:6:5"
													},
													"referencedDeclaration": 157,
													"src": "3830:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "activeId",
												"nameLocation": "3860:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "3853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2081,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3853:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3797:77:5"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "3901:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2088,
												"src": "3893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBPair_$2398",
													"typeString": "contract ILBPair"
												},
												"typeName": {
													"id": 2085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2084,
														"name": "ILBPair",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2398,
														"src": "3893:7:5"
													},
													"referencedDeclaration": 2398,
													"src": "3893:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBPair_$2398",
														"typeString": "contract ILBPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:14:5"
									},
									"scope": 2111,
									"src": "3776:131:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e74b981b",
									"id": 2093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeRecipient",
									"nameLocation": "4774:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "feeRecipient",
												"nameLocation": "4798:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "4790:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4789:22:5"
									},
									"returnParameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4820:0:5"
									},
									"scope": 2111,
									"src": "4765:56:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "22f3fe14",
									"id": 2098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFactoryLockedState",
									"nameLocation": "4901:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "locked",
												"nameLocation": "4928:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "4923:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4923:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4922:13:5"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4944:0:5"
									},
									"scope": 2111,
									"src": "4892:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a440923",
									"id": 2104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addQuoteAsset",
									"nameLocation": "4960:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "4981:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2104,
												"src": "4974:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2100,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2099,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "4974:6:5"
													},
													"referencedDeclaration": 157,
													"src": "4974:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4973:19:5"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5001:0:5"
									},
									"scope": 2111,
									"src": "4951:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ddbfd941",
									"id": 2110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeQuoteAsset",
									"nameLocation": "5017:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "quoteAsset",
												"nameLocation": "5041:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "5034:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2105,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "5034:6:5"
													},
													"referencedDeclaration": 157,
													"src": "5034:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5033:19:5"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5061:0:5"
									},
									"scope": 2111,
									"src": "5008:54:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2112,
							"src": "293:4825:5",
							"usedErrors": []
						}
					],
					"src": "33:5086:5"
				},
				"id": 5
			},
			"joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol",
					"exportedSymbols": {
						"IERC20": [
							157
						],
						"ILBFlashLoanCallback": [
							2132
						]
					},
					"id": 2133,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2113,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2133,
							"sourceUnit": 158,
							"src": "58:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILBFlashLoanCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2115,
								"nodeType": "StructuredDocumentation",
								"src": "116:141:6",
								"text": "@title Liquidity Book Flashloan Callback Interface\n @author Trader Joe\n @notice Required interface to interact with LB flash loans"
							},
							"fullyImplemented": false,
							"id": 2132,
							"linearizedBaseContracts": [
								2132
							],
							"name": "ILBFlashLoanCallback",
							"nameLocation": "267:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "5dbacec5",
									"id": 2131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "LBFlashLoanCallback",
									"nameLocation": "303:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "340:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "332:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "363:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "356:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2118,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "356:6:6"
													},
													"referencedDeclaration": 157,
													"src": "356:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "386:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "378:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "410:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "402:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "438:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "423:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "423:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:126:6"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "467:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:9:6"
									},
									"scope": 2132,
									"src": "294:182:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2133,
							"src": "257:221:6",
							"usedErrors": []
						}
					],
					"src": "33:446:6"
				},
				"id": 6
			},
			"joe-v2-main/src/interfaces/ILBPair.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/interfaces/ILBPair.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2964
						],
						"FeeHelper": [
							3121
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBFlashLoanCallback": [
							2132
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 2399,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2134,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2399,
							"sourceUnit": 158,
							"src": "58:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/FeeHelper.sol",
							"file": "../libraries/FeeHelper.sol",
							"id": 2136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2399,
							"sourceUnit": 3122,
							"src": "116:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/interfaces/ILBFactory.sol",
							"file": "./ILBFactory.sol",
							"id": 2137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2399,
							"sourceUnit": 2112,
							"src": "153:26:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/interfaces/ILBFlashLoanCallback.sol",
							"file": "./ILBFlashLoanCallback.sol",
							"id": 2138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2399,
							"sourceUnit": 2133,
							"src": "180:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ILBPair",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2139,
								"nodeType": "StructuredDocumentation",
								"src": "218:114:7",
								"text": "@title Liquidity Book Pair Interface\n @author Trader Joe\n @notice Required interface of LBPair contract"
							},
							"fullyImplemented": false,
							"id": 2398,
							"linearizedBaseContracts": [
								2398
							],
							"name": "ILBPair",
							"nameLocation": "342:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ILBPair.Bin",
									"id": 2148,
									"members": [
										{
											"constant": false,
											"id": 2141,
											"mutability": "mutable",
											"name": "reserveX",
											"nameLocation": "561:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "553:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 2140,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "553:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2143,
											"mutability": "mutable",
											"name": "reserveY",
											"nameLocation": "587:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "579:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 2142,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "579:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2145,
											"mutability": "mutable",
											"name": "accTokenXPerShare",
											"nameLocation": "613:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "605:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2144,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2147,
											"mutability": "mutable",
											"name": "accTokenYPerShare",
											"nameLocation": "648:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 2148,
											"src": "640:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "640:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bin",
									"nameLocation": "539:3:7",
									"nodeType": "StructDefinition",
									"scope": 2398,
									"src": "532:140:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ILBPair.PairInformation",
									"id": 2158,
									"members": [
										{
											"constant": false,
											"id": 2150,
											"mutability": "mutable",
											"name": "activeId",
											"nameLocation": "1645:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2158,
											"src": "1638:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2149,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1638:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2152,
											"mutability": "mutable",
											"name": "reserveX",
											"nameLocation": "1671:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2158,
											"src": "1663:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint136",
												"typeString": "uint136"
											},
											"typeName": {
												"id": 2151,
												"name": "uint136",
												"nodeType": "ElementaryTypeName",
												"src": "1663:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2154,
											"mutability": "mutable",
											"name": "reserveY",
											"nameLocation": "1697:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 2158,
											"src": "1689:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint136",
												"typeString": "uint136"
											},
											"typeName": {
												"id": 2153,
												"name": "uint136",
												"nodeType": "ElementaryTypeName",
												"src": "1689:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2157,
											"mutability": "mutable",
											"name": "feesY",
											"nameLocation": "1742:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 2158,
											"src": "1715:32:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeesDistribution_$3004_storage_ptr",
												"typeString": "struct FeeHelper.FeesDistribution"
											},
											"typeName": {
												"id": 2156,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2155,
													"name": "FeeHelper.FeesDistribution",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3004,
													"src": "1715:26:7"
												},
												"referencedDeclaration": 3004,
												"src": "1715:26:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeesDistribution_$3004_storage_ptr",
													"typeString": "struct FeeHelper.FeesDistribution"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PairInformation",
									"nameLocation": "1612:15:7",
									"nodeType": "StructDefinition",
									"scope": 2398,
									"src": "1605:149:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ILBPair.Fees",
									"id": 2163,
									"members": [
										{
											"constant": false,
											"id": 2160,
											"mutability": "mutable",
											"name": "tokenX",
											"nameLocation": "2129:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 2163,
											"src": "2121:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2159,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2121:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2162,
											"mutability": "mutable",
											"name": "tokenY",
											"nameLocation": "2153:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 2163,
											"src": "2145:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2161,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "2145:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Fees",
									"nameLocation": "2106:4:7",
									"nodeType": "StructDefinition",
									"scope": 2398,
									"src": "2099:67:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ILBPair.MintInfo",
									"id": 2178,
									"members": [
										{
											"constant": false,
											"id": 2165,
											"mutability": "mutable",
											"name": "amountXIn",
											"nameLocation": "3199:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "3191:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2164,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3191:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2167,
											"mutability": "mutable",
											"name": "amountYIn",
											"nameLocation": "3226:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "3218:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2166,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3218:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2169,
											"mutability": "mutable",
											"name": "amountXAddedToPair",
											"nameLocation": "3253:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "3245:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2168,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3245:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "amountYAddedToPair",
											"nameLocation": "3289:18:7",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "3281:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3281:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2173,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "3325:2:7",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "3317:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2172,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3317:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2175,
											"mutability": "mutable",
											"name": "amountX",
											"nameLocation": "3345:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "3337:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2174,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3337:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2177,
											"mutability": "mutable",
											"name": "amountY",
											"nameLocation": "3370:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "3362:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2176,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3362:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintInfo",
									"nameLocation": "3172:8:7",
									"nodeType": "StructDefinition",
									"scope": 2398,
									"src": "3165:219:7",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 2194,
									"name": "Swap",
									"nameLocation": "3396:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3426:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3410:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3458:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3442:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3493:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3477:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"indexed": false,
												"mutability": "mutable",
												"name": "swapForY",
												"nameLocation": "3510:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3505:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3536:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3528:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3562:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3554:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3554:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"indexed": false,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "3589:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "3581:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3400:199:7"
									},
									"src": "3390:210:7"
								},
								{
									"anonymous": false,
									"id": 2206,
									"name": "CompositionFee",
									"nameLocation": "3613:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3653:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3637:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2198,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3685:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3669:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3720:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3704:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2202,
												"indexed": false,
												"mutability": "mutable",
												"name": "feesX",
												"nameLocation": "3740:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3732:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3732:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2204,
												"indexed": false,
												"mutability": "mutable",
												"name": "feesY",
												"nameLocation": "3763:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "3755:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3755:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:147:7"
									},
									"src": "3607:168:7"
								},
								{
									"anonymous": false,
									"id": 2218,
									"name": "DepositedToBin",
									"nameLocation": "3787:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3827:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3811:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3811:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3859:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3843:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3894:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3878:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "3914:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3906:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "3939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "3931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:151:7"
									},
									"src": "3781:172:7"
								},
								{
									"anonymous": false,
									"id": 2230,
									"name": "WithdrawnFromBin",
									"nameLocation": "3965:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4007:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "3991:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4039:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4023:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "4074:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4058:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4058:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "4094:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4086:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2228,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "4119:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4111:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4111:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:151:7"
									},
									"src": "3959:174:7"
								},
								{
									"anonymous": false,
									"id": 2240,
									"name": "FeesCollected",
									"nameLocation": "4145:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4175:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "4159:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4199:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "4183:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4183:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "4218:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "4210:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4210:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "4235:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "4227:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4227:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:85:7"
									},
									"src": "4139:105:7"
								},
								{
									"anonymous": false,
									"id": 2250,
									"name": "ProtocolFeesCollected",
									"nameLocation": "4256:21:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4294:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "4278:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4318:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "4302:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4302:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "4337:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "4329:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "4354:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "4346:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4277:85:7"
									},
									"src": "4250:113:7"
								},
								{
									"anonymous": false,
									"id": 2256,
									"name": "OracleSizeIncreased",
									"nameLocation": "4375:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousSize",
												"nameLocation": "4403:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4395:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4395:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"indexed": false,
												"mutability": "mutable",
												"name": "newSize",
												"nameLocation": "4425:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4417:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4394:39:7"
									},
									"src": "4369:65:7"
								},
								{
									"functionSelector": "16dc165b",
									"id": 2262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenX",
									"nameLocation": "4449:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4455:2:7"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "4481:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2258,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "4481:6:7"
													},
													"referencedDeclaration": 157,
													"src": "4481:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4480:8:7"
									},
									"scope": 2398,
									"src": "4440:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b7d19fc4",
									"id": 2268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenY",
									"nameLocation": "4504:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4510:2:7"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2268,
												"src": "4536:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2265,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2264,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "4536:6:7"
													},
													"referencedDeclaration": 157,
													"src": "4536:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:8:7"
									},
									"scope": 2398,
									"src": "4495:49:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 2274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "4559:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4566:2:7"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "4592:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILBFactory_$2111",
													"typeString": "contract ILBFactory"
												},
												"typeName": {
													"id": 2271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2270,
														"name": "ILBFactory",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2111,
														"src": "4592:10:7"
													},
													"referencedDeclaration": 2111,
													"src": "4592:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILBFactory_$2111",
														"typeString": "contract ILBFactory"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4591:12:7"
									},
									"scope": 2398,
									"src": "4550:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1b05b83e",
									"id": 2283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReservesAndId",
									"nameLocation": "4619:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4635:2:7"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "reserveX",
												"nameLocation": "4706:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4698:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "reserveY",
												"nameLocation": "4736:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4728:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "activeId",
												"nameLocation": "4766:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2283,
												"src": "4758:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4684:100:7"
									},
									"scope": 2398,
									"src": "4610:175:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a582cdaa",
									"id": 2290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGlobalFees",
									"nameLocation": "4800:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4813:2:7"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "feesYTotal",
												"nameLocation": "4886:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "4878:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2285,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2288,
												"mutability": "mutable",
												"name": "feesYProtocol",
												"nameLocation": "4919:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "4911:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2287,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:80:7"
									},
									"scope": 2398,
									"src": "4791:152:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "98c7adf3",
									"id": 2296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeParameters",
									"nameLocation": "4959:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4972:2:7"
									},
									"returnParameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "4998:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 2293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2292,
														"name": "FeeHelper.FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2999,
														"src": "4998:23:7"
													},
													"referencedDeclaration": 2999,
													"src": "4998:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$2999_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4997:32:7"
									},
									"scope": 2398,
									"src": "4950:80:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f919a83",
									"id": 2305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "findFirstNonEmptyBinId",
									"nameLocation": "5045:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "id_",
												"nameLocation": "5075:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "5068:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2297,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5068:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "sentTokenY",
												"nameLocation": "5085:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "5080:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5080:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5067:29:7"
									},
									"returnParameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5127:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "5120:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2302,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5120:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5119:11:7"
									},
									"scope": 2398,
									"src": "5036:95:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0abe9688",
									"id": 2314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getBin",
									"nameLocation": "5146:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5160:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "5153:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2306,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5153:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5152:11:7"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "reserveX",
												"nameLocation": "5195:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "5187:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5187:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "reserveY",
												"nameLocation": "5213:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "5205:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5186:36:7"
									},
									"scope": 2398,
									"src": "5137:86:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f7cff1f8",
									"id": 2324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingFees",
									"nameLocation": "5238:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5258:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "5250:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5284:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "5267:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2317,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5267:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2318,
													"nodeType": "ArrayTypeName",
													"src": "5267:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5249:39:7"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "5344:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "5336:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:17:7"
									},
									"scope": 2398,
									"src": "5229:124:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "53c059a0",
									"id": 2335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "5368:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "sentTokenY",
												"nameLocation": "5378:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "5373:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5373:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5398:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "5390:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:29:7"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "amountXOut",
												"nameLocation": "5428:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "5420:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "amountYOut",
												"nameLocation": "5448:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2335,
												"src": "5440:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:40:7"
									},
									"scope": 2398,
									"src": "5359:101:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "714c8592",
									"id": 2356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "5476:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5509:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "5490:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2336,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5490:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2337,
													"nodeType": "ArrayTypeName",
													"src": "5490:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "distributionX",
												"nameLocation": "5541:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "5522:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5522:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2340,
													"nodeType": "ArrayTypeName",
													"src": "5522:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "distributionY",
												"nameLocation": "5583:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "5564:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5564:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2343,
													"nodeType": "ArrayTypeName",
													"src": "5564:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5614:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "5606:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5606:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5480:142:7"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "amountXAddedToPair",
												"nameLocation": "5678:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "5670:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5670:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "amountYAddedToPair",
												"nameLocation": "5718:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "5710:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "liquidityMinted",
												"nameLocation": "5767:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 2356,
												"src": "5750:32:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2352,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5750:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2353,
													"nodeType": "ArrayTypeName",
													"src": "5750:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:136:7"
									},
									"scope": 2398,
									"src": "5467:326:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0acd451d",
									"id": 2371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "5808:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5841:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "5822:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2357,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5822:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2358,
													"nodeType": "ArrayTypeName",
													"src": "5822:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "5873:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "5854:26:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2360,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5854:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2361,
													"nodeType": "ArrayTypeName",
													"src": "5854:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5898:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "5890:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5812:94:7"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "5933:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "5925:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "5950:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "5942:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5924:34:7"
									},
									"scope": 2398,
									"src": "5799:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "225b20b9",
									"id": 2381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectFees",
									"nameLocation": "5975:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5995:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "5987:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5987:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6023:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "6004:22:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2374,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6004:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2375,
													"nodeType": "ArrayTypeName",
													"src": "6004:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5986:41:7"
									},
									"returnParameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "6054:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "6046:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6045:17:7"
									},
									"scope": 2398,
									"src": "5966:97:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1af5b9a",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocolFees",
									"nameLocation": "6078:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6097:2:7"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "6126:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "6118:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2383,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6118:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6117:17:7"
									},
									"scope": 2398,
									"src": "6069:66:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "336c8d70",
									"id": 2397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "6154:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "tokenX",
												"nameLocation": "6181:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "6174:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2388,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2387,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "6174:6:7"
													},
													"referencedDeclaration": 157,
													"src": "6174:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "tokenY",
												"nameLocation": "6204:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "6197:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$157",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2390,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 157,
														"src": "6197:6:7"
													},
													"referencedDeclaration": 157,
													"src": "6197:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$157",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "activeId",
												"nameLocation": "6227:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "6220:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2393,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "6220:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6164:77:7"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6250:0:7"
									},
									"scope": 2398,
									"src": "6145:106:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2399,
							"src": "332:5921:7",
							"usedErrors": []
						}
					],
					"src": "33:6221:7"
				},
				"id": 7
			},
			"joe-v2-main/src/interfaces/IPendingOwnable.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/interfaces/IPendingOwnable.sol",
					"exportedSymbols": {
						"IPendingOwnable": [
							2436
						]
					},
					"id": 2437,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2400,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPendingOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2401,
								"nodeType": "StructuredDocumentation",
								"src": "58:153:8",
								"text": "@title Liquidity Book Pending Ownable Interface\n @author Trader Joe\n @notice Required interface of Pending Ownable contract used for LBFactory"
							},
							"fullyImplemented": false,
							"id": 2436,
							"linearizedBaseContracts": [
								2436
							],
							"name": "IPendingOwnable",
							"nameLocation": "221:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 2405,
									"name": "PendingOwnerSet",
									"nameLocation": "249:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"indexed": true,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "281:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "265:28:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "264:30:8"
									},
									"src": "243:52:8"
								},
								{
									"anonymous": false,
									"id": 2411,
									"name": "OwnershipTransferred",
									"nameLocation": "306:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "343:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "327:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "374:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "358:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:57:8"
									},
									"src": "300:84:8"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 2416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "399:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:8"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2416,
												"src": "430:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:9:8"
									},
									"scope": 2436,
									"src": "390:49:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e30c3978",
									"id": 2421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "454:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "466:2:8"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "492:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:9:8"
									},
									"scope": 2436,
									"src": "445:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c42069ec",
									"id": 2426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPendingOwner",
									"nameLocation": "516:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "540:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "532:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "531:22:8"
									},
									"returnParameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:8"
									},
									"scope": 2436,
									"src": "507:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "67ab8a4e",
									"id": 2429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokePendingOwner",
									"nameLocation": "578:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "596:2:8"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "607:0:8"
									},
									"scope": 2436,
									"src": "569:39:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f9dca989",
									"id": 2432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "becomeOwner",
									"nameLocation": "623:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "634:2:8"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:0:8"
									},
									"scope": 2436,
									"src": "614:32:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "715018a6",
									"id": 2435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceOwnership",
									"nameLocation": "661:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:2:8"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:8"
									},
									"scope": 2436,
									"src": "652:38:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2437,
							"src": "211:481:8",
							"usedErrors": []
						}
					],
					"src": "33:660:8"
				},
				"id": 8
			},
			"joe-v2-main/src/libraries/BinHelper.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/BinHelper.sol",
					"exportedSymbols": {
						"BinHelper": [
							2562
						],
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2940
						],
						"Constants": [
							2964
						],
						"FeeHelper": [
							3121
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBFlashLoanCallback": [
							2132
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128": [
							3342
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3710
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 2563,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2438,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 2439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2563,
							"sourceUnit": 1314,
							"src": "58:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/Math128x128.sol",
							"file": "./Math128x128.sol",
							"id": 2440,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2563,
							"sourceUnit": 3343,
							"src": "84:27:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BinHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2441,
								"nodeType": "StructuredDocumentation",
								"src": "113:130:9",
								"text": "@title Liquidity Book Bin Helper Library\n @author Trader Joe\n @notice Contract used to convert bin ID to price and back"
							},
							"fullyImplemented": true,
							"id": 2562,
							"linearizedBaseContracts": [
								2562
							],
							"name": "BinHelper",
							"nameLocation": "251:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2444,
									"libraryName": {
										"id": 2442,
										"name": "Math128x128",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3342,
										"src": "273:11:9"
									},
									"nodeType": "UsingForDirective",
									"src": "267:30:9",
									"typeName": {
										"id": 2443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2449,
									"mutability": "constant",
									"name": "REAL_ID_SHIFT",
									"nameLocation": "327:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 2562,
									"src": "303:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 2445,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "303:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_8388608_by_1",
											"typeString": "int_const 8388608"
										},
										"id": 2448,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 2446,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "343:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "3233",
											"id": 2447,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "348:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_23_by_1",
												"typeString": "int_const 23"
											},
											"value": "23"
										},
										"src": "343:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8388608_by_1",
											"typeString": "int_const 8388608"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2501,
										"nodeType": "Block",
										"src": "750:390:9",
										"statements": [
											{
												"id": 2500,
												"nodeType": "UncheckedBlock",
												"src": "760:374:9",
												"statements": [
													{
														"assignments": [
															2458
														],
														"declarations": [
															{
																"constant": false,
																"id": 2458,
																"mutability": "mutable",
																"name": "_binStepValue",
																"nameLocation": "792:13:9",
																"nodeType": "VariableDeclaration",
																"scope": 2500,
																"src": "784:21:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2457,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "784:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2461,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2459,
																"name": "_getBPValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2561,
																"src": "808:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																	"typeString": "function () pure returns (uint256)"
																}
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "808:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "784:37:9"
													},
													{
														"assignments": [
															2463
														],
														"declarations": [
															{
																"constant": false,
																"id": 2463,
																"mutability": "mutable",
																"name": "_id",
																"nameLocation": "930:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 2500,
																"src": "923:10:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2462,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "923:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2473,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2464,
																"name": "REAL_ID_SHIFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "936:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2465,
																			"name": "_price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "952:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "log2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3285,
																		"src": "952:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (int256)"
																		}
																	},
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "952:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 2468,
																			"name": "_binStepValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "968:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "log2",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3285,
																		"src": "968:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (int256)"
																		}
																	},
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "968:20:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "952:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "936:52:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "923:65:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2474,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2463,
																	"src": "1007:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1013:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1007:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2479,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2463,
																			"src": "1026:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1018:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2477,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1018:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1018:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 2483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1038:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint24_$",
																					"typeString": "type(uint24)"
																				},
																				"typeName": {
																					"id": 2482,
																					"name": "uint24",
																					"nodeType": "ElementaryTypeName",
																					"src": "1038:6:9",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint24_$",
																					"typeString": "type(uint24)"
																				}
																			],
																			"id": 2481,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "1033:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1033:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint24",
																			"typeString": "type(uint24)"
																		}
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "1033:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "1018:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1007:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2491,
														"nodeType": "IfStatement",
														"src": "1003:79:9",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2488,
																	"name": "BinHelper__IdOverflows",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "1058:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1058:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2490,
															"nodeType": "RevertStatement",
															"src": "1051:31:9"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2496,
																			"name": "_id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2463,
																			"src": "1118:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1110:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2494,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1110:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1110:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1103:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint24_$",
																	"typeString": "type(uint24)"
																},
																"typeName": {
																	"id": 2492,
																	"name": "uint24",
																	"nodeType": "ElementaryTypeName",
																	"src": "1103:6:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"functionReturnParameters": 2456,
														"id": 2499,
														"nodeType": "Return",
														"src": "1096:27:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2450,
										"nodeType": "StructuredDocumentation",
										"src": "357:317:9",
										"text": "@notice Returns the id corresponding to the given price\n @dev The id may be inaccurate due to rounding issues, always trust getPriceFromId rather than\n getIdFromPrice\n @param _price The price of y per x as a 128.128-binary fixed-point number\n @return The id corresponding to this price"
									},
									"id": 2502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIdFromPrice",
									"nameLocation": "688:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "711:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "703:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:16:9"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2502,
												"src": "742:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2454,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:8:9"
									},
									"scope": 2562,
									"src": "679:461:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2540,
										"nodeType": "Block",
										"src": "1531:223:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2510,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "1545:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1564:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 2514,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1564:6:9",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			}
																		],
																		"id": 2513,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1559:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1559:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint24",
																		"typeString": "type(uint24)"
																	}
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1559:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1551:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2511,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1551:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1551:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1545:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2523,
												"nodeType": "IfStatement",
												"src": "1541:68:9",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2520,
															"name": "BinHelper__IdOverflows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "1585:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1585:24:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2522,
													"nodeType": "RevertStatement",
													"src": "1578:31:9"
												}
											},
											{
												"id": 2539,
												"nodeType": "UncheckedBlock",
												"src": "1619:129:9",
												"statements": [
													{
														"assignments": [
															2525
														],
														"declarations": [
															{
																"constant": false,
																"id": 2525,
																"mutability": "mutable",
																"name": "_realId",
																"nameLocation": "1650:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 2539,
																"src": "1643:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 2524,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1643:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2532,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2528,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2505,
																		"src": "1667:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1660:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 2526,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1660:6:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1660:11:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2530,
																"name": "REAL_ID_SHIFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2449,
																"src": "1674:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1660:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1643:44:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2536,
																	"name": "_realId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2525,
																	"src": "1729:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2533,
																		"name": "_getBPValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2561,
																		"src": "1709:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 2534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1709:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "power",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3341,
																"src": "1709:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,int256) pure returns (uint256)"
																}
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1709:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2509,
														"id": 2538,
														"nodeType": "Return",
														"src": "1702:35:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2503,
										"nodeType": "StructuredDocumentation",
										"src": "1146:311:9",
										"text": "@notice Returns the price corresponding to the given ID, as a 128.128-binary fixed-point number\n @dev This is the trusted function to link id to price, the other way may be inaccurate\n @param _id The id\n @return The price corresponding to this id, as a 128.128-binary fixed-point number"
									},
									"id": 2541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFromId",
									"nameLocation": "1471:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "1494:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1486:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1485:13:9"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1522:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1521:9:9"
									},
									"scope": 2562,
									"src": "1462:292:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "1971:229:9",
										"statements": [
											{
												"id": 2559,
												"nodeType": "UncheckedBlock",
												"src": "1981:213:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2547,
																	"name": "Constants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "2108:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																		"typeString": "type(library Constants)"
																	}
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "SCALE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2951,
																"src": "2108:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2127:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"expression": {
																					"id": 2550,
																					"name": "Constants",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "2132:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																						"typeString": "type(library Constants)"
																					}
																				},
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "SCALE_OFFSET",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2946,
																				"src": "2132:22:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2127:27:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2553,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2126:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 2554,
																		"name": "Constants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2964,
																		"src": "2158:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																			"typeString": "type(library Constants)"
																		}
																	},
																	"id": 2555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "BASIS_POINT_MAX",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2957,
																	"src": "2158:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2126:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2546,
														"id": 2558,
														"nodeType": "Return",
														"src": "2101:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "1760:151:9",
										"text": "@notice Returns the (1 + bp) value as a 128.128-decimal fixed-point number\n @return The (1+bp) value as a 128.128-decimal fixed-point number"
									},
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBPValue",
									"nameLocation": "1925:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1936:2:9"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "1962:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1961:9:9"
									},
									"scope": 2562,
									"src": "1916:284:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2563,
							"src": "243:1959:9",
							"usedErrors": []
						}
					],
					"src": "33:2170:9"
				},
				"id": 9
			},
			"joe-v2-main/src/libraries/BitMath.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							2940
						]
					},
					"id": 2941,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2564,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2565,
								"nodeType": "StructuredDocumentation",
								"src": "58:120:10",
								"text": "@title Liquidity Book Bit Math Library\n @author Trader Joe\n @notice Helper contract used for bit calculations"
							},
							"fullyImplemented": true,
							"id": 2940,
							"linearizedBaseContracts": [
								2940
							],
							"name": "BitMath",
							"nameLocation": "186:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2592,
										"nodeType": "Block",
										"src": "752:109:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 2577,
														"name": "_rightSide",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2572,
														"src": "769:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2585,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "835:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2586,
																	"name": "_bit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "845:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "852:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "845:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 2584,
															"name": "closestBitLeft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "820:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "820:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "769:85:10",
													"trueExpression": {
														"arguments": [
															{
																"id": 2579,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "798:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2580,
																	"name": "_bit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2570,
																	"src": "808:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "815:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "808:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 2578,
															"name": "closestBitRight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2651,
															"src": "782:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 2583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "782:35:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2576,
												"id": 2591,
												"nodeType": "Return",
												"src": "762:92:10"
											}
										]
									},
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "200:418:10",
										"text": "@notice Returns the closest non-zero bit of `integer` to the right (of left) of the `bit` bits that is not `bit`\n @param _integer The integer as a uint256\n @param _bit The bit index\n @param _rightSide Whether we're searching in the right side of the tree (true) or the left side (false)\n @return The index of the closest non-zero bit. If there is no closest bit, it returns max(uint256)"
									},
									"id": 2593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closestBit",
									"nameLocation": "632:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "_integer",
												"nameLocation": "660:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "652:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "_bit",
												"nameLocation": "684:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "678:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2569,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "678:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2572,
												"mutability": "mutable",
												"name": "_rightSide",
												"nameLocation": "703:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "698:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:77:10"
									},
									"returnParameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "743:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:9:10"
									},
									"scope": 2940,
									"src": "623:238:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "1242:105:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"id": 2603,
														"name": "_isMostSignificant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2598,
														"src": "1259:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2608,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "1331:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2607,
															"name": "leastSignificantBit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "1311:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																"typeString": "function (uint256) pure returns (uint8)"
															}
														},
														"id": 2609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1311:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1259:81:10",
													"trueExpression": {
														"arguments": [
															{
																"id": 2605,
																"name": "_integer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2596,
																"src": "1299:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2604,
															"name": "mostSignificantBit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2809,
															"src": "1280:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																"typeString": "function (uint256) pure returns (uint8)"
															}
														},
														"id": 2606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1280:28:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2602,
												"id": 2611,
												"nodeType": "Return",
												"src": "1252:88:10"
											}
										]
									},
									"documentation": {
										"id": 2594,
										"nodeType": "StructuredDocumentation",
										"src": "867:273:10",
										"text": "@notice Returns the most (or least) significant bit of `_integer`\n @param _integer The integer\n @param _isMostSignificant Whether we want the most (true) or the least (false) significant bit\n @return The index of the most (or least) significant bit"
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "significantBit",
									"nameLocation": "1154:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "_integer",
												"nameLocation": "1177:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "1169:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "_isMostSignificant",
												"nameLocation": "1192:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "1187:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1187:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:43:10"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "1235:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2600,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1235:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:7:10"
									},
									"scope": 2940,
									"src": "1145:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2650,
										"nodeType": "Block",
										"src": "1761:263:10",
										"statements": [
											{
												"id": 2649,
												"nodeType": "UncheckedBlock",
												"src": "1771:247:10",
												"statements": [
													{
														"assignments": [
															2624
														],
														"declarations": [
															{
																"constant": false,
																"id": 2624,
																"mutability": "mutable",
																"name": "_shift",
																"nameLocation": "1803:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 2649,
																"src": "1795:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2623,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1795:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2628,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "323535",
																"id": 2625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2626,
																"name": "bit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "1818:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "1812:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1795:26:10"
													},
													{
														"expression": {
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2629,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2616,
																"src": "1835:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "<<=",
															"rightHandSide": {
																"id": 2630,
																"name": "_shift",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2624,
																"src": "1841:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1835:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2632,
														"nodeType": "ExpressionStatement",
														"src": "1835:12:10"
													},
													{
														"expression": {
															"condition": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2633,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "1947:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1952:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1947:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2636,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1946:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2643,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2616,
																			"src": "1996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2642,
																		"name": "mostSignificantBit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2809,
																		"src": "1977:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																			"typeString": "function (uint256) pure returns (uint8)"
																		}
																	},
																	"id": 2644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1977:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2645,
																	"name": "_shift",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2624,
																	"src": "2001:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1977:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1946:61:10",
															"trueExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1962:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2638,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1962:7:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2637,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1957:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1957:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "1957:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2622,
														"id": 2648,
														"nodeType": "Return",
														"src": "1939:68:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "1353:321:10",
										"text": "@notice Returns the index of the closest bit on the right of x that is non null\n @param x The value as a uint256\n @param bit The index of the bit to start searching at\n @return id The index of the closest non null bit on the right of x.\n If there is no closest bit, it returns max(uint256)"
									},
									"id": 2651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closestBitRight",
									"nameLocation": "1688:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1712:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "1704:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "bit",
												"nameLocation": "1721:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "1715:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2617,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1715:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:22:10"
									},
									"returnParameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1757:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2651,
												"src": "1749:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:12:10"
									},
									"scope": 2940,
									"src": "1679:345:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "2435:141:10",
										"statements": [
											{
												"id": 2681,
												"nodeType": "UncheckedBlock",
												"src": "2445:125:10",
												"statements": [
													{
														"expression": {
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2661,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2654,
																"src": "2469:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": ">>=",
															"rightHandSide": {
																"id": 2662,
																"name": "bit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2656,
																"src": "2475:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "2469:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2664,
														"nodeType": "ExpressionStatement",
														"src": "2469:9:10"
													},
													{
														"expression": {
															"condition": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2665,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2654,
																			"src": "2501:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2506:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2501:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2668,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2500:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2675,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2654,
																			"src": "2551:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2674,
																		"name": "leastSignificantBit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2939,
																		"src": "2531:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																			"typeString": "function (uint256) pure returns (uint8)"
																		}
																	},
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2531:22:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2677,
																	"name": "bit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2656,
																	"src": "2556:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "2531:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "2500:59:10",
															"trueExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2516:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2670,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2516:7:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2669,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2511:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2511:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2511:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2660,
														"id": 2680,
														"nodeType": "Return",
														"src": "2493:66:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2652,
										"nodeType": "StructuredDocumentation",
										"src": "2030:319:10",
										"text": "@notice Returns the index of the closest bit on the left of x that is non null\n @param x The value as a uint256\n @param bit The index of the bit to start searching at\n @return id The index of the closest non null bit on the left of x.\n If there is no closest bit, it returns max(uint256)"
									},
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "closestBitLeft",
									"nameLocation": "2363:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2386:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "2378:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "bit",
												"nameLocation": "2395:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "2389:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2655,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2389:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:22:10"
									},
									"returnParameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2431:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "2423:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:12:10"
									},
									"scope": 2940,
									"src": "2354:222:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "2825:794:10",
										"statements": [
											{
												"id": 2807,
												"nodeType": "UncheckedBlock",
												"src": "2835:778:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2691,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "2863:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2868:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2873:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2868:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "2863:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2705,
														"nodeType": "IfStatement",
														"src": "2859:88:10",
														"trueBody": {
															"id": 2704,
															"nodeType": "Block",
															"src": "2878:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 2698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2696,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "2896:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2902:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "2896:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2699,
																	"nodeType": "ExpressionStatement",
																	"src": "2896:9:10"
																},
																{
																	"expression": {
																		"id": 2702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2700,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "2923:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2929:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "2923:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2703,
																	"nodeType": "ExpressionStatement",
																	"src": "2923:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2706,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "2964:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2969:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2974:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2969:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "2964:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2720,
														"nodeType": "IfStatement",
														"src": "2960:86:10",
														"trueBody": {
															"id": 2719,
															"nodeType": "Block",
															"src": "2978:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2711,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "2996:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3002:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "2996:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2714,
																	"nodeType": "ExpressionStatement",
																	"src": "2996:8:10"
																},
																{
																	"expression": {
																		"id": 2717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2715,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "3022:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3029:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "3022:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2718,
																	"nodeType": "ExpressionStatement",
																	"src": "3022:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2721,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "3063:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3068:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3073:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3068:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "3063:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2735,
														"nodeType": "IfStatement",
														"src": "3059:86:10",
														"trueBody": {
															"id": 2734,
															"nodeType": "Block",
															"src": "3077:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2726,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "3095:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3101:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "3095:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2729,
																	"nodeType": "ExpressionStatement",
																	"src": "3095:8:10"
																},
																{
																	"expression": {
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2730,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "3121:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3128:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "3121:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2733,
																	"nodeType": "ExpressionStatement",
																	"src": "3121:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2736,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "3162:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3167:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3172:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "3167:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "3162:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2750,
														"nodeType": "IfStatement",
														"src": "3158:86:10",
														"trueBody": {
															"id": 2749,
															"nodeType": "Block",
															"src": "3176:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2741,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "3194:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3200:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "3194:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2744,
																	"nodeType": "ExpressionStatement",
																	"src": "3194:8:10"
																},
																{
																	"expression": {
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2745,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "3220:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3227:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "3220:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2748,
																	"nodeType": "ExpressionStatement",
																	"src": "3220:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2751,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "3261:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3266:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3271:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3266:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "3261:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2765,
														"nodeType": "IfStatement",
														"src": "3257:83:10",
														"trueBody": {
															"id": 2764,
															"nodeType": "Block",
															"src": "3274:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2756,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "3292:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3298:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "3292:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2759,
																	"nodeType": "ExpressionStatement",
																	"src": "3292:7:10"
																},
																{
																	"expression": {
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2760,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "3317:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3324:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "3317:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2763,
																	"nodeType": "ExpressionStatement",
																	"src": "3317:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2766,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "3357:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3362:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3367:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3362:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "3357:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2780,
														"nodeType": "IfStatement",
														"src": "3353:83:10",
														"trueBody": {
															"id": 2779,
															"nodeType": "Block",
															"src": "3370:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2771,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "3388:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3394:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "3388:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2774,
																	"nodeType": "ExpressionStatement",
																	"src": "3388:7:10"
																},
																{
																	"expression": {
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "3413:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3420:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "3413:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2778,
																	"nodeType": "ExpressionStatement",
																	"src": "3413:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2781,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "3453:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3458:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3463:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "3458:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "3453:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2795,
														"nodeType": "IfStatement",
														"src": "3449:83:10",
														"trueBody": {
															"id": 2794,
															"nodeType": "Block",
															"src": "3466:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2786,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2686,
																			"src": "3484:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3490:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3484:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2789,
																	"nodeType": "ExpressionStatement",
																	"src": "3484:7:10"
																},
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2790,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "3509:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3516:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3509:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "3509:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2796,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2686,
																"src": "3549:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3554:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3559:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3554:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															},
															"src": "3549:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2806,
														"nodeType": "IfStatement",
														"src": "3545:58:10",
														"trueBody": {
															"id": 2805,
															"nodeType": "Block",
															"src": "3562:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2689,
																			"src": "3580:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3587:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3580:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "3580:8:10"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2684,
										"nodeType": "StructuredDocumentation",
										"src": "2582:165:10",
										"text": "@notice Returns the index of the most significant bit of x\n @param x The value as a uint256\n @return msb The index of the most significant bit of x"
									},
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "2761:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2788:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "2780:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:11:10"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "msb",
												"nameLocation": "2820:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "2814:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2688,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2814:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:11:10"
									},
									"scope": 2940,
									"src": "2752:867:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "3871:825:10",
										"statements": [
											{
												"id": 2937,
												"nodeType": "UncheckedBlock",
												"src": "3881:809:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2817,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "3909:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3914:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "3909:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3921:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3909:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2831,
														"nodeType": "IfStatement",
														"src": "3905:88:10",
														"trueBody": {
															"id": 2830,
															"nodeType": "Block",
															"src": "3924:69:10",
															"statements": [
																{
																	"expression": {
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2822,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "3942:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3948:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "3942:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2825,
																	"nodeType": "ExpressionStatement",
																	"src": "3942:9:10"
																},
																{
																	"expression": {
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2826,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "3969:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3975:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "3969:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2829,
																	"nodeType": "ExpressionStatement",
																	"src": "3969:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2832,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "4010:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4015:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "4010:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4021:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4010:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2846,
														"nodeType": "IfStatement",
														"src": "4006:86:10",
														"trueBody": {
															"id": 2845,
															"nodeType": "Block",
															"src": "4024:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2837,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "4042:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4048:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "4042:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2840,
																	"nodeType": "ExpressionStatement",
																	"src": "4042:8:10"
																},
																{
																	"expression": {
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2841,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "4068:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4075:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "4068:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2844,
																	"nodeType": "ExpressionStatement",
																	"src": "4068:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2847,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "4109:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4114:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "4109:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4120:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4109:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2861,
														"nodeType": "IfStatement",
														"src": "4105:86:10",
														"trueBody": {
															"id": 2860,
															"nodeType": "Block",
															"src": "4123:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2852,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "4141:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4147:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "4141:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2855,
																	"nodeType": "ExpressionStatement",
																	"src": "4141:8:10"
																},
																{
																	"expression": {
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2856,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "4167:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4174:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "4167:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2859,
																	"nodeType": "ExpressionStatement",
																	"src": "4167:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2862,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "4208:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4213:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "4208:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4219:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4208:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2876,
														"nodeType": "IfStatement",
														"src": "4204:86:10",
														"trueBody": {
															"id": 2875,
															"nodeType": "Block",
															"src": "4222:68:10",
															"statements": [
																{
																	"expression": {
																		"id": 2869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2867,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "4240:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4246:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "4240:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2870,
																	"nodeType": "ExpressionStatement",
																	"src": "4240:8:10"
																},
																{
																	"expression": {
																		"id": 2873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2871,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "4266:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4273:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "4266:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2874,
																	"nodeType": "ExpressionStatement",
																	"src": "4266:9:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2877,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "4307:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4312:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "4307:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4317:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4307:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2891,
														"nodeType": "IfStatement",
														"src": "4303:83:10",
														"trueBody": {
															"id": 2890,
															"nodeType": "Block",
															"src": "4320:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2882,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "4338:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4344:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "4338:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2885,
																	"nodeType": "ExpressionStatement",
																	"src": "4338:7:10"
																},
																{
																	"expression": {
																		"id": 2888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2886,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "4363:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4370:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "4363:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2889,
																	"nodeType": "ExpressionStatement",
																	"src": "4363:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2892,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "4403:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4408:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "4403:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4413:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4403:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2906,
														"nodeType": "IfStatement",
														"src": "4399:83:10",
														"trueBody": {
															"id": 2905,
															"nodeType": "Block",
															"src": "4416:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2897,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "4434:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4440:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "4434:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2900,
																	"nodeType": "ExpressionStatement",
																	"src": "4434:7:10"
																},
																{
																	"expression": {
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2901,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "4459:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4466:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "4459:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2904,
																	"nodeType": "ExpressionStatement",
																	"src": "4459:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2907,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "4499:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4504:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "4499:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4509:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4499:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2921,
														"nodeType": "IfStatement",
														"src": "4495:83:10",
														"trueBody": {
															"id": 2920,
															"nodeType": "Block",
															"src": "4512:66:10",
															"statements": [
																{
																	"expression": {
																		"id": 2914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2912,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "4530:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4536:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "4530:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2915,
																	"nodeType": "ExpressionStatement",
																	"src": "4530:7:10"
																},
																{
																	"expression": {
																		"id": 2918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2916,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "4555:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4562:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "4555:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2919,
																	"nodeType": "ExpressionStatement",
																	"src": "4555:8:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2922,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2812,
																	"src": "4595:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4600:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4595:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4605:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2932,
														"nodeType": "IfStatement",
														"src": "4591:58:10",
														"trueBody": {
															"id": 2931,
															"nodeType": "Block",
															"src": "4608:41:10",
															"statements": [
																{
																	"expression": {
																		"id": 2929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2927,
																			"name": "lsb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2815,
																			"src": "4626:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4633:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4626:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 2930,
																	"nodeType": "ExpressionStatement",
																	"src": "4626:8:10"
																}
															]
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "323535",
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4670:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_255_by_1",
																	"typeString": "int_const 255"
																},
																"value": "255"
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2934,
																"name": "lsb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2815,
																"src": "4676:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "4670:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"functionReturnParameters": 2816,
														"id": 2936,
														"nodeType": "Return",
														"src": "4663:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2810,
										"nodeType": "StructuredDocumentation",
										"src": "3625:167:10",
										"text": "@notice Returns the index of the least significant bit of x\n @param x The value as a uint256\n @return lsb The index of the least significant bit of x"
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nameLocation": "3806:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3834:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "3826:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3826:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3825:11:10"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "lsb",
												"nameLocation": "3866:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "3860:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2814,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3860:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3859:11:10"
									},
									"scope": 2940,
									"src": "3797:899:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2941,
							"src": "178:4520:10",
							"usedErrors": []
						}
					],
					"src": "33:4666:10"
				},
				"id": 10
			},
			"joe-v2-main/src/libraries/Constants.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/Constants.sol",
					"exportedSymbols": {
						"Constants": [
							2964
						]
					},
					"id": 2965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2942,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Constants",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2943,
								"nodeType": "StructuredDocumentation",
								"src": "58:125:11",
								"text": "@title Liquidity Book Constants Library\n @author Trader Joe\n @notice Set of constants for Liquidity Book contracts"
							},
							"fullyImplemented": true,
							"id": 2964,
							"linearizedBaseContracts": [
								2964
							],
							"name": "Constants",
							"nameLocation": "191:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2946,
									"mutability": "constant",
									"name": "SCALE_OFFSET",
									"nameLocation": "233:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 2964,
									"src": "207:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "207:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 2945,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "248:3:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2951,
									"mutability": "constant",
									"name": "SCALE",
									"nameLocation": "283:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2964,
									"src": "257:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "257:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 2950,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 2948,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "291:1:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"id": 2949,
											"name": "SCALE_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2946,
											"src": "296:12:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "291:17:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2954,
									"mutability": "constant",
									"name": "PRECISION",
									"nameLocation": "341:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 2964,
									"src": "315:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "315:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 2953,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "353:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2957,
									"mutability": "constant",
									"name": "BASIS_POINT_MAX",
									"nameLocation": "389:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2964,
									"src": "363:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2955,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 2956,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "407:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2958,
										"nodeType": "StructuredDocumentation",
										"src": "420:58:11",
										"text": "@dev The expected return after a successful flash loan"
									},
									"id": 2963,
									"mutability": "constant",
									"name": "CALLBACK_SUCCESS",
									"nameLocation": "509:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 2964,
									"src": "483:90:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2959,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "45524333313536466c617368426f72726f7765722e6f6e466c6173684c6f616e",
												"id": 2961,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "538:34:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
													"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
												},
												"value": "ERC3156FlashBorrower.onFlashLoan"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9",
													"typeString": "literal_string \"ERC3156FlashBorrower.onFlashLoan\""
												}
											],
											"id": 2960,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "528:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2962,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "528:45:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 2965,
							"src": "183:393:11",
							"usedErrors": []
						}
					],
					"src": "33:544:11"
				},
				"id": 11
			},
			"joe-v2-main/src/libraries/Decoder.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/Decoder.sol",
					"exportedSymbols": {
						"Decoder": [
							2982
						]
					},
					"id": 2983,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2966,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Decoder",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2967,
								"nodeType": "StructuredDocumentation",
								"src": "58:126:12",
								"text": "@title Liquidity Book Decoder Library\n @author Trader Joe\n @notice Helper contract used for decoding bytes32 sample"
							},
							"fullyImplemented": true,
							"id": 2982,
							"linearizedBaseContracts": [
								2982
							],
							"name": "Decoder",
							"nameLocation": "192:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2980,
										"nodeType": "Block",
										"src": "615:91:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "634:66:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "648:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_offset",
																				"nodeType": "YulIdentifier",
																				"src": "665:7:12"
																			},
																			{
																				"name": "_sample",
																				"nodeType": "YulIdentifier",
																				"src": "674:7:12"
																			}
																		],
																		"functionName": {
																			"name": "shr",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:21:12"
																	},
																	{
																		"name": "_mask",
																		"nodeType": "YulIdentifier",
																		"src": "684:5:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "657:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:33:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "648:5:12"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2972,
														"isOffset": false,
														"isSlot": false,
														"src": "684:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2974,
														"isOffset": false,
														"isSlot": false,
														"src": "665:7:12",
														"valueSize": 1
													},
													{
														"declaration": 2970,
														"isOffset": false,
														"isSlot": false,
														"src": "674:7:12",
														"valueSize": 1
													},
													{
														"declaration": 2977,
														"isOffset": false,
														"isSlot": false,
														"src": "648:5:12",
														"valueSize": 1
													}
												],
												"id": 2979,
												"nodeType": "InlineAssembly",
												"src": "625:75:12"
											}
										]
									},
									"documentation": {
										"id": 2968,
										"nodeType": "StructuredDocumentation",
										"src": "206:271:12",
										"text": "@notice Internal function to decode a bytes32 sample using a mask and offset\n @dev This function can overflow\n @param _sample The sample as a bytes32\n @param _mask The mask\n @param _offset The offset\n @return value The decoded value"
									},
									"id": 2981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decode",
									"nameLocation": "491:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "_sample",
												"nameLocation": "515:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "507:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2969,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "_mask",
												"nameLocation": "540:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "532:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "_offset",
												"nameLocation": "563:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "555:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:79:12"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "608:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "600:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:12"
									},
									"scope": 2982,
									"src": "482:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2983,
							"src": "184:524:12",
							"usedErrors": []
						}
					],
					"src": "33:676:12"
				},
				"id": 12
			},
			"joe-v2-main/src/libraries/FeeHelper.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/FeeHelper.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2964
						],
						"FeeHelper": [
							3121
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2984,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/Constants.sol",
							"file": "./Constants.sol",
							"id": 2985,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3122,
							"sourceUnit": 2965,
							"src": "58:25:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 2986,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3122,
							"sourceUnit": 4634,
							"src": "84:24:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 2987,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3122,
							"sourceUnit": 4661,
							"src": "109:24:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FeeHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2988,
								"nodeType": "StructuredDocumentation",
								"src": "135:122:13",
								"text": "@title Liquidity Book Fee Helper Library\n @author Trader Joe\n @notice Helper contract used for fees calculation"
							},
							"fullyImplemented": true,
							"id": 3121,
							"linearizedBaseContracts": [
								3121
							],
							"name": "FeeHelper",
							"nameLocation": "265:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2991,
									"libraryName": {
										"id": 2989,
										"name": "SafeCast",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4633,
										"src": "287:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "281:27:13",
									"typeName": {
										"id": 2990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "300:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2994,
									"libraryName": {
										"id": 2992,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4660,
										"src": "319:8:13"
									},
									"nodeType": "UsingForDirective",
									"src": "313:27:13",
									"typeName": {
										"id": 2993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "332:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "FeeHelper.FeeParameters",
									"id": 2999,
									"members": [
										{
											"constant": false,
											"id": 2996,
											"mutability": "mutable",
											"name": "rate",
											"nameLocation": "1228:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 2999,
											"src": "1220:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2995,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1220:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2998,
											"mutability": "mutable",
											"name": "protocolShare",
											"nameLocation": "1250:13:13",
											"nodeType": "VariableDeclaration",
											"scope": 2999,
											"src": "1242:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 2997,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1242:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeParameters",
									"nameLocation": "1196:13:13",
									"nodeType": "StructDefinition",
									"scope": 3121,
									"src": "1189:81:13",
									"visibility": "public"
								},
								{
									"canonicalName": "FeeHelper.FeesDistribution",
									"id": 3004,
									"members": [
										{
											"constant": false,
											"id": 3001,
											"mutability": "mutable",
											"name": "total",
											"nameLocation": "1487:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 3004,
											"src": "1479:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3000,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1479:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3003,
											"mutability": "mutable",
											"name": "protocol",
											"nameLocation": "1510:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 3004,
											"src": "1502:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 3002,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "1502:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeesDistribution",
									"nameLocation": "1452:16:13",
									"nodeType": "StructDefinition",
									"scope": 3121,
									"src": "1445:80:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3031,
										"nodeType": "Block",
										"src": "1954:110:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3015,
																			"name": "_amountWithFees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3010,
																			"src": "1972:15:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 3017,
																					"name": "_fp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3008,
																					"src": "2002:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
																						"typeString": "struct FeeHelper.FeeParameters memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
																						"typeString": "struct FeeHelper.FeeParameters memory"
																					}
																				],
																				"id": 3016,
																				"name": "getTotalFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "1990:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_FeeParameters_$2999_memory_ptr_$returns$_t_uint256_$",
																					"typeString": "function (struct FeeHelper.FeeParameters memory) pure returns (uint256)"
																				}
																			},
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1990:16:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1972:34:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 3020,
																			"name": "Constants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2964,
																			"src": "2009:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																				"typeString": "type(library Constants)"
																			}
																		},
																		"id": 3021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "PRECISION",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2954,
																		"src": "2009:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1972:56:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2031:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1972:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3025,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1971:62:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"expression": {
																	"id": 3026,
																	"name": "Constants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "2037:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																		"typeString": "type(library Constants)"
																	}
																},
																"id": 3027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "PRECISION",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2954,
																"src": "2037:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3028,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2036:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1971:86:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3014,
												"id": 3030,
												"nodeType": "Return",
												"src": "1964:93:13"
											}
										]
									},
									"documentation": {
										"id": 3005,
										"nodeType": "StructuredDocumentation",
										"src": "1531:309:13",
										"text": "@notice Return the amount of fees from an amount\n @dev Rounds amount up, follows `amount = amountWithFees - getFeeAmountFrom(fp, amountWithFees)`\n @param _fp The current fee parameter\n @param _amountWithFees The amount of token sent\n @return The fee amount from the amount sent"
									},
									"id": 3032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeAmountFrom",
									"nameLocation": "1854:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "1892:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "1871:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3006,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2999,
														"src": "1871:13:13"
													},
													"referencedDeclaration": 2999,
													"src": "1871:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$2999_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3010,
												"mutability": "mutable",
												"name": "_amountWithFees",
												"nameLocation": "1905:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "1897:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:51:13"
									},
									"returnParameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "1945:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:9:13"
									},
									"scope": 3121,
									"src": "1845:219:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3067,
										"nodeType": "Block",
										"src": "2456:174:13",
										"statements": [
											{
												"assignments": [
													3044
												],
												"declarations": [
													{
														"constant": false,
														"id": 3044,
														"mutability": "mutable",
														"name": "_fee",
														"nameLocation": "2474:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 3067,
														"src": "2466:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2466:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3048,
												"initialValue": {
													"arguments": [
														{
															"id": 3046,
															"name": "_fp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "2493:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
																"typeString": "struct FeeHelper.FeeParameters memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
																"typeString": "struct FeeHelper.FeeParameters memory"
															}
														],
														"id": 3045,
														"name": "getTotalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3120,
														"src": "2481:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_FeeParameters_$2999_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct FeeHelper.FeeParameters memory) pure returns (uint256)"
														}
													},
													"id": 3047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2481:16:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2466:31:13"
											},
											{
												"assignments": [
													3050
												],
												"declarations": [
													{
														"constant": false,
														"id": 3050,
														"mutability": "mutable",
														"name": "_denominator",
														"nameLocation": "2515:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 3067,
														"src": "2507:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3049,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2507:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3055,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3051,
															"name": "Constants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "2530:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																"typeString": "type(library Constants)"
															}
														},
														"id": 3052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "PRECISION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2954,
														"src": "2530:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3053,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3044,
														"src": "2552:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2530:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2507:49:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3056,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3038,
																			"src": "2574:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3057,
																			"name": "_fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3044,
																			"src": "2584:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2574:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3059,
																		"name": "_denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3050,
																		"src": "2591:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2574:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2606:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2574:33:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3063,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2573:35:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3064,
														"name": "_denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "2611:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2573:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3042,
												"id": 3066,
												"nodeType": "Return",
												"src": "2566:57:13"
											}
										]
									},
									"documentation": {
										"id": 3033,
										"nodeType": "StructuredDocumentation",
										"src": "2070:284:13",
										"text": "@notice Return the fees to add to an amount\n @dev Rounds amount up, follows `amountWithFees = amount + getFeeAmount(fp, amount)`\n @param _fp The current fee parameter\n @param _amount The amount of token sent\n @return The fee amount to add to the amount"
									},
									"id": 3068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeAmount",
									"nameLocation": "2368:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "2402:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "2381:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3034,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2999,
														"src": "2381:13:13"
													},
													"referencedDeclaration": 2999,
													"src": "2381:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$2999_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3038,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2415:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "2407:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2380:43:13"
									},
									"returnParameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "2447:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:9:13"
									},
									"scope": 3121,
									"src": "2359:271:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3105,
										"nodeType": "Block",
										"src": "2980:226:13",
										"statements": [
											{
												"expression": {
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3080,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3078,
															"src": "2990:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeesDistribution_$3004_memory_ptr",
																"typeString": "struct FeeHelper.FeesDistribution memory"
															}
														},
														"id": 3082,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "total",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3001,
														"src": "2990:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3083,
																"name": "_fees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3074,
																"src": "3003:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "safe128",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4287,
															"src": "3003:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint128)"
															}
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3003:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "2990:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 3087,
												"nodeType": "ExpressionStatement",
												"src": "2990:28:13"
											},
											{
												"id": 3104,
												"nodeType": "UncheckedBlock",
												"src": "3085:115:13",
												"statements": [
													{
														"expression": {
															"id": 3102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 3088,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "3109:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeesDistribution_$3004_memory_ptr",
																		"typeString": "struct FeeHelper.FeesDistribution memory"
																	}
																},
																"id": 3090,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "protocol",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3003,
																"src": "3109:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3096,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3093,
																						"name": "_fees",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3074,
																						"src": "3134:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"expression": {
																							"id": 3094,
																							"name": "_fp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3072,
																							"src": "3142:3:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
																								"typeString": "struct FeeHelper.FeeParameters memory"
																							}
																						},
																						"id": 3095,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "protocolShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2998,
																						"src": "3142:17:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint128",
																							"typeString": "uint128"
																						}
																					},
																					"src": "3134:25:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3097,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3133:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"expression": {
																				"id": 3098,
																				"name": "Constants",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2964,
																				"src": "3163:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																					"typeString": "type(library Constants)"
																				}
																			},
																			"id": 3099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "BASIS_POINT_MAX",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2957,
																			"src": "3163:25:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3133:55:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3125:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3091,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "3125:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3125:64:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3109:80:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"id": 3103,
														"nodeType": "ExpressionStatement",
														"src": "3109:80:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3069,
										"nodeType": "StructuredDocumentation",
										"src": "2637:182:13",
										"text": "@notice Return the fees distribution added to an amount\n @param _fp The current fee parameter\n @param _fees The fee amount\n @return fees The fee distribution"
									},
									"id": 3106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeAmountDistribution",
									"nameLocation": "2833:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "2879:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "2858:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3070,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2999,
														"src": "2858:13:13"
													},
													"referencedDeclaration": 2999,
													"src": "2858:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$2999_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "_fees",
												"nameLocation": "2892:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "2884:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2884:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:41:13"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "2970:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3106,
												"src": "2946:28:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeesDistribution_$3004_memory_ptr",
													"typeString": "struct FeeHelper.FeesDistribution"
												},
												"typeName": {
													"id": 3077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3076,
														"name": "FeesDistribution",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3004,
														"src": "2946:16:13"
													},
													"referencedDeclaration": 3004,
													"src": "2946:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeesDistribution_$3004_storage_ptr",
														"typeString": "struct FeeHelper.FeesDistribution"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2945:30:13"
									},
									"scope": 3121,
									"src": "2824:382:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3119,
										"nodeType": "Block",
										"src": "3448:66:13",
										"statements": [
											{
												"id": 3118,
												"nodeType": "UncheckedBlock",
												"src": "3458:50:13",
												"statements": [
													{
														"expression": {
															"expression": {
																"id": 3115,
																"name": "_fp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3110,
																"src": "3489:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
																	"typeString": "struct FeeHelper.FeeParameters memory"
																}
															},
															"id": 3116,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2996,
															"src": "3489:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"functionReturnParameters": 3114,
														"id": 3117,
														"nodeType": "Return",
														"src": "3482:15:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3107,
										"nodeType": "StructuredDocumentation",
										"src": "3212:153:13",
										"text": "@notice Return the total fee, i.e. baseFee + variableFee\n @param _fp The current fee parameter\n @return The total fee, with 18 decimals"
									},
									"id": 3120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalFee",
									"nameLocation": "3379:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "_fp",
												"nameLocation": "3412:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "3391:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FeeParameters_$2999_memory_ptr",
													"typeString": "struct FeeHelper.FeeParameters"
												},
												"typeName": {
													"id": 3109,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3108,
														"name": "FeeParameters",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2999,
														"src": "3391:13:13"
													},
													"referencedDeclaration": 2999,
													"src": "3391:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeParameters_$2999_storage_ptr",
														"typeString": "struct FeeHelper.FeeParameters"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3390:26:13"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "3439:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3439:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:9:13"
									},
									"scope": 3121,
									"src": "3370:144:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3122,
							"src": "257:3259:13",
							"usedErrors": []
						}
					],
					"src": "33:3484:13"
				},
				"id": 13
			},
			"joe-v2-main/src/libraries/Math128x128.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/Math128x128.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2940
						],
						"Constants": [
							2964
						],
						"FeeHelper": [
							3121
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBFlashLoanCallback": [
							2132
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128": [
							3342
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3710
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3123,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3343,
							"sourceUnit": 1314,
							"src": "58:25:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 3125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3343,
							"sourceUnit": 2941,
							"src": "84:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/Constants.sol",
							"file": "./Constants.sol",
							"id": 3126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3343,
							"sourceUnit": 2965,
							"src": "108:25:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/Math512Bits.sol",
							"file": "./Math512Bits.sol",
							"id": 3127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3343,
							"sourceUnit": 3711,
							"src": "134:27:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math128x128",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3128,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:14",
								"text": "@title Liquidity Book Math Helper Library\n @author Trader Joe\n @notice Helper contract used for power and log calculations"
							},
							"fullyImplemented": true,
							"id": 3342,
							"linearizedBaseContracts": [
								3342
							],
							"name": "Math128x128",
							"nameLocation": "304:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3131,
									"libraryName": {
										"id": 3129,
										"name": "Math512Bits",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3710,
										"src": "328:11:14"
									},
									"nodeType": "UsingForDirective",
									"src": "322:30:14",
									"typeName": {
										"id": 3130,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 3134,
									"libraryName": {
										"id": 3132,
										"name": "BitMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2940,
										"src": "363:7:14"
									},
									"nodeType": "UsingForDirective",
									"src": "357:26:14",
									"typeName": {
										"id": 3133,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "375:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 3137,
									"mutability": "constant",
									"name": "LOG_SCALE_OFFSET",
									"nameLocation": "406:16:14",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "389:39:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "389:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313237",
										"id": 3136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "425:3:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_127_by_1",
											"typeString": "int_const 127"
										},
										"value": "127"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3142,
									"mutability": "constant",
									"name": "LOG_SCALE",
									"nameLocation": "451:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "434:50:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "434:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 3141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 3139,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "463:1:14",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"id": 3140,
											"name": "LOG_SCALE_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3137,
											"src": "468:16:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "463:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 3147,
									"mutability": "constant",
									"name": "LOG_SCALE_SQUARED",
									"nameLocation": "507:17:14",
									"nodeType": "VariableDeclaration",
									"scope": 3342,
									"src": "490:58:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 3146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 3144,
											"name": "LOG_SCALE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3142,
											"src": "527:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 3145,
											"name": "LOG_SCALE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 3142,
											"src": "539:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "527:21:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3284,
										"nodeType": "Block",
										"src": "1387:2303:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3155,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "1783:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1788:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1783:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3161,
												"nodeType": "IfStatement",
												"src": "1779:23:14",
												"trueBody": {
													"expression": {
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "1798:4:14",
														"subExpression": {
															"hexValue": "313238",
															"id": 3158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1799:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "128"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_128_by_1",
															"typeString": "int_const -128"
														}
													},
													"functionReturnParameters": 3154,
													"id": 3160,
													"nodeType": "Return",
													"src": "1791:11:14"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3162,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "1816:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1816:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3168,
												"nodeType": "IfStatement",
												"src": "1812:46:14",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3165,
															"name": "Math128x128__LogUnderflow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "1831:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1831:27:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3167,
													"nodeType": "RevertStatement",
													"src": "1824:34:14"
												}
											},
											{
												"expression": {
													"id": 3171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3169,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "1869:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": ">>=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1875:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1869:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3172,
												"nodeType": "ExpressionStatement",
												"src": "1869:7:14"
											},
											{
												"id": 3283,
												"nodeType": "UncheckedBlock",
												"src": "1887:1797:14",
												"statements": [
													{
														"assignments": [
															3174
														],
														"declarations": [
															{
																"constant": false,
																"id": 3174,
																"mutability": "mutable",
																"name": "sign",
																"nameLocation": "1974:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 3283,
																"src": "1967:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 3173,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1967:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3175,
														"nodeType": "VariableDeclarationStatement",
														"src": "1967:11:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3176,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3150,
																"src": "1996:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3177,
																"name": "LOG_SCALE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3142,
																"src": "2001:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1996:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 3195,
															"nodeType": "Block",
															"src": "2059:152:14",
															"statements": [
																{
																	"expression": {
																		"id": 3187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3184,
																			"name": "sign",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3174,
																			"src": "2077:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 3186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "-",
																			"prefix": true,
																			"src": "2084:2:14",
																			"subExpression": {
																				"hexValue": "31",
																				"id": 3185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2085:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_minus_1_by_1",
																				"typeString": "int_const -1"
																			}
																		},
																		"src": "2077:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3188,
																	"nodeType": "ExpressionStatement",
																	"src": "2077:9:14"
																},
																{
																	"expression": {
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3189,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3150,
																			"src": "2171:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3190,
																				"name": "LOG_SCALE_SQUARED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3147,
																				"src": "2175:17:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3191,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3150,
																				"src": "2195:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2175:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2171:25:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3194,
																	"nodeType": "ExpressionStatement",
																	"src": "2171:25:14"
																}
															]
														},
														"id": 3196,
														"nodeType": "IfStatement",
														"src": "1992:219:14",
														"trueBody": {
															"id": 3183,
															"nodeType": "Block",
															"src": "2012:41:14",
															"statements": [
																{
																	"expression": {
																		"id": 3181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3179,
																			"name": "sign",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3174,
																			"src": "2030:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2037:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2030:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3182,
																	"nodeType": "ExpressionStatement",
																	"src": "2030:8:14"
																}
															]
														}
													},
													{
														"assignments": [
															3198
														],
														"declarations": [
															{
																"constant": false,
																"id": 3198,
																"mutability": "mutable",
																"name": "n",
																"nameLocation": "2355:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 3283,
																"src": "2347:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3197,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3205,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3199,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3150,
																				"src": "2360:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 3200,
																				"name": "LOG_SCALE_OFFSET",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3137,
																				"src": "2365:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2360:21:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3202,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2359:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mostSignificantBit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2809,
																"src": "2359:42:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint8)"
																}
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2359:44:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2347:56:14"
													},
													{
														"expression": {
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3206,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3153,
																"src": "2641:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3209,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3198,
																			"src": "2657:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2650:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3207,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2650:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2650:9:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 3211,
																	"name": "LOG_SCALE_OFFSET",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3137,
																	"src": "2663:16:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2650:29:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "2641:38:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3214,
														"nodeType": "ExpressionStatement",
														"src": "2641:38:14"
													},
													{
														"assignments": [
															3216
														],
														"declarations": [
															{
																"constant": false,
																"id": 3216,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "2741:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 3283,
																"src": "2733:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3215,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2733:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3220,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3217,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3150,
																"src": "2745:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 3218,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3198,
																"src": "2750:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2745:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2733:18:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3221,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3216,
																"src": "2824:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3222,
																"name": "LOG_SCALE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3142,
																"src": "2829:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2824:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3273,
														"nodeType": "IfStatement",
														"src": "2820:735:14",
														"trueBody": {
															"id": 3272,
															"nodeType": "Block",
															"src": "2840:715:14",
															"statements": [
																{
																	"body": {
																		"id": 3270,
																		"nodeType": "Block",
																		"src": "3123:418:14",
																		"statements": [
																			{
																				"expression": {
																					"id": 3250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 3243,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3216,
																						"src": "3145:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3249,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3246,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3244,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3216,
																										"src": "3150:1:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"id": 3245,
																										"name": "y",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3216,
																										"src": "3154:1:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "3150:5:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3247,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3149:7:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"id": 3248,
																							"name": "LOG_SCALE_OFFSET",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3137,
																							"src": "3160:16:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3149:27:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3145:31:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3251,
																				"nodeType": "ExpressionStatement",
																				"src": "3145:31:14"
																			},
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3259,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3252,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3216,
																						"src": "3264:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3258,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 3253,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3269:1:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3256,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3254,
																										"name": "LOG_SCALE_OFFSET",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3137,
																										"src": "3275:16:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "+",
																									"rightExpression": {
																										"hexValue": "31",
																										"id": 3255,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "3294:1:14",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1_by_1",
																											"typeString": "int_const 1"
																										},
																										"value": "1"
																									},
																									"src": "3275:20:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3257,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3274:22:14",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3269:27:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3264:32:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3269,
																				"nodeType": "IfStatement",
																				"src": "3260:263:14",
																				"trueBody": {
																					"id": 3268,
																					"nodeType": "Block",
																					"src": "3298:225:14",
																					"statements": [
																						{
																							"expression": {
																								"id": 3262,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 3260,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3153,
																									"src": "3391:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "+=",
																								"rightHandSide": {
																									"id": 3261,
																									"name": "delta",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3225,
																									"src": "3401:5:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_int256",
																										"typeString": "int256"
																									}
																								},
																								"src": "3391:15:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							"id": 3263,
																							"nodeType": "ExpressionStatement",
																							"src": "3391:15:14"
																						},
																						{
																							"expression": {
																								"id": 3266,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 3264,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3216,
																									"src": "3493:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": ">>=",
																								"rightHandSide": {
																									"hexValue": "31",
																									"id": 3265,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3499:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3493:7:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 3267,
																							"nodeType": "ExpressionStatement",
																							"src": "3493:7:14"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3236,
																			"name": "delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3225,
																			"src": "3099:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3107:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3099:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3271,
																	"initializationExpression": {
																		"assignments": [
																			3225
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3225,
																				"mutability": "mutable",
																				"name": "delta",
																				"nameLocation": "3054:5:14",
																				"nodeType": "VariableDeclaration",
																				"scope": 3271,
																				"src": "3047:12:14",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"typeName": {
																					"id": 3224,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3047:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 3235,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3069:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3231,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3229,
																									"name": "LOG_SCALE_OFFSET",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3137,
																									"src": "3075:16:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 3230,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3094:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3075:20:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3232,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3074:22:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "3069:27:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3062:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int256_$",
																					"typeString": "type(int256)"
																				},
																				"typeName": {
																					"id": 3226,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3062:6:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3062:35:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3047:50:14"
																	},
																	"loopExpression": {
																		"expression": {
																			"id": 3241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3239,
																				"name": "delta",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3225,
																				"src": "3110:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": ">>=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3120:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3110:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 3242,
																		"nodeType": "ExpressionStatement",
																		"src": "3110:11:14"
																	},
																	"nodeType": "ForStatement",
																	"src": "3042:499:14"
																}
															]
														}
													},
													{
														"expression": {
															"id": 3281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3274,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3153,
																"src": "3644:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3275,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3153,
																				"src": "3654:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3276,
																				"name": "sign",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3174,
																				"src": "3663:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "3654:13:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3278,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3653:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3672:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3653:20:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3644:29:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"id": 3282,
														"nodeType": "ExpressionStatement",
														"src": "3644:29:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3148,
										"nodeType": "StructuredDocumentation",
										"src": "555:764:14",
										"text": "@notice Calculates the binary logarithm of x.\n @dev Based on the iterative approximation algorithm.\n https://en.wikipedia.org/wiki/Binary_logarithm#Iterative_approximation\n Requirements:\n - x must be greater than zero.\n Caveats:\n - The results are not perfectly accurate to the last decimal, due to the lossy precision of the iterative approximation\n Also because x is converted to an unsigned 129.127-binary fixed-point number during the operation to optimize the multiplication\n @param x The unsigned 128.128-binary fixed-point number for which to calculate the binary logarithm.\n @return result The binary logarithm as a signed 128.128-binary fixed-point number."
									},
									"id": 3285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "1333:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1346:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3285,
												"src": "1338:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:11:14"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1379:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3285,
												"src": "1372:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3152,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:15:14"
									},
									"scope": 3342,
									"src": "1324:2366:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3340,
										"nodeType": "Block",
										"src": "4169:3925:14",
										"statements": [
											{
												"assignments": [
													3296
												],
												"declarations": [
													{
														"constant": false,
														"id": 3296,
														"mutability": "mutable",
														"name": "invert",
														"nameLocation": "4184:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3340,
														"src": "4179:11:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3295,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4179:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3297,
												"nodeType": "VariableDeclarationStatement",
												"src": "4179:11:14"
											},
											{
												"assignments": [
													3299
												],
												"declarations": [
													{
														"constant": false,
														"id": 3299,
														"mutability": "mutable",
														"name": "absY",
														"nameLocation": "4208:4:14",
														"nodeType": "VariableDeclaration",
														"scope": 3340,
														"src": "4200:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4200:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3300,
												"nodeType": "VariableDeclarationStatement",
												"src": "4200:12:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3301,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3290,
														"src": "4227:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4232:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4227:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3307,
												"nodeType": "IfStatement",
												"src": "4223:34:14",
												"trueBody": {
													"expression": {
														"expression": {
															"id": 3304,
															"name": "Constants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "4242:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																"typeString": "type(library Constants)"
															}
														},
														"id": 3305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "SCALE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2951,
														"src": "4242:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 3294,
													"id": 3306,
													"nodeType": "Return",
													"src": "4235:22:14"
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4277:155:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4291:9:14",
															"value": {
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "4299:1:14"
															},
															"variableNames": [
																{
																	"name": "absY",
																	"nodeType": "YulIdentifier",
																	"src": "4291:4:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4329:93:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4347:20:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4359:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "4362:4:14"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "4355:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4355:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "absY",
																				"nodeType": "YulIdentifier",
																				"src": "4347:4:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4384:24:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "invert",
																					"nodeType": "YulIdentifier",
																					"src": "4401:6:14"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "4394:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4394:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "invert",
																				"nodeType": "YulIdentifier",
																				"src": "4384:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "absY",
																		"nodeType": "YulIdentifier",
																		"src": "4320:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4326:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4316:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:12:14"
															},
															"nodeType": "YulIf",
															"src": "4313:109:14"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3299,
														"isOffset": false,
														"isSlot": false,
														"src": "4291:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3299,
														"isOffset": false,
														"isSlot": false,
														"src": "4320:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3299,
														"isOffset": false,
														"isSlot": false,
														"src": "4347:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3299,
														"isOffset": false,
														"isSlot": false,
														"src": "4362:4:14",
														"valueSize": 1
													},
													{
														"declaration": 3296,
														"isOffset": false,
														"isSlot": false,
														"src": "4384:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3296,
														"isOffset": false,
														"isSlot": false,
														"src": "4401:6:14",
														"valueSize": 1
													},
													{
														"declaration": 3290,
														"isOffset": false,
														"isSlot": false,
														"src": "4299:1:14",
														"valueSize": 1
													}
												],
												"id": 3308,
												"nodeType": "InlineAssembly",
												"src": "4268:164:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3309,
														"name": "absY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3299,
														"src": "4446:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3078313030303030",
														"id": 3310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4453:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1048576_by_1",
															"typeString": "int_const 1048576"
														},
														"value": "0x100000"
													},
													"src": "4446:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3319,
												"nodeType": "IfStatement",
												"src": "4442:3460:14",
												"trueBody": {
													"id": 3318,
													"nodeType": "Block",
													"src": "4463:3439:14",
													"statements": [
														{
															"expression": {
																"id": 3315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3312,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3293,
																	"src": "4477:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3313,
																		"name": "Constants",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2964,
																		"src": "4486:9:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Constants_$2964_$",
																			"typeString": "type(library Constants)"
																		}
																	},
																	"id": 3314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "SCALE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2951,
																	"src": "4486:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4477:24:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3316,
															"nodeType": "ExpressionStatement",
															"src": "4477:24:14"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "4524:3368:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4542:12:14",
																		"value": {
																			"name": "x",
																			"nodeType": "YulIdentifier",
																			"src": "4553:1:14"
																		},
																		"variables": [
																			{
																				"name": "pow",
																				"nodeType": "YulTypedName",
																				"src": "4546:3:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4616:108:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4638:23:14",
																					"value": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4653:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "4649:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4649:6:14"
																							},
																							{
																								"name": "pow",
																								"nodeType": "YulIdentifier",
																								"src": "4657:3:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4645:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4645:16:14"
																					},
																					"variableNames": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "4638:3:14"
																						}
																					]
																				},
																				{
																					"nodeType": "YulAssignment",
																					"src": "4682:24:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "invert",
																								"nodeType": "YulIdentifier",
																								"src": "4699:6:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4692:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4692:14:14"
																					},
																					"variableNames": [
																						{
																							"name": "invert",
																							"nodeType": "YulIdentifier",
																							"src": "4682:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "x",
																					"nodeType": "YulIdentifier",
																					"src": "4577:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4580:34:14",
																					"type": "",
																					"value": "0xffffffffffffffffffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4574:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4574:41:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4571:153:14"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4760:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4782:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4796:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "4805:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "4813:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "4801:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4801:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "4792:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4792:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "4782:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "4749:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4755:3:14",
																					"type": "",
																					"value": "0x1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4745:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4745:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4742:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4853:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4864:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "4873:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "4878:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "4869:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4869:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "4860:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4860:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "4853:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4918:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4940:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4954:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "4963:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "4971:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "4959:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4959:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "4950:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4950:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "4940:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "4907:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4913:3:14",
																					"type": "",
																					"value": "0x2"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4903:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4903:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4900:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5011:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5022:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5031:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5036:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5027:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5027:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5018:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5018:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5011:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5076:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5098:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5112:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5121:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5129:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5117:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5117:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5108:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5108:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5098:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5065:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5071:3:14",
																					"type": "",
																					"value": "0x4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5061:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5061:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5058:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5169:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5180:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5189:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5194:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5185:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5185:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5176:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5176:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5169:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5234:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5256:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5270:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5279:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5287:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5275:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5275:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5266:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5266:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5256:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5223:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5229:3:14",
																					"type": "",
																					"value": "0x8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5219:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5219:14:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5216:94:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5327:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5338:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5347:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5352:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5343:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5343:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5334:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5334:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5327:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5393:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5415:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5429:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5438:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5446:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5434:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5434:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5425:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5425:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5415:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5381:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5387:4:14",
																					"type": "",
																					"value": "0x10"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5377:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5377:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5374:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5486:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5497:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5506:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5511:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5502:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5502:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5493:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5493:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5486:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5552:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5574:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5588:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5597:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5605:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5593:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5593:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5584:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5584:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5574:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5540:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5546:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5536:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5536:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5533:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5645:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5656:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5665:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5670:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5661:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5661:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5652:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5652:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5645:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5711:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5733:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5747:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5756:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5764:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5752:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5752:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5743:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5743:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5733:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5699:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:4:14",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5695:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5695:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5692:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5804:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5815:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5824:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5829:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5820:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5820:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5811:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5811:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5804:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5870:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "5892:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5906:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "5915:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "5923:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "5911:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5911:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "5902:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5902:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "5892:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "5858:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5864:4:14",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5854:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5854:15:14"
																		},
																		"nodeType": "YulIf",
																		"src": "5851:95:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5963:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5974:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5983:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "5988:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "5979:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5979:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "5970:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5970:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "5963:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6030:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6052:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6066:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6075:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6083:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6071:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6071:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6062:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6062:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6052:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6017:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6023:5:14",
																					"type": "",
																					"value": "0x100"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6013:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6013:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6010:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6123:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6134:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6143:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6148:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6139:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6139:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6130:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6123:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6190:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6212:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6226:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6235:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6243:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6231:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6231:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6222:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6222:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6212:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6177:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6183:5:14",
																					"type": "",
																					"value": "0x200"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6173:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6173:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6170:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6283:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6294:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6303:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6308:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6299:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6299:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6290:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6290:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6283:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6350:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6372:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6386:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6395:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6403:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6391:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6391:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6382:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6382:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6372:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6337:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6343:5:14",
																					"type": "",
																					"value": "0x400"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6333:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6333:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6330:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6443:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6454:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6463:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6468:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6459:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6459:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6450:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6450:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6443:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6510:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6532:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6546:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6555:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6563:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6551:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6551:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6542:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6542:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6532:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6497:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6503:5:14",
																					"type": "",
																					"value": "0x800"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6493:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6493:16:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6490:96:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6603:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6614:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6623:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6628:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6619:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6619:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6610:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6610:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6603:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6671:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6693:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6707:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6716:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6724:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6712:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6712:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6703:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6703:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6693:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6657:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6663:6:14",
																					"type": "",
																					"value": "0x1000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6653:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6653:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6650:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6764:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6775:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6784:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6789:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6780:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6780:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6771:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6771:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6764:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6832:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6854:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6868:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "6877:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "6885:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "6873:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6873:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "6864:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6864:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "6854:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6818:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6824:6:14",
																					"type": "",
																					"value": "0x2000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6814:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6814:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6811:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6925:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6936:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6945:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "6950:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "6941:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6941:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6932:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6932:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "6925:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6993:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7015:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7029:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7038:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7046:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7034:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7034:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7025:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7025:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7015:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "6979:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6985:6:14",
																					"type": "",
																					"value": "0x4000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6975:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6975:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "6972:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7086:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7097:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7106:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7111:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7102:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7102:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7093:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7093:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7086:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7154:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7176:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7190:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7199:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7207:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7195:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7195:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7186:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7186:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7176:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7140:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7146:6:14",
																					"type": "",
																					"value": "0x8000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7136:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7136:17:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7133:97:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7247:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7258:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7267:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7272:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7263:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7263:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7254:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7254:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7247:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7316:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7338:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7352:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7361:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7369:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7357:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7357:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7348:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7348:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7338:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7301:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7307:7:14",
																					"type": "",
																					"value": "0x10000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7297:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7297:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7294:98:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7409:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7420:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7429:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7434:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7425:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7425:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7416:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7416:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7409:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7478:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7500:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7514:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7523:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7531:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7519:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7519:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7510:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7510:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7500:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7463:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7469:7:14",
																					"type": "",
																					"value": "0x20000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7459:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7459:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7456:98:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7571:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7582:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7591:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7596:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7587:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7587:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7578:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7578:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7571:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7640:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7662:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7676:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7685:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7693:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7681:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7681:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7672:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7672:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7662:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7625:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7631:7:14",
																					"type": "",
																					"value": "0x40000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7621:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7621:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7618:98:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7733:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7744:3:14",
																					"type": "",
																					"value": "128"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7753:3:14"
																						},
																						{
																							"name": "pow",
																							"nodeType": "YulIdentifier",
																							"src": "7758:3:14"
																						}
																					],
																					"functionName": {
																						"name": "mul",
																						"nodeType": "YulIdentifier",
																						"src": "7749:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7749:13:14"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7740:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7740:23:14"
																		},
																		"variableNames": [
																			{
																				"name": "pow",
																				"nodeType": "YulIdentifier",
																				"src": "7733:3:14"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7802:76:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7824:36:14",
																					"value": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7838:3:14",
																								"type": "",
																								"value": "128"
																							},
																							{
																								"arguments": [
																									{
																										"name": "result",
																										"nodeType": "YulIdentifier",
																										"src": "7847:6:14"
																									},
																									{
																										"name": "pow",
																										"nodeType": "YulIdentifier",
																										"src": "7855:3:14"
																									}
																								],
																								"functionName": {
																									"name": "mul",
																									"nodeType": "YulIdentifier",
																									"src": "7843:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7843:16:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "7834:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7834:26:14"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "7824:6:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "absY",
																					"nodeType": "YulIdentifier",
																					"src": "7787:4:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7793:7:14",
																					"type": "",
																					"value": "0x80000"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7783:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7783:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "7780:98:14"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4749:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4907:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5065:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5223:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5381:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5540:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5699:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5858:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6017:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6177:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6337:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6497:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6657:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6818:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6979:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7140:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7301:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7463:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7625:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3299,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7787:4:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3296,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4682:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3296,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4699:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4782:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4805:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4940:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4963:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5098:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5121:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5256:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5279:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5415:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5438:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5574:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5597:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5733:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5756:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5892:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5915:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6052:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6075:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6212:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6235:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6372:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6395:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6532:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6555:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6693:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6716:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6854:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6877:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7015:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7038:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7176:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7199:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7338:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7361:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7500:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7523:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7662:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7685:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7824:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3293,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7847:6:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3288,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4553:1:14",
																	"valueSize": 1
																},
																{
																	"declaration": 3288,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "4577:1:14",
																	"valueSize": 1
																}
															],
															"id": 3317,
															"nodeType": "InlineAssembly",
															"src": "4515:3377:14"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3320,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3293,
														"src": "7972:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7982:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7972:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3328,
												"nodeType": "IfStatement",
												"src": "7968:57:14",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3324,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3288,
																"src": "8020:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3325,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3290,
																"src": "8023:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3323,
															"name": "Math128x128__PowerUnderflow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "7992:27:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_int256_$returns$__$",
																"typeString": "function (uint256,int256) pure"
															}
														},
														"id": 3326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7992:33:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3327,
													"nodeType": "RevertStatement",
													"src": "7985:40:14"
												}
											},
											{
												"expression": {
													"condition": {
														"id": 3329,
														"name": "invert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3296,
														"src": "8043:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3337,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3293,
														"src": "8081:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8043:44:14",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 3332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8057:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3331,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8057:7:14",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 3330,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "8052:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8052:13:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "8052:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 3335,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3293,
															"src": "8072:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8052:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3294,
												"id": 3339,
												"nodeType": "Return",
												"src": "8036:51:14"
											}
										]
									},
									"documentation": {
										"id": 3286,
										"nodeType": "StructuredDocumentation",
										"src": "3696:393:14",
										"text": "@notice Returns the value of x^y. It calculates `1 / x^abs(y)` if x is bigger than 2^128.\n At the end of the operations, we invert the result if needed.\n @param x The unsigned 128.128-binary fixed-point number for which to calculate the power\n @param y A relative number without any decimals, needs to be between ]2^20; 2^20[\n @return result The result of `x^y`"
									},
									"id": 3341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "power",
									"nameLocation": "4103:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3288,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4117:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "4109:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4109:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4127:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "4120:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3289,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4120:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4108:21:14"
									},
									"returnParameters": {
										"id": 3294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4161:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3341,
												"src": "4153:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4153:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4152:16:14"
									},
									"scope": 3342,
									"src": "4094:4000:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3343,
							"src": "296:7800:14",
							"usedErrors": []
						}
					],
					"src": "33:8064:14"
				},
				"id": 14
			},
			"joe-v2-main/src/libraries/Math512Bits.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/Math512Bits.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"BitMath": [
							2940
						],
						"Constants": [
							2964
						],
						"FeeHelper": [
							3121
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBFlashLoanCallback": [
							2132
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits": [
							3710
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3344,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:15"
						},
						{
							"absolutePath": "joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3345,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3711,
							"sourceUnit": 1314,
							"src": "58:25:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/libraries/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 3346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3711,
							"sourceUnit": 2941,
							"src": "84:23:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math512Bits",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3347,
								"nodeType": "StructuredDocumentation",
								"src": "109:134:15",
								"text": "@title Liquidity Book Math Helper Library\n @author Trader Joe\n @notice Helper contract used for full precision calculations"
							},
							"fullyImplemented": true,
							"id": 3710,
							"linearizedBaseContracts": [
								3710
							],
							"name": "Math512Bits",
							"nameLocation": "251:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3350,
									"libraryName": {
										"id": 3348,
										"name": "BitMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2940,
										"src": "275:7:15"
									},
									"nodeType": "UsingForDirective",
									"src": "269:26:15",
									"typeName": {
										"id": 3349,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "287:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 3379,
										"nodeType": "Block",
										"src": "1051:140:15",
										"statements": [
											{
												"assignments": [
													3363,
													3365
												],
												"declarations": [
													{
														"constant": false,
														"id": 3363,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "1070:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3379,
														"src": "1062:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1062:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3365,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "1085:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3379,
														"src": "1077:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1077:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3370,
												"initialValue": {
													"arguments": [
														{
															"id": 3367,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3353,
															"src": "1107:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3368,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3355,
															"src": "1110:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3366,
														"name": "_getMulProds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3585,
														"src": "1094:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 3369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1061:51:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3372,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3353,
															"src": "1152:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3373,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3355,
															"src": "1155:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3374,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3357,
															"src": "1158:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3375,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "1171:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3376,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "1178:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3371,
														"name": "_getEndOfDivRoundDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3709,
														"src": "1130:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:54:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3361,
												"id": 3378,
												"nodeType": "Return",
												"src": "1123:61:15"
											}
										]
									},
									"documentation": {
										"id": 3351,
										"nodeType": "StructuredDocumentation",
										"src": "301:608:15",
										"text": "@notice Calculates floor(x*y÷denominator) with full precision\n The result will be rounded down\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The denominator cannot be zero\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param denominator The divisor as an uint256\n @return result The result as an uint256"
									},
									"id": 3380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundDown",
									"nameLocation": "923:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3353,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "956:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "948:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3355,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "975:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "967:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "994:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "986:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:73:15"
									},
									"returnParameters": {
										"id": 3361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3360,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1043:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "1035:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:16:15"
									},
									"scope": 3710,
									"src": "914:277:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3445,
										"nodeType": "Block",
										"src": "1973:464:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3392,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3387,
														"src": "1987:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323535",
														"id": 3393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1996:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "1987:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3399,
												"nodeType": "IfStatement",
												"src": "1983:61:15",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3396,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3387,
																"src": "2037:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3395,
															"name": "Math512Bits__OffsetOverflows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2008:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2008:36:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3398,
													"nodeType": "RevertStatement",
													"src": "2001:43:15"
												}
											},
											{
												"assignments": [
													3401,
													3403
												],
												"declarations": [
													{
														"constant": false,
														"id": 3401,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "2064:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3445,
														"src": "2056:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2056:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3403,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "2079:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3445,
														"src": "2071:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2071:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3408,
												"initialValue": {
													"arguments": [
														{
															"id": 3405,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3383,
															"src": "2101:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3406,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3385,
															"src": "2104:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3404,
														"name": "_getMulProds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3585,
														"src": "2088:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
														}
													},
													"id": 3407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2088:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2055:51:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3409,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3401,
														"src": "2121:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2130:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2121:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3418,
												"nodeType": "IfStatement",
												"src": "2117:40:15",
												"trueBody": {
													"expression": {
														"id": 3416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 3412,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3390,
															"src": "2133:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3413,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3401,
																"src": "2142:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 3414,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3387,
																"src": "2151:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2142:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2133:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3417,
													"nodeType": "ExpressionStatement",
													"src": "2133:24:15"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3419,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3403,
														"src": "2171:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2180:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2171:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3444,
												"nodeType": "IfStatement",
												"src": "2167:264:15",
												"trueBody": {
													"id": 3443,
													"nodeType": "Block",
													"src": "2183:248:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3422,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3403,
																	"src": "2257:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "31",
																		"id": 3423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2266:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 3424,
																		"name": "offset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3387,
																		"src": "2271:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2266:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2257:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3432,
															"nodeType": "IfStatement",
															"src": "2253:77:15",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 3428,
																			"name": "prod1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3403,
																			"src": "2316:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 3429,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3387,
																			"src": "2323:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3427,
																		"name": "Math512Bits__MulShiftOverflow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "2286:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256) pure"
																		}
																	},
																	"id": 3430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2286:44:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3431,
																"nodeType": "RevertStatement",
																"src": "2279:51:15"
															}
														},
														{
															"id": 3442,
															"nodeType": "UncheckedBlock",
															"src": "2345:76:15",
															"statements": [
																{
																	"expression": {
																		"id": 3440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3433,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3390,
																			"src": "2373:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3434,
																				"name": "prod1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3403,
																				"src": "2383:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3437,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "323536",
																							"id": 3435,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2393:3:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_256_by_1",
																								"typeString": "int_const 256"
																							},
																							"value": "256"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 3436,
																							"name": "offset",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3387,
																							"src": "2399:6:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2393:12:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3438,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2392:14:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2383:23:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2373:33:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3441,
																	"nodeType": "ExpressionStatement",
																	"src": "2373:33:15"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3381,
										"nodeType": "StructuredDocumentation",
										"src": "1197:637:15",
										"text": "@notice Calculates x * y >> offset with full precision\n The result will be rounded down\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param offset The offset as an uint256, can't be greater than 256\n @return result The result as an uint256"
									},
									"id": 3446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShiftRoundDown",
									"nameLocation": "1848:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1883:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3446,
												"src": "1875:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1902:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3446,
												"src": "1894:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3387,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "1921:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3446,
												"src": "1913:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:68:15"
									},
									"returnParameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1965:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3446,
												"src": "1957:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:16:15"
									},
									"scope": 3710,
									"src": "1839:598:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3481,
										"nodeType": "Block",
										"src": "3215:152:15",
										"statements": [
											{
												"id": 3480,
												"nodeType": "UncheckedBlock",
												"src": "3225:136:15",
												"statements": [
													{
														"expression": {
															"id": 3464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3456,
																"src": "3249:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 3460,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3449,
																		"src": "3276:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3461,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3451,
																		"src": "3279:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3462,
																		"name": "offset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3453,
																		"src": "3282:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3459,
																	"name": "mulShiftRoundDown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3446,
																	"src": "3258:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3258:31:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3249:40:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3465,
														"nodeType": "ExpressionStatement",
														"src": "3249:40:15"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3467,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3449,
																		"src": "3314:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3468,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3451,
																		"src": "3317:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3320:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 3470,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3453,
																			"src": "3325:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3320:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3466,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967280,
																	"src": "3307:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3307:25:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3336:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3307:30:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3479,
														"nodeType": "IfStatement",
														"src": "3303:47:15",
														"trueBody": {
															"expression": {
																"id": 3477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3475,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3456,
																	"src": "3339:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3349:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3339:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3478,
															"nodeType": "ExpressionStatement",
															"src": "3339:11:15"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3447,
										"nodeType": "StructuredDocumentation",
										"src": "2443:635:15",
										"text": "@notice Calculates x * y >> offset with full precision\n The result will be rounded up\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param offset The offset as an uint256, can't be greater than 256\n @return result The result as an uint256"
									},
									"id": 3482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShiftRoundUp",
									"nameLocation": "3092:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3449,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3125:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "3117:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3117:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3451,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3144:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "3136:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "3163:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "3155:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3107:68:15"
									},
									"returnParameters": {
										"id": 3457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3207:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3482,
												"src": "3199:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:16:15"
									},
									"scope": 3710,
									"src": "3083:284:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3534,
										"nodeType": "Block",
										"src": "4157:396:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3494,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3487,
														"src": "4171:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "323535",
														"id": 3495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4180:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "4171:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3501,
												"nodeType": "IfStatement",
												"src": "4167:61:15",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3498,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3487,
																"src": "4221:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3497,
															"name": "Math512Bits__OffsetOverflows",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "4192:28:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4192:36:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3500,
													"nodeType": "RevertStatement",
													"src": "4185:43:15"
												}
											},
											{
												"assignments": [
													3503
												],
												"declarations": [
													{
														"constant": false,
														"id": 3503,
														"mutability": "mutable",
														"name": "prod0",
														"nameLocation": "4246:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3534,
														"src": "4238:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3502,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4238:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3504,
												"nodeType": "VariableDeclarationStatement",
												"src": "4238:13:15"
											},
											{
												"assignments": [
													3506
												],
												"declarations": [
													{
														"constant": false,
														"id": 3506,
														"mutability": "mutable",
														"name": "prod1",
														"nameLocation": "4269:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3534,
														"src": "4261:13:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4261:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3507,
												"nodeType": "VariableDeclarationStatement",
												"src": "4261:13:15"
											},
											{
												"expression": {
													"id": 3512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3508,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3503,
														"src": "4285:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3509,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3485,
															"src": "4293:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"id": 3510,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3487,
															"src": "4298:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4293:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4285:19:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3513,
												"nodeType": "ExpressionStatement",
												"src": "4285:19:15"
											},
											{
												"id": 3523,
												"nodeType": "UncheckedBlock",
												"src": "4359:106:15",
												"statements": [
													{
														"expression": {
															"id": 3521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3514,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3506,
																"src": "4383:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3515,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3485,
																	"src": "4391:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "323536",
																				"id": 3516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4397:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_256_by_1",
																					"typeString": "int_const 256"
																				},
																				"value": "256"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3517,
																				"name": "offset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3487,
																				"src": "4403:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4397:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3519,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4396:14:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4391:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4383:27:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3522,
														"nodeType": "ExpressionStatement",
														"src": "4383:27:15"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3525,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3485,
															"src": "4504:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31",
																"id": 3526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4507:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"id": 3527,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3487,
																"src": "4512:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4507:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3529,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3489,
															"src": "4520:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3530,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3503,
															"src": "4533:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3531,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3506,
															"src": "4540:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3524,
														"name": "_getEndOfDivRoundDown",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3709,
														"src": "4482:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4482:64:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3493,
												"id": 3533,
												"nodeType": "Return",
												"src": "4475:71:15"
											}
										]
									},
									"documentation": {
										"id": 3483,
										"nodeType": "StructuredDocumentation",
										"src": "3373:635:15",
										"text": "@notice Calculates x << offset / y with full precision\n The result will be rounded down\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param offset The number of bit to shift x as an uint256\n @param denominator The divisor as an uint256\n @return result The result as an uint256"
									},
									"id": 3535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shiftDivRoundDown",
									"nameLocation": "4022:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3485,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4057:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "4049:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3487,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "4076:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "4068:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4068:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "4100:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "4092:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4039:78:15"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "4149:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "4141:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4141:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:16:15"
									},
									"scope": 3710,
									"src": "4013:540:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3570,
										"nodeType": "Block",
										"src": "5339:168:15",
										"statements": [
											{
												"expression": {
													"id": 3553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3547,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3545,
														"src": "5349:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3549,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3538,
																"src": "5376:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3550,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3540,
																"src": "5379:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3551,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3542,
																"src": "5387:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3548,
															"name": "shiftDivRoundDown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3535,
															"src": "5358:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5358:41:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5349:50:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3554,
												"nodeType": "ExpressionStatement",
												"src": "5349:50:15"
											},
											{
												"id": 3569,
												"nodeType": "UncheckedBlock",
												"src": "5409:92:15",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3556,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3538,
																		"src": "5444:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 3557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5447:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"id": 3558,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3540,
																			"src": "5452:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5447:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3560,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3542,
																		"src": "5460:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3555,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967280,
																	"src": "5437:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5437:35:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5476:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5437:40:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3568,
														"nodeType": "IfStatement",
														"src": "5433:57:15",
														"trueBody": {
															"expression": {
																"id": 3566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3564,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3545,
																	"src": "5479:6:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5489:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5479:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3567,
															"nodeType": "ExpressionStatement",
															"src": "5479:11:15"
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3536,
										"nodeType": "StructuredDocumentation",
										"src": "4559:633:15",
										"text": "@notice Calculates x << offset / y with full precision\n The result will be rounded up\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n Requirements:\n - The offset needs to be strictly lower than 256\n - The result must fit within uint256\n Caveats:\n - This function does not work with fixed-point numbers\n @param x The multiplicand as an uint256\n @param offset The number of bit to shift x as an uint256\n @param denominator The divisor as an uint256\n @return result The result as an uint256"
									},
									"id": 3571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "shiftDivRoundUp",
									"nameLocation": "5206:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3538,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5239:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3571,
												"src": "5231:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5231:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "5258:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3571,
												"src": "5250:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5250:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3542,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5282:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3571,
												"src": "5274:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:78:15"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5331:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3571,
												"src": "5323:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5323:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5322:16:15"
									},
									"scope": 3710,
									"src": "5197:310:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3584,
										"nodeType": "Block",
										"src": "5915:451:15",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6219:141:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6233:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6250:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6253:1:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6260:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6256:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6256:6:15"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "6243:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:20:15"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "6237:2:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6276:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6289:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6292:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6285:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6285:9:15"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6307:43:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "6324:2:15"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6328:5:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6320:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6320:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "6339:2:15"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6343:5:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6336:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6336:13:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6316:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:34:15"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "6307:5:15"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 3579,
														"isOffset": false,
														"isSlot": false,
														"src": "6276:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3579,
														"isOffset": false,
														"isSlot": false,
														"src": "6328:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3579,
														"isOffset": false,
														"isSlot": false,
														"src": "6343:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3581,
														"isOffset": false,
														"isSlot": false,
														"src": "6307:5:15",
														"valueSize": 1
													},
													{
														"declaration": 3574,
														"isOffset": false,
														"isSlot": false,
														"src": "6250:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3574,
														"isOffset": false,
														"isSlot": false,
														"src": "6289:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3576,
														"isOffset": false,
														"isSlot": false,
														"src": "6253:1:15",
														"valueSize": 1
													},
													{
														"declaration": 3576,
														"isOffset": false,
														"isSlot": false,
														"src": "6292:1:15",
														"valueSize": 1
													}
												],
												"id": 3583,
												"nodeType": "InlineAssembly",
												"src": "6210:150:15"
											}
										]
									},
									"documentation": {
										"id": 3572,
										"nodeType": "StructuredDocumentation",
										"src": "5513:301:15",
										"text": "@notice Helper function to return the result of `x * y` as 2 uint256\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @return prod0 The least significant 256 bits of the product\n @return prod1 The most significant 256 bits of the product"
									},
									"id": 3585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getMulProds",
									"nameLocation": "5828:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3574,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5849:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "5841:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5841:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5860:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "5852:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5852:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5840:22:15"
									},
									"returnParameters": {
										"id": 3582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3579,
												"mutability": "mutable",
												"name": "prod0",
												"nameLocation": "5893:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "5885:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5885:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "prod1",
												"nameLocation": "5908:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "5900:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:30:15"
									},
									"scope": 3710,
									"src": "5819:547:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3708,
										"nodeType": "Block",
										"src": "6986:3239:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3601,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3596,
														"src": "7058:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7067:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7058:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3706,
													"nodeType": "Block",
													"src": "7171:3048:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3612,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3596,
																	"src": "7276:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 3613,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3592,
																	"src": "7285:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7276:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3620,
															"nodeType": "IfStatement",
															"src": "7272:80:15",
															"trueBody": {
																"errorCall": {
																	"arguments": [
																		{
																			"id": 3616,
																			"name": "prod1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3596,
																			"src": "7333:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 3617,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3592,
																			"src": "7340:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3615,
																		"name": "Math512Bits__MulDivOverflow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "7305:27:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256) pure"
																		}
																	},
																	"id": 3618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7305:47:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3619,
																"nodeType": "RevertStatement",
																"src": "7298:54:15"
															}
														},
														{
															"assignments": [
																3622
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3622,
																	"mutability": "mutable",
																	"name": "remainder",
																	"nameLocation": "7459:9:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 3706,
																	"src": "7451:17:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7451:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3623,
															"nodeType": "VariableDeclarationStatement",
															"src": "7451:17:15"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "7491:291:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7560:38:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "x",
																					"nodeType": "YulIdentifier",
																					"src": "7580:1:15"
																				},
																				{
																					"name": "y",
																					"nodeType": "YulIdentifier",
																					"src": "7583:1:15"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "7586:11:15"
																				}
																			],
																			"functionName": {
																				"name": "mulmod",
																				"nodeType": "YulIdentifier",
																				"src": "7573:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7573:25:15"
																		},
																		"variableNames": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "7560:9:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7680:41:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod1",
																					"nodeType": "YulIdentifier",
																					"src": "7693:5:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "remainder",
																							"nodeType": "YulIdentifier",
																							"src": "7703:9:15"
																						},
																						{
																							"name": "prod0",
																							"nodeType": "YulIdentifier",
																							"src": "7714:5:15"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7700:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7700:20:15"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "7689:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7689:32:15"
																		},
																		"variableNames": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "7680:5:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7738:30:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "7751:5:15"
																				},
																				{
																					"name": "remainder",
																					"nodeType": "YulIdentifier",
																					"src": "7758:9:15"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7747:21:15"
																		},
																		"variableNames": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "7738:5:15"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 3592,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7586:11:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3594,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7714:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3594,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7738:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3594,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7751:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3596,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7680:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3596,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7693:5:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3622,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7560:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3622,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7703:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3622,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7758:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3588,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7580:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 3590,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "7583:1:15",
																	"valueSize": 1
																}
															],
															"id": 3624,
															"nodeType": "InlineAssembly",
															"src": "7482:300:15"
														},
														{
															"id": 3705,
															"nodeType": "UncheckedBlock",
															"src": "7983:2226:15",
															"statements": [
																{
																	"assignments": [
																		3626
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3626,
																			"mutability": "mutable",
																			"name": "lpotdod",
																			"nameLocation": "8125:7:15",
																			"nodeType": "VariableDeclaration",
																			"scope": 3705,
																			"src": "8117:15:15",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3625,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3634,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3627,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3592,
																			"src": "8135:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3631,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3629,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "~",
																						"prefix": true,
																						"src": "8150:12:15",
																						"subExpression": {
																							"id": 3628,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3592,
																							"src": "8151:11:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 3630,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8165:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "8150:16:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3632,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "8149:18:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8135:32:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8117:50:15"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "8194:419:15",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "8270:40:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "denominator",
																							"nodeType": "YulIdentifier",
																							"src": "8289:11:15"
																						},
																						{
																							"name": "lpotdod",
																							"nodeType": "YulIdentifier",
																							"src": "8302:7:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "8285:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8285:25:15"
																				},
																				"variableNames": [
																					{
																						"name": "denominator",
																						"nodeType": "YulIdentifier",
																						"src": "8270:11:15"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8388:28:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "prod0",
																							"nodeType": "YulIdentifier",
																							"src": "8401:5:15"
																						},
																						{
																							"name": "lpotdod",
																							"nodeType": "YulIdentifier",
																							"src": "8408:7:15"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "8397:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8397:19:15"
																				},
																				"variableNames": [
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "8388:5:15"
																					}
																				]
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8547:48:15",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8570:1:15",
																											"type": "",
																											"value": "0"
																										},
																										{
																											"name": "lpotdod",
																											"nodeType": "YulIdentifier",
																											"src": "8573:7:15"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "8566:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8566:15:15"
																								},
																								{
																									"name": "lpotdod",
																									"nodeType": "YulIdentifier",
																									"src": "8583:7:15"
																								}
																							],
																							"functionName": {
																								"name": "div",
																								"nodeType": "YulIdentifier",
																								"src": "8562:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8562:29:15"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8593:1:15",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8558:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8558:37:15"
																				},
																				"variableNames": [
																					{
																						"name": "lpotdod",
																						"nodeType": "YulIdentifier",
																						"src": "8547:7:15"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 3592,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8270:11:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3592,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8289:11:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3626,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8302:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3626,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8408:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3626,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8547:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3626,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8573:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3626,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8583:7:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3594,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8388:5:15",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3594,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "8401:5:15",
																			"valueSize": 1
																		}
																	],
																	"id": 3635,
																	"nodeType": "InlineAssembly",
																	"src": "8185:428:15"
																},
																{
																	"expression": {
																		"id": 3640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3636,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3594,
																			"src": "8686:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "|=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3637,
																				"name": "prod1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3596,
																				"src": "8695:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3638,
																				"name": "lpotdod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3626,
																				"src": "8703:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8695:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8686:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3641,
																	"nodeType": "ExpressionStatement",
																	"src": "8686:24:15"
																},
																{
																	"assignments": [
																		3643
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3643,
																			"mutability": "mutable",
																			"name": "inverse",
																			"nameLocation": "9051:7:15",
																			"nodeType": "VariableDeclaration",
																			"scope": 3705,
																			"src": "9043:15:15",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3642,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "9043:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3650,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3646,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "33",
																						"id": 3644,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9062:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3645,
																						"name": "denominator",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3592,
																						"src": "9066:11:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9062:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3647,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9061:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "^",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 3648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9081:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9061:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "9043:39:15"
																},
																{
																	"expression": {
																		"id": 3657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3651,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "9310:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9321:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3653,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3592,
																					"src": "9325:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3654,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3643,
																					"src": "9339:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9325:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9321:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9310:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3658,
																	"nodeType": "ExpressionStatement",
																	"src": "9310:36:15"
																},
																{
																	"expression": {
																		"id": 3665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3659,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "9383:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9394:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3661,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3592,
																					"src": "9398:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3662,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3643,
																					"src": "9412:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9398:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9394:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9383:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3666,
																	"nodeType": "ExpressionStatement",
																	"src": "9383:36:15"
																},
																{
																	"expression": {
																		"id": 3673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3667,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "9457:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9468:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3669,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3592,
																					"src": "9472:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3670,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3643,
																					"src": "9486:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9472:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9468:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9457:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3674,
																	"nodeType": "ExpressionStatement",
																	"src": "9457:36:15"
																},
																{
																	"expression": {
																		"id": 3681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3675,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "9531:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9542:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3679,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3677,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3592,
																					"src": "9546:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3678,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3643,
																					"src": "9560:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9546:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9542:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9531:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3682,
																	"nodeType": "ExpressionStatement",
																	"src": "9531:36:15"
																},
																{
																	"expression": {
																		"id": 3689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3683,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "9605:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9616:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3685,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3592,
																					"src": "9620:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3686,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3643,
																					"src": "9634:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9620:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9616:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9605:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3690,
																	"nodeType": "ExpressionStatement",
																	"src": "9605:36:15"
																},
																{
																	"expression": {
																		"id": 3697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3691,
																			"name": "inverse",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "9680:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "*=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 3692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9691:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3693,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3592,
																					"src": "9695:11:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 3694,
																					"name": "inverse",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3643,
																					"src": "9709:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9695:21:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9691:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9680:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3698,
																	"nodeType": "ExpressionStatement",
																	"src": "9680:36:15"
																},
																{
																	"expression": {
																		"id": 3703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3599,
																			"src": "10170:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3700,
																				"name": "prod0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3594,
																				"src": "10179:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 3701,
																				"name": "inverse",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3643,
																				"src": "10187:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10179:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10170:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3704,
																	"nodeType": "ExpressionStatement",
																	"src": "10170:24:15"
																}
															]
														}
													]
												},
												"id": 3707,
												"nodeType": "IfStatement",
												"src": "7054:3165:15",
												"trueBody": {
													"id": 3611,
													"nodeType": "Block",
													"src": "7070:95:15",
													"statements": [
														{
															"id": 3610,
															"nodeType": "UncheckedBlock",
															"src": "7084:71:15",
															"statements": [
																{
																	"expression": {
																		"id": 3608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3599,
																			"src": "7112:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3605,
																				"name": "prod0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3594,
																				"src": "7121:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 3606,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3592,
																				"src": "7129:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7121:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7112:28:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3609,
																	"nodeType": "ExpressionStatement",
																	"src": "7112:28:15"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3586,
										"nodeType": "StructuredDocumentation",
										"src": "6372:421:15",
										"text": "@notice Helper function to return the result of `x * y / denominator` with full precision\n @param x The multiplicand as an uint256\n @param y The multiplier as an uint256\n @param denominator The divisor as an uint256\n @param prod0 The least significant 256 bits of the product\n @param prod1 The most significant 256 bits of the product\n @return result The result as an uint256"
									},
									"id": 3709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getEndOfDivRoundDown",
									"nameLocation": "6807:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6846:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "6838:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6838:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6865:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "6857:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3592,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6884:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "6876:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3594,
												"mutability": "mutable",
												"name": "prod0",
												"nameLocation": "6913:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "6905:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3596,
												"mutability": "mutable",
												"name": "prod1",
												"nameLocation": "6936:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "6928:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6828:119:15"
									},
									"returnParameters": {
										"id": 3600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "6978:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3709,
												"src": "6970:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6970:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6969:16:15"
									},
									"scope": 3710,
									"src": "6798:3427:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3711,
							"src": "243:9984:15",
							"usedErrors": []
						}
					],
					"src": "33:10195:15"
				},
				"id": 15
			},
			"joe-v2-main/src/libraries/PendingOwnable.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/PendingOwnable.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"Constants": [
							2964
						],
						"FeeHelper": [
							3121
						],
						"IERC20": [
							157
						],
						"ILBFactory": [
							2111
						],
						"ILBFlashLoanCallback": [
							2132
						],
						"ILBPair": [
							2398
						],
						"IPendingOwnable": [
							2436
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable": [
							3915
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"SafeMath": [
							4660
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 3916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3712,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:16"
						},
						{
							"absolutePath": "joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3916,
							"sourceUnit": 1314,
							"src": "58:25:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "joe-v2-main/src/interfaces/IPendingOwnable.sol",
							"file": "../interfaces/IPendingOwnable.sol",
							"id": 3714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3916,
							"sourceUnit": 2437,
							"src": "84:43:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3716,
										"name": "IPendingOwnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2436,
										"src": "1034:15:16"
									},
									"id": 3717,
									"nodeType": "InheritanceSpecifier",
									"src": "1034:15:16"
								}
							],
							"canonicalName": "PendingOwnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3715,
								"nodeType": "StructuredDocumentation",
								"src": "129:878:16",
								"text": "@title Pending Ownable\n @author Trader Joe\n @notice Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions. The ownership of this contract is transferred using the\n push and pull pattern, the current owner set a `pendingOwner` using\n {setPendingOwner} and that address can then call {becomeOwner} to become the\n owner of that contract. The main logic and comments comes from OpenZeppelin's\n Ownable contract.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {setPendingOwner} and {becomeOwner}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner"
							},
							"fullyImplemented": true,
							"id": 3915,
							"linearizedBaseContracts": [
								3915,
								2436
							],
							"name": "PendingOwnable",
							"nameLocation": "1016:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3719,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1072:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 3915,
									"src": "1056:22:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3718,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1056:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3721,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "1100:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 3915,
									"src": "1084:29:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3720,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1084:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3733,
										"nodeType": "Block",
										"src": "1211:87:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3724,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1225:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1225:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3726,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3719,
														"src": "1239:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1225:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3731,
												"nodeType": "IfStatement",
												"src": "1221:59:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3728,
															"name": "PendingOwnable__NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "1254:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1254:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3730,
													"nodeType": "RevertStatement",
													"src": "1247:33:16"
												}
											},
											{
												"id": 3732,
												"nodeType": "PlaceholderStatement",
												"src": "1290:1:16"
											}
										]
									},
									"documentation": {
										"id": 3722,
										"nodeType": "StructuredDocumentation",
										"src": "1120:65:16",
										"text": "@notice Throws if called by any account other than the owner."
									},
									"id": 3734,
									"name": "onlyOwner",
									"nameLocation": "1199:9:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1208:2:16"
									},
									"src": "1190:108:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3754,
										"nodeType": "Block",
										"src": "1410:129:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3737,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1424:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1424:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 3739,
															"name": "_pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3721,
															"src": "1438:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1424:27:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3741,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1455:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1455:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1477:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1469:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3743,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1469:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1469:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1455:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1424:55:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3752,
												"nodeType": "IfStatement",
												"src": "1420:101:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3749,
															"name": "PendingOwnable__NotPendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "1488:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1488:33:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3751,
													"nodeType": "RevertStatement",
													"src": "1481:40:16"
												}
											},
											{
												"id": 3753,
												"nodeType": "PlaceholderStatement",
												"src": "1531:1:16"
											}
										]
									},
									"documentation": {
										"id": 3735,
										"nodeType": "StructuredDocumentation",
										"src": "1304:73:16",
										"text": "@notice Throws if called by any account other than the pending owner."
									},
									"id": 3755,
									"name": "onlyPendingOwner",
									"nameLocation": "1391:16:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:2:16"
									},
									"src": "1382:157:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3764,
										"nodeType": "Block",
										"src": "1642:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1671:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1671:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3759,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3899,
														"src": "1652:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1652:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3763,
												"nodeType": "ExpressionStatement",
												"src": "1652:30:16"
											}
										]
									},
									"documentation": {
										"id": 3756,
										"nodeType": "StructuredDocumentation",
										"src": "1545:78:16",
										"text": "@notice Initializes the contract setting the deployer as the initial owner"
									},
									"id": 3765,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:2:16"
									},
									"returnParameters": {
										"id": 3758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:0:16"
									},
									"scope": 3915,
									"src": "1628:61:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2416
									],
									"body": {
										"id": 3774,
										"nodeType": "Block",
										"src": "1857:30:16",
										"statements": [
											{
												"expression": {
													"id": 3772,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3719,
													"src": "1874:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3771,
												"id": 3773,
												"nodeType": "Return",
												"src": "1867:13:16"
											}
										]
									},
									"documentation": {
										"id": 3766,
										"nodeType": "StructuredDocumentation",
										"src": "1695:101:16",
										"text": "@notice Returns the address of the current owner\n @return The address of the current owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 3775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1810:5:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3768,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1830:8:16"
									},
									"parameters": {
										"id": 3767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1815:2:16"
									},
									"returnParameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3775,
												"src": "1848:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:16"
									},
									"scope": 3915,
									"src": "1801:86:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2421
									],
									"body": {
										"id": 3784,
										"nodeType": "Block",
										"src": "2078:37:16",
										"statements": [
											{
												"expression": {
													"id": 3782,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3721,
													"src": "2095:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3781,
												"id": 3783,
												"nodeType": "Return",
												"src": "2088:20:16"
											}
										]
									},
									"documentation": {
										"id": 3776,
										"nodeType": "StructuredDocumentation",
										"src": "1893:117:16",
										"text": "@notice Returns the address of the current pending owner\n @return The address of the current pending owner"
									},
									"functionSelector": "e30c3978",
									"id": 3785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "2024:12:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3778,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2051:8:16"
									},
									"parameters": {
										"id": 3777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:2:16"
									},
									"returnParameters": {
										"id": 3781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3785,
												"src": "2069:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:16"
									},
									"scope": 3915,
									"src": "2015:100:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2426
									],
									"body": {
										"id": 3818,
										"nodeType": "Block",
										"src": "2339:217:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3794,
														"name": "pendingOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3788,
														"src": "2353:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3797,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2378:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2370:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3795,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2370:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2370:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2353:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3803,
												"nodeType": "IfStatement",
												"src": "2349:69:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3800,
															"name": "PendingOwnable__AddressZero",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "2389:27:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2389:29:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3802,
													"nodeType": "RevertStatement",
													"src": "2382:36:16"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3804,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "2432:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2457:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2449:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3805,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2449:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2449:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2432:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3813,
												"nodeType": "IfStatement",
												"src": "2428:80:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3810,
															"name": "PendingOwnable__PendingOwnerAlreadySet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "2468:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2468:40:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3812,
													"nodeType": "RevertStatement",
													"src": "2461:47:16"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3815,
															"name": "pendingOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3788,
															"src": "2535:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3814,
														"name": "_setPendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3914,
														"src": "2518:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3817,
												"nodeType": "ExpressionStatement",
												"src": "2518:31:16"
											}
										]
									},
									"documentation": {
										"id": 3786,
										"nodeType": "StructuredDocumentation",
										"src": "2121:139:16",
										"text": "@notice Sets the pending owner address. This address will be able to become\n the owner of this contract by calling {becomeOwner}"
									},
									"functionSelector": "c42069ec",
									"id": 3819,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3791,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "2329:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2329:9:16"
										}
									],
									"name": "setPendingOwner",
									"nameLocation": "2274:15:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2320:8:16"
									},
									"parameters": {
										"id": 3789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3788,
												"mutability": "mutable",
												"name": "pendingOwner_",
												"nameLocation": "2298:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "2290:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:23:16"
									},
									"returnParameters": {
										"id": 3793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:0:16"
									},
									"scope": 3915,
									"src": "2265:291:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2429
									],
									"body": {
										"id": 3843,
										"nodeType": "Block",
										"src": "2797:127:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3826,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "2811:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2836:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2828:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3827,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2828:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2828:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2811:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3835,
												"nodeType": "IfStatement",
												"src": "2807:72:16",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3832,
															"name": "PendingOwnable__NoPendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2847:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2847:32:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3834,
													"nodeType": "RevertStatement",
													"src": "2840:39:16"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2914:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2906:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2906:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2906:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3836,
														"name": "_setPendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3914,
														"src": "2889:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2889:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3842,
												"nodeType": "ExpressionStatement",
												"src": "2889:28:16"
											}
										]
									},
									"documentation": {
										"id": 3820,
										"nodeType": "StructuredDocumentation",
										"src": "2562:174:16",
										"text": "@notice Revoke the pending owner address. This address will not be able to\n call {becomeOwner} to become the owner anymore.\n Can only be called by the owner"
									},
									"functionSelector": "67ab8a4e",
									"id": 3844,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3823,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "2787:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2787:9:16"
										}
									],
									"name": "revokePendingOwner",
									"nameLocation": "2750:18:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3822,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2778:8:16"
									},
									"parameters": {
										"id": 3821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2768:2:16"
									},
									"returnParameters": {
										"id": 3825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:0:16"
									},
									"scope": 3915,
									"src": "2741:183:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2432
									],
									"body": {
										"id": 3856,
										"nodeType": "Block",
										"src": "3108:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3852,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3137:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3137:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3851,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3899,
														"src": "3118:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3118:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3855,
												"nodeType": "ExpressionStatement",
												"src": "3118:30:16"
											}
										]
									},
									"documentation": {
										"id": 3845,
										"nodeType": "StructuredDocumentation",
										"src": "2930:117:16",
										"text": "@notice Transfers the ownership to the new owner (`pendingOwner).\n Can only be called by the pending owner"
									},
									"functionSelector": "f9dca989",
									"id": 3857,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3849,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3848,
												"name": "onlyPendingOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3755,
												"src": "3091:16:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3091:16:16"
										}
									],
									"name": "becomeOwner",
									"nameLocation": "3061:11:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3847,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3082:8:16"
									},
									"parameters": {
										"id": 3846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3072:2:16"
									},
									"returnParameters": {
										"id": 3850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3108:0:16"
									},
									"scope": 3915,
									"src": "3052:103:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2435
									],
									"body": {
										"id": 3871,
										"nodeType": "Block",
										"src": "3544:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3581:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3573:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3865,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3573:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3573:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3864,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3899,
														"src": "3554:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3870,
												"nodeType": "ExpressionStatement",
												"src": "3554:30:16"
											}
										]
									},
									"documentation": {
										"id": 3858,
										"nodeType": "StructuredDocumentation",
										"src": "3161:323:16",
										"text": "@notice Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 3872,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3862,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3861,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3734,
												"src": "3534:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "3534:9:16"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3498:17:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3860,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3525:8:16"
									},
									"parameters": {
										"id": 3859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3515:2:16"
									},
									"returnParameters": {
										"id": 3863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3544:0:16"
									},
									"scope": 3915,
									"src": "3489:102:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3898,
										"nodeType": "Block",
										"src": "3852:164:16",
										"statements": [
											{
												"assignments": [
													3879
												],
												"declarations": [
													{
														"constant": false,
														"id": 3879,
														"mutability": "mutable",
														"name": "_oldOwner",
														"nameLocation": "3870:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 3898,
														"src": "3862:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3878,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3881,
												"initialValue": {
													"id": 3880,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3719,
													"src": "3882:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3862:26:16"
											},
											{
												"expression": {
													"id": 3884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3882,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3719,
														"src": "3898:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3883,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3875,
														"src": "3907:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3898:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3885,
												"nodeType": "ExpressionStatement",
												"src": "3898:18:16"
											},
											{
												"expression": {
													"id": 3891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3886,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "3926:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3950:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3942:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3942:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 3890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3942:10:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3926:26:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3892,
												"nodeType": "ExpressionStatement",
												"src": "3926:26:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3894,
															"name": "_oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3879,
															"src": "3988:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3895,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3875,
															"src": "3999:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3893,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "3967:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 3896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3967:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3897,
												"nodeType": "EmitStatement",
												"src": "3962:47:16"
											}
										]
									},
									"documentation": {
										"id": 3873,
										"nodeType": "StructuredDocumentation",
										"src": "3597:186:16",
										"text": "@notice Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction.\n @param _newOwner The address of the new owner"
									},
									"id": 3899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3797:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3875,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "3824:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3899,
												"src": "3816:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3816:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3815:19:16"
									},
									"returnParameters": {
										"id": 3877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3852:0:16"
									},
									"scope": 3915,
									"src": "3788:228:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3913,
										"nodeType": "Block",
										"src": "4283:91:16",
										"statements": [
											{
												"expression": {
													"id": 3907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3905,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "4293:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3906,
														"name": "pendingOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3902,
														"src": "4309:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4293:29:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3908,
												"nodeType": "ExpressionStatement",
												"src": "4293:29:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3910,
															"name": "pendingOwner_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "4353:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3909,
														"name": "PendingOwnerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2405,
														"src": "4337:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4337:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3912,
												"nodeType": "EmitStatement",
												"src": "4332:35:16"
											}
										]
									},
									"documentation": {
										"id": 3900,
										"nodeType": "StructuredDocumentation",
										"src": "4022:190:16",
										"text": "@notice Push the new owner, it needs to be pulled to be effective.\n Internal function without access restriction.\n @param pendingOwner_ The address of the new pending owner"
									},
									"id": 3914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setPendingOwner",
									"nameLocation": "4226:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3902,
												"mutability": "mutable",
												"name": "pendingOwner_",
												"nameLocation": "4251:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3914,
												"src": "4243:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:23:16"
									},
									"returnParameters": {
										"id": 3904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4283:0:16"
									},
									"scope": 3915,
									"src": "4217:157:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3916,
							"src": "1007:3369:16",
							"usedErrors": [
								1149,
								1151,
								1153,
								1155,
								1157
							]
						}
					],
					"src": "33:4344:16"
				},
				"id": 16
			},
			"joe-v2-main/src/libraries/SafeCast.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/SafeCast.sol",
					"exportedSymbols": {
						"BinHelper__BinStepOverflows": [
							1099
						],
						"BinHelper__IdOverflows": [
							1101
						],
						"JoeLibrary__AddressZero": [
							1299
						],
						"JoeLibrary__IdenticalAddresses": [
							1297
						],
						"JoeLibrary__InsufficientAmount": [
							1301
						],
						"JoeLibrary__InsufficientLiquidity": [
							1303
						],
						"LBFactory__AddressZero": [
							945
						],
						"LBFactory__BaseFeesBelowMin": [
							989
						],
						"LBFactory__BinStepHasNoPreset": [
							1027
						],
						"LBFactory__BinStepRequirementsBreached": [
							1009
						],
						"LBFactory__DecreasingPeriods": [
							971
						],
						"LBFactory__FactoryLockIsAlreadyInTheSameState": [
							1021
						],
						"LBFactory__FeesAboveMax": [
							995
						],
						"LBFactory__FlashLoanFeeAboveMax": [
							1001
						],
						"LBFactory__FunctionIsLockedForUsers": [
							1019
						],
						"LBFactory__IdenticalAddresses": [
							933
						],
						"LBFactory__ImplementationNotSet": [
							1045
						],
						"LBFactory__LBPairAlreadyExists": [
							955
						],
						"LBFactory__LBPairIgnoredIsAlreadyInTheSameState": [
							1023
						],
						"LBFactory__LBPairNotCreated": [
							965
						],
						"LBFactory__LBPairSafetyCheckFailed": [
							1039
						],
						"LBFactory__ProtocolShareOverflows": [
							1015
						],
						"LBFactory__QuoteAssetAlreadyWhitelisted": [
							943
						],
						"LBFactory__QuoteAssetNotWhitelisted": [
							938
						],
						"LBFactory__ReductionFactorOverflows": [
							977
						],
						"LBFactory__SameFeeRecipient": [
							1031
						],
						"LBFactory__SameFlashLoanFee": [
							1035
						],
						"LBFactory__SameImplementation": [
							1043
						],
						"LBFactory__VariableFeeControlOverflows": [
							983
						],
						"LBPair__AddressZero": [
							1050
						],
						"LBPair__AddressZeroOrThis": [
							1052
						],
						"LBPair__AlreadyInitialized": [
							1082
						],
						"LBPair__CompositionFactorFlawed": [
							1056
						],
						"LBPair__DistributionsOverflow": [
							1072
						],
						"LBPair__FlashLoanCallbackFailed": [
							1090
						],
						"LBPair__FlashLoanInvalidBalance": [
							1092
						],
						"LBPair__FlashLoanInvalidToken": [
							1094
						],
						"LBPair__InsufficientAmounts": [
							1048
						],
						"LBPair__InsufficientLiquidityBurned": [
							1064
						],
						"LBPair__InsufficientLiquidityMinted": [
							1060
						],
						"LBPair__OnlyFactory": [
							1070
						],
						"LBPair__OnlyFeeRecipient": [
							1078
						],
						"LBPair__OnlyStrictlyIncreasingId": [
							1068
						],
						"LBPair__OracleNewSizeTooSmall": [
							1088
						],
						"LBPair__OracleNotEnoughSample": [
							1080
						],
						"LBPair__WrongLengths": [
							1066
						],
						"LBQuoter_InvalidLength": [
							1313
						],
						"LBRouter__AmountSlippageBPTooBig": [
							854
						],
						"LBRouter__AmountSlippageCaught": [
							832
						],
						"LBRouter__BinReserveOverflows": [
							806
						],
						"LBRouter__BrokenSwapSafetyCheck": [
							796
						],
						"LBRouter__DeadlineExceeded": [
							850
						],
						"LBRouter__FailedToSendAVAX": [
							844
						],
						"LBRouter__IdDesiredOverflows": [
							838
						],
						"LBRouter__IdOverflows": [
							810
						],
						"LBRouter__IdSlippageCaught": [
							822
						],
						"LBRouter__InsufficientAmountOut": [
							860
						],
						"LBRouter__InvalidTokenPath": [
							870
						],
						"LBRouter__InvalidVersion": [
							874
						],
						"LBRouter__LengthsMismatch": [
							812
						],
						"LBRouter__MaxAmountInExceeded": [
							866
						],
						"LBRouter__NotFactoryOwner": [
							798
						],
						"LBRouter__PairNotCreated": [
							784
						],
						"LBRouter__SenderIsNotWAVAX": [
							776
						],
						"LBRouter__SwapOverflows": [
							794
						],
						"LBRouter__TooMuchTokensIn": [
							802
						],
						"LBRouter__WrongAmounts": [
							790
						],
						"LBRouter__WrongAvaxLiquidityParameters": [
							886
						],
						"LBRouter__WrongTokenOrder": [
							814
						],
						"LBToken__BurnExceedsBalance": [
							907
						],
						"LBToken__BurnFromAddress0": [
							899
						],
						"LBToken__LengthMismatch": [
							913
						],
						"LBToken__MintToAddress0": [
							897
						],
						"LBToken__SelfApproval": [
							917
						],
						"LBToken__SpenderNotApproved": [
							893
						],
						"LBToken__TransferExceedsBalance": [
							925
						],
						"LBToken__TransferFromOrToAddress0": [
							895
						],
						"LBToken__TransferToSelf": [
							927
						],
						"Math128x128__LogUnderflow": [
							1110
						],
						"Math128x128__PowerUnderflow": [
							1108
						],
						"Math512Bits__MulDivOverflow": [
							1117
						],
						"Math512Bits__MulShiftOverflow": [
							1129
						],
						"Math512Bits__OffsetOverflows": [
							1133
						],
						"Math512Bits__ShiftDivOverflow": [
							1123
						],
						"Oracle__AlreadyInitialized": [
							1138
						],
						"Oracle__LookUpTimestampTooOld": [
							1144
						],
						"Oracle__NotInitialized": [
							1146
						],
						"PendingOwnable__AddressZero": [
							1157
						],
						"PendingOwnable__NoPendingOwner": [
							1155
						],
						"PendingOwnable__NotOwner": [
							1149
						],
						"PendingOwnable__NotPendingOwner": [
							1151
						],
						"PendingOwnable__PendingOwnerAlreadySet": [
							1153
						],
						"ReentrancyGuardUpgradeable__AlreadyInitialized": [
							1162
						],
						"ReentrancyGuardUpgradeable__ReentrantCall": [
							1160
						],
						"SafeCast": [
							4633
						],
						"SafeCast__Exceeds104Bits": [
							1243
						],
						"SafeCast__Exceeds112Bits": [
							1239
						],
						"SafeCast__Exceeds120Bits": [
							1235
						],
						"SafeCast__Exceeds128Bits": [
							1231
						],
						"SafeCast__Exceeds136Bits": [
							1227
						],
						"SafeCast__Exceeds144Bits": [
							1223
						],
						"SafeCast__Exceeds152Bits": [
							1219
						],
						"SafeCast__Exceeds160Bits": [
							1215
						],
						"SafeCast__Exceeds168Bits": [
							1211
						],
						"SafeCast__Exceeds16Bits": [
							1287
						],
						"SafeCast__Exceeds176Bits": [
							1207
						],
						"SafeCast__Exceeds184Bits": [
							1203
						],
						"SafeCast__Exceeds192Bits": [
							1199
						],
						"SafeCast__Exceeds200Bits": [
							1195
						],
						"SafeCast__Exceeds208Bits": [
							1191
						],
						"SafeCast__Exceeds216Bits": [
							1187
						],
						"SafeCast__Exceeds224Bits": [
							1183
						],
						"SafeCast__Exceeds232Bits": [
							1179
						],
						"SafeCast__Exceeds240Bits": [
							1175
						],
						"SafeCast__Exceeds248Bits": [
							1171
						],
						"SafeCast__Exceeds24Bits": [
							1283
						],
						"SafeCast__Exceeds256Bits": [
							1167
						],
						"SafeCast__Exceeds32Bits": [
							1279
						],
						"SafeCast__Exceeds40Bits": [
							1275
						],
						"SafeCast__Exceeds48Bits": [
							1271
						],
						"SafeCast__Exceeds56Bits": [
							1267
						],
						"SafeCast__Exceeds64Bits": [
							1263
						],
						"SafeCast__Exceeds72Bits": [
							1259
						],
						"SafeCast__Exceeds80Bits": [
							1255
						],
						"SafeCast__Exceeds88Bits": [
							1251
						],
						"SafeCast__Exceeds8Bits": [
							1291
						],
						"SafeCast__Exceeds96Bits": [
							1247
						],
						"TokenHelper__CallFailed": [
							1308
						],
						"TokenHelper__NonContract": [
							1306
						],
						"TokenHelper__TransferFailed": [
							1310
						],
						"TreeMath__ErrorDepthSearch": [
							1294
						]
					},
					"id": 4634,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3917,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:17"
						},
						{
							"absolutePath": "joe-v2-main/src/LBErrors.sol",
							"file": "../LBErrors.sol",
							"id": 3918,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4634,
							"sourceUnit": 1314,
							"src": "58:25:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3919,
								"nodeType": "StructuredDocumentation",
								"src": "85:134:17",
								"text": "@title Liquidity Book Safe Cast Library\n @author Trader Joe\n @notice Helper contract used for converting uint values safely"
							},
							"fullyImplemented": true,
							"id": 4633,
							"linearizedBaseContracts": [
								4633
							],
							"name": "SafeCast",
							"nameLocation": "227:8:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3941,
										"nodeType": "Block",
										"src": "460:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 3932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3927,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3925,
																	"src": "475:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint248",
																		"typeString": "uint248"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3930,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3922,
																			"src": "487:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "479:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint248_$",
																			"typeString": "type(uint248)"
																		},
																		"typeName": {
																			"id": 3928,
																			"name": "uint248",
																			"nodeType": "ElementaryTypeName",
																			"src": "479:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "479:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint248",
																		"typeString": "uint248"
																	}
																},
																"src": "475:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint248",
																	"typeString": "uint248"
																}
															}
														],
														"id": 3933,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "474:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3934,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3922,
														"src": "494:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "474:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3940,
												"nodeType": "IfStatement",
												"src": "470:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3937,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3922,
																"src": "529:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3936,
															"name": "SafeCast__Exceeds248Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "504:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "504:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3939,
													"nodeType": "RevertStatement",
													"src": "497:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3920,
										"nodeType": "StructuredDocumentation",
										"src": "242:151:17",
										"text": "@notice Returns x on uint248 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint248"
									},
									"id": 3942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe248",
									"nameLocation": "407:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3922,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "423:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3942,
												"src": "415:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:11:17"
									},
									"returnParameters": {
										"id": 3926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3925,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "457:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3942,
												"src": "449:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 3924,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:11:17"
									},
									"scope": 4633,
									"src": "398:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3964,
										"nodeType": "Block",
										"src": "762:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 3955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3950,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3948,
																	"src": "777:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint240",
																		"typeString": "uint240"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3953,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3945,
																			"src": "789:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "781:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint240_$",
																			"typeString": "type(uint240)"
																		},
																		"typeName": {
																			"id": 3951,
																			"name": "uint240",
																			"nodeType": "ElementaryTypeName",
																			"src": "781:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "781:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint240",
																		"typeString": "uint240"
																	}
																},
																"src": "777:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint240",
																	"typeString": "uint240"
																}
															}
														],
														"id": 3956,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "776:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3957,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3945,
														"src": "796:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "776:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3963,
												"nodeType": "IfStatement",
												"src": "772:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3960,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3945,
																"src": "831:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3959,
															"name": "SafeCast__Exceeds240Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "806:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "806:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3962,
													"nodeType": "RevertStatement",
													"src": "799:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3943,
										"nodeType": "StructuredDocumentation",
										"src": "544:151:17",
										"text": "@notice Returns x on uint240 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint240"
									},
									"id": 3965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe240",
									"nameLocation": "709:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3945,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "725:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3965,
												"src": "717:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:11:17"
									},
									"returnParameters": {
										"id": 3949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3948,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "759:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3965,
												"src": "751:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 3947,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:11:17"
									},
									"scope": 4633,
									"src": "700:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3987,
										"nodeType": "Block",
										"src": "1064:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 3978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3973,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3971,
																	"src": "1079:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint232",
																		"typeString": "uint232"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3976,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3968,
																			"src": "1091:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1083:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint232_$",
																			"typeString": "type(uint232)"
																		},
																		"typeName": {
																			"id": 3974,
																			"name": "uint232",
																			"nodeType": "ElementaryTypeName",
																			"src": "1083:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1083:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint232",
																		"typeString": "uint232"
																	}
																},
																"src": "1079:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint232",
																	"typeString": "uint232"
																}
															}
														],
														"id": 3979,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1078:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3980,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3968,
														"src": "1098:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1078:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3986,
												"nodeType": "IfStatement",
												"src": "1074:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 3983,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3968,
																"src": "1133:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3982,
															"name": "SafeCast__Exceeds232Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "1108:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 3984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1108:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3985,
													"nodeType": "RevertStatement",
													"src": "1101:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3966,
										"nodeType": "StructuredDocumentation",
										"src": "846:151:17",
										"text": "@notice Returns x on uint232 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint232"
									},
									"id": 3988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe232",
									"nameLocation": "1011:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3968,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1027:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "1019:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:11:17"
									},
									"returnParameters": {
										"id": 3972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3971,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1061:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3988,
												"src": "1053:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 3970,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1052:11:17"
									},
									"scope": 4633,
									"src": "1002:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4010,
										"nodeType": "Block",
										"src": "1366:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3996,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3994,
																	"src": "1381:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint224",
																		"typeString": "uint224"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3999,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3991,
																			"src": "1393:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1385:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint224_$",
																			"typeString": "type(uint224)"
																		},
																		"typeName": {
																			"id": 3997,
																			"name": "uint224",
																			"nodeType": "ElementaryTypeName",
																			"src": "1385:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1385:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint224",
																		"typeString": "uint224"
																	}
																},
																"src": "1381:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint224",
																	"typeString": "uint224"
																}
															}
														],
														"id": 4002,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1380:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4003,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3991,
														"src": "1400:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1380:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4009,
												"nodeType": "IfStatement",
												"src": "1376:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4006,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3991,
																"src": "1435:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4005,
															"name": "SafeCast__Exceeds224Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "1410:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1410:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4008,
													"nodeType": "RevertStatement",
													"src": "1403:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 3989,
										"nodeType": "StructuredDocumentation",
										"src": "1148:151:17",
										"text": "@notice Returns x on uint224 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint224"
									},
									"id": 4011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe224",
									"nameLocation": "1313:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3991,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1329:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "1321:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:11:17"
									},
									"returnParameters": {
										"id": 3995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3994,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1363:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4011,
												"src": "1355:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 3993,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:11:17"
									},
									"scope": 4633,
									"src": "1304:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4033,
										"nodeType": "Block",
										"src": "1668:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4019,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4017,
																	"src": "1683:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint216",
																		"typeString": "uint216"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4022,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4014,
																			"src": "1695:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1687:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint216_$",
																			"typeString": "type(uint216)"
																		},
																		"typeName": {
																			"id": 4020,
																			"name": "uint216",
																			"nodeType": "ElementaryTypeName",
																			"src": "1687:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1687:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint216",
																		"typeString": "uint216"
																	}
																},
																"src": "1683:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint216",
																	"typeString": "uint216"
																}
															}
														],
														"id": 4025,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1682:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4026,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4014,
														"src": "1702:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1682:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4032,
												"nodeType": "IfStatement",
												"src": "1678:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4029,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4014,
																"src": "1737:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4028,
															"name": "SafeCast__Exceeds216Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "1712:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4031,
													"nodeType": "RevertStatement",
													"src": "1705:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4012,
										"nodeType": "StructuredDocumentation",
										"src": "1450:151:17",
										"text": "@notice Returns x on uint216 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint216"
									},
									"id": 4034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe216",
									"nameLocation": "1615:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4014,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1631:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4034,
												"src": "1623:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:11:17"
									},
									"returnParameters": {
										"id": 4018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4017,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1665:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4034,
												"src": "1657:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 4016,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:11:17"
									},
									"scope": 4633,
									"src": "1606:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4056,
										"nodeType": "Block",
										"src": "1970:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4042,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4040,
																	"src": "1985:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint208",
																		"typeString": "uint208"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4045,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4037,
																			"src": "1997:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1989:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint208_$",
																			"typeString": "type(uint208)"
																		},
																		"typeName": {
																			"id": 4043,
																			"name": "uint208",
																			"nodeType": "ElementaryTypeName",
																			"src": "1989:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1989:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint208",
																		"typeString": "uint208"
																	}
																},
																"src": "1985:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint208",
																	"typeString": "uint208"
																}
															}
														],
														"id": 4048,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1984:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4049,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4037,
														"src": "2004:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1984:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4055,
												"nodeType": "IfStatement",
												"src": "1980:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4052,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4037,
																"src": "2039:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4051,
															"name": "SafeCast__Exceeds208Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "2014:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2014:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4054,
													"nodeType": "RevertStatement",
													"src": "2007:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4035,
										"nodeType": "StructuredDocumentation",
										"src": "1752:151:17",
										"text": "@notice Returns x on uint208 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint208"
									},
									"id": 4057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe208",
									"nameLocation": "1917:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4037,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1933:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4057,
												"src": "1925:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:11:17"
									},
									"returnParameters": {
										"id": 4041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4040,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1967:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4057,
												"src": "1959:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 4039,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:11:17"
									},
									"scope": 4633,
									"src": "1908:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4079,
										"nodeType": "Block",
										"src": "2272:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4065,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4063,
																	"src": "2287:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint200",
																		"typeString": "uint200"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4068,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4060,
																			"src": "2299:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2291:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint200_$",
																			"typeString": "type(uint200)"
																		},
																		"typeName": {
																			"id": 4066,
																			"name": "uint200",
																			"nodeType": "ElementaryTypeName",
																			"src": "2291:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2291:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint200",
																		"typeString": "uint200"
																	}
																},
																"src": "2287:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint200",
																	"typeString": "uint200"
																}
															}
														],
														"id": 4071,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2286:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4072,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4060,
														"src": "2306:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2286:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4078,
												"nodeType": "IfStatement",
												"src": "2282:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4075,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4060,
																"src": "2341:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4074,
															"name": "SafeCast__Exceeds200Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "2316:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2316:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4077,
													"nodeType": "RevertStatement",
													"src": "2309:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4058,
										"nodeType": "StructuredDocumentation",
										"src": "2054:151:17",
										"text": "@notice Returns x on uint200 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint200"
									},
									"id": 4080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe200",
									"nameLocation": "2219:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4060,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2235:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4080,
												"src": "2227:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2227:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2226:11:17"
									},
									"returnParameters": {
										"id": 4064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4063,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2269:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4080,
												"src": "2261:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 4062,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "2261:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2260:11:17"
									},
									"scope": 4633,
									"src": "2210:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4102,
										"nodeType": "Block",
										"src": "2574:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4088,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4086,
																	"src": "2589:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4091,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4083,
																			"src": "2601:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2593:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint192_$",
																			"typeString": "type(uint192)"
																		},
																		"typeName": {
																			"id": 4089,
																			"name": "uint192",
																			"nodeType": "ElementaryTypeName",
																			"src": "2593:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2593:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint192",
																		"typeString": "uint192"
																	}
																},
																"src": "2589:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint192",
																	"typeString": "uint192"
																}
															}
														],
														"id": 4094,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2588:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4095,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4083,
														"src": "2608:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2588:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4101,
												"nodeType": "IfStatement",
												"src": "2584:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4098,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4083,
																"src": "2643:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4097,
															"name": "SafeCast__Exceeds192Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "2618:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2618:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4100,
													"nodeType": "RevertStatement",
													"src": "2611:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4081,
										"nodeType": "StructuredDocumentation",
										"src": "2356:151:17",
										"text": "@notice Returns x on uint192 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint192"
									},
									"id": 4103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe192",
									"nameLocation": "2521:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4083,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2537:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4103,
												"src": "2529:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2528:11:17"
									},
									"returnParameters": {
										"id": 4087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4086,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2571:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4103,
												"src": "2563:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 4085,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:11:17"
									},
									"scope": 4633,
									"src": "2512:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4125,
										"nodeType": "Block",
										"src": "2876:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4111,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4109,
																	"src": "2891:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint184",
																		"typeString": "uint184"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4114,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4106,
																			"src": "2903:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2895:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint184_$",
																			"typeString": "type(uint184)"
																		},
																		"typeName": {
																			"id": 4112,
																			"name": "uint184",
																			"nodeType": "ElementaryTypeName",
																			"src": "2895:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2895:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint184",
																		"typeString": "uint184"
																	}
																},
																"src": "2891:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint184",
																	"typeString": "uint184"
																}
															}
														],
														"id": 4117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2890:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4118,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4106,
														"src": "2910:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2890:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4124,
												"nodeType": "IfStatement",
												"src": "2886:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4121,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4106,
																"src": "2945:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4120,
															"name": "SafeCast__Exceeds184Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "2920:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2920:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4123,
													"nodeType": "RevertStatement",
													"src": "2913:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4104,
										"nodeType": "StructuredDocumentation",
										"src": "2658:151:17",
										"text": "@notice Returns x on uint184 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint184"
									},
									"id": 4126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe184",
									"nameLocation": "2823:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4106,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2839:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4126,
												"src": "2831:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2830:11:17"
									},
									"returnParameters": {
										"id": 4110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4109,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2873:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4126,
												"src": "2865:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 4108,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "2865:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:11:17"
									},
									"scope": 4633,
									"src": "2814:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4148,
										"nodeType": "Block",
										"src": "3178:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4134,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4132,
																	"src": "3193:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint176",
																		"typeString": "uint176"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4137,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4129,
																			"src": "3205:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3197:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint176_$",
																			"typeString": "type(uint176)"
																		},
																		"typeName": {
																			"id": 4135,
																			"name": "uint176",
																			"nodeType": "ElementaryTypeName",
																			"src": "3197:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3197:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint176",
																		"typeString": "uint176"
																	}
																},
																"src": "3193:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint176",
																	"typeString": "uint176"
																}
															}
														],
														"id": 4140,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3192:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4141,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4129,
														"src": "3212:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4147,
												"nodeType": "IfStatement",
												"src": "3188:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4144,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4129,
																"src": "3247:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4143,
															"name": "SafeCast__Exceeds176Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "3222:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3222:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4146,
													"nodeType": "RevertStatement",
													"src": "3215:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4127,
										"nodeType": "StructuredDocumentation",
										"src": "2960:151:17",
										"text": "@notice Returns x on uint176 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint176"
									},
									"id": 4149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe176",
									"nameLocation": "3125:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4129,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3141:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4149,
												"src": "3133:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3133:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3132:11:17"
									},
									"returnParameters": {
										"id": 4133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4132,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3175:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4149,
												"src": "3167:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 4131,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:11:17"
									},
									"scope": 4633,
									"src": "3116:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4171,
										"nodeType": "Block",
										"src": "3480:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4157,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4155,
																	"src": "3495:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint168",
																		"typeString": "uint168"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4160,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4152,
																			"src": "3507:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3499:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint168_$",
																			"typeString": "type(uint168)"
																		},
																		"typeName": {
																			"id": 4158,
																			"name": "uint168",
																			"nodeType": "ElementaryTypeName",
																			"src": "3499:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3499:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint168",
																		"typeString": "uint168"
																	}
																},
																"src": "3495:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint168",
																	"typeString": "uint168"
																}
															}
														],
														"id": 4163,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3494:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4164,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4152,
														"src": "3514:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3494:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4170,
												"nodeType": "IfStatement",
												"src": "3490:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4167,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4152,
																"src": "3549:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4166,
															"name": "SafeCast__Exceeds168Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3524:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3524:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4169,
													"nodeType": "RevertStatement",
													"src": "3517:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4150,
										"nodeType": "StructuredDocumentation",
										"src": "3262:151:17",
										"text": "@notice Returns x on uint168 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint168"
									},
									"id": 4172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe168",
									"nameLocation": "3427:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4152,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3443:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4172,
												"src": "3435:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3435:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3434:11:17"
									},
									"returnParameters": {
										"id": 4156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4155,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3477:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4172,
												"src": "3469:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 4154,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3468:11:17"
									},
									"scope": 4633,
									"src": "3418:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4194,
										"nodeType": "Block",
										"src": "3782:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4180,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4178,
																	"src": "3797:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4183,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4175,
																			"src": "3809:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3801:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 4181,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3801:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3801:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "3797:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"id": 4186,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3796:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4187,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4175,
														"src": "3816:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3796:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4193,
												"nodeType": "IfStatement",
												"src": "3792:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4190,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4175,
																"src": "3851:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4189,
															"name": "SafeCast__Exceeds160Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "3826:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3826:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4192,
													"nodeType": "RevertStatement",
													"src": "3819:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4173,
										"nodeType": "StructuredDocumentation",
										"src": "3564:151:17",
										"text": "@notice Returns x on uint160 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint160"
									},
									"id": 4195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe160",
									"nameLocation": "3729:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4175,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3745:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4195,
												"src": "3737:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3736:11:17"
									},
									"returnParameters": {
										"id": 4179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4178,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3779:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4195,
												"src": "3771:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4177,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3770:11:17"
									},
									"scope": 4633,
									"src": "3720:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4217,
										"nodeType": "Block",
										"src": "4084:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4203,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4201,
																	"src": "4099:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint152",
																		"typeString": "uint152"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4206,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4198,
																			"src": "4111:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4103:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint152_$",
																			"typeString": "type(uint152)"
																		},
																		"typeName": {
																			"id": 4204,
																			"name": "uint152",
																			"nodeType": "ElementaryTypeName",
																			"src": "4103:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4103:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint152",
																		"typeString": "uint152"
																	}
																},
																"src": "4099:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint152",
																	"typeString": "uint152"
																}
															}
														],
														"id": 4209,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4098:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4210,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4198,
														"src": "4118:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4098:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4216,
												"nodeType": "IfStatement",
												"src": "4094:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4213,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4198,
																"src": "4153:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4212,
															"name": "SafeCast__Exceeds152Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "4128:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4128:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4215,
													"nodeType": "RevertStatement",
													"src": "4121:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4196,
										"nodeType": "StructuredDocumentation",
										"src": "3866:151:17",
										"text": "@notice Returns x on uint152 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint152"
									},
									"id": 4218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe152",
									"nameLocation": "4031:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4198,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4047:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4218,
												"src": "4039:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4038:11:17"
									},
									"returnParameters": {
										"id": 4202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4201,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4081:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4218,
												"src": "4073:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 4200,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "4073:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:11:17"
									},
									"scope": 4633,
									"src": "4022:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4240,
										"nodeType": "Block",
										"src": "4386:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4226,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4224,
																	"src": "4401:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint144",
																		"typeString": "uint144"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4229,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4221,
																			"src": "4413:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4405:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint144_$",
																			"typeString": "type(uint144)"
																		},
																		"typeName": {
																			"id": 4227,
																			"name": "uint144",
																			"nodeType": "ElementaryTypeName",
																			"src": "4405:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4405:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint144",
																		"typeString": "uint144"
																	}
																},
																"src": "4401:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint144",
																	"typeString": "uint144"
																}
															}
														],
														"id": 4232,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4400:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4233,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4221,
														"src": "4420:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4239,
												"nodeType": "IfStatement",
												"src": "4396:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4236,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4221,
																"src": "4455:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4235,
															"name": "SafeCast__Exceeds144Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4430:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4430:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4238,
													"nodeType": "RevertStatement",
													"src": "4423:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4219,
										"nodeType": "StructuredDocumentation",
										"src": "4168:151:17",
										"text": "@notice Returns x on uint144 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint144"
									},
									"id": 4241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe144",
									"nameLocation": "4333:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4221,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4349:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4241,
												"src": "4341:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4341:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:11:17"
									},
									"returnParameters": {
										"id": 4225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4224,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4383:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4241,
												"src": "4375:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 4223,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4374:11:17"
									},
									"scope": 4633,
									"src": "4324:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4263,
										"nodeType": "Block",
										"src": "4688:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4249,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4247,
																	"src": "4703:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint136",
																		"typeString": "uint136"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4252,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4244,
																			"src": "4715:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4707:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint136_$",
																			"typeString": "type(uint136)"
																		},
																		"typeName": {
																			"id": 4250,
																			"name": "uint136",
																			"nodeType": "ElementaryTypeName",
																			"src": "4707:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4707:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint136",
																		"typeString": "uint136"
																	}
																},
																"src": "4703:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint136",
																	"typeString": "uint136"
																}
															}
														],
														"id": 4255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4702:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4256,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4244,
														"src": "4722:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4702:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4262,
												"nodeType": "IfStatement",
												"src": "4698:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4259,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4244,
																"src": "4757:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4258,
															"name": "SafeCast__Exceeds136Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "4732:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4732:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4261,
													"nodeType": "RevertStatement",
													"src": "4725:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4242,
										"nodeType": "StructuredDocumentation",
										"src": "4470:151:17",
										"text": "@notice Returns x on uint136 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint136"
									},
									"id": 4264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe136",
									"nameLocation": "4635:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4244,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4651:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4264,
												"src": "4643:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:11:17"
									},
									"returnParameters": {
										"id": 4248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4247,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4685:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4264,
												"src": "4677:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 4246,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "4677:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4676:11:17"
									},
									"scope": 4633,
									"src": "4626:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4286,
										"nodeType": "Block",
										"src": "4990:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4272,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4270,
																	"src": "5005:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4275,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4267,
																			"src": "5017:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5009:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 4273,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "5009:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5009:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "5005:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"id": 4278,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5004:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4279,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4267,
														"src": "5024:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5004:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4285,
												"nodeType": "IfStatement",
												"src": "5000:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4282,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4267,
																"src": "5059:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4281,
															"name": "SafeCast__Exceeds128Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "5034:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5034:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4284,
													"nodeType": "RevertStatement",
													"src": "5027:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4265,
										"nodeType": "StructuredDocumentation",
										"src": "4772:151:17",
										"text": "@notice Returns x on uint128 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint128"
									},
									"id": 4287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe128",
									"nameLocation": "4937:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4267,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "4953:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "4945:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4945:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4944:11:17"
									},
									"returnParameters": {
										"id": 4271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4270,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "4987:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4287,
												"src": "4979:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 4269,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4979:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:11:17"
									},
									"scope": 4633,
									"src": "4928:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4309,
										"nodeType": "Block",
										"src": "5292:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4295,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4293,
																	"src": "5307:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint120",
																		"typeString": "uint120"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4298,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4290,
																			"src": "5319:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5311:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint120_$",
																			"typeString": "type(uint120)"
																		},
																		"typeName": {
																			"id": 4296,
																			"name": "uint120",
																			"nodeType": "ElementaryTypeName",
																			"src": "5311:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5311:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint120",
																		"typeString": "uint120"
																	}
																},
																"src": "5307:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint120",
																	"typeString": "uint120"
																}
															}
														],
														"id": 4301,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5306:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4302,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4290,
														"src": "5326:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5306:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4308,
												"nodeType": "IfStatement",
												"src": "5302:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4305,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4290,
																"src": "5361:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4304,
															"name": "SafeCast__Exceeds120Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "5336:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5336:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4307,
													"nodeType": "RevertStatement",
													"src": "5329:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4288,
										"nodeType": "StructuredDocumentation",
										"src": "5074:151:17",
										"text": "@notice Returns x on uint120 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint120"
									},
									"id": 4310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe120",
									"nameLocation": "5239:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4290,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5255:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4310,
												"src": "5247:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:11:17"
									},
									"returnParameters": {
										"id": 4294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4293,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5289:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4310,
												"src": "5281:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 4292,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "5281:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5280:11:17"
									},
									"scope": 4633,
									"src": "5230:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4332,
										"nodeType": "Block",
										"src": "5594:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4318,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4316,
																	"src": "5609:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4321,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4313,
																			"src": "5621:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5613:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint112_$",
																			"typeString": "type(uint112)"
																		},
																		"typeName": {
																			"id": 4319,
																			"name": "uint112",
																			"nodeType": "ElementaryTypeName",
																			"src": "5613:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5613:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint112",
																		"typeString": "uint112"
																	}
																},
																"src": "5609:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint112",
																	"typeString": "uint112"
																}
															}
														],
														"id": 4324,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5608:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4325,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4313,
														"src": "5628:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5608:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4331,
												"nodeType": "IfStatement",
												"src": "5604:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4328,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4313,
																"src": "5663:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4327,
															"name": "SafeCast__Exceeds112Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "5638:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5638:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4330,
													"nodeType": "RevertStatement",
													"src": "5631:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4311,
										"nodeType": "StructuredDocumentation",
										"src": "5376:151:17",
										"text": "@notice Returns x on uint112 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint112"
									},
									"id": 4333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe112",
									"nameLocation": "5541:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4313,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5557:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4333,
												"src": "5549:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5549:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5548:11:17"
									},
									"returnParameters": {
										"id": 4317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4316,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5591:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4333,
												"src": "5583:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 4315,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5582:11:17"
									},
									"scope": 4633,
									"src": "5532:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4355,
										"nodeType": "Block",
										"src": "5896:78:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4341,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4339,
																	"src": "5911:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4344,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4336,
																			"src": "5923:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5915:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint104_$",
																			"typeString": "type(uint104)"
																		},
																		"typeName": {
																			"id": 4342,
																			"name": "uint104",
																			"nodeType": "ElementaryTypeName",
																			"src": "5915:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5915:10:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint104",
																		"typeString": "uint104"
																	}
																},
																"src": "5911:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint104",
																	"typeString": "uint104"
																}
															}
														],
														"id": 4347,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5910:16:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4348,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4336,
														"src": "5930:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5910:21:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4354,
												"nodeType": "IfStatement",
												"src": "5906:61:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4351,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4336,
																"src": "5965:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4350,
															"name": "SafeCast__Exceeds104Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "5940:24:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5940:27:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4353,
													"nodeType": "RevertStatement",
													"src": "5933:34:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4334,
										"nodeType": "StructuredDocumentation",
										"src": "5678:151:17",
										"text": "@notice Returns x on uint104 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint104"
									},
									"id": 4356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe104",
									"nameLocation": "5843:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4336,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5859:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4356,
												"src": "5851:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5851:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5850:11:17"
									},
									"returnParameters": {
										"id": 4340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4339,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5893:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4356,
												"src": "5885:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 4338,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "5885:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:11:17"
									},
									"scope": 4633,
									"src": "5834:140:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4378,
										"nodeType": "Block",
										"src": "6194:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4364,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4362,
																	"src": "6209:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4367,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4359,
																			"src": "6220:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6213:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": {
																			"id": 4365,
																			"name": "uint96",
																			"nodeType": "ElementaryTypeName",
																			"src": "6213:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6213:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"src": "6209:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"id": 4370,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6208:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4371,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4359,
														"src": "6227:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6208:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4377,
												"nodeType": "IfStatement",
												"src": "6204:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4374,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4359,
																"src": "6261:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4373,
															"name": "SafeCast__Exceeds96Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "6237:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6237:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4376,
													"nodeType": "RevertStatement",
													"src": "6230:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4357,
										"nodeType": "StructuredDocumentation",
										"src": "5980:149:17",
										"text": "@notice Returns x on uint96 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint96"
									},
									"id": 4379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe96",
									"nameLocation": "6143:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4359,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6158:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4379,
												"src": "6150:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6149:11:17"
									},
									"returnParameters": {
										"id": 4363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4362,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6191:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4379,
												"src": "6184:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4361,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "6184:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6183:10:17"
									},
									"scope": 4633,
									"src": "6134:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4401,
										"nodeType": "Block",
										"src": "6490:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4387,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4385,
																	"src": "6505:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint88",
																		"typeString": "uint88"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4390,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4382,
																			"src": "6516:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6509:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint88_$",
																			"typeString": "type(uint88)"
																		},
																		"typeName": {
																			"id": 4388,
																			"name": "uint88",
																			"nodeType": "ElementaryTypeName",
																			"src": "6509:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6509:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint88",
																		"typeString": "uint88"
																	}
																},
																"src": "6505:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint88",
																	"typeString": "uint88"
																}
															}
														],
														"id": 4393,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6504:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4394,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4382,
														"src": "6523:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6504:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4400,
												"nodeType": "IfStatement",
												"src": "6500:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4397,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4382,
																"src": "6557:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4396,
															"name": "SafeCast__Exceeds88Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6533:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6533:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4399,
													"nodeType": "RevertStatement",
													"src": "6526:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4380,
										"nodeType": "StructuredDocumentation",
										"src": "6276:149:17",
										"text": "@notice Returns x on uint88 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint88"
									},
									"id": 4402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe88",
									"nameLocation": "6439:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4382,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6454:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4402,
												"src": "6446:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6446:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6445:11:17"
									},
									"returnParameters": {
										"id": 4386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4385,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6487:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4402,
												"src": "6480:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 4384,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "6480:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6479:10:17"
									},
									"scope": 4633,
									"src": "6430:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4424,
										"nodeType": "Block",
										"src": "6786:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4410,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4408,
																	"src": "6801:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4413,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4405,
																			"src": "6812:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6805:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint80_$",
																			"typeString": "type(uint80)"
																		},
																		"typeName": {
																			"id": 4411,
																			"name": "uint80",
																			"nodeType": "ElementaryTypeName",
																			"src": "6805:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6805:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	}
																},
																"src": "6801:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint80",
																	"typeString": "uint80"
																}
															}
														],
														"id": 4416,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6800:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4417,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4405,
														"src": "6819:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6800:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4423,
												"nodeType": "IfStatement",
												"src": "6796:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4420,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4405,
																"src": "6853:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4419,
															"name": "SafeCast__Exceeds80Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "6829:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6829:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4422,
													"nodeType": "RevertStatement",
													"src": "6822:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4403,
										"nodeType": "StructuredDocumentation",
										"src": "6572:149:17",
										"text": "@notice Returns x on uint80 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint80"
									},
									"id": 4425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe80",
									"nameLocation": "6735:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4405,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6750:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4425,
												"src": "6742:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6742:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6741:11:17"
									},
									"returnParameters": {
										"id": 4409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4408,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6783:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4425,
												"src": "6776:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 4407,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "6776:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:10:17"
									},
									"scope": 4633,
									"src": "6726:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4447,
										"nodeType": "Block",
										"src": "7082:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4433,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4431,
																	"src": "7097:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4436,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4428,
																			"src": "7108:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7101:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint72_$",
																			"typeString": "type(uint72)"
																		},
																		"typeName": {
																			"id": 4434,
																			"name": "uint72",
																			"nodeType": "ElementaryTypeName",
																			"src": "7101:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7101:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																},
																"src": "7097:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint72",
																	"typeString": "uint72"
																}
															}
														],
														"id": 4439,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7096:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4440,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4428,
														"src": "7115:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7096:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4446,
												"nodeType": "IfStatement",
												"src": "7092:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4443,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4428,
																"src": "7149:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4442,
															"name": "SafeCast__Exceeds72Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "7125:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7125:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4445,
													"nodeType": "RevertStatement",
													"src": "7118:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4426,
										"nodeType": "StructuredDocumentation",
										"src": "6868:149:17",
										"text": "@notice Returns x on uint72 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint72"
									},
									"id": 4448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe72",
									"nameLocation": "7031:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4428,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7046:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4448,
												"src": "7038:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7038:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7037:11:17"
									},
									"returnParameters": {
										"id": 4432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4431,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7079:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4448,
												"src": "7072:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 4430,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "7072:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7071:10:17"
									},
									"scope": 4633,
									"src": "7022:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4470,
										"nodeType": "Block",
										"src": "7378:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4456,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4454,
																	"src": "7393:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4459,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4451,
																			"src": "7404:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7397:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 4457,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "7397:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7397:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "7393:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"id": 4462,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7392:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4463,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4451,
														"src": "7411:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7392:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4469,
												"nodeType": "IfStatement",
												"src": "7388:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4466,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4451,
																"src": "7445:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4465,
															"name": "SafeCast__Exceeds64Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "7421:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7421:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4468,
													"nodeType": "RevertStatement",
													"src": "7414:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4449,
										"nodeType": "StructuredDocumentation",
										"src": "7164:149:17",
										"text": "@notice Returns x on uint64 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint64"
									},
									"id": 4471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe64",
									"nameLocation": "7327:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4451,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4471,
												"src": "7334:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7333:11:17"
									},
									"returnParameters": {
										"id": 4455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4454,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7375:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4471,
												"src": "7368:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4453,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7367:10:17"
									},
									"scope": 4633,
									"src": "7318:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4493,
										"nodeType": "Block",
										"src": "7674:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4479,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4477,
																	"src": "7689:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint56",
																		"typeString": "uint56"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4482,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4474,
																			"src": "7700:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7693:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint56_$",
																			"typeString": "type(uint56)"
																		},
																		"typeName": {
																			"id": 4480,
																			"name": "uint56",
																			"nodeType": "ElementaryTypeName",
																			"src": "7693:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7693:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint56",
																		"typeString": "uint56"
																	}
																},
																"src": "7689:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint56",
																	"typeString": "uint56"
																}
															}
														],
														"id": 4485,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7688:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4486,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4474,
														"src": "7707:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7688:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4492,
												"nodeType": "IfStatement",
												"src": "7684:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4489,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4474,
																"src": "7741:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4488,
															"name": "SafeCast__Exceeds56Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "7717:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7717:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4491,
													"nodeType": "RevertStatement",
													"src": "7710:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4472,
										"nodeType": "StructuredDocumentation",
										"src": "7460:149:17",
										"text": "@notice Returns x on uint56 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint56"
									},
									"id": 4494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe56",
									"nameLocation": "7623:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4474,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7638:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4494,
												"src": "7630:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7630:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7629:11:17"
									},
									"returnParameters": {
										"id": 4478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4477,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7671:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4494,
												"src": "7664:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 4476,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "7664:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7663:10:17"
									},
									"scope": 4633,
									"src": "7614:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4516,
										"nodeType": "Block",
										"src": "7970:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4502,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4500,
																	"src": "7985:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4505,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4497,
																			"src": "7996:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7989:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint48_$",
																			"typeString": "type(uint48)"
																		},
																		"typeName": {
																			"id": 4503,
																			"name": "uint48",
																			"nodeType": "ElementaryTypeName",
																			"src": "7989:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7989:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																"src": "7985:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															}
														],
														"id": 4508,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7984:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4509,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4497,
														"src": "8003:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7984:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4515,
												"nodeType": "IfStatement",
												"src": "7980:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4512,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4497,
																"src": "8037:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4511,
															"name": "SafeCast__Exceeds48Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "8013:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8013:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4514,
													"nodeType": "RevertStatement",
													"src": "8006:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4495,
										"nodeType": "StructuredDocumentation",
										"src": "7756:149:17",
										"text": "@notice Returns x on uint48 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint48"
									},
									"id": 4517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe48",
									"nameLocation": "7919:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4497,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7934:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4517,
												"src": "7926:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7926:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7925:11:17"
									},
									"returnParameters": {
										"id": 4501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4500,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7967:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4517,
												"src": "7960:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 4499,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "7960:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7959:10:17"
									},
									"scope": 4633,
									"src": "7910:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4539,
										"nodeType": "Block",
										"src": "8266:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4525,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4523,
																	"src": "8281:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4528,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4520,
																			"src": "8292:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8285:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint40_$",
																			"typeString": "type(uint40)"
																		},
																		"typeName": {
																			"id": 4526,
																			"name": "uint40",
																			"nodeType": "ElementaryTypeName",
																			"src": "8285:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8285:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint40",
																		"typeString": "uint40"
																	}
																},
																"src": "8281:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint40",
																	"typeString": "uint40"
																}
															}
														],
														"id": 4531,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8280:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4532,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4520,
														"src": "8299:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8280:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4538,
												"nodeType": "IfStatement",
												"src": "8276:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4535,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4520,
																"src": "8333:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4534,
															"name": "SafeCast__Exceeds40Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "8309:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8309:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4537,
													"nodeType": "RevertStatement",
													"src": "8302:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4518,
										"nodeType": "StructuredDocumentation",
										"src": "8052:149:17",
										"text": "@notice Returns x on uint40 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint40"
									},
									"id": 4540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe40",
									"nameLocation": "8215:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4520,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8230:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4540,
												"src": "8222:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8222:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8221:11:17"
									},
									"returnParameters": {
										"id": 4524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4523,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8263:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4540,
												"src": "8256:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 4522,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "8256:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8255:10:17"
									},
									"scope": 4633,
									"src": "8206:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4562,
										"nodeType": "Block",
										"src": "8562:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4548,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4546,
																	"src": "8577:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4551,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4543,
																			"src": "8588:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8581:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 4549,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8581:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8581:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "8577:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 4554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8576:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4555,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4543,
														"src": "8595:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8576:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4561,
												"nodeType": "IfStatement",
												"src": "8572:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4558,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4543,
																"src": "8629:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4557,
															"name": "SafeCast__Exceeds32Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "8605:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8605:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4560,
													"nodeType": "RevertStatement",
													"src": "8598:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4541,
										"nodeType": "StructuredDocumentation",
										"src": "8348:149:17",
										"text": "@notice Returns x on uint32 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint32"
									},
									"id": 4563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nameLocation": "8511:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4543,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8526:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4563,
												"src": "8518:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8518:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8517:11:17"
									},
									"returnParameters": {
										"id": 4547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4546,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8559:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4563,
												"src": "8552:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 4545,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "8552:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8551:10:17"
									},
									"scope": 4633,
									"src": "8502:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4585,
										"nodeType": "Block",
										"src": "8858:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4571,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4569,
																	"src": "8873:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4574,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4566,
																			"src": "8884:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8877:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint24_$",
																			"typeString": "type(uint24)"
																		},
																		"typeName": {
																			"id": 4572,
																			"name": "uint24",
																			"nodeType": "ElementaryTypeName",
																			"src": "8877:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8877:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "8873:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"id": 4577,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8872:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4578,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4566,
														"src": "8891:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8872:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4584,
												"nodeType": "IfStatement",
												"src": "8868:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4581,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4566,
																"src": "8925:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4580,
															"name": "SafeCast__Exceeds24Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "8901:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8901:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4583,
													"nodeType": "RevertStatement",
													"src": "8894:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4564,
										"nodeType": "StructuredDocumentation",
										"src": "8644:149:17",
										"text": "@notice Returns x on uint24 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint24"
									},
									"id": 4586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe24",
									"nameLocation": "8807:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4566,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8822:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4586,
												"src": "8814:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8814:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8813:11:17"
									},
									"returnParameters": {
										"id": 4570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4569,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8855:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4586,
												"src": "8848:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 4568,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "8848:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8847:10:17"
									},
									"scope": 4633,
									"src": "8798:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4608,
										"nodeType": "Block",
										"src": "9154:76:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4594,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4592,
																	"src": "9169:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4597,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4589,
																			"src": "9180:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9173:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 4595,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "9173:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9173:9:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "9169:13:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"id": 4600,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9168:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4601,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4589,
														"src": "9187:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9168:20:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4607,
												"nodeType": "IfStatement",
												"src": "9164:59:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4604,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4589,
																"src": "9221:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4603,
															"name": "SafeCast__Exceeds16Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "9197:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9197:26:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4606,
													"nodeType": "RevertStatement",
													"src": "9190:33:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4587,
										"nodeType": "StructuredDocumentation",
										"src": "8940:149:17",
										"text": "@notice Returns x on uint16 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint16"
									},
									"id": 4609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe16",
									"nameLocation": "9103:6:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4589,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9118:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4609,
												"src": "9110:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9110:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9109:11:17"
									},
									"returnParameters": {
										"id": 4593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4592,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9151:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4609,
												"src": "9144:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4591,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9144:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9143:10:17"
									},
									"scope": 4633,
									"src": "9094:136:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4631,
										"nodeType": "Block",
										"src": "9446:74:17",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"id": 4622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 4617,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4615,
																	"src": "9461:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 4620,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4612,
																			"src": "9471:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 4619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9465:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 4618,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "9465:5:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9465:8:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "9461:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 4623,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9460:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4624,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4612,
														"src": "9478:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9460:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4630,
												"nodeType": "IfStatement",
												"src": "9456:57:17",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 4627,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4612,
																"src": "9511:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4626,
															"name": "SafeCast__Exceeds8Bits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1291,
															"src": "9488:22:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																"typeString": "function (uint256) pure"
															}
														},
														"id": 4628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9488:25:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4629,
													"nodeType": "RevertStatement",
													"src": "9481:32:17"
												}
											}
										]
									},
									"documentation": {
										"id": 4610,
										"nodeType": "StructuredDocumentation",
										"src": "9236:147:17",
										"text": "@notice Returns x on uint8 and check that it does not overflow\n @param x The value as an uint256\n @return y The value as an uint8"
									},
									"id": 4632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe8",
									"nameLocation": "9397:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4612,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "9411:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4632,
												"src": "9403:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9403:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9402:11:17"
									},
									"returnParameters": {
										"id": 4616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4615,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9443:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 4632,
												"src": "9437:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4614,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9437:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9436:9:17"
									},
									"scope": 4633,
									"src": "9388:132:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4634,
							"src": "219:9303:17",
							"usedErrors": []
						}
					],
					"src": "33:9490:17"
				},
				"id": 17
			},
			"joe-v2-main/src/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "joe-v2-main/src/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							4660
						]
					},
					"id": 4661,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4635,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4636,
								"nodeType": "StructuredDocumentation",
								"src": "58:145:18",
								"text": "@title Liquidity Book Safe Math Helper Library\n @author Trader Joe\n @notice Helper contract used for calculating absolute value safely"
							},
							"fullyImplemented": true,
							"id": 4660,
							"linearizedBaseContracts": [
								4660
							],
							"name": "SafeMath",
							"nameLocation": "211:8:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4658,
										"nodeType": "Block",
										"src": "456:79:18",
										"statements": [
											{
												"id": 4657,
												"nodeType": "UncheckedBlock",
												"src": "466:63:18",
												"statements": [
													{
														"expression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4646,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4639,
																	"src": "497:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 4647,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4641,
																	"src": "501:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "497:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4652,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4641,
																	"src": "513:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 4653,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4639,
																	"src": "517:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "513:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "497:21:18",
															"trueExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4649,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4639,
																	"src": "505:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 4650,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4641,
																	"src": "509:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "505:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4645,
														"id": 4656,
														"nodeType": "Return",
														"src": "490:28:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4637,
										"nodeType": "StructuredDocumentation",
										"src": "226:155:18",
										"text": "@notice absSub, can't underflow or overflow\n @param x The first value\n @param y The second value\n @return The result of abs(x - y)"
									},
									"id": 4659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "absSub",
									"nameLocation": "395:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4639,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "410:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4659,
												"src": "402:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "402:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4641,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "421:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 4659,
												"src": "413:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:22:18"
									},
									"returnParameters": {
										"id": 4645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4659,
												"src": "447:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:9:18"
									},
									"scope": 4660,
									"src": "386:149:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4661,
							"src": "203:334:18",
							"usedErrors": []
						}
					],
					"src": "33:505:18"
				},
				"id": 18
			}
		}
	}
}